/** @license React v16.12.0
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.React = factory());
}(this, (function () { 'use strict';

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.12.0';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?


var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

// Do not require this module directly! Use normal `invariant` calls with
// template literal strings. The messages will be replaced with error codes
// during build.

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
var lowPriorityWarningWithoutStack = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });

    if (typeof console !== 'undefined') {
      console.warn(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarningWithoutStack = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(void 0, [format].concat(args));
    }
  };
}

var lowPriorityWarningWithoutStack$1 = lowPriorityWarningWithoutStack;

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
var warningWithoutStack = function () {};

{
  warningWithoutStack = function (condition, format) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (format === undefined) {
      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (args.length > 8) {
      // Check before the condition to catch violations early.
      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
    }

    if (condition) {
      return;
    }

    if (typeof console !== 'undefined') {
      var argsWithFormat = args.map(function (item) {
        return '' + item;
      });
      argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
      // breaks IE9: https://github.com/facebook/react/issues/13610

      Function.prototype.apply.call(console.error, console, argsWithFormat);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      throw new Error(message);
    } catch (x) {}
  };
}

var warningWithoutStack$1 = warningWithoutStack;

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + "." + callerName;

    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }

    warningWithoutStack$1(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}
/**
 * This is the abstract API for an update queue.
 */


var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var emptyObject = {};

{
  Object.freeze(emptyObject);
}
/**
 * Base class helpers for the updating state of a component.
 */


function Component(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
  // renderer.

  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};
/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */

Component.prototype.setState = function (partialState, callback) {
  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {
    {
      throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    }
  }

  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};
/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */


Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};
/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */


{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };

  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        lowPriorityWarningWithoutStack$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
        return undefined;
      }
    });
  };

  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}

ComponentDummy.prototype = Component.prototype;
/**
 * Convenience component with default shallow equality check for sCU.
 */

function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

objectAssign(pureComponentPrototype, Component.prototype);

pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };

  {
    Object.seal(refObject);
  }

  return refObject;
}

/**
 * Keeps track of the current dispatcher.
 */
var ReactCurrentDispatcher = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

/**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */
var ReactCurrentBatchConfig = {
  suspense: null
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var BEFORE_SLASH_RE = /^(.*)[\\\/]/;
var describeComponentFrame = function (name, source, ownerName) {
  var sourceInfo = '';

  if (source) {
    var path = source.fileName;
    var fileName = path.replace(BEFORE_SLASH_RE, '');

    {
      // In DEV, include code for a common special case:
      // prefer "folder/index.js" instead of just "index.js".
      if (/^index\./.test(fileName)) {
        var match = path.match(BEFORE_SLASH_RE);

        if (match) {
          var pathBeforeSlash = match[1];

          if (pathBeforeSlash) {
            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
            fileName = folderName + '/' + fileName;
          }
        }
      }
    }

    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
  } else if (ownerName) {
    sourceInfo = ' (created by ' + ownerName + ')';
  }

  return '\n    in ' + (name || 'Unknown') + sourceInfo;
};

var Resolved = 1;

function refineResolvedLazyComponent(lazyComponent) {
  return lazyComponent._status === Resolved ? lazyComponent._result : null;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return "Profiler";

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return 'Context.Consumer';

      case REACT_PROVIDER_TYPE:
        return 'Context.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        {
          var thenable = type;
          var resolvedThenable = refineResolvedLazyComponent(thenable);

          if (resolvedThenable) {
            return getComponentName(resolvedThenable);
          }

          break;
        }
    }
  }

  return null;
}

var ReactDebugCurrentFrame = {};
var currentlyValidatingElement = null;
function setCurrentlyValidatingElement(element) {
  {
    currentlyValidatingElement = element;
  }
}

{
  // Stack implementation injected by the current renderer.
  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = ''; // Add an extra top frame while an element is being validated

    if (currentlyValidatingElement) {
      var name = getComponentName(currentlyValidatingElement.type);
      var owner = currentlyValidatingElement._owner;
      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));
    } // Delegate to the injected renderer-specific implementation


    var impl = ReactDebugCurrentFrame.getCurrentStack;

    if (impl) {
      stack += impl() || '';
    }

    return stack;
  };
}

/**
 * Used by act() to track whether you're inside an act() scope.
 */
var IsSomeRendererActing = {
  current: false
};

var ReactSharedInternals = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
  ReactCurrentOwner: ReactCurrentOwner,
  IsSomeRendererActing: IsSomeRendererActing,
  // Used by renderers to avoid bundling object-assign twice in UMD bundles:
  assign: objectAssign
};

{
  objectAssign(ReactSharedInternals, {
    // These should not be included in production.
    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
    // TODO: remove in React 17.0.
    ReactComponentTreeHook: {}
  });
}

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = warningWithoutStack$1;

{
  warning = function (condition, format) {
    if (condition) {
      return;
    }

    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum(); // eslint-disable-next-line react-internal/warning-and-invariant-args

    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    warningWithoutStack$1.apply(void 0, [false, format + '%s'].concat(args, [stack]));
  };
}

var warning$1 = warning;

var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown;
var specialPropRefWarningShown;

function hasValidRef(config) {
  {
    if (hasOwnProperty$1.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty$1.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };

  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };

  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */



/**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */

function jsxDEV(type, config, maybeKey, source, self) {
  var propName; // Reserved names are extracted

  var props = {};
  var key = null;
  var ref = null; // Currently, key can be spread in as a prop. This causes a potential
  // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
  // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
  // but as an intermediary step, we will use jsxDEV for everything except
  // <div {...props} key="Hi" />, because we aren't currently able to tell if
  // key is explicitly declared to be undefined or not.

  if (maybeKey !== undefined) {
    key = '' + maybeKey;
  }

  if (hasValidKey(config)) {
    key = '' + config.key;
  }

  if (hasValidRef(config)) {
    ref = config.ref;
  } // Remaining properties are added to a new props object


  for (propName in config) {
    if (hasOwnProperty$1.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
      props[propName] = config[propName];
    }
  } // Resolve default props


  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;

    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  if (key || ref) {
    var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

    if (key) {
      defineKeyPropWarningGetter(props, displayName);
    }

    if (ref) {
      defineRefPropWarningGetter(props, displayName);
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}
/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */

function createElement(type, config, children) {
  var propName; // Reserved names are extracted

  var props = {};
  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

    for (propName in config) {
      if (hasOwnProperty$1.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }

    props.children = childArray;
  } // Resolve default props


  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;

    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  {
    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}
/**
 * Return a function that produces ReactElements of a given type.
 * See https://reactjs.org/docs/react-api.html#createfactory
 */


function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
  return newElement;
}
/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */

function cloneElement(element, config, children) {
  if (!!(element === null || element === undefined)) {
    {
      throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
    }
  }

  var propName; // Original props are copied

  var props = objectAssign({}, element.props); // Reserved names are extracted


  var key = element.key;
  var ref = element.ref; // Self is preserved since the owner is preserved.

  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.

  var source = element._source; // Owner will be preserved, unless ref is overridden

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    } // Remaining properties override existing props


    var defaultProps;

    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }

    for (propName in config) {
      if (hasOwnProperty$1.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';
/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });
  return '$' + escapedString;
}
/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */


var didWarnAboutMaps = false;
var userProvidedKeyEscapeRegex = /\/+/g;

function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

var POOL_SIZE = 10;
var traverseContextPool = [];

function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
  if (traverseContextPool.length) {
    var traverseContext = traverseContextPool.pop();
    traverseContext.result = mapResult;
    traverseContext.keyPrefix = keyPrefix;
    traverseContext.func = mapFunction;
    traverseContext.context = mapContext;
    traverseContext.count = 0;
    return traverseContext;
  } else {
    return {
      result: mapResult,
      keyPrefix: keyPrefix,
      func: mapFunction,
      context: mapContext,
      count: 0
    };
  }
}

function releaseTraverseContext(traverseContext) {
  traverseContext.result = null;
  traverseContext.keyPrefix = null;
  traverseContext.func = null;
  traverseContext.context = null;
  traverseContext.count = 0;

  if (traverseContextPool.length < POOL_SIZE) {
    traverseContextPool.push(traverseContext);
  }
}
/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */


function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;

      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }

    }
  }

  if (invokeCallback) {
    callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.

  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);

    if (typeof iteratorFn === 'function') {
      {
        // Warn about using Maps as children
        if (iteratorFn === children.entries) {
          !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step;
      var ii = 0;

      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';

      {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
      }

      var childrenString = '' + children;

      {
        {
          throw Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + ")." + addendum);
        }
      }
    }
  }

  return subtreeCount;
}
/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */


function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}
/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */


function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof component === 'object' && component !== null && component.key != null) {
    // Explicit key
    return escape(component.key);
  } // Implicit key determined by the index in the set


  return index.toString(36);
}

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;
  func.call(context, child, bookKeeping.count++);
}
/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */


function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }

  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  releaseTraverseContext(traverseContext);
}

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;
  var mappedChild = func.call(context, child, bookKeeping.count++);

  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {
      return c;
    });
  } else if (mappedChild != null) {
    if (isValidElement(mappedChild)) {
      mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }

    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';

  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }

  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  releaseTraverseContext(traverseContext);
}
/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */


function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}
/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */


function countChildren(children) {
  return traverseAllChildren(children, function () {
    return null;
  }, null);
}
/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */


function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {
    return child;
  });
  return result;
}
/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */


function onlyChild(children) {
  if (!isValidElement(children)) {
    {
      throw Error("React.Children.only expected to receive a single React element child.");
    }
  }

  return children;
}

function createContext(defaultValue, calculateChangedBits) {
  if (calculateChangedBits === undefined) {
    calculateChangedBits = null;
  } else {
    {
      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
    }
  }

  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    _calculateChangedBits: calculateChangedBits,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    // Used to track how many concurrent renderers this context currently
    // supports within in a single renderer. Such as parallel server rendering.
    _threadCount: 0,
    // These are circular
    Provider: null,
    Consumer: null
  };
  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  var hasWarnedAboutUsingNestedContextConsumers = false;
  var hasWarnedAboutUsingConsumerProvider = false;

  {
    // A separate object, but proxies back to the original context object for
    // backwards compatibility. It has a different $$typeof, so we can properly
    // warn for the incorrect usage of Context as a Consumer.
    var Consumer = {
      $$typeof: REACT_CONTEXT_TYPE,
      _context: context,
      _calculateChangedBits: context._calculateChangedBits
    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

    Object.defineProperties(Consumer, {
      Provider: {
        get: function () {
          if (!hasWarnedAboutUsingConsumerProvider) {
            hasWarnedAboutUsingConsumerProvider = true;
            warning$1(false, 'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
          }

          return context.Provider;
        },
        set: function (_Provider) {
          context.Provider = _Provider;
        }
      },
      _currentValue: {
        get: function () {
          return context._currentValue;
        },
        set: function (_currentValue) {
          context._currentValue = _currentValue;
        }
      },
      _currentValue2: {
        get: function () {
          return context._currentValue2;
        },
        set: function (_currentValue2) {
          context._currentValue2 = _currentValue2;
        }
      },
      _threadCount: {
        get: function () {
          return context._threadCount;
        },
        set: function (_threadCount) {
          context._threadCount = _threadCount;
        }
      },
      Consumer: {
        get: function () {
          if (!hasWarnedAboutUsingNestedContextConsumers) {
            hasWarnedAboutUsingNestedContextConsumers = true;
            warning$1(false, 'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
          }

          return context.Consumer;
        }
      }
    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

    context.Consumer = Consumer;
  }

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

function lazy(ctor) {
  var lazyType = {
    $$typeof: REACT_LAZY_TYPE,
    _ctor: ctor,
    // React uses these fields to store the result.
    _status: -1,
    _result: null
  };

  {
    // In production, this would just set it on the object.
    var defaultProps;
    var propTypes;
    Object.defineProperties(lazyType, {
      defaultProps: {
        configurable: true,
        get: function () {
          return defaultProps;
        },
        set: function (newDefaultProps) {
          warning$1(false, 'React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
          defaultProps = newDefaultProps; // Match production behavior more closely:

          Object.defineProperty(lazyType, 'defaultProps', {
            enumerable: true
          });
        }
      },
      propTypes: {
        configurable: true,
        get: function () {
          return propTypes;
        },
        set: function (newPropTypes) {
          warning$1(false, 'React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
          propTypes = newPropTypes; // Match production behavior more closely:

          Object.defineProperty(lazyType, 'propTypes', {
            enumerable: true
          });
        }
      }
    });
  }

  return lazyType;
}

function forwardRef(render) {
  {
    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
      warningWithoutStack$1(false, 'forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
    } else if (typeof render !== 'function') {
      warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
    } else {
      !( // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object
      render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;
    }

    if (render != null) {
      !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
    }
  }

  return {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };
}

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE);
}

function memo(type, compare) {
  {
    if (!isValidElementType(type)) {
      warningWithoutStack$1(false, 'memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
    }
  }

  return {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: compare === undefined ? null : compare
  };
}

function resolveDispatcher() {
  var dispatcher = ReactCurrentDispatcher.current;

  if (!(dispatcher !== null)) {
    {
      throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.");
    }
  }

  return dispatcher;
}

function useContext(Context, unstable_observedBits) {
  var dispatcher = resolveDispatcher();

  {
    !(unstable_observedBits === undefined) ? warning$1(false, 'useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '') : void 0; // TODO: add a more generic warning for invalid values.

    if (Context._context !== undefined) {
      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
      // and nobody should be using this in existing code.

      if (realContext.Consumer === Context) {
        warning$1(false, 'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
      } else if (realContext.Provider === Context) {
        warning$1(false, 'Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
      }
    }
  }

  return dispatcher.useContext(Context, unstable_observedBits);
}
function useState(initialState) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useState(initialState);
}
function useReducer(reducer, initialArg, init) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useReducer(reducer, initialArg, init);
}
function useRef(initialValue) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useRef(initialValue);
}
function useEffect(create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useEffect(create, inputs);
}
function useLayoutEffect(create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useLayoutEffect(create, inputs);
}
function useCallback(callback, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useCallback(callback, inputs);
}
function useMemo(create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useMemo(create, inputs);
}
function useImperativeHandle(ref, create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useImperativeHandle(ref, create, inputs);
}
function useDebugValue(value, formatterFn) {
  {
    var dispatcher = resolveDispatcher();
    return dispatcher.useDebugValue(value, formatterFn);
  }
}
var emptyObject$1 = {};
function useResponder(responder, listenerProps) {
  var dispatcher = resolveDispatcher();

  {
    if (responder == null || responder.$$typeof !== REACT_RESPONDER_TYPE) {
      warning$1(false, 'useResponder: invalid first argument. Expected an event responder, but instead got %s', responder);
      return;
    }
  }

  return dispatcher.useResponder(responder, listenerProps || emptyObject$1);
}
function useTransition(config) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useTransition(config);
}
function useDeferredValue(value, config) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useDeferredValue(value, config);
}

function withSuspenseConfig(scope, config) {
  var previousConfig = ReactCurrentBatchConfig.suspense;
  ReactCurrentBatchConfig.suspense = config === undefined ? null : config;

  try {
    scope();
  } finally {
    ReactCurrentBatchConfig.suspense = previousConfig;
  }
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret$1 = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning$1 = function() {};

{
  var ReactPropTypesSecret = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning$1 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning$1(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning$1(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  {
    loggedTypeFailures = {};
  }
};

var checkPropTypes_1 = checkPropTypes;

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */
var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}

var hasOwnProperty$2 = Object.prototype.hasOwnProperty;

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current.type);

    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }

  return '';
}

function getSourceInfoErrorAddendum(source) {
  if (source !== undefined) {
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }

  return '';
}

function getSourceInfoErrorAddendumForProps(elementProps) {
  if (elementProps !== null && elementProps !== undefined) {
    return getSourceInfoErrorAddendum(elementProps.__source);
  }

  return '';
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

    if (parentName) {
      info = "\n\nCheck the top-level render call using <" + parentName + ">.";
    }
  }

  return info;
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }

  element._store.validated = true;
  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }

  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.

  var childOwner = '';

  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
  }

  setCurrentlyValidatingElement(element);

  {
    warning$1(false, 'Each child in a list should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);
  }

  setCurrentlyValidatingElement(null);
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }

  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];

      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);

    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;

        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  var type = element.type;

  if (type === null || type === undefined || typeof type === 'string') {
    return;
  }

  var name = getComponentName(type);
  var propTypes;

  if (typeof type === 'function') {
    propTypes = type.propTypes;
  } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
  // Inner props are checked in the reconciler.
  type.$$typeof === REACT_MEMO_TYPE)) {
    propTypes = type.propTypes;
  } else {
    return;
  }

  if (propTypes) {
    setCurrentlyValidatingElement(element);
    checkPropTypes_1(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);
    setCurrentlyValidatingElement(null);
  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
    propTypesMisspellWarningShown = true;
    warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
  }

  if (typeof type.getDefaultProps === 'function') {
    !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  setCurrentlyValidatingElement(fragment);
  var keys = Object.keys(fragment.props);

  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];

    if (key !== 'children' && key !== 'key') {
      warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
      break;
    }
  }

  if (fragment.ref !== null) {
    warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');
  }

  setCurrentlyValidatingElement(null);
}

function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.

  if (!validType) {
    var info = '';

    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendum(source);

    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString;

    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    warning$1(false, 'React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
  }

  var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.

  if (element == null) {
    return element;
  } // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)


  if (validType) {
    var children = props.children;

    if (children !== undefined) {
      if (isStaticChildren) {
        if (Array.isArray(children)) {
          for (var i = 0; i < children.length; i++) {
            validateChildKeys(children[i], type);
          }

          if (Object.freeze) {
            Object.freeze(children);
          }
        } else {
          warning$1(false, 'React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
        }
      } else {
        validateChildKeys(children, type);
      }
    }
  }

  if (hasOwnProperty$2.call(props, 'key')) {
    warning$1(false, 'React.jsx: Spreading a key to JSX is a deprecated pattern. ' + 'Explicitly pass a key after spreading props in your JSX call. ' + 'E.g. <ComponentName {...props} key={key} />');
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
} // These two functions exist to still get child warnings in dev
// even with the prod transform. This means that jsxDEV is purely
// opt-in behavior for better messages but that we won't stop
// giving you warnings if you use production apis.

function jsxWithValidationStatic(type, props, key) {
  return jsxWithValidation(type, props, key, true);
}
function jsxWithValidationDynamic(type, props, key) {
  return jsxWithValidation(type, props, key, false);
}
function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.

  if (!validType) {
    var info = '';

    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendumForProps(props);

    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString;

    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
  }

  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.

  if (element == null) {
    return element;
  } // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)


  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}
function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type; // Legacy hook: remove it

  {
    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        lowPriorityWarningWithoutStack$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}
function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);

  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }

  validatePropTypes(newElement);
  return newElement;
}

var enableSchedulerDebugging = false;
var enableIsInputPending = false;
var enableProfiling = true;

var requestHostCallback;

var requestHostTimeout;
var cancelHostTimeout;
var shouldYieldToHost;
var requestPaint;
var getCurrentTime;
var forceFrameRate;

if ( // If Scheduler runs in a non-DOM environment, it falls back to a naive
// implementation using setTimeout.
typeof window === 'undefined' || // Check if MessageChannel is supported, too.
typeof MessageChannel !== 'function') {
  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,
  // fallback to a naive implementation.
  var _callback = null;
  var _timeoutID = null;

  var _flushCallback = function () {
    if (_callback !== null) {
      try {
        var currentTime = getCurrentTime();
        var hasRemainingTime = true;

        _callback(hasRemainingTime, currentTime);

        _callback = null;
      } catch (e) {
        setTimeout(_flushCallback, 0);
        throw e;
      }
    }
  };

  var initialTime = Date.now();

  getCurrentTime = function () {
    return Date.now() - initialTime;
  };

  requestHostCallback = function (cb) {
    if (_callback !== null) {
      // Protect against re-entrancy.
      setTimeout(requestHostCallback, 0, cb);
    } else {
      _callback = cb;
      setTimeout(_flushCallback, 0);
    }
  };

  requestHostTimeout = function (cb, ms) {
    _timeoutID = setTimeout(cb, ms);
  };

  cancelHostTimeout = function () {
    clearTimeout(_timeoutID);
  };

  shouldYieldToHost = function () {
    return false;
  };

  requestPaint = forceFrameRate = function () {};
} else {
  // Capture local references to native APIs, in case a polyfill overrides them.
  var performance = window.performance;
  var _Date = window.Date;
  var _setTimeout = window.setTimeout;
  var _clearTimeout = window.clearTimeout;

  if (typeof console !== 'undefined') {
    // TODO: Scheduler no longer requires these methods to be polyfilled. But
    // maybe we want to continue warning if they don't exist, to preserve the
    // option to rely on it in the future?
    var requestAnimationFrame = window.requestAnimationFrame;
    var cancelAnimationFrame = window.cancelAnimationFrame; // TODO: Remove fb.me link

    if (typeof requestAnimationFrame !== 'function') {
      console.error("This browser doesn't support requestAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
    }

    if (typeof cancelAnimationFrame !== 'function') {
      console.error("This browser doesn't support cancelAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
    }
  }

  if (typeof performance === 'object' && typeof performance.now === 'function') {
    getCurrentTime = function () {
      return performance.now();
    };
  } else {
    var _initialTime = _Date.now();

    getCurrentTime = function () {
      return _Date.now() - _initialTime;
    };
  }

  var isMessageLoopRunning = false;
  var scheduledHostCallback = null;
  var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
  // thread, like user events. By default, it yields multiple times per frame.
  // It does not attempt to align with frame boundaries, since most tasks don't
  // need to be frame aligned; for those that do, use requestAnimationFrame.

  var yieldInterval = 5;
  var deadline = 0; // TODO: Make this configurable
  // TODO: Adjust this based on priority?

  var maxYieldInterval = 300;
  var needsPaint = false;

  if (enableIsInputPending && navigator !== undefined && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined) {
    var scheduling = navigator.scheduling;

    shouldYieldToHost = function () {
      var currentTime = getCurrentTime();

      if (currentTime >= deadline) {
        // There's no time left. We may want to yield control of the main
        // thread, so the browser can perform high priority tasks. The main ones
        // are painting and user input. If there's a pending paint or a pending
        // input, then we should yield. But if there's neither, then we can
        // yield less often while remaining responsive. We'll eventually yield
        // regardless, since there could be a pending paint that wasn't
        // accompanied by a call to `requestPaint`, or other main thread tasks
        // like network events.
        if (needsPaint || scheduling.isInputPending()) {
          // There is either a pending paint or a pending input.
          return true;
        } // There's no pending input. Only yield if we've reached the max
        // yield interval.


        return currentTime >= maxYieldInterval;
      } else {
        // There's still time left in the frame.
        return false;
      }
    };

    requestPaint = function () {
      needsPaint = true;
    };
  } else {
    // `isInputPending` is not available. Since we have no way of knowing if
    // there's pending input, always yield at the end of the frame.
    shouldYieldToHost = function () {
      return getCurrentTime() >= deadline;
    }; // Since we yield every frame regardless, `requestPaint` has no effect.


    requestPaint = function () {};
  }

  forceFrameRate = function (fps) {
    if (fps < 0 || fps > 125) {
      console.error('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing framerates higher than 125 fps is not unsupported');
      return;
    }

    if (fps > 0) {
      yieldInterval = Math.floor(1000 / fps);
    } else {
      // reset the framerate
      yieldInterval = 5;
    }
  };

  var performWorkUntilDeadline = function () {
    if (scheduledHostCallback !== null) {
      var currentTime = getCurrentTime(); // Yield after `yieldInterval` ms, regardless of where we are in the vsync
      // cycle. This means there's always time remaining at the beginning of
      // the message event.

      deadline = currentTime + yieldInterval;
      var hasTimeRemaining = true;

      try {
        var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);

        if (!hasMoreWork) {
          isMessageLoopRunning = false;
          scheduledHostCallback = null;
        } else {
          // If there's more work, schedule the next message event at the end
          // of the preceding one.
          port.postMessage(null);
        }
      } catch (error) {
        // If a scheduler task throws, exit the current browser task so the
        // error can be observed.
        port.postMessage(null);
        throw error;
      }
    } else {
      isMessageLoopRunning = false;
    } // Yielding to the browser will give it a chance to paint, so we can
    // reset this.


    needsPaint = false;
  };

  var channel = new MessageChannel();
  var port = channel.port2;
  channel.port1.onmessage = performWorkUntilDeadline;

  requestHostCallback = function (callback) {
    scheduledHostCallback = callback;

    if (!isMessageLoopRunning) {
      isMessageLoopRunning = true;
      port.postMessage(null);
    }
  };

  requestHostTimeout = function (callback, ms) {
    taskTimeoutID = _setTimeout(function () {
      callback(getCurrentTime());
    }, ms);
  };

  cancelHostTimeout = function () {
    _clearTimeout(taskTimeoutID);

    taskTimeoutID = -1;
  };
}

function push(heap, node) {
  var index = heap.length;
  heap.push(node);
  siftUp(heap, node, index);
}
function peek(heap) {
  var first = heap[0];
  return first === undefined ? null : first;
}
function pop(heap) {
  var first = heap[0];

  if (first !== undefined) {
    var last = heap.pop();

    if (last !== first) {
      heap[0] = last;
      siftDown(heap, last, 0);
    }

    return first;
  } else {
    return null;
  }
}

function siftUp(heap, node, i) {
  var index = i;

  while (true) {
    var parentIndex = Math.floor((index - 1) / 2);
    var parent = heap[parentIndex];

    if (parent !== undefined && compare(parent, node) > 0) {
      // The parent is larger. Swap positions.
      heap[parentIndex] = node;
      heap[index] = parent;
      index = parentIndex;
    } else {
      // The parent is smaller. Exit.
      return;
    }
  }
}

function siftDown(heap, node, i) {
  var index = i;
  var length = heap.length;

  while (index < length) {
    var leftIndex = (index + 1) * 2 - 1;
    var left = heap[leftIndex];
    var rightIndex = leftIndex + 1;
    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.

    if (left !== undefined && compare(left, node) < 0) {
      if (right !== undefined && compare(right, left) < 0) {
        heap[index] = right;
        heap[rightIndex] = node;
        index = rightIndex;
      } else {
        heap[index] = left;
        heap[leftIndex] = node;
        index = leftIndex;
      }
    } else if (right !== undefined && compare(right, node) < 0) {
      heap[index] = right;
      heap[rightIndex] = node;
      index = rightIndex;
    } else {
      // Neither child is smaller. Exit.
      return;
    }
  }
}

function compare(a, b) {
  // Compare sort index first, then task id.
  var diff = a.sortIndex - b.sortIndex;
  return diff !== 0 ? diff : a.id - b.id;
}

// TODO: Use symbols?
var NoPriority = 0;
var ImmediatePriority = 1;
var UserBlockingPriority = 2;
var NormalPriority = 3;
var LowPriority = 4;
var IdlePriority = 5;

var runIdCounter = 0;
var mainThreadIdCounter = 0;
var profilingStateSize = 4;
var sharedProfilingBuffer = enableProfiling ? // $FlowFixMe Flow doesn't know about SharedArrayBuffer
typeof SharedArrayBuffer === 'function' ? new SharedArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : // $FlowFixMe Flow doesn't know about ArrayBuffer
typeof ArrayBuffer === 'function' ? new ArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : null // Don't crash the init path on IE9
: null;
var profilingState = enableProfiling && sharedProfilingBuffer !== null ? new Int32Array(sharedProfilingBuffer) : []; // We can't read this but it helps save bytes for null checks

var PRIORITY = 0;
var CURRENT_TASK_ID = 1;
var CURRENT_RUN_ID = 2;
var QUEUE_SIZE = 3;

if (enableProfiling) {
  profilingState[PRIORITY] = NoPriority; // This is maintained with a counter, because the size of the priority queue
  // array might include canceled tasks.

  profilingState[QUEUE_SIZE] = 0;
  profilingState[CURRENT_TASK_ID] = 0;
} // Bytes per element is 4


var INITIAL_EVENT_LOG_SIZE = 131072;
var MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes

var eventLogSize = 0;
var eventLogBuffer = null;
var eventLog = null;
var eventLogIndex = 0;
var TaskStartEvent = 1;
var TaskCompleteEvent = 2;
var TaskErrorEvent = 3;
var TaskCancelEvent = 4;
var TaskRunEvent = 5;
var TaskYieldEvent = 6;
var SchedulerSuspendEvent = 7;
var SchedulerResumeEvent = 8;

function logEvent(entries) {
  if (eventLog !== null) {
    var offset = eventLogIndex;
    eventLogIndex += entries.length;

    if (eventLogIndex + 1 > eventLogSize) {
      eventLogSize *= 2;

      if (eventLogSize > MAX_EVENT_LOG_SIZE) {
        console.error("Scheduler Profiling: Event log exceeded maximum size. Don't " + 'forget to call `stopLoggingProfilingEvents()`.');
        stopLoggingProfilingEvents();
        return;
      }

      var newEventLog = new Int32Array(eventLogSize * 4);
      newEventLog.set(eventLog);
      eventLogBuffer = newEventLog.buffer;
      eventLog = newEventLog;
    }

    eventLog.set(entries, offset);
  }
}

function startLoggingProfilingEvents() {
  eventLogSize = INITIAL_EVENT_LOG_SIZE;
  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);
  eventLog = new Int32Array(eventLogBuffer);
  eventLogIndex = 0;
}
function stopLoggingProfilingEvents() {
  var buffer = eventLogBuffer;
  eventLogSize = 0;
  eventLogBuffer = null;
  eventLog = null;
  eventLogIndex = 0;
  return buffer;
}
function markTaskStart(task, ms) {
  if (enableProfiling) {
    profilingState[QUEUE_SIZE]++;

    if (eventLog !== null) {
      // performance.now returns a float, representing milliseconds. When the
      // event is logged, it's coerced to an int. Convert to microseconds to
      // maintain extra degrees of precision.
      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);
    }
  }
}
function markTaskCompleted(task, ms) {
  if (enableProfiling) {
    profilingState[PRIORITY] = NoPriority;
    profilingState[CURRENT_TASK_ID] = 0;
    profilingState[QUEUE_SIZE]--;

    if (eventLog !== null) {
      logEvent([TaskCompleteEvent, ms * 1000, task.id]);
    }
  }
}
function markTaskCanceled(task, ms) {
  if (enableProfiling) {
    profilingState[QUEUE_SIZE]--;

    if (eventLog !== null) {
      logEvent([TaskCancelEvent, ms * 1000, task.id]);
    }
  }
}
function markTaskErrored(task, ms) {
  if (enableProfiling) {
    profilingState[PRIORITY] = NoPriority;
    profilingState[CURRENT_TASK_ID] = 0;
    profilingState[QUEUE_SIZE]--;

    if (eventLog !== null) {
      logEvent([TaskErrorEvent, ms * 1000, task.id]);
    }
  }
}
function markTaskRun(task, ms) {
  if (enableProfiling) {
    runIdCounter++;
    profilingState[PRIORITY] = task.priorityLevel;
    profilingState[CURRENT_TASK_ID] = task.id;
    profilingState[CURRENT_RUN_ID] = runIdCounter;

    if (eventLog !== null) {
      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);
    }
  }
}
function markTaskYield(task, ms) {
  if (enableProfiling) {
    profilingState[PRIORITY] = NoPriority;
    profilingState[CURRENT_TASK_ID] = 0;
    profilingState[CURRENT_RUN_ID] = 0;

    if (eventLog !== null) {
      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);
    }
  }
}
function markSchedulerSuspended(ms) {
  if (enableProfiling) {
    mainThreadIdCounter++;

    if (eventLog !== null) {
      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);
    }
  }
}
function markSchedulerUnsuspended(ms) {
  if (enableProfiling) {
    if (eventLog !== null) {
      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);
    }
  }
}

/* eslint-disable no-var */
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111

var maxSigned31BitInt = 1073741823; // Times out immediately

var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

var USER_BLOCKING_PRIORITY = 250;
var NORMAL_PRIORITY_TIMEOUT = 5000;
var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

var IDLE_PRIORITY = maxSigned31BitInt; // Tasks are stored on a min heap

var taskQueue = [];
var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.

var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.

var isSchedulerPaused = false;
var currentTask = null;
var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.

var isPerformingWork = false;
var isHostCallbackScheduled = false;
var isHostTimeoutScheduled = false;

function advanceTimers(currentTime) {
  // Check for tasks that are no longer delayed and add them to the queue.
  var timer = peek(timerQueue);

  while (timer !== null) {
    if (timer.callback === null) {
      // Timer was cancelled.
      pop(timerQueue);
    } else if (timer.startTime <= currentTime) {
      // Timer fired. Transfer to the task queue.
      pop(timerQueue);
      timer.sortIndex = timer.expirationTime;
      push(taskQueue, timer);

      if (enableProfiling) {
        markTaskStart(timer, currentTime);
        timer.isQueued = true;
      }
    } else {
      // Remaining timers are pending.
      return;
    }

    timer = peek(timerQueue);
  }
}

function handleTimeout(currentTime) {
  isHostTimeoutScheduled = false;
  advanceTimers(currentTime);

  if (!isHostCallbackScheduled) {
    if (peek(taskQueue) !== null) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    } else {
      var firstTimer = peek(timerQueue);

      if (firstTimer !== null) {
        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
      }
    }
  }
}

function flushWork(hasTimeRemaining, initialTime) {
  if (enableProfiling) {
    markSchedulerUnsuspended(initialTime);
  } // We'll need a host callback the next time work is scheduled.


  isHostCallbackScheduled = false;

  if (isHostTimeoutScheduled) {
    // We scheduled a timeout but it's no longer needed. Cancel it.
    isHostTimeoutScheduled = false;
    cancelHostTimeout();
  }

  isPerformingWork = true;
  var previousPriorityLevel = currentPriorityLevel;

  try {
    if (enableProfiling) {
      try {
        return workLoop(hasTimeRemaining, initialTime);
      } catch (error) {
        if (currentTask !== null) {
          var currentTime = getCurrentTime();
          markTaskErrored(currentTask, currentTime);
          currentTask.isQueued = false;
        }

        throw error;
      }
    } else {
      // No catch in prod codepath.
      return workLoop(hasTimeRemaining, initialTime);
    }
  } finally {
    currentTask = null;
    currentPriorityLevel = previousPriorityLevel;
    isPerformingWork = false;

    if (enableProfiling) {
      var _currentTime = getCurrentTime();

      markSchedulerSuspended(_currentTime);
    }
  }
}

function workLoop(hasTimeRemaining, initialTime) {
  var currentTime = initialTime;
  advanceTimers(currentTime);
  currentTask = peek(taskQueue);

  while (currentTask !== null && !(enableSchedulerDebugging && isSchedulerPaused)) {
    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
      // This currentTask hasn't expired, and we've reached the deadline.
      break;
    }

    var callback = currentTask.callback;

    if (callback !== null) {
      currentTask.callback = null;
      currentPriorityLevel = currentTask.priorityLevel;
      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
      markTaskRun(currentTask, currentTime);
      var continuationCallback = callback(didUserCallbackTimeout);
      currentTime = getCurrentTime();

      if (typeof continuationCallback === 'function') {
        currentTask.callback = continuationCallback;
        markTaskYield(currentTask, currentTime);
      } else {
        if (enableProfiling) {
          markTaskCompleted(currentTask, currentTime);
          currentTask.isQueued = false;
        }

        if (currentTask === peek(taskQueue)) {
          pop(taskQueue);
        }
      }

      advanceTimers(currentTime);
    } else {
      pop(taskQueue);
    }

    currentTask = peek(taskQueue);
  } // Return whether there's additional work


  if (currentTask !== null) {
    return true;
  } else {
    var firstTimer = peek(timerQueue);

    if (firstTimer !== null) {
      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
    }

    return false;
  }
}

function unstable_runWithPriority(priorityLevel, eventHandler) {
  switch (priorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
    case LowPriority:
    case IdlePriority:
      break;

    default:
      priorityLevel = NormalPriority;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_next(eventHandler) {
  var priorityLevel;

  switch (currentPriorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
      // Shift down to normal priority
      priorityLevel = NormalPriority;
      break;

    default:
      // Anything lower than normal priority should remain at the current level.
      priorityLevel = currentPriorityLevel;
      break;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_wrapCallback(callback) {
  var parentPriorityLevel = currentPriorityLevel;
  return function () {
    // This is a fork of runWithPriority, inlined for performance.
    var previousPriorityLevel = currentPriorityLevel;
    currentPriorityLevel = parentPriorityLevel;

    try {
      return callback.apply(this, arguments);
    } finally {
      currentPriorityLevel = previousPriorityLevel;
    }
  };
}

function timeoutForPriorityLevel(priorityLevel) {
  switch (priorityLevel) {
    case ImmediatePriority:
      return IMMEDIATE_PRIORITY_TIMEOUT;

    case UserBlockingPriority:
      return USER_BLOCKING_PRIORITY;

    case IdlePriority:
      return IDLE_PRIORITY;

    case LowPriority:
      return LOW_PRIORITY_TIMEOUT;

    case NormalPriority:
    default:
      return NORMAL_PRIORITY_TIMEOUT;
  }
}

function unstable_scheduleCallback(priorityLevel, callback, options) {
  var currentTime = getCurrentTime();
  var startTime;
  var timeout;

  if (typeof options === 'object' && options !== null) {
    var delay = options.delay;

    if (typeof delay === 'number' && delay > 0) {
      startTime = currentTime + delay;
    } else {
      startTime = currentTime;
    }

    timeout = typeof options.timeout === 'number' ? options.timeout : timeoutForPriorityLevel(priorityLevel);
  } else {
    timeout = timeoutForPriorityLevel(priorityLevel);
    startTime = currentTime;
  }

  var expirationTime = startTime + timeout;
  var newTask = {
    id: taskIdCounter++,
    callback: callback,
    priorityLevel: priorityLevel,
    startTime: startTime,
    expirationTime: expirationTime,
    sortIndex: -1
  };

  if (enableProfiling) {
    newTask.isQueued = false;
  }

  if (startTime > currentTime) {
    // This is a delayed task.
    newTask.sortIndex = startTime;
    push(timerQueue, newTask);

    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
      // All tasks are delayed, and this is the task with the earliest delay.
      if (isHostTimeoutScheduled) {
        // Cancel an existing timeout.
        cancelHostTimeout();
      } else {
        isHostTimeoutScheduled = true;
      } // Schedule a timeout.


      requestHostTimeout(handleTimeout, startTime - currentTime);
    }
  } else {
    newTask.sortIndex = expirationTime;
    push(taskQueue, newTask);

    if (enableProfiling) {
      markTaskStart(newTask, currentTime);
      newTask.isQueued = true;
    } // Schedule a host callback, if needed. If we're already performing work,
    // wait until the next time we yield.


    if (!isHostCallbackScheduled && !isPerformingWork) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    }
  }

  return newTask;
}

function unstable_pauseExecution() {
  isSchedulerPaused = true;
}

function unstable_continueExecution() {
  isSchedulerPaused = false;

  if (!isHostCallbackScheduled && !isPerformingWork) {
    isHostCallbackScheduled = true;
    requestHostCallback(flushWork);
  }
}

function unstable_getFirstCallbackNode() {
  return peek(taskQueue);
}

function unstable_cancelCallback(task) {
  if (enableProfiling) {
    if (task.isQueued) {
      var currentTime = getCurrentTime();
      markTaskCanceled(task, currentTime);
      task.isQueued = false;
    }
  } // Null out the callback to indicate the task has been canceled. (Can't
  // remove from the queue because you can't remove arbitrary nodes from an
  // array based heap, only the first one.)


  task.callback = null;
}

function unstable_getCurrentPriorityLevel() {
  return currentPriorityLevel;
}

function unstable_shouldYield() {
  var currentTime = getCurrentTime();
  advanceTimers(currentTime);
  var firstTask = peek(taskQueue);
  return firstTask !== currentTask && currentTask !== null && firstTask !== null && firstTask.callback !== null && firstTask.startTime <= currentTime && firstTask.expirationTime < currentTask.expirationTime || shouldYieldToHost();
}

var unstable_requestPaint = requestPaint;
var unstable_Profiling = enableProfiling ? {
  startLoggingProfilingEvents: startLoggingProfilingEvents,
  stopLoggingProfilingEvents: stopLoggingProfilingEvents,
  sharedProfilingBuffer: sharedProfilingBuffer
} : null;



var Scheduler = Object.freeze({
	unstable_ImmediatePriority: ImmediatePriority,
	unstable_UserBlockingPriority: UserBlockingPriority,
	unstable_NormalPriority: NormalPriority,
	unstable_IdlePriority: IdlePriority,
	unstable_LowPriority: LowPriority,
	unstable_runWithPriority: unstable_runWithPriority,
	unstable_next: unstable_next,
	unstable_scheduleCallback: unstable_scheduleCallback,
	unstable_cancelCallback: unstable_cancelCallback,
	unstable_wrapCallback: unstable_wrapCallback,
	unstable_getCurrentPriorityLevel: unstable_getCurrentPriorityLevel,
	unstable_shouldYield: unstable_shouldYield,
	unstable_requestPaint: unstable_requestPaint,
	unstable_continueExecution: unstable_continueExecution,
	unstable_pauseExecution: unstable_pauseExecution,
	unstable_getFirstCallbackNode: unstable_getFirstCallbackNode,
	get unstable_now () { return getCurrentTime; },
	get unstable_forceFrameRate () { return forceFrameRate; },
	unstable_Profiling: unstable_Profiling
});

// Helps identify side effects in render-phase lifecycle hooks and setState
// reducers by double invoking them in Strict Mode.

 // To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.

 // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:

 // Gather advanced timing metrics for Profiler subtrees.

 // Trace which interactions trigger each commit.

var enableSchedulerTracing = true; // SSR experiments


 // Only used in www builds.

 // Only used in www builds.

 // Disable javascript: URL strings in href for XSS protection.

 // React Fire: prevent the value and checked attributes from syncing
// with their related DOM properties

 // These APIs will no longer be "unstable" in the upcoming 16.7 release,
// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.

var exposeConcurrentModeAPIs = false;
 // Experimental React Flare event system and event components support.

var enableFlareAPI = false; // Experimental Host Component support.

var enableFundamentalAPI = false; // Experimental Scope support.

var enableScopeAPI = false; // New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107

var enableJSXTransformAPI = false; // We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)
// Till then, we warn about the missing mock, but still fallback to a legacy mode compatible version

 // For tests, we flush suspense fallbacks in an act scope;
// *except* in some of our own tests, where we test incremental loading states.

 // Add a callback property to suspense to notify which promises are currently
// in the update queue. This allows reporting and tracing of what is causing
// the user to see a loading state.
// Also allows hydration callbacks to fire when a dehydrated boundary gets
// hydrated or deleted.

 // Part of the simplification of React.createElement so we can eventually move
// from React.createElement to React.jsx
// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md





 // Flag to turn event.target and event.currentTarget in ReactNative from a reactTag to a component instance

var DEFAULT_THREAD_ID = 0; // Counters used to generate unique IDs.

var interactionIDCounter = 0;
var threadIDCounter = 0; // Set of currently traced interactions.
// Interactions "stack"–
// Meaning that newly traced interactions are appended to the previously active set.
// When an interaction goes out of scope, the previous set (if any) is restored.

var interactionsRef = null; // Listener(s) to notify when interactions begin and end.

var subscriberRef = null;

if (enableSchedulerTracing) {
  interactionsRef = {
    current: new Set()
  };
  subscriberRef = {
    current: null
  };
}

function unstable_clear(callback) {
  if (!enableSchedulerTracing) {
    return callback();
  }

  var prevInteractions = interactionsRef.current;
  interactionsRef.current = new Set();

  try {
    return callback();
  } finally {
    interactionsRef.current = prevInteractions;
  }
}
function unstable_getCurrent() {
  if (!enableSchedulerTracing) {
    return null;
  } else {
    return interactionsRef.current;
  }
}
function unstable_getThreadID() {
  return ++threadIDCounter;
}
function unstable_trace(name, timestamp, callback) {
  var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;

  if (!enableSchedulerTracing) {
    return callback();
  }

  var interaction = {
    __count: 1,
    id: interactionIDCounter++,
    name: name,
    timestamp: timestamp
  };
  var prevInteractions = interactionsRef.current; // Traced interactions should stack/accumulate.
  // To do that, clone the current interactions.
  // The previous set will be restored upon completion.

  var interactions = new Set(prevInteractions);
  interactions.add(interaction);
  interactionsRef.current = interactions;
  var subscriber = subscriberRef.current;
  var returnValue;

  try {
    if (subscriber !== null) {
      subscriber.onInteractionTraced(interaction);
    }
  } finally {
    try {
      if (subscriber !== null) {
        subscriber.onWorkStarted(interactions, threadID);
      }
    } finally {
      try {
        returnValue = callback();
      } finally {
        interactionsRef.current = prevInteractions;

        try {
          if (subscriber !== null) {
            subscriber.onWorkStopped(interactions, threadID);
          }
        } finally {
          interaction.__count--; // If no async work was scheduled for this interaction,
          // Notify subscribers that it's completed.

          if (subscriber !== null && interaction.__count === 0) {
            subscriber.onInteractionScheduledWorkCompleted(interaction);
          }
        }
      }
    }
  }

  return returnValue;
}
function unstable_wrap(callback) {
  var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;

  if (!enableSchedulerTracing) {
    return callback;
  }

  var wrappedInteractions = interactionsRef.current;
  var subscriber = subscriberRef.current;

  if (subscriber !== null) {
    subscriber.onWorkScheduled(wrappedInteractions, threadID);
  } // Update the pending async work count for the current interactions.
  // Update after calling subscribers in case of error.


  wrappedInteractions.forEach(function (interaction) {
    interaction.__count++;
  });
  var hasRun = false;

  function wrapped() {
    var prevInteractions = interactionsRef.current;
    interactionsRef.current = wrappedInteractions;
    subscriber = subscriberRef.current;

    try {
      var returnValue;

      try {
        if (subscriber !== null) {
          subscriber.onWorkStarted(wrappedInteractions, threadID);
        }
      } finally {
        try {
          returnValue = callback.apply(undefined, arguments);
        } finally {
          interactionsRef.current = prevInteractions;

          if (subscriber !== null) {
            subscriber.onWorkStopped(wrappedInteractions, threadID);
          }
        }
      }

      return returnValue;
    } finally {
      if (!hasRun) {
        // We only expect a wrapped function to be executed once,
        // But in the event that it's executed more than once–
        // Only decrement the outstanding interaction counts once.
        hasRun = true; // Update pending async counts for all wrapped interactions.
        // If this was the last scheduled async work for any of them,
        // Mark them as completed.

        wrappedInteractions.forEach(function (interaction) {
          interaction.__count--;

          if (subscriber !== null && interaction.__count === 0) {
            subscriber.onInteractionScheduledWorkCompleted(interaction);
          }
        });
      }
    }
  }

  wrapped.cancel = function cancel() {
    subscriber = subscriberRef.current;

    try {
      if (subscriber !== null) {
        subscriber.onWorkCanceled(wrappedInteractions, threadID);
      }
    } finally {
      // Update pending async counts for all wrapped interactions.
      // If this was the last scheduled async work for any of them,
      // Mark them as completed.
      wrappedInteractions.forEach(function (interaction) {
        interaction.__count--;

        if (subscriber && interaction.__count === 0) {
          subscriber.onInteractionScheduledWorkCompleted(interaction);
        }
      });
    }
  };

  return wrapped;
}

var subscribers = null;

if (enableSchedulerTracing) {
  subscribers = new Set();
}

function unstable_subscribe(subscriber) {
  if (enableSchedulerTracing) {
    subscribers.add(subscriber);

    if (subscribers.size === 1) {
      subscriberRef.current = {
        onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
        onInteractionTraced: onInteractionTraced,
        onWorkCanceled: onWorkCanceled,
        onWorkScheduled: onWorkScheduled,
        onWorkStarted: onWorkStarted,
        onWorkStopped: onWorkStopped
      };
    }
  }
}
function unstable_unsubscribe(subscriber) {
  if (enableSchedulerTracing) {
    subscribers.delete(subscriber);

    if (subscribers.size === 0) {
      subscriberRef.current = null;
    }
  }
}

function onInteractionTraced(interaction) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onInteractionTraced(interaction);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onInteractionScheduledWorkCompleted(interaction) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onInteractionScheduledWorkCompleted(interaction);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkScheduled(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkScheduled(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkStarted(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkStarted(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkStopped(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkStopped(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkCanceled(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkCanceled(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}



var SchedulerTracing = Object.freeze({
	get __interactionsRef () { return interactionsRef; },
	get __subscriberRef () { return subscriberRef; },
	unstable_clear: unstable_clear,
	unstable_getCurrent: unstable_getCurrent,
	unstable_getThreadID: unstable_getThreadID,
	unstable_trace: unstable_trace,
	unstable_wrap: unstable_wrap,
	unstable_subscribe: unstable_subscribe,
	unstable_unsubscribe: unstable_unsubscribe
});

var ReactSharedInternals$2 = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentOwner: ReactCurrentOwner,
  IsSomeRendererActing: IsSomeRendererActing,
  // Used by renderers to avoid bundling object-assign twice in UMD bundles:
  assign: objectAssign
};

{
  objectAssign(ReactSharedInternals$2, {
    // These should not be included in production.
    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
    // TODO: remove in React 17.0.
    ReactComponentTreeHook: {}
  });
} // Re-export the schedule API(s) for UMD bundles.
// This avoids introducing a dependency on a new UMD global in a minor update,
// Since that would be a breaking change (e.g. for all existing CodeSandboxes).
// This re-export is only required for UMD bundles;
// CJS bundles use the shared NPM package.


objectAssign(ReactSharedInternals$2, {
  Scheduler: Scheduler,
  SchedulerTracing: SchedulerTracing
});

var hasBadMapPolyfill;

{
  hasBadMapPolyfill = false;

  try {
    var frozenObject = Object.freeze({});
    var testMap = new Map([[frozenObject, null]]);
    var testSet = new Set([frozenObject]); // This is necessary for Rollup to not consider these unused.
    // https://github.com/rollup/rollup/issues/1771
    // TODO: we can remove these if Rollup fixes the bug.

    testMap.set(0, 0);
    testSet.add(0);
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

function createFundamentalComponent(impl) {
  // We use responder as a Map key later on. When we have a bad
  // polyfill, then we can't use it as a key as the polyfill tries
  // to add a property to the object.
  if (true && !hasBadMapPolyfill) {
    Object.freeze(impl);
  }

  var fundamantalComponent = {
    $$typeof: REACT_FUNDAMENTAL_TYPE,
    impl: impl
  };

  {
    Object.freeze(fundamantalComponent);
  }

  return fundamantalComponent;
}

function createEventResponder(displayName, responderConfig) {
  var getInitialState = responderConfig.getInitialState,
      onEvent = responderConfig.onEvent,
      onMount = responderConfig.onMount,
      onUnmount = responderConfig.onUnmount,
      onRootEvent = responderConfig.onRootEvent,
      rootEventTypes = responderConfig.rootEventTypes,
      targetEventTypes = responderConfig.targetEventTypes,
      targetPortalPropagation = responderConfig.targetPortalPropagation;
  var eventResponder = {
    $$typeof: REACT_RESPONDER_TYPE,
    displayName: displayName,
    getInitialState: getInitialState || null,
    onEvent: onEvent || null,
    onMount: onMount || null,
    onRootEvent: onRootEvent || null,
    onUnmount: onUnmount || null,
    rootEventTypes: rootEventTypes || null,
    targetEventTypes: targetEventTypes || null,
    targetPortalPropagation: targetPortalPropagation || false
  }; // We use responder as a Map key later on. When we have a bad
  // polyfill, then we can't use it as a key as the polyfill tries
  // to add a property to the object.

  if (true && !hasBadMapPolyfill) {
    Object.freeze(eventResponder);
  }

  return eventResponder;
}

function createScope() {
  var scopeComponent = {
    $$typeof: REACT_SCOPE_TYPE
  };

  {
    Object.freeze(scopeComponent);
  }

  return scopeComponent;
}

var React = {
  Children: {
    map: mapChildren,
    forEach: forEachChildren,
    count: countChildren,
    toArray: toArray,
    only: onlyChild
  },
  createRef: createRef,
  Component: Component,
  PureComponent: PureComponent,
  createContext: createContext,
  forwardRef: forwardRef,
  lazy: lazy,
  memo: memo,
  useCallback: useCallback,
  useContext: useContext,
  useEffect: useEffect,
  useImperativeHandle: useImperativeHandle,
  useDebugValue: useDebugValue,
  useLayoutEffect: useLayoutEffect,
  useMemo: useMemo,
  useReducer: useReducer,
  useRef: useRef,
  useState: useState,
  Fragment: REACT_FRAGMENT_TYPE,
  Profiler: REACT_PROFILER_TYPE,
  StrictMode: REACT_STRICT_MODE_TYPE,
  Suspense: REACT_SUSPENSE_TYPE,
  createElement: createElementWithValidation,
  cloneElement: cloneElementWithValidation,
  createFactory: createFactoryWithValidation,
  isValidElement: isValidElement,
  version: ReactVersion,
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals$2
};

if (exposeConcurrentModeAPIs) {
  React.useTransition = useTransition;
  React.useDeferredValue = useDeferredValue;
  React.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
  React.unstable_withSuspenseConfig = withSuspenseConfig;
}

if (enableFlareAPI) {
  React.unstable_useResponder = useResponder;
  React.unstable_createResponder = createEventResponder;
}

if (enableFundamentalAPI) {
  React.unstable_createFundamental = createFundamentalComponent;
}

if (enableScopeAPI) {
  React.unstable_createScope = createScope;
} // Note: some APIs are added with feature flags.
// Make sure that stable builds for open source
// don't modify the React object to avoid deopts.
// Also let's not expose their names in stable builds.


if (enableJSXTransformAPI) {
  {
    React.jsxDEV = jsxWithValidation;
    React.jsx = jsxWithValidationDynamic;
    React.jsxs = jsxWithValidationStatic;
  }
}



var React$2 = Object.freeze({
	default: React
});

var React$3 = ( React$2 && React ) || React$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.


var react = React$3.default || React$3;

return react;

})));

/** @license React v16.12.0
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react')) :
	typeof define === 'function' && define.amd ? define(['react'], factory) :
	(global.ReactDOM = factory(global.React));
}(this, (function (React) { 'use strict';

// Do not require this module directly! Use normal `invariant` calls with
// template literal strings. The messages will be replaced with error codes
// during build.

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

if (!React) {
  {
    throw Error("ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.");
  }
}

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;
/**
 * Injectable mapping from names to event plugin modules.
 */

var namesToPlugins = {};
/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */

function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }

  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);

    if (!(pluginIndex > -1)) {
      {
        throw Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`.");
      }
    }

    if (plugins[pluginIndex]) {
      continue;
    }

    if (!pluginModule.extractEvents) {
      {
        throw Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not.");
      }
    }

    plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;

    for (var eventName in publishedEvents) {
      if (!publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName)) {
        {
          throw Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`.");
        }
      }
    }
  }
}
/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */


function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  if (!!eventNameDispatchConfigs.hasOwnProperty(eventName)) {
    {
      throw Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName + "`.");
    }
  }

  eventNameDispatchConfigs[eventName] = dispatchConfig;
  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }

    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }

  return false;
}
/**
 * Publishes a registration name that is used to identify dispatched events.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */


function publishRegistrationName(registrationName, pluginModule, eventName) {
  if (!!registrationNameModules[registrationName]) {
    {
      throw Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`.");
    }
  }

  registrationNameModules[registrationName] = pluginModule;
  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  {
    var lowerCasedName = registrationName.toLowerCase();
    possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}
/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */

/**
 * Ordered list of injected plugins.
 */


var plugins = [];
/**
 * Mapping from event name to dispatch config
 */

var eventNameDispatchConfigs = {};
/**
 * Mapping from registration name to plugin module
 */

var registrationNameModules = {};
/**
 * Mapping from registration name to event name
 */

var registrationNameDependencies = {};
/**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */

var possibleRegistrationNames = {}; // Trust the developer to only use possibleRegistrationNames in true

/**
 * Injects an ordering of plugins (by plugin name). This allows the ordering
 * to be decoupled from injection of the actual plugins so that ordering is
 * always deterministic regardless of packaging, on-the-fly injection, etc.
 *
 * @param {array} InjectedEventPluginOrder
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginOrder}
 */

function injectEventPluginOrder(injectedEventPluginOrder) {
  if (!!eventPluginOrder) {
    {
      throw Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.");
    }
  } // Clone the ordering so it cannot be dynamically mutated.


  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
  recomputePluginOrdering();
}
/**
 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
 * in the ordering injected by `injectEventPluginOrder`.
 *
 * Plugins can be injected as part of page initialization or on-the-fly.
 *
 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginsByName}
 */

function injectEventPluginsByName(injectedNamesToPlugins) {
  var isOrderingDirty = false;

  for (var pluginName in injectedNamesToPlugins) {
    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
      continue;
    }

    var pluginModule = injectedNamesToPlugins[pluginName];

    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
      if (!!namesToPlugins[pluginName]) {
        {
          throw Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`.");
        }
      }

      namesToPlugins[pluginName] = pluginModule;
      isOrderingDirty = true;
    }
  }

  if (isOrderingDirty) {
    recomputePluginOrdering();
  }
}

var invokeGuardedCallbackImpl = function (name, func, context, a, b, c, d, e, f) {
  var funcArgs = Array.prototype.slice.call(arguments, 3);

  try {
    func.apply(context, funcArgs);
  } catch (error) {
    this.onError(error);
  }
};

{
  // In DEV mode, we swap out invokeGuardedCallback for a special version
  // that plays more nicely with the browser's DevTools. The idea is to preserve
  // "Pause on exceptions" behavior. Because React wraps all user-provided
  // functions in invokeGuardedCallback, and the production version of
  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
  // like caught exceptions, and the DevTools won't pause unless the developer
  // takes the extra step of enabling pause on caught exceptions. This is
  // unintuitive, though, because even though React has caught the error, from
  // the developer's perspective, the error is uncaught.
  //
  // To preserve the expected "Pause on exceptions" behavior, we don't use a
  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
  // DOM node, and call the user-provided callback from inside an event handler
  // for that fake event. If the callback throws, the error is "captured" using
  // a global event handler. But because the error happens in a different
  // event loop context, it does not interrupt the normal program flow.
  // Effectively, this gives us try-catch behavior without actually using
  // try-catch. Neat!
  // Check that the browser supports the APIs we need to implement our special
  // DEV version of invokeGuardedCallback
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');

    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
      // If document doesn't exist we know for sure we will crash in this method
      // when we call document.createEvent(). However this can cause confusing
      // errors: https://github.com/facebookincubator/create-react-app/issues/3482
      // So we preemptively throw with a better message instead.
      if (!(typeof document !== 'undefined')) {
        {
          throw Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
        }
      }

      var evt = document.createEvent('Event'); // Keeps track of whether the user-provided callback threw an error. We
      // set this to true at the beginning, then set it to false right after
      // calling the function. If the function errors, `didError` will never be
      // set to false. This strategy works even if the browser is flaky and
      // fails to call our global error handler, because it doesn't rely on
      // the error event at all.

      var didError = true; // Keeps track of the value of window.event so that we can reset it
      // during the callback to let user code access window.event in the
      // browsers that support it.

      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
      // dispatching: https://github.com/facebook/react/issues/13688

      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event'); // Create an event handler for our fake event. We will synchronously
      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
      // call the user-provided callback.

      var funcArgs = Array.prototype.slice.call(arguments, 3);

      function callCallback() {
        // We immediately remove the callback from event listeners so that
        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
        // nested call would trigger the fake event handlers of any call higher
        // in the stack.
        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
        // window.event assignment in both IE <= 10 as they throw an error
        // "Member not found" in strict mode, and in Firefox which does not
        // support window.event.

        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
          window.event = windowEvent;
        }

        func.apply(context, funcArgs);
        didError = false;
      } // Create a global error event handler. We use this to capture the value
      // that was thrown. It's possible that this error handler will fire more
      // than once; for example, if non-React code also calls `dispatchEvent`
      // and a handler for that event throws. We should be resilient to most of
      // those cases. Even if our error event handler fires more than once, the
      // last error event is always used. If the callback actually does error,
      // we know that the last error event is the correct one, because it's not
      // possible for anything else to have happened in between our callback
      // erroring and the code that follows the `dispatchEvent` call below. If
      // the callback doesn't error, but the error event was fired, we know to
      // ignore it because `didError` will be false, as described above.


      var error; // Use this to track whether the error event is ever called.

      var didSetError = false;
      var isCrossOriginError = false;

      function handleWindowError(event) {
        error = event.error;
        didSetError = true;

        if (error === null && event.colno === 0 && event.lineno === 0) {
          isCrossOriginError = true;
        }

        if (event.defaultPrevented) {
          // Some other error handler has prevented default.
          // Browsers silence the error report if this happens.
          // We'll remember this to later decide whether to log it or not.
          if (error != null && typeof error === 'object') {
            try {
              error._suppressLogging = true;
            } catch (inner) {// Ignore.
            }
          }
        }
      } // Create a fake event type.


      var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers

      window.addEventListener('error', handleWindowError);
      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
      // errors, it will trigger our global error handler.

      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);

      if (windowEventDescriptor) {
        Object.defineProperty(window, 'event', windowEventDescriptor);
      }

      if (didError) {
        if (!didSetError) {
          // The callback errored, but the error event never fired.
          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
        } else if (isCrossOriginError) {
          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
        }

        this.onError(error);
      } // Remove our event listeners


      window.removeEventListener('error', handleWindowError);
    };

    invokeGuardedCallbackImpl = invokeGuardedCallbackDev;
  }
}

var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;

var hasError = false;
var caughtError = null; // Used by event system to capture/rethrow the first error.

var hasRethrowError = false;
var rethrowError = null;
var reporter = {
  onError: function (error) {
    hasError = true;
    caughtError = error;
  }
};
/**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */

function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
  hasError = false;
  caughtError = null;
  invokeGuardedCallbackImpl$1.apply(reporter, arguments);
}
/**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */

function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
  invokeGuardedCallback.apply(this, arguments);

  if (hasError) {
    var error = clearCaughtError();

    if (!hasRethrowError) {
      hasRethrowError = true;
      rethrowError = error;
    }
  }
}
/**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */

function rethrowCaughtError() {
  if (hasRethrowError) {
    var error = rethrowError;
    hasRethrowError = false;
    rethrowError = null;
    throw error;
  }
}
function hasCaughtError() {
  return hasError;
}
function clearCaughtError() {
  if (hasError) {
    var error = caughtError;
    hasError = false;
    caughtError = null;
    return error;
  } else {
    {
      {
        throw Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  }
}

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
var warningWithoutStack = function () {};

{
  warningWithoutStack = function (condition, format) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (format === undefined) {
      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (args.length > 8) {
      // Check before the condition to catch violations early.
      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
    }

    if (condition) {
      return;
    }

    if (typeof console !== 'undefined') {
      var argsWithFormat = args.map(function (item) {
        return '' + item;
      });
      argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
      // breaks IE9: https://github.com/facebook/react/issues/13610

      Function.prototype.apply.call(console.error, console, argsWithFormat);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      throw new Error(message);
    } catch (x) {}
  };
}

var warningWithoutStack$1 = warningWithoutStack;

var getFiberCurrentPropsFromNode = null;
var getInstanceFromNode = null;
var getNodeFromInstance = null;
function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {
  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;
  getInstanceFromNode = getInstanceFromNodeImpl;
  getNodeFromInstance = getNodeFromInstanceImpl;

  {
    !(getNodeFromInstance && getInstanceFromNode) ? warningWithoutStack$1(false, 'EventPluginUtils.setComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
  }
}
var validateEventDispatches;

{
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;
    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
    !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warningWithoutStack$1(false, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}
/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */


function executeDispatch(event, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = getNodeFromInstance(inst);
  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}
/**
 * Standard/simple iteration through an event's collected dispatches.
 */

function executeDispatchesInOrder(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;

  {
    validateEventDispatches(event);
  }

  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      } // Listeners and Instances are two parallel arrays that are always in sync.


      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, dispatchListeners, dispatchInstances);
  }

  event._dispatchListeners = null;
  event._dispatchInstances = null;
}
/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */



/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */


/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  if (!(next != null)) {
    {
      throw Error("accumulateInto(...): Accumulated items must not be null or undefined.");
    }
  }

  if (current == null) {
    return next;
  } // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).


  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }

    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 * @param {function} cb Callback invoked with each element or a collection.
 * @param {?} [scope] Scope used as `this` in a callback.
 */
function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */

var eventQueue = null;
/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @private
 */

var executeDispatchesAndRelease = function (event) {
  if (event) {
    executeDispatchesInOrder(event);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};

var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e);
};

function runEventsInBatch(events) {
  if (events !== null) {
    eventQueue = accumulateInto(eventQueue, events);
  } // Set `eventQueue` to null before processing it so that we can tell if more
  // events get enqueued while processing.


  var processingEventQueue = eventQueue;
  eventQueue = null;

  if (!processingEventQueue) {
    return;
  }

  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);

  if (!!eventQueue) {
    {
      throw Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.");
    }
  } // This would be a good time to rethrow if any of the event handlers threw.


  rethrowCaughtError();
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));

    default:
      return false;
  }
}
/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */

/**
 * Methods for injecting dependencies.
 */


var injection = {
  /**
   * @param {array} InjectedEventPluginOrder
   * @public
   */
  injectEventPluginOrder: injectEventPluginOrder,

  /**
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   */
  injectEventPluginsByName: injectEventPluginsByName
};
/**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */

function getListener(inst, registrationName) {
  var listener; // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
  // live here; needs to be moved to a better place soon

  var stateNode = inst.stateNode;

  if (!stateNode) {
    // Work in progress (ex: onload events in incremental mode).
    return null;
  }

  var props = getFiberCurrentPropsFromNode(stateNode);

  if (!props) {
    // Work in progress.
    return null;
  }

  listener = props[registrationName];

  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
    return null;
  }

  if (!(!listener || typeof listener === 'function')) {
    {
      throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
    }
  }

  return listener;
}
/**
 * Allows registered plugins an opportunity to extract events from top-level
 * native browser events.
 *
 * @return {*} An accumulation of synthetic events.
 * @internal
 */

function extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
  var events = null;

  for (var i = 0; i < plugins.length; i++) {
    // Not every plugin in the ordering may be loaded at runtime.
    var possiblePlugin = plugins[i];

    if (possiblePlugin) {
      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);

      if (extractedEvents) {
        events = accumulateInto(events, extractedEvents);
      }
    }
  }

  return events;
}

function runExtractedPluginEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
  var events = extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
  runEventsInBatch(events);
}

var FunctionComponent = 0;
var ClassComponent = 1;
var IndeterminateComponent = 2; // Before we know whether it is function or class

var HostRoot = 3; // Root of a host tree. Could be nested inside another node.

var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.

var HostComponent = 5;
var HostText = 6;
var Fragment = 7;
var Mode = 8;
var ContextConsumer = 9;
var ContextProvider = 10;
var ForwardRef = 11;
var Profiler = 12;
var SuspenseComponent = 13;
var MemoComponent = 14;
var SimpleMemoComponent = 15;
var LazyComponent = 16;
var IncompleteClassComponent = 17;
var DehydratedFragment = 18;
var SuspenseListComponent = 19;
var FundamentalComponent = 20;
var ScopeComponent = 21;

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED; // Prevent newer renderers from RTE when used with older react package versions.
// Current owner and dispatcher used to share the same ref,
// but PR #14548 split them out to better support the react-debug-tools package.

if (!ReactSharedInternals.hasOwnProperty('ReactCurrentDispatcher')) {
  ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  };
}

if (!ReactSharedInternals.hasOwnProperty('ReactCurrentBatchConfig')) {
  ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  };
}

var BEFORE_SLASH_RE = /^(.*)[\\\/]/;
var describeComponentFrame = function (name, source, ownerName) {
  var sourceInfo = '';

  if (source) {
    var path = source.fileName;
    var fileName = path.replace(BEFORE_SLASH_RE, '');

    {
      // In DEV, include code for a common special case:
      // prefer "folder/index.js" instead of just "index.js".
      if (/^index\./.test(fileName)) {
        var match = path.match(BEFORE_SLASH_RE);

        if (match) {
          var pathBeforeSlash = match[1];

          if (pathBeforeSlash) {
            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
            fileName = folderName + '/' + fileName;
          }
        }
      }
    }

    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
  } else if (ownerName) {
    sourceInfo = ' (created by ' + ownerName + ')';
  }

  return '\n    in ' + (name || 'Unknown') + sourceInfo;
};

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?


var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = warningWithoutStack$1;

{
  warning = function (condition, format) {
    if (condition) {
      return;
    }

    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum(); // eslint-disable-next-line react-internal/warning-and-invariant-args

    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    warningWithoutStack$1.apply(void 0, [false, format + '%s'].concat(args, [stack]));
  };
}

var warning$1 = warning;

var Uninitialized = -1;
var Pending = 0;
var Resolved = 1;
var Rejected = 2;
function refineResolvedLazyComponent(lazyComponent) {
  return lazyComponent._status === Resolved ? lazyComponent._result : null;
}
function initializeLazyComponentType(lazyComponent) {
  if (lazyComponent._status === Uninitialized) {
    lazyComponent._status = Pending;
    var ctor = lazyComponent._ctor;
    var thenable = ctor();
    lazyComponent._result = thenable;
    thenable.then(function (moduleObject) {
      if (lazyComponent._status === Pending) {
        var defaultExport = moduleObject.default;

        {
          if (defaultExport === undefined) {
            warning$1(false, 'lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + "const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
          }
        }

        lazyComponent._status = Resolved;
        lazyComponent._result = defaultExport;
      }
    }, function (error) {
      if (lazyComponent._status === Pending) {
        lazyComponent._status = Rejected;
        lazyComponent._result = error;
      }
    });
  }
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return "Profiler";

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return 'Context.Consumer';

      case REACT_PROVIDER_TYPE:
        return 'Context.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        {
          var thenable = type;
          var resolvedThenable = refineResolvedLazyComponent(thenable);

          if (resolvedThenable) {
            return getComponentName(resolvedThenable);
          }

          break;
        }
    }
  }

  return null;
}

var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

function describeFiber(fiber) {
  switch (fiber.tag) {
    case HostRoot:
    case HostPortal:
    case HostText:
    case Fragment:
    case ContextProvider:
    case ContextConsumer:
      return '';

    default:
      var owner = fiber._debugOwner;
      var source = fiber._debugSource;
      var name = getComponentName(fiber.type);
      var ownerName = null;

      if (owner) {
        ownerName = getComponentName(owner.type);
      }

      return describeComponentFrame(name, source, ownerName);
  }
}

function getStackByFiberInDevAndProd(workInProgress) {
  var info = '';
  var node = workInProgress;

  do {
    info += describeFiber(node);
    node = node.return;
  } while (node);

  return info;
}
var current = null;
var phase = null;
function getCurrentFiberOwnerNameInDevOrNull() {
  {
    if (current === null) {
      return null;
    }

    var owner = current._debugOwner;

    if (owner !== null && typeof owner !== 'undefined') {
      return getComponentName(owner.type);
    }
  }

  return null;
}
function getCurrentFiberStackInDev() {
  {
    if (current === null) {
      return '';
    } // Safe because if current fiber exists, we are reconciling,
    // and it is guaranteed to be the work-in-progress version.


    return getStackByFiberInDevAndProd(current);
  }

  return '';
}
function resetCurrentFiber() {
  {
    ReactDebugCurrentFrame.getCurrentStack = null;
    current = null;
    phase = null;
  }
}
function setCurrentFiber(fiber) {
  {
    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
    current = fiber;
    phase = null;
  }
}
function setCurrentPhase(lifeCyclePhase) {
  {
    phase = lifeCyclePhase;
  }
}

var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');

function endsWith(subject, search) {
  var length = subject.length;
  return subject.substring(length - search.length, length) === search;
}

var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
var _assign = ReactInternals.assign;

var PLUGIN_EVENT_SYSTEM = 1;
var RESPONDER_EVENT_SYSTEM = 1 << 1;
var IS_PASSIVE = 1 << 2;
var IS_ACTIVE = 1 << 3;
var PASSIVE_NOT_SUPPORTED = 1 << 4;
var IS_REPLAYED = 1 << 5;

var restoreImpl = null;
var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  // We perform this translation at the end of the event loop so that we
  // always receive the correct fiber here
  var internalInstance = getInstanceFromNode(target);

  if (!internalInstance) {
    // Unmounted
    return;
  }

  if (!(typeof restoreImpl === 'function')) {
    {
      throw Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
    }
  }

  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
  restoreImpl(internalInstance.stateNode, internalInstance.type, props);
}

function setRestoreImplementation(impl) {
  restoreImpl = impl;
}
function enqueueStateRestore(target) {
  if (restoreTarget) {
    if (restoreQueue) {
      restoreQueue.push(target);
    } else {
      restoreQueue = [target];
    }
  } else {
    restoreTarget = target;
  }
}
function needsStateRestore() {
  return restoreTarget !== null || restoreQueue !== null;
}
function restoreStateIfNeeded() {
  if (!restoreTarget) {
    return;
  }

  var target = restoreTarget;
  var queuedTargets = restoreQueue;
  restoreTarget = null;
  restoreQueue = null;
  restoreStateOfTarget(target);

  if (queuedTargets) {
    for (var i = 0; i < queuedTargets.length; i++) {
      restoreStateOfTarget(queuedTargets[i]);
    }
  }
}

var enableUserTimingAPI = true; // Helps identify side effects in render-phase lifecycle hooks and setState
// reducers by double invoking them in Strict Mode.

var debugRenderPhaseSideEffectsForStrictMode = true; // To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.

var replayFailedUnitOfWorkWithInvokeGuardedCallback = true; // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:

var warnAboutDeprecatedLifecycles = true; // Gather advanced timing metrics for Profiler subtrees.

var enableProfilerTimer = true; // Trace which interactions trigger each commit.

var enableSchedulerTracing = true; // SSR experiments

var enableSuspenseServerRenderer = false;
var enableSelectiveHydration = false; // Only used in www builds.

 // Only used in www builds.

 // Disable javascript: URL strings in href for XSS protection.

var disableJavaScriptURLs = false; // React Fire: prevent the value and checked attributes from syncing
// with their related DOM properties

var disableInputAttributeSyncing = false; // These APIs will no longer be "unstable" in the upcoming 16.7 release,
// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.

var exposeConcurrentModeAPIs = false;
var warnAboutShorthandPropertyCollision = false; // Experimental React Flare event system and event components support.

var enableFlareAPI = false; // Experimental Host Component support.

var enableFundamentalAPI = false; // Experimental Scope support.

var enableScopeAPI = false; // New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107

 // We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)
// Till then, we warn about the missing mock, but still fallback to a legacy mode compatible version

var warnAboutUnmockedScheduler = false; // For tests, we flush suspense fallbacks in an act scope;
// *except* in some of our own tests, where we test incremental loading states.

var flushSuspenseFallbacksInTests = true; // Add a callback property to suspense to notify which promises are currently
// in the update queue. This allows reporting and tracing of what is causing
// the user to see a loading state.
// Also allows hydration callbacks to fire when a dehydrated boundary gets
// hydrated or deleted.

var enableSuspenseCallback = false; // Part of the simplification of React.createElement so we can eventually move
// from React.createElement to React.jsx
// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md

var warnAboutDefaultPropsOnFunctionComponents = false;
var warnAboutStringRefs = false;
var disableLegacyContext = false;
var disableSchedulerTimeoutBasedOnReactExpirationTime = false;
var enableTrustedTypesIntegration = false; // Flag to turn event.target and event.currentTarget in ReactNative from a reactTag to a component instance

// the renderer. Such as when we're dispatching events or if third party
// libraries need to call batchedUpdates. Eventually, this API will go away when
// everything is batched by default. We'll then have a similar API to opt-out of
// scheduled work and instead do synchronous work.
// Defaults

var batchedUpdatesImpl = function (fn, bookkeeping) {
  return fn(bookkeeping);
};

var discreteUpdatesImpl = function (fn, a, b, c) {
  return fn(a, b, c);
};

var flushDiscreteUpdatesImpl = function () {};

var batchedEventUpdatesImpl = batchedUpdatesImpl;
var isInsideEventHandler = false;
var isBatchingEventUpdates = false;

function finishEventHandler() {
  // Here we wait until all updates have propagated, which is important
  // when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  // Then we restore state of any controlled component.
  var controlledComponentsHavePendingUpdates = needsStateRestore();

  if (controlledComponentsHavePendingUpdates) {
    // If a controlled event was fired, we may need to restore the state of
    // the DOM node back to the controlled value. This is necessary when React
    // bails out of the update without touching the DOM.
    flushDiscreteUpdatesImpl();
    restoreStateIfNeeded();
  }
}

function batchedUpdates(fn, bookkeeping) {
  if (isInsideEventHandler) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(bookkeeping);
  }

  isInsideEventHandler = true;

  try {
    return batchedUpdatesImpl(fn, bookkeeping);
  } finally {
    isInsideEventHandler = false;
    finishEventHandler();
  }
}
function batchedEventUpdates(fn, a, b) {
  if (isBatchingEventUpdates) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(a, b);
  }

  isBatchingEventUpdates = true;

  try {
    return batchedEventUpdatesImpl(fn, a, b);
  } finally {
    isBatchingEventUpdates = false;
    finishEventHandler();
  }
} // This is for the React Flare event system

function executeUserEventHandler(fn, value) {
  var previouslyInEventHandler = isInsideEventHandler;

  try {
    isInsideEventHandler = true;
    var type = typeof value === 'object' && value !== null ? value.type : '';
    invokeGuardedCallbackAndCatchFirstError(type, fn, undefined, value);
  } finally {
    isInsideEventHandler = previouslyInEventHandler;
  }
}
function discreteUpdates(fn, a, b, c) {
  var prevIsInsideEventHandler = isInsideEventHandler;
  isInsideEventHandler = true;

  try {
    return discreteUpdatesImpl(fn, a, b, c);
  } finally {
    isInsideEventHandler = prevIsInsideEventHandler;

    if (!isInsideEventHandler) {
      finishEventHandler();
    }
  }
}
var lastFlushedEventTimeStamp = 0;
function flushDiscreteUpdatesIfNeeded(timeStamp) {
  // event.timeStamp isn't overly reliable due to inconsistencies in
  // how different browsers have historically provided the time stamp.
  // Some browsers provide high-resolution time stamps for all events,
  // some provide low-resolution time stamps for all events. FF < 52
  // even mixes both time stamps together. Some browsers even report
  // negative time stamps or time stamps that are 0 (iOS9) in some cases.
  // Given we are only comparing two time stamps with equality (!==),
  // we are safe from the resolution differences. If the time stamp is 0
  // we bail-out of preventing the flush, which can affect semantics,
  // such as if an earlier flush removes or adds event listeners that
  // are fired in the subsequent flush. However, this is the same
  // behaviour as we had before this change, so the risks are low.
  if (!isInsideEventHandler && (!enableFlareAPI || timeStamp === 0 || lastFlushedEventTimeStamp !== timeStamp)) {
    lastFlushedEventTimeStamp = timeStamp;
    flushDiscreteUpdatesImpl();
  }
}
function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {
  batchedUpdatesImpl = _batchedUpdatesImpl;
  discreteUpdatesImpl = _discreteUpdatesImpl;
  flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;
  batchedEventUpdatesImpl = _batchedEventUpdatesImpl;
}

var DiscreteEvent = 0;
var UserBlockingEvent = 1;
var ContinuousEvent = 2;

var ReactInternals$1 = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
var _ReactInternals$Sched = ReactInternals$1.Scheduler;
var unstable_cancelCallback = _ReactInternals$Sched.unstable_cancelCallback;
var unstable_now = _ReactInternals$Sched.unstable_now;
var unstable_scheduleCallback = _ReactInternals$Sched.unstable_scheduleCallback;
var unstable_shouldYield = _ReactInternals$Sched.unstable_shouldYield;
var unstable_requestPaint = _ReactInternals$Sched.unstable_requestPaint;
var unstable_getFirstCallbackNode = _ReactInternals$Sched.unstable_getFirstCallbackNode;
var unstable_runWithPriority = _ReactInternals$Sched.unstable_runWithPriority;
var unstable_next = _ReactInternals$Sched.unstable_next;
var unstable_continueExecution = _ReactInternals$Sched.unstable_continueExecution;
var unstable_pauseExecution = _ReactInternals$Sched.unstable_pauseExecution;
var unstable_getCurrentPriorityLevel = _ReactInternals$Sched.unstable_getCurrentPriorityLevel;
var unstable_ImmediatePriority = _ReactInternals$Sched.unstable_ImmediatePriority;
var unstable_UserBlockingPriority = _ReactInternals$Sched.unstable_UserBlockingPriority;
var unstable_NormalPriority = _ReactInternals$Sched.unstable_NormalPriority;
var unstable_LowPriority = _ReactInternals$Sched.unstable_LowPriority;
var unstable_IdlePriority = _ReactInternals$Sched.unstable_IdlePriority;
var unstable_forceFrameRate = _ReactInternals$Sched.unstable_forceFrameRate;
var unstable_flushAllWithoutAsserting = _ReactInternals$Sched.unstable_flushAllWithoutAsserting;

// CommonJS interop named imports.

var UserBlockingPriority = unstable_UserBlockingPriority;
var runWithPriority = unstable_runWithPriority;
var listenToResponderEventTypesImpl;
function setListenToResponderEventTypes(_listenToResponderEventTypesImpl) {
  listenToResponderEventTypesImpl = _listenToResponderEventTypesImpl;
}
var rootEventTypesToEventResponderInstances = new Map();
var DoNotPropagateToNextResponder = 0;
var PropagateToNextResponder = 1;
var currentTimeStamp = 0;
var currentInstance = null;
var currentDocument = null;
var currentPropagationBehavior = DoNotPropagateToNextResponder;
var eventResponderContext = {
  dispatchEvent: function (eventValue, eventListener, eventPriority) {
    validateResponderContext();
    validateEventValue(eventValue);

    switch (eventPriority) {
      case DiscreteEvent:
        {
          flushDiscreteUpdatesIfNeeded(currentTimeStamp);
          discreteUpdates(function () {
            return executeUserEventHandler(eventListener, eventValue);
          });
          break;
        }

      case UserBlockingEvent:
        {
          runWithPriority(UserBlockingPriority, function () {
            return executeUserEventHandler(eventListener, eventValue);
          });
          break;
        }

      case ContinuousEvent:
        {
          executeUserEventHandler(eventListener, eventValue);
          break;
        }
    }
  },
  isTargetWithinResponder: function (target) {
    validateResponderContext();

    if (target != null) {
      var fiber = getClosestInstanceFromNode(target);
      var responderFiber = currentInstance.fiber;

      while (fiber !== null) {
        if (fiber === responderFiber || fiber.alternate === responderFiber) {
          return true;
        }

        fiber = fiber.return;
      }
    }

    return false;
  },
  isTargetWithinResponderScope: function (target) {
    validateResponderContext();
    var componentInstance = currentInstance;
    var responder = componentInstance.responder;

    if (target != null) {
      var fiber = getClosestInstanceFromNode(target);
      var responderFiber = currentInstance.fiber;

      while (fiber !== null) {
        if (fiber === responderFiber || fiber.alternate === responderFiber) {
          return true;
        }

        if (doesFiberHaveResponder(fiber, responder)) {
          return false;
        }

        fiber = fiber.return;
      }
    }

    return false;
  },
  isTargetWithinNode: function (childTarget, parentTarget) {
    validateResponderContext();
    var childFiber = getClosestInstanceFromNode(childTarget);
    var parentFiber = getClosestInstanceFromNode(parentTarget);

    if (childFiber != null && parentFiber != null) {
      var parentAlternateFiber = parentFiber.alternate;
      var node = childFiber;

      while (node !== null) {
        if (node === parentFiber || node === parentAlternateFiber) {
          return true;
        }

        node = node.return;
      }

      return false;
    } // Fallback to DOM APIs


    return parentTarget.contains(childTarget);
  },
  addRootEventTypes: function (rootEventTypes) {
    validateResponderContext();
    listenToResponderEventTypesImpl(rootEventTypes, currentDocument);

    for (var i = 0; i < rootEventTypes.length; i++) {
      var rootEventType = rootEventTypes[i];
      var eventResponderInstance = currentInstance;
      registerRootEventType(rootEventType, eventResponderInstance);
    }
  },
  removeRootEventTypes: function (rootEventTypes) {
    validateResponderContext();

    for (var i = 0; i < rootEventTypes.length; i++) {
      var rootEventType = rootEventTypes[i];
      var rootEventResponders = rootEventTypesToEventResponderInstances.get(rootEventType);
      var rootEventTypesSet = currentInstance.rootEventTypes;

      if (rootEventTypesSet !== null) {
        rootEventTypesSet.delete(rootEventType);
      }

      if (rootEventResponders !== undefined) {
        rootEventResponders.delete(currentInstance);
      }
    }
  },
  getActiveDocument: getActiveDocument,
  objectAssign: _assign,
  getTimeStamp: function () {
    validateResponderContext();
    return currentTimeStamp;
  },
  isTargetWithinHostComponent: function (target, elementType) {
    validateResponderContext();
    var fiber = getClosestInstanceFromNode(target);

    while (fiber !== null) {
      if (fiber.tag === HostComponent && fiber.type === elementType) {
        return true;
      }

      fiber = fiber.return;
    }

    return false;
  },
  continuePropagation: function () {
    currentPropagationBehavior = PropagateToNextResponder;
  },
  enqueueStateRestore: enqueueStateRestore,
  getResponderNode: function () {
    validateResponderContext();
    var responderFiber = currentInstance.fiber;

    if (responderFiber.tag === ScopeComponent) {
      return null;
    }

    return responderFiber.stateNode;
  }
};

function validateEventValue(eventValue) {
  if (typeof eventValue === 'object' && eventValue !== null) {
    var target = eventValue.target,
        type = eventValue.type,
        timeStamp = eventValue.timeStamp;

    if (target == null || type == null || timeStamp == null) {
      throw new Error('context.dispatchEvent: "target", "timeStamp", and "type" fields on event object are required.');
    }

    var showWarning = function (name) {
      {
        warning$1(false, '%s is not available on event objects created from event responder modules (React Flare). ' + 'Try wrapping in a conditional, i.e. `if (event.type !== "press") { event.%s }`', name, name);
      }
    };

    eventValue.isDefaultPrevented = function () {
      {
        showWarning('isDefaultPrevented()');
      }
    };

    eventValue.isPropagationStopped = function () {
      {
        showWarning('isPropagationStopped()');
      }
    }; // $FlowFixMe: we don't need value, Flow thinks we do


    Object.defineProperty(eventValue, 'nativeEvent', {
      get: function () {
        {
          showWarning('nativeEvent');
        }
      }
    });
  }
}

function doesFiberHaveResponder(fiber, responder) {
  var tag = fiber.tag;

  if (tag === HostComponent || tag === ScopeComponent) {
    var dependencies = fiber.dependencies;

    if (dependencies !== null) {
      var respondersMap = dependencies.responders;

      if (respondersMap !== null && respondersMap.has(responder)) {
        return true;
      }
    }
  }

  return false;
}

function getActiveDocument() {
  return currentDocument;
}

function createDOMResponderEvent(topLevelType, nativeEvent, nativeEventTarget, passive, passiveSupported) {
  var _ref = nativeEvent,
      buttons = _ref.buttons,
      pointerType = _ref.pointerType;
  var eventPointerType = '';

  if (pointerType !== undefined) {
    eventPointerType = pointerType;
  } else if (nativeEvent.key !== undefined) {
    eventPointerType = 'keyboard';
  } else if (buttons !== undefined) {
    eventPointerType = 'mouse';
  } else if (nativeEvent.changedTouches !== undefined) {
    eventPointerType = 'touch';
  }

  return {
    nativeEvent: nativeEvent,
    passive: passive,
    passiveSupported: passiveSupported,
    pointerType: eventPointerType,
    target: nativeEventTarget,
    type: topLevelType
  };
}

function responderEventTypesContainType(eventTypes, type) {
  for (var i = 0, len = eventTypes.length; i < len; i++) {
    if (eventTypes[i] === type) {
      return true;
    }
  }

  return false;
}

function validateResponderTargetEventTypes(eventType, responder) {
  var targetEventTypes = responder.targetEventTypes; // Validate the target event type exists on the responder

  if (targetEventTypes !== null) {
    return responderEventTypesContainType(targetEventTypes, eventType);
  }

  return false;
}

function traverseAndHandleEventResponderInstances(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags) {
  var isPassiveEvent = (eventSystemFlags & IS_PASSIVE) !== 0;
  var isPassiveSupported = (eventSystemFlags & PASSIVE_NOT_SUPPORTED) === 0;
  var isPassive = isPassiveEvent || !isPassiveSupported;
  var eventType = isPassive ? topLevelType : topLevelType + '_active'; // Trigger event responders in this order:
  // - Bubble target responder phase
  // - Root responder phase

  var visitedResponders = new Set();
  var responderEvent = createDOMResponderEvent(topLevelType, nativeEvent, nativeEventTarget, isPassiveEvent, isPassiveSupported);
  var node = targetFiber;
  var insidePortal = false;

  while (node !== null) {
    var _node = node,
        dependencies = _node.dependencies,
        tag = _node.tag;

    if (tag === HostPortal) {
      insidePortal = true;
    } else if ((tag === HostComponent || tag === ScopeComponent) && dependencies !== null) {
      var respondersMap = dependencies.responders;

      if (respondersMap !== null) {
        var responderInstances = Array.from(respondersMap.values());

        for (var i = 0, length = responderInstances.length; i < length; i++) {
          var responderInstance = responderInstances[i];
          var props = responderInstance.props,
              responder = responderInstance.responder,
              state = responderInstance.state;

          if (!visitedResponders.has(responder) && validateResponderTargetEventTypes(eventType, responder) && (!insidePortal || responder.targetPortalPropagation)) {
            visitedResponders.add(responder);
            var onEvent = responder.onEvent;

            if (onEvent !== null) {
              currentInstance = responderInstance;
              onEvent(responderEvent, eventResponderContext, props, state);

              if (currentPropagationBehavior === PropagateToNextResponder) {
                visitedResponders.delete(responder);
                currentPropagationBehavior = DoNotPropagateToNextResponder;
              }
            }
          }
        }
      }
    }

    node = node.return;
  } // Root phase


  var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(eventType);

  if (rootEventResponderInstances !== undefined) {
    var _responderInstances = Array.from(rootEventResponderInstances);

    for (var _i = 0; _i < _responderInstances.length; _i++) {
      var _responderInstance = _responderInstances[_i];
      var props = _responderInstance.props,
          responder = _responderInstance.responder,
          state = _responderInstance.state;
      var onRootEvent = responder.onRootEvent;

      if (onRootEvent !== null) {
        currentInstance = _responderInstance;
        onRootEvent(responderEvent, eventResponderContext, props, state);
      }
    }
  }
}

function mountEventResponder(responder, responderInstance, props, state) {
  var onMount = responder.onMount;

  if (onMount !== null) {
    var previousInstance = currentInstance;
    currentInstance = responderInstance;

    try {
      batchedEventUpdates(function () {
        onMount(eventResponderContext, props, state);
      });
    } finally {
      currentInstance = previousInstance;
    }
  }
}
function unmountEventResponder(responderInstance) {
  var responder = responderInstance.responder;
  var onUnmount = responder.onUnmount;

  if (onUnmount !== null) {
    var props = responderInstance.props,
        state = responderInstance.state;
    var previousInstance = currentInstance;
    currentInstance = responderInstance;

    try {
      batchedEventUpdates(function () {
        onUnmount(eventResponderContext, props, state);
      });
    } finally {
      currentInstance = previousInstance;
    }
  }

  var rootEventTypesSet = responderInstance.rootEventTypes;

  if (rootEventTypesSet !== null) {
    var rootEventTypes = Array.from(rootEventTypesSet);

    for (var i = 0; i < rootEventTypes.length; i++) {
      var topLevelEventType = rootEventTypes[i];
      var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(topLevelEventType);

      if (rootEventResponderInstances !== undefined) {
        rootEventResponderInstances.delete(responderInstance);
      }
    }
  }
}

function validateResponderContext() {
  if (!(currentInstance !== null)) {
    {
      throw Error("An event responder context was used outside of an event cycle.");
    }
  }
}

function dispatchEventForResponderEventSystem(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags) {
  if (enableFlareAPI) {
    var previousInstance = currentInstance;
    var previousTimeStamp = currentTimeStamp;
    var previousDocument = currentDocument;
    var previousPropagationBehavior = currentPropagationBehavior;
    currentPropagationBehavior = DoNotPropagateToNextResponder; // nodeType 9 is DOCUMENT_NODE

    currentDocument = nativeEventTarget.nodeType === 9 ? nativeEventTarget : nativeEventTarget.ownerDocument; // We might want to control timeStamp another way here

    currentTimeStamp = nativeEvent.timeStamp;

    try {
      batchedEventUpdates(function () {
        traverseAndHandleEventResponderInstances(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags);
      });
    } finally {
      currentInstance = previousInstance;
      currentTimeStamp = previousTimeStamp;
      currentDocument = previousDocument;
      currentPropagationBehavior = previousPropagationBehavior;
    }
  }
}
function addRootEventTypesForResponderInstance(responderInstance, rootEventTypes) {
  for (var i = 0; i < rootEventTypes.length; i++) {
    var rootEventType = rootEventTypes[i];
    registerRootEventType(rootEventType, responderInstance);
  }
}

function registerRootEventType(rootEventType, eventResponderInstance) {
  var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(rootEventType);

  if (rootEventResponderInstances === undefined) {
    rootEventResponderInstances = new Set();
    rootEventTypesToEventResponderInstances.set(rootEventType, rootEventResponderInstances);
  }

  var rootEventTypesSet = eventResponderInstance.rootEventTypes;

  if (rootEventTypesSet === null) {
    rootEventTypesSet = eventResponderInstance.rootEventTypes = new Set();
  }

  if (!!rootEventTypesSet.has(rootEventType)) {
    {
      throw Error("addRootEventTypes() found a duplicate root event type of \"" + rootEventType + "\". This might be because the event type exists in the event responder \"rootEventTypes\" array or because of a previous addRootEventTypes() using this root event type.");
    }
  }

  rootEventTypesSet.add(rootEventType);
  rootEventResponderInstances.add(eventResponderInstance);
}

// A reserved attribute.
// It is handled by React separately and shouldn't be written to the DOM.
var RESERVED = 0; // A simple string attribute.
// Attributes that aren't in the whitelist are presumed to have this type.

var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
// "enumerated" attributes with "true" and "false" as possible values.
// When true, it should be set to a "true" string.
// When false, it should be set to a "false" string.

var BOOLEANISH_STRING = 2; // A real boolean attribute.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.

var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
// For any other value, should be present with that value.

var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
// When falsy, it should be removed.

var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
// When falsy, it should be removed.

var POSITIVE_NUMERIC = 6;

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
/* eslint-enable max-len */

var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";

var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
var hasOwnProperty = Object.prototype.hasOwnProperty;
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};
function isAttributeNameSafe(attributeName) {
  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
    return true;
  }

  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
    return false;
  }

  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }

  illegalAttributeNameCache[attributeName] = true;

  {
    warning$1(false, 'Invalid attribute name: `%s`', attributeName);
  }

  return false;
}
function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null) {
    return propertyInfo.type === RESERVED;
  }

  if (isCustomComponentTag) {
    return false;
  }

  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return true;
  }

  return false;
}
function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
    return false;
  }

  switch (typeof value) {
    case 'function': // $FlowIssue symbol is perfectly valid here

    case 'symbol':
      // eslint-disable-line
      return true;

    case 'boolean':
      {
        if (isCustomComponentTag) {
          return false;
        }

        if (propertyInfo !== null) {
          return !propertyInfo.acceptsBooleans;
        } else {
          var prefix = name.toLowerCase().slice(0, 5);
          return prefix !== 'data-' && prefix !== 'aria-';
        }
      }

    default:
      return false;
  }
}
function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
  if (value === null || typeof value === 'undefined') {
    return true;
  }

  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
    return true;
  }

  if (isCustomComponentTag) {
    return false;
  }

  if (propertyInfo !== null) {
    switch (propertyInfo.type) {
      case BOOLEAN:
        return !value;

      case OVERLOADED_BOOLEAN:
        return value === false;

      case NUMERIC:
        return isNaN(value);

      case POSITIVE_NUMERIC:
        return isNaN(value) || value < 1;
    }
  }

  return false;
}
function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
  this.sanitizeURL = sanitizeURL;
} // When adding attributes to this list, be sure to also add them to
// the `possibleStandardNames` module to ensure casing and incorrect
// name warnings.


var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.

['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular
// elements (not just inputs). Now that ReactDOMInput assigns to the
// defaultValue property -- do we need this?
'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
}); // A few React string attributes have a different name.
// This is a mapping from React prop names to the attribute names.

[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
  var name = _ref[0],
      attributeName = _ref[1];
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, // attributeName
  null, // attributeNamespace
  false);
}); // These are "enumerated" HTML attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).

['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false);
}); // These are "enumerated" SVG attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
// Since these are SVG attributes, their attribute names are case-sensitive.

['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
}); // These are HTML boolean attributes.

['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM
// on the client side because the browsers are inconsistent. Instead we call focus().
'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata
'itemScope'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false);
}); // These are the few React props that we set as DOM properties
// rather than attributes. These are all booleans.

['checked', // Note: `option.selected` is not updated if `select.multiple` is
// disabled with `removeAttribute`. We have special logic for handling this.
'multiple', 'muted', 'selected'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
}); // These are HTML attributes that are "overloaded booleans": they behave like
// booleans, but can also accept a string value.

['capture', 'download'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
}); // These are HTML attributes that must be positive numbers.

['cols', 'rows', 'size', 'span'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false);
}); // These are HTML attributes that must be numbers.

['rowSpan', 'start'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false);
});
var CAMELIZE = /[\-\:]([a-z])/g;

var capitalize = function (token) {
  return token[1].toUpperCase();
}; // This is a list of all SVG attributes that need special casing, namespacing,
// or boolean value assignment. Regular attributes that just accept strings
// and have the same names are omitted, just like in the HTML whitelist.
// Some of these attributes can be hard to find. This list was created by
// scrapping the MDN documentation.


['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, null, // attributeNamespace
  false);
}); // String SVG attributes with the xlink namespace.

['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/1999/xlink', false);
}); // String SVG attributes with the xml namespace.

['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/XML/1998/namespace', false);
}); // These attribute exists both in HTML and SVG.
// The attribute name is case-sensitive in SVG so we can't just use
// the React name like we do for attributes that exist only in HTML.

['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  false);
}); // These attributes accept URLs. These must not allow javascript: URLS.
// These will also need to accept Trusted Types object in the future.

var xlinkHref = 'xlinkHref';
properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty
'xlink:href', 'http://www.w3.org/1999/xlink', true);
['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  true);
});

var ReactDebugCurrentFrame$1 = null;

{
  ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
} // A javascript: URL can contain leading C0 control or \u0020 SPACE,
// and any newline or tab are filtered out as if they're not part of the URL.
// https://url.spec.whatwg.org/#url-parsing
// Tab or newline are defined as \r\n\t:
// https://infra.spec.whatwg.org/#ascii-tab-or-newline
// A C0 control is a code point in the range \u0000 NULL to \u001F
// INFORMATION SEPARATOR ONE, inclusive:
// https://infra.spec.whatwg.org/#c0-control-or-space

/* eslint-disable max-len */


var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
var didWarn = false;

function sanitizeURL(url) {
  if (disableJavaScriptURLs) {
    if (!!isJavaScriptProtocol.test(url)) {
      {
        throw Error("React has blocked a javascript: URL as a security precaution." + (ReactDebugCurrentFrame$1.getStackAddendum()));
      }
    }
  } else if (true && !didWarn && isJavaScriptProtocol.test(url)) {
    didWarn = true;
    warning$1(false, 'A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));
  }
}

// Flow does not allow string concatenation of most non-string types. To work
// around this limitation, we use an opaque type that can only be obtained by
// passing the value through getToStringValue first.
function toString(value) {
  return '' + value;
}
function getToStringValue(value) {
  switch (typeof value) {
    case 'boolean':
    case 'number':
    case 'object':
    case 'string':
    case 'undefined':
      return value;

    default:
      // function, symbol are assigned as empty strings
      return '';
  }
}
/** Trusted value is a wrapper for "safe" values which can be assigned to DOM execution sinks. */

/**
 * We allow passing objects with toString method as element attributes or in dangerouslySetInnerHTML
 * and we do validations that the value is safe. Once we do validation we want to use the validated
 * value instead of the object (because object.toString may return something else on next call).
 *
 * If application uses Trusted Types we don't stringify trusted values, but preserve them as objects.
 */
var toStringOrTrustedType = toString;

if (enableTrustedTypesIntegration && typeof trustedTypes !== 'undefined') {
  toStringOrTrustedType = function (value) {
    if (typeof value === 'object' && (trustedTypes.isHTML(value) || trustedTypes.isScript(value) || trustedTypes.isScriptURL(value) ||
    /* TrustedURLs are deprecated and will be removed soon: https://github.com/WICG/trusted-types/pull/204 */
    trustedTypes.isURL && trustedTypes.isURL(value))) {
      // Pass Trusted Types through.
      return value;
    }

    return toString(value);
  };
}

/**
 * Set attribute for a node. The attribute value can be either string or
 * Trusted value (if application uses Trusted Types).
 */
function setAttribute(node, attributeName, attributeValue) {
  node.setAttribute(attributeName, attributeValue);
}
/**
 * Set attribute with namespace for a node. The attribute value can be either string or
 * Trusted value (if application uses Trusted Types).
 */

function setAttributeNS(node, attributeNamespace, attributeName, attributeValue) {
  node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
}

/**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */
function getValueForProperty(node, name, expected, propertyInfo) {
  {
    if (propertyInfo.mustUseProperty) {
      var propertyName = propertyInfo.propertyName;
      return node[propertyName];
    } else {
      if (!disableJavaScriptURLs && propertyInfo.sanitizeURL) {
        // If we haven't fully disabled javascript: URLs, and if
        // the hydration is successful of a javascript: URL, we
        // still want to warn on the client.
        sanitizeURL('' + expected);
      }

      var attributeName = propertyInfo.attributeName;
      var stringValue = null;

      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
        if (node.hasAttribute(attributeName)) {
          var value = node.getAttribute(attributeName);

          if (value === '') {
            return true;
          }

          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return value;
          }

          if (value === '' + expected) {
            return expected;
          }

          return value;
        }
      } else if (node.hasAttribute(attributeName)) {
        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
          // We had an attribute but shouldn't have had one, so read it
          // for the error message.
          return node.getAttribute(attributeName);
        }

        if (propertyInfo.type === BOOLEAN) {
          // If this was a boolean, it doesn't matter what the value is
          // the fact that we have it is the same as the expected.
          return expected;
        } // Even if this property uses a namespace we use getAttribute
        // because we assume its namespaced name is the same as our config.
        // To use getAttributeNS we need the local name which we don't have
        // in our config atm.


        stringValue = node.getAttribute(attributeName);
      }

      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
        return stringValue === null ? expected : stringValue;
      } else if (stringValue === '' + expected) {
        return expected;
      } else {
        return stringValue;
      }
    }
  }
}
/**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */

function getValueForAttribute(node, name, expected) {
  {
    if (!isAttributeNameSafe(name)) {
      return;
    }

    if (!node.hasAttribute(name)) {
      return expected === undefined ? undefined : null;
    }

    var value = node.getAttribute(name);

    if (value === '' + expected) {
      return expected;
    }

    return value;
  }
}
/**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */

function setValueForProperty(node, name, value, isCustomComponentTag) {
  var propertyInfo = getPropertyInfo(name);

  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
    return;
  }

  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
    value = null;
  } // If the prop isn't in the special list, treat it as a simple attribute.


  if (isCustomComponentTag || propertyInfo === null) {
    if (isAttributeNameSafe(name)) {
      var _attributeName = name;

      if (value === null) {
        node.removeAttribute(_attributeName);
      } else {
        setAttribute(node, _attributeName, toStringOrTrustedType(value));
      }
    }

    return;
  }

  var mustUseProperty = propertyInfo.mustUseProperty;

  if (mustUseProperty) {
    var propertyName = propertyInfo.propertyName;

    if (value === null) {
      var type = propertyInfo.type;
      node[propertyName] = type === BOOLEAN ? false : '';
    } else {
      // Contrary to `setAttribute`, object properties are properly
      // `toString`ed by IE8/9.
      node[propertyName] = value;
    }

    return;
  } // The rest are treated as attributes with special cases.


  var attributeName = propertyInfo.attributeName,
      attributeNamespace = propertyInfo.attributeNamespace;

  if (value === null) {
    node.removeAttribute(attributeName);
  } else {
    var _type = propertyInfo.type;
    var attributeValue;

    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
      // If attribute type is boolean, we know for sure it won't be an execution sink
      // and we won't require Trusted Type here.
      attributeValue = '';
    } else {
      // `setAttribute` with objects becomes only `[object]` in IE8/9,
      // ('' + value) makes it output the correct toString()-value.
      attributeValue = toStringOrTrustedType(value);

      if (propertyInfo.sanitizeURL) {
        sanitizeURL(attributeValue.toString());
      }
    }

    if (attributeNamespace) {
      setAttributeNS(node, attributeNamespace, attributeName, attributeValue);
    } else {
      setAttribute(node, attributeName, attributeValue);
    }
  }
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret$1 = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

{
  var ReactPropTypesSecret = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  {
    loggedTypeFailures = {};
  }
};

var checkPropTypes_1 = checkPropTypes;

var ReactDebugCurrentFrame$2 = null;
var ReactControlledValuePropTypes = {
  checkPropTypes: null
};

{
  ReactDebugCurrentFrame$2 = ReactSharedInternals.ReactDebugCurrentFrame;
  var hasReadOnlyValue = {
    button: true,
    checkbox: true,
    image: true,
    hidden: true,
    radio: true,
    reset: true,
    submit: true
  };
  var propTypes = {
    value: function (props, propName, componentName) {
      if (hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled || props[propName] == null || enableFlareAPI && props.listeners) {
        return null;
      }

      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    },
    checked: function (props, propName, componentName) {
      if (props.onChange || props.readOnly || props.disabled || props[propName] == null || enableFlareAPI && props.listeners) {
        return null;
      }

      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  };
  /**
   * Provide a linked `value` attribute for controlled forms. You should not use
   * this outside of the ReactDOM controlled form components.
   */

  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props) {
    checkPropTypes_1(propTypes, props, 'prop', tagName, ReactDebugCurrentFrame$2.getStackAddendum);
  };
}

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(node) {
  return node._valueTracker;
}

function detachTracker(node) {
  node._valueTracker = null;
}

function getValueFromNode(node) {
  var value = '';

  if (!node) {
    return value;
  }

  if (isCheckable(node)) {
    value = node.checked ? 'true' : 'false';
  } else {
    value = node.value;
  }

  return value;
}

function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? 'checked' : 'value';
  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
  var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
  // and don't track value will cause over reporting of changes,
  // but it's better then a hard failure
  // (needed for certain tests that spyOn input values and Safari)

  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
    return;
  }

  var get = descriptor.get,
      set = descriptor.set;
  Object.defineProperty(node, valueField, {
    configurable: true,
    get: function () {
      return get.call(this);
    },
    set: function (value) {
      currentValue = '' + value;
      set.call(this, value);
    }
  }); // We could've passed this the first time
  // but it triggers a bug in IE11 and Edge 14/15.
  // Calling defineProperty() again should be equivalent.
  // https://github.com/facebook/react/issues/11768

  Object.defineProperty(node, valueField, {
    enumerable: descriptor.enumerable
  });
  var tracker = {
    getValue: function () {
      return currentValue;
    },
    setValue: function (value) {
      currentValue = '' + value;
    },
    stopTracking: function () {
      detachTracker(node);
      delete node[valueField];
    }
  };
  return tracker;
}

function track(node) {
  if (getTracker(node)) {
    return;
  } // TODO: Once it's just Fiber we can move this to node._wrapperState


  node._valueTracker = trackValueOnNode(node);
}
function updateValueIfChanged(node) {
  if (!node) {
    return false;
  }

  var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
  // that trying again will succeed

  if (!tracker) {
    return true;
  }

  var lastValue = tracker.getValue();
  var nextValue = getValueFromNode(node);

  if (nextValue !== lastValue) {
    tracker.setValue(nextValue);
    return true;
  }

  return false;
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}
/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */


function getHostProps(element, props) {
  var node = element;
  var checked = props.checked;

  var hostProps = _assign({}, props, {
    defaultChecked: undefined,
    defaultValue: undefined,
    value: undefined,
    checked: checked != null ? checked : node._wrapperState.initialChecked
  });

  return hostProps;
}
function initWrapperState(element, props) {
  {
    ReactControlledValuePropTypes.checkPropTypes('input', props);

    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
      warning$1(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
      didWarnCheckedDefaultChecked = true;
    }

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      warning$1(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
      didWarnValueDefaultValue = true;
    }
  }

  var node = element;
  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
  node._wrapperState = {
    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
    initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
    controlled: isControlled(props)
  };
}
function updateChecked(element, props) {
  var node = element;
  var checked = props.checked;

  if (checked != null) {
    setValueForProperty(node, 'checked', checked, false);
  }
}
function updateWrapper(element, props) {
  var node = element;

  {
    var controlled = isControlled(props);

    if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
      warning$1(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
      didWarnUncontrolledToControlled = true;
    }

    if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
      warning$1(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
      didWarnControlledToUncontrolled = true;
    }
  }

  updateChecked(element, props);
  var value = getToStringValue(props.value);
  var type = props.type;

  if (value != null) {
    if (type === 'number') {
      if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.
      // eslint-disable-next-line
      node.value != value) {
        node.value = toString(value);
      }
    } else if (node.value !== toString(value)) {
      node.value = toString(value);
    }
  } else if (type === 'submit' || type === 'reset') {
    // Submit/reset inputs need the attribute removed completely to avoid
    // blank-text buttons.
    node.removeAttribute('value');
    return;
  }

  if (disableInputAttributeSyncing) {
    // When not syncing the value attribute, React only assigns a new value
    // whenever the defaultValue React prop has changed. When not present,
    // React does nothing
    if (props.hasOwnProperty('defaultValue')) {
      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
    }
  } else {
    // When syncing the value attribute, the value comes from a cascade of
    // properties:
    //  1. The value React property
    //  2. The defaultValue React property
    //  3. Otherwise there should be no change
    if (props.hasOwnProperty('value')) {
      setDefaultValue(node, props.type, value);
    } else if (props.hasOwnProperty('defaultValue')) {
      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
    }
  }

  if (disableInputAttributeSyncing) {
    // When not syncing the checked attribute, the attribute is directly
    // controllable from the defaultValue React property. It needs to be
    // updated as new props come in.
    if (props.defaultChecked == null) {
      node.removeAttribute('checked');
    } else {
      node.defaultChecked = !!props.defaultChecked;
    }
  } else {
    // When syncing the checked attribute, it only changes when it needs
    // to be removed, such as transitioning from a checkbox into a text input
    if (props.checked == null && props.defaultChecked != null) {
      node.defaultChecked = !!props.defaultChecked;
    }
  }
}
function postMountWrapper(element, props, isHydrating) {
  var node = element; // Do not assign value if it is already set. This prevents user text input
  // from being lost during SSR hydration.

  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
    var type = props.type;
    var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
    // default value provided by the browser. See: #12872

    if (isButton && (props.value === undefined || props.value === null)) {
      return;
    }

    var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
    // from being lost during SSR hydration.

    if (!isHydrating) {
      if (disableInputAttributeSyncing) {
        var value = getToStringValue(props.value); // When not syncing the value attribute, the value property points
        // directly to the React prop. Only assign it if it exists.

        if (value != null) {
          // Always assign on buttons so that it is possible to assign an
          // empty string to clear button text.
          //
          // Otherwise, do not re-assign the value property if is empty. This
          // potentially avoids a DOM write and prevents Firefox (~60.0.1) from
          // prematurely marking required inputs as invalid. Equality is compared
          // to the current value in case the browser provided value is not an
          // empty string.
          if (isButton || value !== node.value) {
            node.value = toString(value);
          }
        }
      } else {
        // When syncing the value attribute, the value property should use
        // the wrapperState._initialValue property. This uses:
        //
        //   1. The value React property when present
        //   2. The defaultValue React property when present
        //   3. An empty string
        if (initialValue !== node.value) {
          node.value = initialValue;
        }
      }
    }

    if (disableInputAttributeSyncing) {
      // When not syncing the value attribute, assign the value attribute
      // directly from the defaultValue React property (when present)
      var defaultValue = getToStringValue(props.defaultValue);

      if (defaultValue != null) {
        node.defaultValue = toString(defaultValue);
      }
    } else {
      // Otherwise, the value attribute is synchronized to the property,
      // so we assign defaultValue to the same thing as the value property
      // assignment step above.
      node.defaultValue = initialValue;
    }
  } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
  // this is needed to work around a chrome bug where setting defaultChecked
  // will sometimes influence the value of checked (even after detachment).
  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
  // We need to temporarily unset name to avoid disrupting radio button groups.


  var name = node.name;

  if (name !== '') {
    node.name = '';
  }

  if (disableInputAttributeSyncing) {
    // When not syncing the checked attribute, the checked property
    // never gets assigned. It must be manually set. We don't want
    // to do this when hydrating so that existing user input isn't
    // modified
    if (!isHydrating) {
      updateChecked(element, props);
    } // Only assign the checked attribute if it is defined. This saves
    // a DOM write when controlling the checked attribute isn't needed
    // (text inputs, submit/reset)


    if (props.hasOwnProperty('defaultChecked')) {
      node.defaultChecked = !node.defaultChecked;
      node.defaultChecked = !!props.defaultChecked;
    }
  } else {
    // When syncing the checked attribute, both the checked property and
    // attribute are assigned at the same time using defaultChecked. This uses:
    //
    //   1. The checked React property when present
    //   2. The defaultChecked React property when present
    //   3. Otherwise, false
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !!node._wrapperState.initialChecked;
  }

  if (name !== '') {
    node.name = name;
  }
}
function restoreControlledState$1(element, props) {
  var node = element;
  updateWrapper(node, props);
  updateNamedCousins(node, props);
}

function updateNamedCousins(rootNode, props) {
  var name = props.name;

  if (props.type === 'radio' && name != null) {
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    } // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form. It might not even be in the
    // document. Let's just use the local `querySelectorAll` to ensure we don't
    // miss anything.


    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];

      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      } // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.


      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);

      if (!otherProps) {
        {
          throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
        }
      } // We need update the tracked value on the named cousin since the value
      // was changed but the input saw no event or value set


      updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.

      updateWrapper(otherNode, otherProps);
    }
  }
} // In Chrome, assigning defaultValue to certain input types triggers input validation.
// For number inputs, the display value loses trailing decimal points. For email inputs,
// Chrome raises "The specified value <x> is not a valid email address".
//
// Here we check to see if the defaultValue has actually changed, avoiding these problems
// when the user is inputting text
//
// https://github.com/facebook/react/issues/7253


function setDefaultValue(node, type, value) {
  if ( // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
  type !== 'number' || node.ownerDocument.activeElement !== node) {
    if (value == null) {
      node.defaultValue = toString(node._wrapperState.initialValue);
    } else if (node.defaultValue !== toString(value)) {
      node.defaultValue = toString(value);
    }
  }
}

var didWarnSelectedSetOnOption = false;
var didWarnInvalidChild = false;

function flattenChildren(children) {
  var content = ''; // Flatten children. We'll warn if they are invalid
  // during validateProps() which runs for hydration too.
  // Note that this would throw on non-element objects.
  // Elements are stringified (which is normally irrelevant
  // but matters for <fbt>).

  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }

    content += child; // Note: we don't warn about invalid children here.
    // Instead, this is done separately below so that
    // it happens during the hydration codepath too.
  });
  return content;
}
/**
 * Implements an <option> host component that warns when `selected` is set.
 */


function validateProps(element, props) {
  {
    // This mirrors the codepath above, but runs for hydration too.
    // Warn about invalid children here so that client and hydration are consistent.
    // TODO: this seems like it could cause a DEV-only throw for hydration
    // if children contains a non-element object. We should try to avoid that.
    if (typeof props.children === 'object' && props.children !== null) {
      React.Children.forEach(props.children, function (child) {
        if (child == null) {
          return;
        }

        if (typeof child === 'string' || typeof child === 'number') {
          return;
        }

        if (typeof child.type !== 'string') {
          return;
        }

        if (!didWarnInvalidChild) {
          didWarnInvalidChild = true;
          warning$1(false, 'Only strings and numbers are supported as <option> children.');
        }
      });
    } // TODO: Remove support for `selected` in <option>.


    if (props.selected != null && !didWarnSelectedSetOnOption) {
      warning$1(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
      didWarnSelectedSetOnOption = true;
    }
  }
}
function postMountWrapper$1(element, props) {
  // value="" should make a value attribute (#6219)
  if (props.value != null) {
    element.setAttribute('value', toString(getToStringValue(props.value)));
  }
}
function getHostProps$1(element, props) {
  var hostProps = _assign({
    children: undefined
  }, props);

  var content = flattenChildren(props.children);

  if (content) {
    hostProps.children = content;
  }

  return hostProps;
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var didWarnValueDefaultValue$1;

{
  didWarnValueDefaultValue$1 = false;
}

function getDeclarationErrorAddendum() {
  var ownerName = getCurrentFiberOwnerNameInDevOrNull();

  if (ownerName) {
    return '\n\nCheck the render method of `' + ownerName + '`.';
  }

  return '';
}

var valuePropNames = ['value', 'defaultValue'];
/**
 * Validation function for `value` and `defaultValue`.
 */

function checkSelectPropTypes(props) {
  ReactControlledValuePropTypes.checkPropTypes('select', props);

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];

    if (props[propName] == null) {
      continue;
    }

    var isArray = Array.isArray(props[propName]);

    if (props.multiple && !isArray) {
      warning$1(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
    } else if (!props.multiple && isArray) {
      warning$1(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
    }
  }
}

function updateOptions(node, multiple, propValue, setDefaultSelected) {
  var options = node.options;

  if (multiple) {
    var selectedValues = propValue;
    var selectedValue = {};

    for (var i = 0; i < selectedValues.length; i++) {
      // Prefix to avoid chaos with special keys.
      selectedValue['$' + selectedValues[i]] = true;
    }

    for (var _i = 0; _i < options.length; _i++) {
      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);

      if (options[_i].selected !== selected) {
        options[_i].selected = selected;
      }

      if (selected && setDefaultSelected) {
        options[_i].defaultSelected = true;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    var _selectedValue = toString(getToStringValue(propValue));

    var defaultSelected = null;

    for (var _i2 = 0; _i2 < options.length; _i2++) {
      if (options[_i2].value === _selectedValue) {
        options[_i2].selected = true;

        if (setDefaultSelected) {
          options[_i2].defaultSelected = true;
        }

        return;
      }

      if (defaultSelected === null && !options[_i2].disabled) {
        defaultSelected = options[_i2];
      }
    }

    if (defaultSelected !== null) {
      defaultSelected.selected = true;
    }
  }
}
/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */


function getHostProps$2(element, props) {
  return _assign({}, props, {
    value: undefined
  });
}
function initWrapperState$1(element, props) {
  var node = element;

  {
    checkSelectPropTypes(props);
  }

  node._wrapperState = {
    wasMultiple: !!props.multiple
  };

  {
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
      warning$1(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValueDefaultValue$1 = true;
    }
  }
}
function postMountWrapper$2(element, props) {
  var node = element;
  node.multiple = !!props.multiple;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (props.defaultValue != null) {
    updateOptions(node, !!props.multiple, props.defaultValue, true);
  }
}
function postUpdateWrapper(element, props) {
  var node = element;
  var wasMultiple = node._wrapperState.wasMultiple;
  node._wrapperState.wasMultiple = !!props.multiple;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (wasMultiple !== !!props.multiple) {
    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
    if (props.defaultValue != null) {
      updateOptions(node, !!props.multiple, props.defaultValue, true);
    } else {
      // Revert the select back to its default unselected state.
      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
    }
  }
}
function restoreControlledState$2(element, props) {
  var node = element;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  }
}

var didWarnValDefaultVal = false;

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
function getHostProps$3(element, props) {
  var node = element;

  if (!(props.dangerouslySetInnerHTML == null)) {
    {
      throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
    }
  } // Always set children to the same thing. In IE9, the selection range will
  // get reset if `textContent` is mutated.  We could add a check in setTextContent
  // to only set the value if/when the value differs from the node value (which would
  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
  // solution. The value can be a boolean or object so that's why it's forced
  // to be a string.


  var hostProps = _assign({}, props, {
    value: undefined,
    defaultValue: undefined,
    children: toString(node._wrapperState.initialValue)
  });

  return hostProps;
}
function initWrapperState$2(element, props) {
  var node = element;

  {
    ReactControlledValuePropTypes.checkPropTypes('textarea', props);

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
      warning$1(false, '%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
      didWarnValDefaultVal = true;
    }
  }

  var initialValue = props.value; // Only bother fetching default value if we're going to use it

  if (initialValue == null) {
    var defaultValue = props.defaultValue; // TODO (yungsters): Remove support for children content in <textarea>.

    var children = props.children;

    if (children != null) {
      {
        warning$1(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
      }

      if (!(defaultValue == null)) {
        {
          throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
        }
      }

      if (Array.isArray(children)) {
        if (!(children.length <= 1)) {
          {
            throw Error("<textarea> can only have at most one child.");
          }
        }

        children = children[0];
      }

      defaultValue = children;
    }

    if (defaultValue == null) {
      defaultValue = '';
    }

    initialValue = defaultValue;
  }

  node._wrapperState = {
    initialValue: getToStringValue(initialValue)
  };
}
function updateWrapper$1(element, props) {
  var node = element;
  var value = getToStringValue(props.value);
  var defaultValue = getToStringValue(props.defaultValue);

  if (value != null) {
    // Cast `value` to a string to ensure the value is set correctly. While
    // browsers typically do this as necessary, jsdom doesn't.
    var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed

    if (newValue !== node.value) {
      node.value = newValue;
    }

    if (props.defaultValue == null && node.defaultValue !== newValue) {
      node.defaultValue = newValue;
    }
  }

  if (defaultValue != null) {
    node.defaultValue = toString(defaultValue);
  }
}
function postMountWrapper$3(element, props) {
  var node = element; // This is in postMount because we need access to the DOM node, which is not
  // available until after the component has mounted.

  var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
  // will populate textContent as well.
  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/

  if (textContent === node._wrapperState.initialValue) {
    if (textContent !== '' && textContent !== null) {
      node.value = textContent;
    }
  }
}
function restoreControlledState$3(element, props) {
  // DOM component is still mounted; update
  updateWrapper$1(element, props);
}

var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
var Namespaces = {
  html: HTML_NAMESPACE$1,
  mathml: MATH_NAMESPACE,
  svg: SVG_NAMESPACE
}; // Assumes there is no parent namespace.

function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;

    case 'math':
      return MATH_NAMESPACE;

    default:
      return HTML_NAMESPACE$1;
  }
}
function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }

  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE$1;
  } // By default, pass namespace below.


  return parentNamespace;
}

/* globals MSApp */

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

var reusableSVGContainer;
/**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */

var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  if (node.namespaceURI === Namespaces.svg) {
    {
      if (enableTrustedTypesIntegration) {
        // TODO: reconsider the text of this warning and when it should show
        // before enabling the feature flag.
        !(typeof trustedTypes === 'undefined') ? warning$1(false, "Using 'dangerouslySetInnerHTML' in an svg element with " + 'Trusted Types enabled in an Internet Explorer will cause ' + 'the trusted value to be converted to string. Assigning string ' + "to 'innerHTML' will throw an error if Trusted Types are enforced. " + "You can try to wrap your svg element inside a div and use 'dangerouslySetInnerHTML' " + 'on the enclosing div instead.') : void 0;
      }
    }

    if (!('innerHTML' in node)) {
      // IE does not have innerHTML for SVG nodes, so instead we inject the
      // new markup in a temp node and then move the child nodes across into
      // the target node
      reusableSVGContainer = reusableSVGContainer || document.createElement('div');
      reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
      var svgNode = reusableSVGContainer.firstChild;

      while (node.firstChild) {
        node.removeChild(node.firstChild);
      }

      while (svgNode.firstChild) {
        node.appendChild(svgNode.firstChild);
      }

      return;
    }
  }

  node.innerHTML = html;
});

/**
 * HTML nodeType values that represent the type of the node
 */
var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_FRAGMENT_NODE = 11;

/**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */

var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
      firstChild.nodeValue = text;
      return;
    }
  }

  node.textContent = text;
};

// Do not use the below two methods directly!
// Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
// (It is the only module that is allowed to access these methods.)
function unsafeCastStringToDOMTopLevelType(topLevelType) {
  return topLevelType;
}
function unsafeCastDOMTopLevelTypeToString(topLevelType) {
  return topLevelType;
}

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */

function makePrefixMap(styleProp, eventName) {
  var prefixes = {};
  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  return prefixes;
}
/**
 * A list of event names to a configurable list of vendor prefixes.
 */


var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};
/**
 * Event names that have already been detected and prefixed (if applicable).
 */

var prefixedEventNames = {};
/**
 * Element to check for prefixes on.
 */

var style = {};
/**
 * Bootstrap if a DOM exists.
 */

if (canUseDOM) {
  style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.

  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  } // Same as above


  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}
/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */


function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return eventName;
}

/**
 * To identify top level events in ReactDOM, we use constants defined by this
 * module. This is the only module that uses the unsafe* methods to express
 * that the constants actually correspond to the browser event names. This lets
 * us save some bundle size by avoiding a top level type -> event name map.
 * The rest of ReactDOM code should import top level types from this file.
 */

var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
var TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');
var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');


var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel'); // List of events that need to be individually attached to media elements.
// Note that events in this list will *not* be listened to at the top level
// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.

var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];
function getRawEventName(topLevelType) {
  return unsafeCastDOMTopLevelTypeToString(topLevelType);
}

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */

/**
 * This API should be called `delete` but we'd have to make sure to always
 * transform these to strings for IE support. When this transform is fully
 * supported we can rename it.
 */

function get(key) {
  return key._reactInternalFiber;
}
function has$1(key) {
  return key._reactInternalFiber !== undefined;
}
function set(key, value) {
  key._reactInternalFiber = value;
}

// Don't change these two values. They're used by React Dev Tools.
var NoEffect =
/*              */
0;
var PerformedWork =
/*         */
1; // You can change the rest (and add more).

var Placement =
/*             */
2;
var Update =
/*                */
4;
var PlacementAndUpdate =
/*    */
6;
var Deletion =
/*              */
8;
var ContentReset =
/*          */
16;
var Callback =
/*              */
32;
var DidCapture =
/*            */
64;
var Ref =
/*                   */
128;
var Snapshot =
/*              */
256;
var Passive =
/*               */
512;
var Hydrating =
/*             */
1024;
var HydratingAndUpdate =
/*    */
1028; // Passive & Update & Callback & Ref & Snapshot

var LifecycleEffectMask =
/*   */
932; // Union of all host effects

var HostEffectMask =
/*        */
2047;
var Incomplete =
/*            */
2048;
var ShouldCapture =
/*         */
4096;

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
function getNearestMountedFiber(fiber) {
  var node = fiber;
  var nearestMounted = fiber;

  if (!fiber.alternate) {
    // If there is no alternate, this might be a new tree that isn't inserted
    // yet. If it is, then it will have a pending insertion effect on it.
    var nextNode = node;

    do {
      node = nextNode;

      if ((node.effectTag & (Placement | Hydrating)) !== NoEffect) {
        // This is an insertion or in-progress hydration. The nearest possible
        // mounted fiber is the parent but we need to continue to figure out
        // if that one is still mounted.
        nearestMounted = node.return;
      }

      nextNode = node.return;
    } while (nextNode);
  } else {
    while (node.return) {
      node = node.return;
    }
  }

  if (node.tag === HostRoot) {
    // TODO: Check if this was a nested HostRoot when used with
    // renderContainerIntoSubtree.
    return nearestMounted;
  } // If we didn't hit the root, that means that we're in an disconnected tree
  // that has been unmounted.


  return null;
}
function getSuspenseInstanceFromFiber(fiber) {
  if (fiber.tag === SuspenseComponent) {
    var suspenseState = fiber.memoizedState;

    if (suspenseState === null) {
      var current = fiber.alternate;

      if (current !== null) {
        suspenseState = current.memoizedState;
      }
    }

    if (suspenseState !== null) {
      return suspenseState.dehydrated;
    }
  }

  return null;
}
function getContainerFromFiber(fiber) {
  return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
}
function isFiberMounted(fiber) {
  return getNearestMountedFiber(fiber) === fiber;
}
function isMounted(component) {
  {
    var owner = ReactCurrentOwner.current;

    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;
      !instance._warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component') : void 0;
      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = get(component);

  if (!fiber) {
    return false;
  }

  return getNearestMountedFiber(fiber) === fiber;
}

function assertIsMounted(fiber) {
  if (!(getNearestMountedFiber(fiber) === fiber)) {
    {
      throw Error("Unable to find node on an unmounted component.");
    }
  }
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;

  if (!alternate) {
    // If there is no alternate, then we only need to check if it is mounted.
    var nearestMounted = getNearestMountedFiber(fiber);

    if (!(nearestMounted !== null)) {
      {
        throw Error("Unable to find node on an unmounted component.");
      }
    }

    if (nearestMounted !== fiber) {
      return null;
    }

    return fiber;
  } // If we have two possible branches, we'll walk backwards up to the root
  // to see what path the root points to. On the way we may hit one of the
  // special cases and we'll deal with them.


  var a = fiber;
  var b = alternate;

  while (true) {
    var parentA = a.return;

    if (parentA === null) {
      // We're at the root.
      break;
    }

    var parentB = parentA.alternate;

    if (parentB === null) {
      // There is no alternate. This is an unusual case. Currently, it only
      // happens when a Suspense component is hidden. An extra fragment fiber
      // is inserted in between the Suspense fiber and its children. Skip
      // over this extra fragment fiber and proceed to the next parent.
      var nextParent = parentA.return;

      if (nextParent !== null) {
        a = b = nextParent;
        continue;
      } // If there's no parent, we're at the root.


      break;
    } // If both copies of the parent fiber point to the same child, we can
    // assume that the child is current. This happens when we bailout on low
    // priority: the bailed out fiber's child reuses the current child.


    if (parentA.child === parentB.child) {
      var child = parentA.child;

      while (child) {
        if (child === a) {
          // We've determined that A is the current branch.
          assertIsMounted(parentA);
          return fiber;
        }

        if (child === b) {
          // We've determined that B is the current branch.
          assertIsMounted(parentA);
          return alternate;
        }

        child = child.sibling;
      } // We should never have an alternate for any mounting node. So the only
      // way this could possibly happen is if this was unmounted, if at all.


      {
        {
          throw Error("Unable to find node on an unmounted component.");
        }
      }
    }

    if (a.return !== b.return) {
      // The return pointer of A and the return pointer of B point to different
      // fibers. We assume that return pointers never criss-cross, so A must
      // belong to the child set of A.return, and B must belong to the child
      // set of B.return.
      a = parentA;
      b = parentB;
    } else {
      // The return pointers point to the same fiber. We'll have to use the
      // default, slow path: scan the child sets of each parent alternate to see
      // which child belongs to which set.
      //
      // Search parent A's child set
      var didFindChild = false;
      var _child = parentA.child;

      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }

        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }

        _child = _child.sibling;
      }

      if (!didFindChild) {
        // Search parent B's child set
        _child = parentB.child;

        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          {
            throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
          }
        }
      }
    }

    if (!(a.alternate === b)) {
      {
        throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  } // If the root is not a host container, we're in a disconnected tree. I.e.
  // unmounted.


  if (!(a.tag === HostRoot)) {
    {
      throw Error("Unable to find node on an unmounted component.");
    }
  }

  if (a.stateNode.current === a) {
    // We've determined that A is the current branch.
    return fiber;
  } // Otherwise B has to be current branch.


  return alternate;
}
function findCurrentHostFiber(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);

  if (!currentParent) {
    return null;
  } // Next we'll drill down this component to find the first HostComponent/Text.


  var node = currentParent;

  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === currentParent) {
      return null;
    }

    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  } // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable


  return null;
}
function findCurrentHostFiberWithNoPortals(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);

  if (!currentParent) {
    return null;
  } // Next we'll drill down this component to find the first HostComponent/Text.


  var node = currentParent;

  while (true) {
    if (node.tag === HostComponent || node.tag === HostText || enableFundamentalAPI && node.tag === FundamentalComponent) {
      return node;
    } else if (node.child && node.tag !== HostPortal) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === currentParent) {
      return null;
    }

    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  } // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable


  return null;
}

var attemptSynchronousHydration;
function setAttemptSynchronousHydration(fn) {
  attemptSynchronousHydration = fn;
}
var attemptUserBlockingHydration;
function setAttemptUserBlockingHydration(fn) {
  attemptUserBlockingHydration = fn;
}
var attemptContinuousHydration;
function setAttemptContinuousHydration(fn) {
  attemptContinuousHydration = fn;
}
var attemptHydrationAtCurrentPriority;
function setAttemptHydrationAtCurrentPriority(fn) {
  attemptHydrationAtCurrentPriority = fn;
} // TODO: Upgrade this definition once we're on a newer version of Flow that
// has this definition built-in.

var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.

var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.

// if the last target was dehydrated.

var queuedFocus = null;
var queuedDrag = null;
var queuedMouse = null; // For pointer events there can be one latest event per pointerId.

var queuedPointers = new Map();
var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.

var queuedExplicitHydrationTargets = [];
function hasQueuedDiscreteEvents() {
  return queuedDiscreteEvents.length > 0;
}

var discreteReplayableEvents = [TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_TOUCH_CANCEL, TOP_TOUCH_END, TOP_TOUCH_START, TOP_AUX_CLICK, TOP_DOUBLE_CLICK, TOP_POINTER_CANCEL, TOP_POINTER_DOWN, TOP_POINTER_UP, TOP_DRAG_END, TOP_DRAG_START, TOP_DROP, TOP_COMPOSITION_END, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_INPUT, TOP_TEXT_INPUT, TOP_CLOSE, TOP_CANCEL, TOP_COPY, TOP_CUT, TOP_PASTE, TOP_CLICK, TOP_CHANGE, TOP_CONTEXT_MENU, TOP_RESET, TOP_SUBMIT];
var continuousReplayableEvents = [TOP_FOCUS, TOP_BLUR, TOP_DRAG_ENTER, TOP_DRAG_LEAVE, TOP_MOUSE_OVER, TOP_MOUSE_OUT, TOP_POINTER_OVER, TOP_POINTER_OUT, TOP_GOT_POINTER_CAPTURE, TOP_LOST_POINTER_CAPTURE];
function isReplayableDiscreteEvent(eventType) {
  return discreteReplayableEvents.indexOf(eventType) > -1;
}

function trapReplayableEvent(topLevelType, document, listeningSet) {
  listenToTopLevel(topLevelType, document, listeningSet);

  if (enableFlareAPI) {
    // Trap events for the responder system.
    var passiveEventKey = unsafeCastDOMTopLevelTypeToString(topLevelType) + '_passive';

    if (!listeningSet.has(passiveEventKey)) {
      trapEventForResponderEventSystem(document, topLevelType, true);
      listeningSet.add(passiveEventKey);
    } // TODO: This listens to all events as active which might have
    // undesirable effects. It's also unnecessary to have both
    // passive and active listeners. Instead, we could start with
    // a passive and upgrade it to an active one if needed.
    // For replaying purposes the active is never needed since we
    // currently don't preventDefault.


    var activeEventKey = unsafeCastDOMTopLevelTypeToString(topLevelType) + '_active';

    if (!listeningSet.has(activeEventKey)) {
      trapEventForResponderEventSystem(document, topLevelType, false);
      listeningSet.add(activeEventKey);
    }
  }
}

function eagerlyTrapReplayableEvents(document) {
  var listeningSet = getListeningSetForElement(document); // Discrete

  discreteReplayableEvents.forEach(function (topLevelType) {
    trapReplayableEvent(topLevelType, document, listeningSet);
  }); // Continuous

  continuousReplayableEvents.forEach(function (topLevelType) {
    trapReplayableEvent(topLevelType, document, listeningSet);
  });
}

function createQueuedReplayableEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
  return {
    blockedOn: blockedOn,
    topLevelType: topLevelType,
    eventSystemFlags: eventSystemFlags | IS_REPLAYED,
    nativeEvent: nativeEvent
  };
}

function queueDiscreteEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
  var queuedEvent = createQueuedReplayableEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent);
  queuedDiscreteEvents.push(queuedEvent);

  if (enableSelectiveHydration) {
    if (queuedDiscreteEvents.length === 1) {
      // If this was the first discrete event, we might be able to
      // synchronously unblock it so that preventDefault still works.
      while (queuedEvent.blockedOn !== null) {
        var _fiber = getInstanceFromNode$1(queuedEvent.blockedOn);

        if (_fiber === null) {
          break;
        }

        attemptSynchronousHydration(_fiber);

        if (queuedEvent.blockedOn === null) {
          // We got unblocked by hydration. Let's try again.
          replayUnblockedEvents(); // If we're reblocked, on an inner boundary, we might need
          // to attempt hydrating that one.

          continue;
        } else {
          // We're still blocked from hydation, we have to give up
          // and replay later.
          break;
        }
      }
    }
  }
} // Resets the replaying for this type of continuous event to no event.

function clearIfContinuousEvent(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_FOCUS:
    case TOP_BLUR:
      queuedFocus = null;
      break;

    case TOP_DRAG_ENTER:
    case TOP_DRAG_LEAVE:
      queuedDrag = null;
      break;

    case TOP_MOUSE_OVER:
    case TOP_MOUSE_OUT:
      queuedMouse = null;
      break;

    case TOP_POINTER_OVER:
    case TOP_POINTER_OUT:
      {
        var pointerId = nativeEvent.pointerId;
        queuedPointers.delete(pointerId);
        break;
      }

    case TOP_GOT_POINTER_CAPTURE:
    case TOP_LOST_POINTER_CAPTURE:
      {
        var _pointerId = nativeEvent.pointerId;
        queuedPointerCaptures.delete(_pointerId);
        break;
      }
  }
}

function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
  if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
    var queuedEvent = createQueuedReplayableEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent);

    if (blockedOn !== null) {
      var _fiber2 = getInstanceFromNode$1(blockedOn);

      if (_fiber2 !== null) {
        // Attempt to increase the priority of this target.
        attemptContinuousHydration(_fiber2);
      }
    }

    return queuedEvent;
  } // If we have already queued this exact event, then it's because
  // the different event systems have different DOM event listeners.
  // We can accumulate the flags and store a single event to be
  // replayed.


  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
  return existingQueuedEvent;
}

function queueIfContinuousEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
  // These set relatedTarget to null because the replayed event will be treated as if we
  // moved from outside the window (no target) onto the target once it hydrates.
  // Instead of mutating we could clone the event.
  switch (topLevelType) {
    case TOP_FOCUS:
      {
        var focusEvent = nativeEvent;
        queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, topLevelType, eventSystemFlags, focusEvent);
        return true;
      }

    case TOP_DRAG_ENTER:
      {
        var dragEvent = nativeEvent;
        queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, topLevelType, eventSystemFlags, dragEvent);
        return true;
      }

    case TOP_MOUSE_OVER:
      {
        var mouseEvent = nativeEvent;
        queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, topLevelType, eventSystemFlags, mouseEvent);
        return true;
      }

    case TOP_POINTER_OVER:
      {
        var pointerEvent = nativeEvent;
        var pointerId = pointerEvent.pointerId;
        queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, topLevelType, eventSystemFlags, pointerEvent));
        return true;
      }

    case TOP_GOT_POINTER_CAPTURE:
      {
        var _pointerEvent = nativeEvent;
        var _pointerId2 = _pointerEvent.pointerId;
        queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, topLevelType, eventSystemFlags, _pointerEvent));
        return true;
      }
  }

  return false;
} // Check if this target is unblocked. Returns true if it's unblocked.

function attemptExplicitHydrationTarget(queuedTarget) {
  // TODO: This function shares a lot of logic with attemptToDispatchEvent.
  // Try to unify them. It's a bit tricky since it would require two return
  // values.
  var targetInst = getClosestInstanceFromNode(queuedTarget.target);

  if (targetInst !== null) {
    var nearestMounted = getNearestMountedFiber(targetInst);

    if (nearestMounted !== null) {
      var tag = nearestMounted.tag;

      if (tag === SuspenseComponent) {
        var instance = getSuspenseInstanceFromFiber(nearestMounted);

        if (instance !== null) {
          // We're blocked on hydrating this boundary.
          // Increase its priority.
          queuedTarget.blockedOn = instance;
          unstable_runWithPriority(queuedTarget.priority, function () {
            attemptHydrationAtCurrentPriority(nearestMounted);
          });
          return;
        }
      } else if (tag === HostRoot) {
        var root = nearestMounted.stateNode;

        if (root.hydrate) {
          queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
          // a root other than sync.

          return;
        }
      }
    }
  }

  queuedTarget.blockedOn = null;
}

function queueExplicitHydrationTarget(target) {
  if (enableSelectiveHydration) {
    var priority = unstable_getCurrentPriorityLevel();
    var queuedTarget = {
      blockedOn: null,
      target: target,
      priority: priority
    };
    var i = 0;

    for (; i < queuedExplicitHydrationTargets.length; i++) {
      if (priority <= queuedExplicitHydrationTargets[i].priority) {
        break;
      }
    }

    queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);

    if (i === 0) {
      attemptExplicitHydrationTarget(queuedTarget);
    }
  }
}

function attemptReplayContinuousQueuedEvent(queuedEvent) {
  if (queuedEvent.blockedOn !== null) {
    return false;
  }

  var nextBlockedOn = attemptToDispatchEvent(queuedEvent.topLevelType, queuedEvent.eventSystemFlags, queuedEvent.nativeEvent);

  if (nextBlockedOn !== null) {
    // We're still blocked. Try again later.
    var _fiber3 = getInstanceFromNode$1(nextBlockedOn);

    if (_fiber3 !== null) {
      attemptContinuousHydration(_fiber3);
    }

    queuedEvent.blockedOn = nextBlockedOn;
    return false;
  }

  return true;
}

function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
  if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
    map.delete(key);
  }
}

function replayUnblockedEvents() {
  hasScheduledReplayAttempt = false; // First replay discrete events.

  while (queuedDiscreteEvents.length > 0) {
    var nextDiscreteEvent = queuedDiscreteEvents[0];

    if (nextDiscreteEvent.blockedOn !== null) {
      // We're still blocked.
      // Increase the priority of this boundary to unblock
      // the next discrete event.
      var _fiber4 = getInstanceFromNode$1(nextDiscreteEvent.blockedOn);

      if (_fiber4 !== null) {
        attemptUserBlockingHydration(_fiber4);
      }

      break;
    }

    var nextBlockedOn = attemptToDispatchEvent(nextDiscreteEvent.topLevelType, nextDiscreteEvent.eventSystemFlags, nextDiscreteEvent.nativeEvent);

    if (nextBlockedOn !== null) {
      // We're still blocked. Try again later.
      nextDiscreteEvent.blockedOn = nextBlockedOn;
    } else {
      // We've successfully replayed the first event. Let's try the next one.
      queuedDiscreteEvents.shift();
    }
  } // Next replay any continuous events.


  if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
    queuedFocus = null;
  }

  if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
    queuedDrag = null;
  }

  if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
    queuedMouse = null;
  }

  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
}

function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
  if (queuedEvent.blockedOn === unblocked) {
    queuedEvent.blockedOn = null;

    if (!hasScheduledReplayAttempt) {
      hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
      // now unblocked. This first might not actually be unblocked yet.
      // We could check it early to avoid scheduling an unnecessary callback.

      unstable_scheduleCallback(unstable_NormalPriority, replayUnblockedEvents);
    }
  }
}

function retryIfBlockedOn(unblocked) {
  // Mark anything that was blocked on this as no longer blocked
  // and eligible for a replay.
  if (queuedDiscreteEvents.length > 0) {
    scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
    // worth it because we expect very few discrete events to queue up and once
    // we are actually fully unblocked it will be fast to replay them.

    for (var i = 1; i < queuedDiscreteEvents.length; i++) {
      var queuedEvent = queuedDiscreteEvents[i];

      if (queuedEvent.blockedOn === unblocked) {
        queuedEvent.blockedOn = null;
      }
    }
  }

  if (queuedFocus !== null) {
    scheduleCallbackIfUnblocked(queuedFocus, unblocked);
  }

  if (queuedDrag !== null) {
    scheduleCallbackIfUnblocked(queuedDrag, unblocked);
  }

  if (queuedMouse !== null) {
    scheduleCallbackIfUnblocked(queuedMouse, unblocked);
  }

  var unblock = function (queuedEvent) {
    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
  };

  queuedPointers.forEach(unblock);
  queuedPointerCaptures.forEach(unblock);

  for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
    var queuedTarget = queuedExplicitHydrationTargets[_i];

    if (queuedTarget.blockedOn === unblocked) {
      queuedTarget.blockedOn = null;
    }
  }

  while (queuedExplicitHydrationTargets.length > 0) {
    var nextExplicitTarget = queuedExplicitHydrationTargets[0];

    if (nextExplicitTarget.blockedOn !== null) {
      // We're still blocked.
      break;
    } else {
      attemptExplicitHydrationTarget(nextExplicitTarget);

      if (nextExplicitTarget.blockedOn === null) {
        // We're unblocked.
        queuedExplicitHydrationTargets.shift();
      }
    }
  }
}

function addEventBubbleListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, false);
}
function addEventCaptureListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, true);
}
function addEventCaptureListenerWithPassiveFlag(element, eventType, listener, passive) {
  element.addEventListener(eventType, listener, {
    capture: true,
    passive: passive
  });
}

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  // Fallback to nativeEvent.srcElement for IE9
  // https://github.com/facebook/react/issues/12506
  var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963

  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html


  return target.nodeType === TEXT_NODE ? target.parentNode : target;
}

function getParent(inst) {
  do {
    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
    // That is depending on if we want nested subtrees (layers) to bubble
    // events to their parent. We could also go through parentNode on the
    // host node but that wouldn't work for React Native and doesn't let us
    // do the portal feature.
  } while (inst && inst.tag !== HostComponent);

  if (inst) {
    return inst;
  }

  return null;
}
/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */


function getLowestCommonAncestor(instA, instB) {
  var depthA = 0;

  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }

  var depthB = 0;

  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
    depthB++;
  } // If A is deeper, crawl up.


  while (depthA - depthB > 0) {
    instA = getParent(instA);
    depthA--;
  } // If B is deeper, crawl up.


  while (depthB - depthA > 0) {
    instB = getParent(instB);
    depthB--;
  } // Walk in lockstep until we find a match.


  var depth = depthA;

  while (depth--) {
    if (instA === instB || instA === instB.alternate) {
      return instA;
    }

    instA = getParent(instA);
    instB = getParent(instB);
  }

  return null;
}
/**
 * Return if A is an ancestor of B.
 */


/**
 * Return the parent instance of the passed-in instance.
 */


/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */

function traverseTwoPhase(inst, fn, arg) {
  var path = [];

  while (inst) {
    path.push(inst);
    inst = getParent(inst);
  }

  var i;

  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }

  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}
/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */

function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];

  while (true) {
    if (!from) {
      break;
    }

    if (from === common) {
      break;
    }

    var alternate = from.alternate;

    if (alternate !== null && alternate === common) {
      break;
    }

    pathFrom.push(from);
    from = getParent(from);
  }

  var pathTo = [];

  while (true) {
    if (!to) {
      break;
    }

    if (to === common) {
      break;
    }

    var _alternate = to.alternate;

    if (_alternate !== null && _alternate === common) {
      break;
    }

    pathTo.push(to);
    to = getParent(to);
  }

  for (var i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }

  for (var _i = pathTo.length; _i-- > 0;) {
    fn(pathTo[_i], 'captured', argTo);
  }
}

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}
/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing even a
 * single one.
 */

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */


function accumulateDirectionalDispatches(inst, phase, event) {
  {
    !inst ? warningWithoutStack$1(false, 'Dispatching inst must not be null') : void 0;
  }

  var listener = listenerAtPhase(inst, event, phase);

  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}
/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */


function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}
/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */


function accumulateDispatches(inst, ignoredDirection, event) {
  if (inst && event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);

    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}
/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */


function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}
function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/* eslint valid-typeof: 0 */
var EVENT_POOL_SIZE = 10;
/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: function () {
    return null;
  },
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

function functionThatReturnsTrue() {
  return true;
}

function functionThatReturnsFalse() {
  return false;
}
/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */


function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
    delete this.isDefaultPrevented;
    delete this.isPropagationStopped;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;
  var Interface = this.constructor.Interface;

  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }

    {
      delete this[propName]; // this has a getter/setter for warnings
    }

    var normalize = Interface[propName];

    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;

  if (defaultPrevented) {
    this.isDefaultPrevented = functionThatReturnsTrue;
  } else {
    this.isDefaultPrevented = functionThatReturnsFalse;
  }

  this.isPropagationStopped = functionThatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;

    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }

    this.isDefaultPrevented = functionThatReturnsTrue;
  },
  stopPropagation: function () {
    var event = this.nativeEvent;

    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = functionThatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = functionThatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: functionThatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;

    for (var propName in Interface) {
      {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      }
    }

    this.dispatchConfig = null;
    this._targetInst = null;
    this.nativeEvent = null;
    this.isDefaultPrevented = functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    this._dispatchListeners = null;
    this._dispatchInstances = null;

    {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'isDefaultPrevented', getPooledWarningPropertyDefinition('isDefaultPrevented', functionThatReturnsFalse));
      Object.defineProperty(this, 'isPropagationStopped', getPooledWarningPropertyDefinition('isPropagationStopped', functionThatReturnsFalse));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', function () {}));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', function () {}));
    }
  }
});

SyntheticEvent.Interface = EventInterface;
/**
 * Helper to reduce boilerplate when creating subclasses.
 */

SyntheticEvent.extend = function (Interface) {
  var Super = this;

  var E = function () {};

  E.prototype = Super.prototype;
  var prototype = new E();

  function Class() {
    return Super.apply(this, arguments);
  }

  _assign(prototype, Class.prototype);

  Class.prototype = prototype;
  Class.prototype.constructor = Class;
  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.extend = Super.extend;
  addEventPoolingTo(Class);
  return Class;
};

addEventPoolingTo(SyntheticEvent);
/**
 * Helper to nullify syntheticEvent instance properties when destructing
 *
 * @param {String} propName
 * @param {?object} getVal
 * @return {object} defineProperty object
 */

function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    !warningCondition ? warningWithoutStack$1(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}

function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
  var EventConstructor = this;

  if (EventConstructor.eventPool.length) {
    var instance = EventConstructor.eventPool.pop();
    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
    return instance;
  }

  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
}

function releasePooledEvent(event) {
  var EventConstructor = this;

  if (!(event instanceof EventConstructor)) {
    {
      throw Error("Trying to release an event instance into a pool of a different type.");
    }
  }

  event.destructor();

  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
    EventConstructor.eventPool.push(event);
  }
}

function addEventPoolingTo(EventConstructor) {
  EventConstructor.eventPool = [];
  EventConstructor.getPooled = getPooledEvent;
  EventConstructor.release = releasePooledEvent;
}

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */

var SyntheticAnimationEvent = SyntheticEvent.extend({
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */

var SyntheticClipboardEvent = SyntheticEvent.extend({
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
});

var SyntheticUIEvent = SyntheticEvent.extend({
  view: null,
  detail: null
});

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var SyntheticFocusEvent = SyntheticUIEvent.extend({
  relatedTarget: null
});

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.

    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
  // report Enter as charCode 10 when ctrl is pressed.


  if (charCode === 10) {
    charCode = 13;
  } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.


  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */

var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};
/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */

var translateToKey = {
  '8': 'Backspace',
  '9': 'Tab',
  '12': 'Clear',
  '13': 'Enter',
  '16': 'Shift',
  '17': 'Control',
  '18': 'Alt',
  '19': 'Pause',
  '20': 'CapsLock',
  '27': 'Escape',
  '32': ' ',
  '33': 'PageUp',
  '34': 'PageDown',
  '35': 'End',
  '36': 'Home',
  '37': 'ArrowLeft',
  '38': 'ArrowUp',
  '39': 'ArrowRight',
  '40': 'ArrowDown',
  '45': 'Insert',
  '46': 'Delete',
  '112': 'F1',
  '113': 'F2',
  '114': 'F3',
  '115': 'F4',
  '116': 'F5',
  '117': 'F6',
  '118': 'F7',
  '119': 'F8',
  '120': 'F9',
  '121': 'F10',
  '122': 'F11',
  '123': 'F12',
  '144': 'NumLock',
  '145': 'ScrollLock',
  '224': 'Meta'
};
/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */

function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.
    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;

    if (key !== 'Unidentified') {
      return key;
    }
  } // Browser does not implement `key`, polyfill as much of it as we can.


  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.

    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }

  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }

  return '';
}

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */
var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
}; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
// getModifierState. If getModifierState is not supported, we map it to a set of
// modifier keys exposed by the event. In this case, Lock-keys are not supported.

function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;

  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }

  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.
    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }

    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.
    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }

    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }

    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }

    return 0;
  }
});

var previousScreenX = 0;
var previousScreenY = 0; // Use flags to signal movementX/Y has already been set

var isMovementXSet = false;
var isMovementYSet = false;
/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var SyntheticMouseEvent = SyntheticUIEvent.extend({
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  pageX: null,
  pageY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: null,
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  movementX: function (event) {
    if ('movementX' in event) {
      return event.movementX;
    }

    var screenX = previousScreenX;
    previousScreenX = event.screenX;

    if (!isMovementXSet) {
      isMovementXSet = true;
      return 0;
    }

    return event.type === 'mousemove' ? event.screenX - screenX : 0;
  },
  movementY: function (event) {
    if ('movementY' in event) {
      return event.movementY;
    }

    var screenY = previousScreenY;
    previousScreenY = event.screenY;

    if (!isMovementYSet) {
      isMovementYSet = true;
      return 0;
    }

    return event.type === 'mousemove' ? event.screenY - screenY : 0;
  }
});

/**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */

var SyntheticPointerEvent = SyntheticMouseEvent.extend({
  pointerId: null,
  width: null,
  height: null,
  pressure: null,
  tangentialPressure: null,
  tiltX: null,
  tiltY: null,
  twist: null,
  pointerType: null,
  isPrimary: null
});

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var SyntheticDragEvent = SyntheticMouseEvent.extend({
  dataTransfer: null
});

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */

var SyntheticTouchEvent = SyntheticUIEvent.extend({
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */

var SyntheticTransitionEvent = SyntheticEvent.extend({
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var SyntheticWheelEvent = SyntheticMouseEvent.extend({
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,
  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
});

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: [TOP_ABORT],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = new Map([
 *   [TOP_ABORT, { sameConfig }],
 * ]);
 */

var eventTuples = [// Discrete events
[TOP_BLUR, 'blur', DiscreteEvent], [TOP_CANCEL, 'cancel', DiscreteEvent], [TOP_CLICK, 'click', DiscreteEvent], [TOP_CLOSE, 'close', DiscreteEvent], [TOP_CONTEXT_MENU, 'contextMenu', DiscreteEvent], [TOP_COPY, 'copy', DiscreteEvent], [TOP_CUT, 'cut', DiscreteEvent], [TOP_AUX_CLICK, 'auxClick', DiscreteEvent], [TOP_DOUBLE_CLICK, 'doubleClick', DiscreteEvent], [TOP_DRAG_END, 'dragEnd', DiscreteEvent], [TOP_DRAG_START, 'dragStart', DiscreteEvent], [TOP_DROP, 'drop', DiscreteEvent], [TOP_FOCUS, 'focus', DiscreteEvent], [TOP_INPUT, 'input', DiscreteEvent], [TOP_INVALID, 'invalid', DiscreteEvent], [TOP_KEY_DOWN, 'keyDown', DiscreteEvent], [TOP_KEY_PRESS, 'keyPress', DiscreteEvent], [TOP_KEY_UP, 'keyUp', DiscreteEvent], [TOP_MOUSE_DOWN, 'mouseDown', DiscreteEvent], [TOP_MOUSE_UP, 'mouseUp', DiscreteEvent], [TOP_PASTE, 'paste', DiscreteEvent], [TOP_PAUSE, 'pause', DiscreteEvent], [TOP_PLAY, 'play', DiscreteEvent], [TOP_POINTER_CANCEL, 'pointerCancel', DiscreteEvent], [TOP_POINTER_DOWN, 'pointerDown', DiscreteEvent], [TOP_POINTER_UP, 'pointerUp', DiscreteEvent], [TOP_RATE_CHANGE, 'rateChange', DiscreteEvent], [TOP_RESET, 'reset', DiscreteEvent], [TOP_SEEKED, 'seeked', DiscreteEvent], [TOP_SUBMIT, 'submit', DiscreteEvent], [TOP_TOUCH_CANCEL, 'touchCancel', DiscreteEvent], [TOP_TOUCH_END, 'touchEnd', DiscreteEvent], [TOP_TOUCH_START, 'touchStart', DiscreteEvent], [TOP_VOLUME_CHANGE, 'volumeChange', DiscreteEvent], // User-blocking events
[TOP_DRAG, 'drag', UserBlockingEvent], [TOP_DRAG_ENTER, 'dragEnter', UserBlockingEvent], [TOP_DRAG_EXIT, 'dragExit', UserBlockingEvent], [TOP_DRAG_LEAVE, 'dragLeave', UserBlockingEvent], [TOP_DRAG_OVER, 'dragOver', UserBlockingEvent], [TOP_MOUSE_MOVE, 'mouseMove', UserBlockingEvent], [TOP_MOUSE_OUT, 'mouseOut', UserBlockingEvent], [TOP_MOUSE_OVER, 'mouseOver', UserBlockingEvent], [TOP_POINTER_MOVE, 'pointerMove', UserBlockingEvent], [TOP_POINTER_OUT, 'pointerOut', UserBlockingEvent], [TOP_POINTER_OVER, 'pointerOver', UserBlockingEvent], [TOP_SCROLL, 'scroll', UserBlockingEvent], [TOP_TOGGLE, 'toggle', UserBlockingEvent], [TOP_TOUCH_MOVE, 'touchMove', UserBlockingEvent], [TOP_WHEEL, 'wheel', UserBlockingEvent], // Continuous events
[TOP_ABORT, 'abort', ContinuousEvent], [TOP_ANIMATION_END, 'animationEnd', ContinuousEvent], [TOP_ANIMATION_ITERATION, 'animationIteration', ContinuousEvent], [TOP_ANIMATION_START, 'animationStart', ContinuousEvent], [TOP_CAN_PLAY, 'canPlay', ContinuousEvent], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough', ContinuousEvent], [TOP_DURATION_CHANGE, 'durationChange', ContinuousEvent], [TOP_EMPTIED, 'emptied', ContinuousEvent], [TOP_ENCRYPTED, 'encrypted', ContinuousEvent], [TOP_ENDED, 'ended', ContinuousEvent], [TOP_ERROR, 'error', ContinuousEvent], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture', ContinuousEvent], [TOP_LOAD, 'load', ContinuousEvent], [TOP_LOADED_DATA, 'loadedData', ContinuousEvent], [TOP_LOADED_METADATA, 'loadedMetadata', ContinuousEvent], [TOP_LOAD_START, 'loadStart', ContinuousEvent], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture', ContinuousEvent], [TOP_PLAYING, 'playing', ContinuousEvent], [TOP_PROGRESS, 'progress', ContinuousEvent], [TOP_SEEKING, 'seeking', ContinuousEvent], [TOP_STALLED, 'stalled', ContinuousEvent], [TOP_SUSPEND, 'suspend', ContinuousEvent], [TOP_TIME_UPDATE, 'timeUpdate', ContinuousEvent], [TOP_TRANSITION_END, 'transitionEnd', ContinuousEvent], [TOP_WAITING, 'waiting', ContinuousEvent]];
var eventTypes = {};
var topLevelEventsToDispatchConfig = {};

for (var i = 0; i < eventTuples.length; i++) {
  var eventTuple = eventTuples[i];
  var topEvent = eventTuple[0];
  var event = eventTuple[1];
  var eventPriority = eventTuple[2];
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var config = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent],
    eventPriority: eventPriority
  };
  eventTypes[event] = config;
  topLevelEventsToDispatchConfig[topEvent] = config;
} // Only used in DEV for exhaustiveness validation.


var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];
var SimpleEventPlugin = {
  eventTypes: eventTypes,
  getEventPriority: function (topLevelType) {
    var config = topLevelEventsToDispatchConfig[topLevelType];
    return config !== undefined ? config.eventPriority : ContinuousEvent;
  },
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];

    if (!dispatchConfig) {
      return null;
    }

    var EventConstructor;

    switch (topLevelType) {
      case TOP_KEY_PRESS:
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }

      /* falls through */

      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        EventConstructor = SyntheticKeyboardEvent;
        break;

      case TOP_BLUR:
      case TOP_FOCUS:
        EventConstructor = SyntheticFocusEvent;
        break;

      case TOP_CLICK:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }

      /* falls through */

      case TOP_AUX_CLICK:
      case TOP_DOUBLE_CLICK:
      case TOP_MOUSE_DOWN:
      case TOP_MOUSE_MOVE:
      case TOP_MOUSE_UP: // TODO: Disabled elements should not respond to mouse events

      /* falls through */

      case TOP_MOUSE_OUT:
      case TOP_MOUSE_OVER:
      case TOP_CONTEXT_MENU:
        EventConstructor = SyntheticMouseEvent;
        break;

      case TOP_DRAG:
      case TOP_DRAG_END:
      case TOP_DRAG_ENTER:
      case TOP_DRAG_EXIT:
      case TOP_DRAG_LEAVE:
      case TOP_DRAG_OVER:
      case TOP_DRAG_START:
      case TOP_DROP:
        EventConstructor = SyntheticDragEvent;
        break;

      case TOP_TOUCH_CANCEL:
      case TOP_TOUCH_END:
      case TOP_TOUCH_MOVE:
      case TOP_TOUCH_START:
        EventConstructor = SyntheticTouchEvent;
        break;

      case TOP_ANIMATION_END:
      case TOP_ANIMATION_ITERATION:
      case TOP_ANIMATION_START:
        EventConstructor = SyntheticAnimationEvent;
        break;

      case TOP_TRANSITION_END:
        EventConstructor = SyntheticTransitionEvent;
        break;

      case TOP_SCROLL:
        EventConstructor = SyntheticUIEvent;
        break;

      case TOP_WHEEL:
        EventConstructor = SyntheticWheelEvent;
        break;

      case TOP_COPY:
      case TOP_CUT:
      case TOP_PASTE:
        EventConstructor = SyntheticClipboardEvent;
        break;

      case TOP_GOT_POINTER_CAPTURE:
      case TOP_LOST_POINTER_CAPTURE:
      case TOP_POINTER_CANCEL:
      case TOP_POINTER_DOWN:
      case TOP_POINTER_MOVE:
      case TOP_POINTER_OUT:
      case TOP_POINTER_OVER:
      case TOP_POINTER_UP:
        EventConstructor = SyntheticPointerEvent;
        break;

      default:
        {
          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
            warningWithoutStack$1(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
          }
        } // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0


        EventConstructor = SyntheticEvent;
        break;
    }

    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    accumulateTwoPhaseDispatches(event);
    return event;
  }
};

var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support

if (enableFlareAPI && canUseDOM) {
  try {
    var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value

    Object.defineProperty(options, 'passive', {
      get: function () {
        passiveBrowserEventsSupported = true;
      }
    });
    window.addEventListener('test', options, options);
    window.removeEventListener('test', options, options);
  } catch (e) {
    passiveBrowserEventsSupported = false;
  }
}

// Intentionally not named imports because Rollup would use dynamic dispatch for
// CommonJS interop named imports.
var UserBlockingPriority$1 = unstable_UserBlockingPriority;
var runWithPriority$1 = unstable_runWithPriority;
var getEventPriority = SimpleEventPlugin.getEventPriority;
var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
var callbackBookkeepingPool = [];

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findRootContainerNode(inst) {
  if (inst.tag === HostRoot) {
    return inst.stateNode.containerInfo;
  } // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.


  while (inst.return) {
    inst = inst.return;
  }

  if (inst.tag !== HostRoot) {
    // This can happen if we're in a detached tree.
    return null;
  }

  return inst.stateNode.containerInfo;
} // Used to store ancestor hierarchy in top level callback


function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst, eventSystemFlags) {
  if (callbackBookkeepingPool.length) {
    var instance = callbackBookkeepingPool.pop();
    instance.topLevelType = topLevelType;
    instance.eventSystemFlags = eventSystemFlags;
    instance.nativeEvent = nativeEvent;
    instance.targetInst = targetInst;
    return instance;
  }

  return {
    topLevelType: topLevelType,
    eventSystemFlags: eventSystemFlags,
    nativeEvent: nativeEvent,
    targetInst: targetInst,
    ancestors: []
  };
}

function releaseTopLevelCallbackBookKeeping(instance) {
  instance.topLevelType = null;
  instance.nativeEvent = null;
  instance.targetInst = null;
  instance.ancestors.length = 0;

  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
    callbackBookkeepingPool.push(instance);
  }
}

function handleTopLevel(bookKeeping) {
  var targetInst = bookKeeping.targetInst; // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.

  var ancestor = targetInst;

  do {
    if (!ancestor) {
      var ancestors = bookKeeping.ancestors;
      ancestors.push(ancestor);
      break;
    }

    var root = findRootContainerNode(ancestor);

    if (!root) {
      break;
    }

    var tag = ancestor.tag;

    if (tag === HostComponent || tag === HostText) {
      bookKeeping.ancestors.push(ancestor);
    }

    ancestor = getClosestInstanceFromNode(root);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    var eventTarget = getEventTarget(bookKeeping.nativeEvent);
    var topLevelType = bookKeeping.topLevelType;
    var nativeEvent = bookKeeping.nativeEvent;
    runExtractedPluginEventsInBatch(topLevelType, targetInst, nativeEvent, eventTarget, bookKeeping.eventSystemFlags);
  }
} // TODO: can we stop exporting these?


var _enabled = true;
function setEnabled(enabled) {
  _enabled = !!enabled;
}
function isEnabled() {
  return _enabled;
}
function trapBubbledEvent(topLevelType, element) {
  trapEventForPluginEventSystem(element, topLevelType, false);
}
function trapCapturedEvent(topLevelType, element) {
  trapEventForPluginEventSystem(element, topLevelType, true);
}
function trapEventForResponderEventSystem(element, topLevelType, passive) {
  if (enableFlareAPI) {
    var rawEventName = getRawEventName(topLevelType);
    var eventFlags = RESPONDER_EVENT_SYSTEM; // If passive option is not supported, then the event will be
    // active and not passive, but we flag it as using not being
    // supported too. This way the responder event plugins know,
    // and can provide polyfills if needed.

    if (passive) {
      if (passiveBrowserEventsSupported) {
        eventFlags |= IS_PASSIVE;
      } else {
        eventFlags |= IS_ACTIVE;
        eventFlags |= PASSIVE_NOT_SUPPORTED;
        passive = false;
      }
    } else {
      eventFlags |= IS_ACTIVE;
    } // Check if interactive and wrap in discreteUpdates


    var listener = dispatchEvent.bind(null, topLevelType, eventFlags);

    if (passiveBrowserEventsSupported) {
      addEventCaptureListenerWithPassiveFlag(element, rawEventName, listener, passive);
    } else {
      addEventCaptureListener(element, rawEventName, listener);
    }
  }
}

function trapEventForPluginEventSystem(element, topLevelType, capture) {
  var listener;

  switch (getEventPriority(topLevelType)) {
    case DiscreteEvent:
      listener = dispatchDiscreteEvent.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
      break;

    case UserBlockingEvent:
      listener = dispatchUserBlockingUpdate.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
      break;

    case ContinuousEvent:
    default:
      listener = dispatchEvent.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
      break;
  }

  var rawEventName = getRawEventName(topLevelType);

  if (capture) {
    addEventCaptureListener(element, rawEventName, listener);
  } else {
    addEventBubbleListener(element, rawEventName, listener);
  }
}

function dispatchDiscreteEvent(topLevelType, eventSystemFlags, nativeEvent) {
  flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);
  discreteUpdates(dispatchEvent, topLevelType, eventSystemFlags, nativeEvent);
}

function dispatchUserBlockingUpdate(topLevelType, eventSystemFlags, nativeEvent) {
  runWithPriority$1(UserBlockingPriority$1, dispatchEvent.bind(null, topLevelType, eventSystemFlags, nativeEvent));
}

function dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst) {
  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst, eventSystemFlags);

  try {
    // Event queue being processed in the same cycle allows
    // `preventDefault`.
    batchedEventUpdates(handleTopLevel, bookKeeping);
  } finally {
    releaseTopLevelCallbackBookKeeping(bookKeeping);
  }
}

function dispatchEvent(topLevelType, eventSystemFlags, nativeEvent) {
  if (!_enabled) {
    return;
  }

  if (hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(topLevelType)) {
    // If we already have a queue of discrete events, and this is another discrete
    // event, then we can't dispatch it regardless of its target, since they
    // need to dispatch in order.
    queueDiscreteEvent(null, // Flags that we're not actually blocked on anything as far as we know.
    topLevelType, eventSystemFlags, nativeEvent);
    return;
  }

  var blockedOn = attemptToDispatchEvent(topLevelType, eventSystemFlags, nativeEvent);

  if (blockedOn === null) {
    // We successfully dispatched this event.
    clearIfContinuousEvent(topLevelType, nativeEvent);
    return;
  }

  if (isReplayableDiscreteEvent(topLevelType)) {
    // This this to be replayed later once the target is available.
    queueDiscreteEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent);
    return;
  }

  if (queueIfContinuousEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent)) {
    return;
  } // We need to clear only if we didn't queue because
  // queueing is accummulative.


  clearIfContinuousEvent(topLevelType, nativeEvent); // This is not replayable so we'll invoke it but without a target,
  // in case the event system needs to trace it.

  if (enableFlareAPI) {
    if (eventSystemFlags & PLUGIN_EVENT_SYSTEM) {
      dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, null);
    }

    if (eventSystemFlags & RESPONDER_EVENT_SYSTEM) {
      // React Flare event system
      dispatchEventForResponderEventSystem(topLevelType, null, nativeEvent, getEventTarget(nativeEvent), eventSystemFlags);
    }
  } else {
    dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, null);
  }
} // Attempt dispatching an event. Returns a SuspenseInstance or Container if it's blocked.

function attemptToDispatchEvent(topLevelType, eventSystemFlags, nativeEvent) {
  // TODO: Warn if _enabled is false.
  var nativeEventTarget = getEventTarget(nativeEvent);
  var targetInst = getClosestInstanceFromNode(nativeEventTarget);

  if (targetInst !== null) {
    var nearestMounted = getNearestMountedFiber(targetInst);

    if (nearestMounted === null) {
      // This tree has been unmounted already. Dispatch without a target.
      targetInst = null;
    } else {
      var tag = nearestMounted.tag;

      if (tag === SuspenseComponent) {
        var instance = getSuspenseInstanceFromFiber(nearestMounted);

        if (instance !== null) {
          // Queue the event to be replayed later. Abort dispatching since we
          // don't want this event dispatched twice through the event system.
          // TODO: If this is the first discrete event in the queue. Schedule an increased
          // priority for this boundary.
          return instance;
        } // This shouldn't happen, something went wrong but to avoid blocking
        // the whole system, dispatch the event without a target.
        // TODO: Warn.


        targetInst = null;
      } else if (tag === HostRoot) {
        var root = nearestMounted.stateNode;

        if (root.hydrate) {
          // If this happens during a replay something went wrong and it might block
          // the whole system.
          return getContainerFromFiber(nearestMounted);
        }

        targetInst = null;
      } else if (nearestMounted !== targetInst) {
        // If we get an event (ex: img onload) before committing that
        // component's mount, ignore it for now (that is, treat it as if it was an
        // event on a non-React tree). We might also consider queueing events and
        // dispatching them after the mount.
        targetInst = null;
      }
    }
  }

  if (enableFlareAPI) {
    if (eventSystemFlags & PLUGIN_EVENT_SYSTEM) {
      dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst);
    }

    if (eventSystemFlags & RESPONDER_EVENT_SYSTEM) {
      // React Flare event system
      dispatchEventForResponderEventSystem(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
    }
  } else {
    dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst);
  } // We're not blocked on anything.


  return null;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */

function isEventSupported(eventNameSuffix) {
  if (!canUseDOM) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  return isSupported;
}

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactDOMEventListener, which is injected and can therefore support
 *    pluggable event sources. This is the only work that occurs in the main
 *    thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
var elementListeningSets = new PossiblyWeakMap();
function getListeningSetForElement(element) {
  var listeningSet = elementListeningSets.get(element);

  if (listeningSet === undefined) {
    listeningSet = new Set();
    elementListeningSets.set(element, listeningSet);
  }

  return listeningSet;
}
/**
 * We listen for bubbled touch events on the document object.
 *
 * Firefox v8.01 (and possibly others) exhibited strange behavior when
 * mounting `onmousemove` events at some node that was not the document
 * element. The symptoms were that if your mouse is not moving over something
 * contained within that mount point (for example on the background) the
 * top-level listeners for `onmousemove` won't be called. However, if you
 * register the `mousemove` on the document object, then it will of course
 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
 * top-level listeners to the document object only, at least for these
 * movement types of events and possibly all events.
 *
 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
 *
 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
 * they bubble to document.
 *
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @param {object} mountAt Container where to mount the listener
 */

function listenTo(registrationName, mountAt) {
  var listeningSet = getListeningSetForElement(mountAt);
  var dependencies = registrationNameDependencies[registrationName];

  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    listenToTopLevel(dependency, mountAt, listeningSet);
  }
}
function listenToTopLevel(topLevelType, mountAt, listeningSet) {
  if (!listeningSet.has(topLevelType)) {
    switch (topLevelType) {
      case TOP_SCROLL:
        trapCapturedEvent(TOP_SCROLL, mountAt);
        break;

      case TOP_FOCUS:
      case TOP_BLUR:
        trapCapturedEvent(TOP_FOCUS, mountAt);
        trapCapturedEvent(TOP_BLUR, mountAt); // We set the flag for a single dependency later in this function,
        // but this ensures we mark both as attached rather than just one.

        listeningSet.add(TOP_BLUR);
        listeningSet.add(TOP_FOCUS);
        break;

      case TOP_CANCEL:
      case TOP_CLOSE:
        if (isEventSupported(getRawEventName(topLevelType))) {
          trapCapturedEvent(topLevelType, mountAt);
        }

        break;

      case TOP_INVALID:
      case TOP_SUBMIT:
      case TOP_RESET:
        // We listen to them on the target DOM elements.
        // Some of them bubble so we don't want them to fire twice.
        break;

      default:
        // By default, listen on the top level to all non-media events.
        // Media events don't bubble so adding the listener wouldn't do anything.
        var isMediaEvent = mediaEventTypes.indexOf(topLevelType) !== -1;

        if (!isMediaEvent) {
          trapBubbledEvent(topLevelType, mountAt);
        }

        break;
    }

    listeningSet.add(topLevelType);
  }
}
function isListeningToAllDependencies(registrationName, mountAt) {
  var listeningSet = getListeningSetForElement(mountAt);
  var dependencies = registrationNameDependencies[registrationName];

  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];

    if (!listeningSet.has(dependency)) {
      return false;
    }
  }

  return true;
}

// List derived from Gecko source code:
// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
var shorthandToLonghand = {
  animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
  background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
  border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
  borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
  borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
  borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
  borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
  borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
  columns: ['columnCount', 'columnWidth'],
  flex: ['flexBasis', 'flexGrow', 'flexShrink'],
  flexFlow: ['flexDirection', 'flexWrap'],
  font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
  fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
  gap: ['columnGap', 'rowGap'],
  grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
  gridColumn: ['gridColumnEnd', 'gridColumnStart'],
  gridColumnGap: ['columnGap'],
  gridGap: ['columnGap', 'rowGap'],
  gridRow: ['gridRowEnd', 'gridRowStart'],
  gridRowGap: ['rowGap'],
  gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
  marker: ['markerEnd', 'markerMid', 'markerStart'],
  mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
  maskPosition: ['maskPositionX', 'maskPositionY'],
  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
  overflow: ['overflowX', 'overflowY'],
  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
  placeContent: ['alignContent', 'justifyContent'],
  placeItems: ['alignItems', 'justifyItems'],
  placeSelf: ['alignSelf', 'justifySelf'],
  textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
  transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
  wordWrap: ['overflowWrap']
};

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */

function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}
/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */


var prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.

Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */

function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901
  var isEmpty = value == null || typeof value === 'boolean' || value === '';

  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  return ('' + value).trim();
}

var uppercasePattern = /([A-Z])/g;
var msPattern = /^ms-/;
/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */

function hyphenateStyleName(name) {
  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
}

var warnValidStyle = function () {};

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
  var msPattern$1 = /^-ms-/;
  var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon

  var badStyleValueWithSemicolonPattern = /;\s*$/;
  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var camelize = function (string) {
    return string.replace(hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  };

  var warnHyphenatedStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning$1(false, 'Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests
    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
    // is converted to lowercase `ms`.
    camelize(name.replace(msPattern$1, 'ms-')));
  };

  var warnBadVendoredStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning$1(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
  };

  var warnStyleValueWithSemicolon = function (name, value) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    warning$1(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
  };

  var warnStyleValueIsNaN = function (name, value) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    warning$1(false, '`NaN` is an invalid value for the `%s` css style property.', name);
  };

  var warnStyleValueIsInfinity = function (name, value) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;
    warning$1(false, '`Infinity` is an invalid value for the `%s` css style property.', name);
  };

  warnValidStyle = function (name, value) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

/**
 * Operations for dealing with CSS properties.
 */

/**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */

function createDangerousStringForStyles(styles) {
  {
    var serialized = '';
    var delimiter = '';

    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }

      var styleValue = styles[styleName];

      if (styleValue != null) {
        var isCustomProperty = styleName.indexOf('--') === 0;
        serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
        delimiter = ';';
      }
    }

    return serialized || null;
  }
}
/**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */

function setValueForStyles(node, styles) {
  var style = node.style;

  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }

    var isCustomProperty = styleName.indexOf('--') === 0;

    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styles[styleName]);
      }
    }

    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);

    if (styleName === 'float') {
      styleName = 'cssFloat';
    }

    if (isCustomProperty) {
      style.setProperty(styleName, styleValue);
    } else {
      style[styleName] = styleValue;
    }
  }
}

function isValueEmpty(value) {
  return value == null || typeof value === 'boolean' || value === '';
}
/**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */


function expandShorthandMap(styles) {
  var expanded = {};

  for (var key in styles) {
    var longhands = shorthandToLonghand[key] || [key];

    for (var i = 0; i < longhands.length; i++) {
      expanded[longhands[i]] = key;
    }
  }

  return expanded;
}
/**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */


function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
  if (!warnAboutShorthandPropertyCollision) {
    return;
  }

  if (!nextStyles) {
    return;
  }

  var expandedUpdates = expandShorthandMap(styleUpdates);
  var expandedStyles = expandShorthandMap(nextStyles);
  var warnedAbout = {};

  for (var key in expandedUpdates) {
    var originalKey = expandedUpdates[key];
    var correctOriginalKey = expandedStyles[key];

    if (correctOriginalKey && originalKey !== correctOriginalKey) {
      var warningKey = originalKey + ',' + correctOriginalKey;

      if (warnedAbout[warningKey]) {
        continue;
      }

      warnedAbout[warningKey] = true;
      warning$1(false, '%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.
var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.

};

// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

// or add stack by default to invariants where possible.

var HTML$1 = '__html';
var ReactDebugCurrentFrame$3 = null;

{
  ReactDebugCurrentFrame$3 = ReactSharedInternals.ReactDebugCurrentFrame;
}

function assertValidProps(tag, props) {
  if (!props) {
    return;
  } // Note the use of `==` which checks for null or undefined.


  if (voidElementTags[tag]) {
    if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {
      {
        throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`." + (ReactDebugCurrentFrame$3.getStackAddendum()));
      }
    }
  }

  if (props.dangerouslySetInnerHTML != null) {
    if (!(props.children == null)) {
      {
        throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
      }
    }

    if (!(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML)) {
      {
        throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.");
      }
    }
  }

  {
    !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning$1(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
  }

  if (!(props.style == null || typeof props.style === 'object')) {
    {
      throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX." + (ReactDebugCurrentFrame$3.getStackAddendum()));
    }
  }
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }

  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this whitelist too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;

    default:
      return true;
  }
}

// When adding attributes to the HTML or SVG whitelist, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  class: 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  default: 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  disablepictureinpicture: 'disablePictureInPicture',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  for: 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nomodule: 'noModule',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',
  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  in: 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  typeof: 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

var ariaProperties = {
  'aria-current': 0,
  // state
  'aria-details': 0,
  'aria-disabled': 0,
  // state
  'aria-hidden': 0,
  // state
  'aria-invalid': 0,
  // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

function validateProperty(tagName, name) {
  if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
    return true;
  }

  if (rARIACamel.test(name)) {
    var ariaName = 'aria-' + name.slice(4).toLowerCase();
    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.

    if (correctName == null) {
      warning$1(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
      warnedProperties[name] = true;
      return true;
    } // aria-* attributes should be lowercase; suggest the lowercase version.


    if (name !== correctName) {
      warning$1(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
      warnedProperties[name] = true;
      return true;
    }
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.

    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    } // aria-* attributes should be lowercase; suggest the lowercase version.


    if (name !== standardName) {
      warning$1(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  var invalidProps = [];

  for (var key in props) {
    var isValid = validateProperty(type, key);

    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    warning$1(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
  } else if (invalidProps.length > 1) {
    warning$1(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;
function validateProperties$1(type, props) {
  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
    return;
  }

  if (props != null && props.value === null && !didWarnValueNull) {
    didWarnValueNull = true;

    if (type === 'select' && props.multiple) {
      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
    } else {
      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
    }
  }
}

var validateProperty$1 = function () {};

{
  var warnedProperties$1 = {};
  var _hasOwnProperty = Object.prototype.hasOwnProperty;
  var EVENT_NAME_REGEX = /^on./;
  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    var lowerCasedName = name.toLowerCase();

    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      warning$1(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
      warnedProperties$1[name] = true;
      return true;
    } // We can't rely on the event system being injected on the server.


    if (canUseEventSystem) {
      if (registrationNameModules.hasOwnProperty(name)) {
        return true;
      }

      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;

      if (registrationName != null) {
        warning$1(false, 'Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
        warnedProperties$1[name] = true;
        return true;
      }

      if (EVENT_NAME_REGEX.test(name)) {
        warning$1(false, 'Unknown event handler property `%s`. It will be ignored.', name);
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we are in a server environment.
      // So we can't tell if the event name is correct for sure, but we can filter
      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
      if (INVALID_EVENT_NAME_REGEX.test(name)) {
        warning$1(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Let the ARIA attribute hook validate ARIA attributes


    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      warning$1(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      warning$1(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      warning$1(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      warning$1(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);
      warnedProperties$1[name] = true;
      return true;
    }

    var propertyInfo = getPropertyInfo(name);
    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.

    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];

      if (standardName !== name) {
        warning$1(false, 'Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      warning$1(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      if (value) {
        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
      } else {
        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Now that we've validated casing, do not validate
    // data types for reserved props


    if (isReserved) {
      return true;
    } // Warn when a known attribute is a bad type


    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      warnedProperties$1[name] = true;
      return false;
    } // Warn when passing the strings 'false' or 'true' into a boolean prop


    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
      warning$1(false, 'Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
      warnedProperties$1[name] = true;
      return true;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props, canUseEventSystem) {
  var unknownProps = [];

  for (var key in props) {
    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);

    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (unknownProps.length === 1) {
    warning$1(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
  } else if (unknownProps.length > 1) {
    warning$1(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
  }
};

function validateProperties$2(type, props, canUseEventSystem) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnUnknownProperties(type, props, canUseEventSystem);
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var didWarnInvalidHydration = false;
var didWarnShadyDOM = false;
var didWarnScriptTags = false;
var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
var AUTOFOCUS = 'autoFocus';
var CHILDREN = 'children';
var STYLE$1 = 'style';
var HTML = '__html';
var LISTENERS = 'listeners';
var HTML_NAMESPACE = Namespaces.html;
var warnedUnknownTags;
var suppressHydrationWarning;
var validatePropertiesInDevelopment;
var warnForTextDifference;
var warnForPropDifference;
var warnForExtraAttributes;
var warnForInvalidEventListener;
var canDiffStyleForHydrationWarning;
var normalizeMarkupForTextOrAttribute;
var normalizeHTML;

{
  warnedUnknownTags = {
    // Chrome is the only major browser not shipping <time>. But as of July
    // 2017 it intends to ship it due to widespread usage. We intentionally
    // *don't* warn for <time> even if it's unrecognized by Chrome because
    // it soon will be, and many apps have been using it anyway.
    time: true,
    // There are working polyfills for <dialog>. Let people use it.
    dialog: true,
    // Electron ships a custom <webview> tag to display external web content in
    // an isolated frame and process.
    // This tag is not present in non Electron environments such as JSDom which
    // is often used for testing purposes.
    // @see https://electronjs.org/docs/api/webview-tag
    webview: true
  };

  validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props,
    /* canUseEventSystem */
    true);
  }; // IE 11 parses & normalizes the style attribute as opposed to other
  // browsers. It adds spaces and sorts the properties in some
  // non-alphabetical order. Handling that would require sorting CSS
  // properties in the client & server versions or applying
  // `expectedStyle` to a temporary DOM node to read its `style` attribute
  // normalized. Since it only affects IE, we're skipping style warnings
  // in that browser completely in favor of doing all that work.
  // See https://github.com/facebook/react/issues/11807


  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode; // HTML parsing normalizes CR and CRLF to LF.
  // It also can turn \u0000 into \uFFFD inside attributes.
  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
  // If we have a mismatch, it might be caused by that.
  // We will still patch up in this case but not fire the warning.

  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

  normalizeMarkupForTextOrAttribute = function (markup) {
    var markupString = typeof markup === 'string' ? markup : '' + markup;
    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
  };

  warnForTextDifference = function (serverText, clientText) {
    if (didWarnInvalidHydration) {
      return;
    }

    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);

    if (normalizedServerText === normalizedClientText) {
      return;
    }

    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
  };

  warnForPropDifference = function (propName, serverValue, clientValue) {
    if (didWarnInvalidHydration) {
      return;
    }

    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);

    if (normalizedServerValue === normalizedClientValue) {
      return;
    }

    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
  };

  warnForExtraAttributes = function (attributeNames) {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    var names = [];
    attributeNames.forEach(function (name) {
      names.push(name);
    });
    warningWithoutStack$1(false, 'Extra attributes from the server: %s', names);
  };

  warnForInvalidEventListener = function (registrationName, listener) {
    if (listener === false) {
      warning$1(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
    } else {
      warning$1(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
    }
  }; // Parse the HTML and read it back to normalize the HTML string so that it
  // can be used for comparison.


  normalizeHTML = function (parent, html) {
    // We could have created a separate document here to avoid
    // re-initializing custom elements if they exist. But this breaks
    // how <noscript> is being handled. So we use the same document.
    // See the discussion in https://github.com/facebook/react/pull/11157.
    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
    testElement.innerHTML = html;
    return testElement.innerHTML;
  };
}

function ensureListeningTo(rootContainerElement, registrationName) {
  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
  listenTo(registrationName, doc);
}

function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
}

function noop() {}

function trapClickOnNonInteractiveElement(node) {
  // Mobile Safari does not fire properly bubble click events on
  // non-interactive elements, which means delegated click listeners do not
  // fire. The workaround for this bug involves attaching an empty click
  // listener on the target node.
  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
  // Just set it using the onclick property so that we don't have to manage any
  // bookkeeping for it. Not sure if we need to clear it when the listener is
  // removed.
  // TODO: Only do this for the relevant Safaris maybe?
  node.onclick = noop;
}

function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
  for (var propKey in nextProps) {
    if (!nextProps.hasOwnProperty(propKey)) {
      continue;
    }

    var nextProp = nextProps[propKey];

    if (propKey === STYLE$1) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      } // Relies on `updateStylesByID` not mutating `styleUpdates`.


      setValueForStyles(domElement, nextProp);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;

      if (nextHtml != null) {
        setInnerHTML(domElement, nextHtml);
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string') {
        // Avoid setting initial textContent when the text is empty. In IE11 setting
        // textContent on a <textarea> will cause the placeholder to not
        // show within the <textarea> until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        var canSetTextContent = tag !== 'textarea' || nextProp !== '';

        if (canSetTextContent) {
          setTextContent(domElement, nextProp);
        }
      } else if (typeof nextProp === 'number') {
        setTextContent(domElement, '' + nextProp);
      }
    } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
    } else if (propKey === AUTOFOCUS) {// We polyfill it separately on the client during commit.
      // We could have excluded it in the property list instead of
      // adding a special case here, but then it wouldn't be emitted
      // on server rendering (but we *do* want to emit it in SSR).
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (nextProp != null) {
      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
    }
  }
}

function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
  // TODO: Handle wasCustomComponentTag
  for (var i = 0; i < updatePayload.length; i += 2) {
    var propKey = updatePayload[i];
    var propValue = updatePayload[i + 1];

    if (propKey === STYLE$1) {
      setValueForStyles(domElement, propValue);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      setInnerHTML(domElement, propValue);
    } else if (propKey === CHILDREN) {
      setTextContent(domElement, propValue);
    } else {
      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
    }
  }
}

function createElement(type, props, rootContainerElement, parentNamespace) {
  var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
  // tags get no namespace.

  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
  var domElement;
  var namespaceURI = parentNamespace;

  if (namespaceURI === HTML_NAMESPACE) {
    namespaceURI = getIntrinsicNamespace(type);
  }

  if (namespaceURI === HTML_NAMESPACE) {
    {
      isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
      // allow <SVG> or <mATH>.

      !(isCustomComponentTag || type === type.toLowerCase()) ? warning$1(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
    }

    if (type === 'script') {
      // Create the script via .innerHTML so its "parser-inserted" flag is
      // set to true and it does not execute
      var div = ownerDocument.createElement('div');

      {
        if (enableTrustedTypesIntegration && !didWarnScriptTags) {
          warning$1(false, 'Encountered a script tag while rendering React component. ' + 'Scripts inside React components are never executed when rendering ' + 'on the client. Consider using template tag instead ' + '(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template).');
          didWarnScriptTags = true;
        }
      }

      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
      // This is guaranteed to yield a script element.

      var firstChild = div.firstChild;
      domElement = div.removeChild(firstChild);
    } else if (typeof props.is === 'string') {
      // $FlowIssue `createElement` should be updated for Web Components
      domElement = ownerDocument.createElement(type, {
        is: props.is
      });
    } else {
      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
      // See discussion in https://github.com/facebook/react/pull/6896
      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
      domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
      // attributes on `select`s needs to be added before `option`s are inserted.
      // This prevents:
      // - a bug where the `select` does not scroll to the correct option because singular
      //  `select` elements automatically pick the first item #13222
      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
      // See https://github.com/facebook/react/issues/13222
      // and https://github.com/facebook/react/issues/14239

      if (type === 'select') {
        var node = domElement;

        if (props.multiple) {
          node.multiple = true;
        } else if (props.size) {
          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
          // it is possible that no option is selected.
          //
          // This is only necessary when a select in "single selection mode".
          node.size = props.size;
        }
      }
    }
  } else {
    domElement = ownerDocument.createElementNS(namespaceURI, type);
  }

  {
    if (namespaceURI === HTML_NAMESPACE) {
      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
        warnedUnknownTags[type] = true;
        warning$1(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
      }
    }
  }

  return domElement;
}
function createTextNode(text, rootContainerElement) {
  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
}
function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
  var isCustomComponentTag = isCustomComponent(tag, rawProps);

  {
    validatePropertiesInDevelopment(tag, rawProps);

    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
      didWarnShadyDOM = true;
    }
  } // TODO: Make sure that we check isMounted before firing any of these events.


  var props;

  switch (tag) {
    case 'iframe':
    case 'object':
    case 'embed':
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;

    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }

      props = rawProps;
      break;

    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      props = rawProps;
      break;

    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;

    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      props = rawProps;
      break;

    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      props = rawProps;
      break;

    case 'input':
      initWrapperState(domElement, rawProps);
      props = getHostProps(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.

      ensureListeningTo(rootContainerElement, 'onChange');
      break;

    case 'option':
      validateProps(domElement, rawProps);
      props = getHostProps$1(domElement, rawProps);
      break;

    case 'select':
      initWrapperState$1(domElement, rawProps);
      props = getHostProps$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.

      ensureListeningTo(rootContainerElement, 'onChange');
      break;

    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      props = getHostProps$3(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.

      ensureListeningTo(rootContainerElement, 'onChange');
      break;

    default:
      props = rawProps;
  }

  assertValidProps(tag, props);
  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, false);
      break;

    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;

    case 'option':
      postMountWrapper$1(domElement, rawProps);
      break;

    case 'select':
      postMountWrapper$2(domElement, rawProps);
      break;

    default:
      if (typeof props.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }
} // Calculate the diff between the two objects.

function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
  {
    validatePropertiesInDevelopment(tag, nextRawProps);
  }

  var updatePayload = null;
  var lastProps;
  var nextProps;

  switch (tag) {
    case 'input':
      lastProps = getHostProps(domElement, lastRawProps);
      nextProps = getHostProps(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'option':
      lastProps = getHostProps$1(domElement, lastRawProps);
      nextProps = getHostProps$1(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'select':
      lastProps = getHostProps$2(domElement, lastRawProps);
      nextProps = getHostProps$2(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'textarea':
      lastProps = getHostProps$3(domElement, lastRawProps);
      nextProps = getHostProps$3(domElement, nextRawProps);
      updatePayload = [];
      break;

    default:
      lastProps = lastRawProps;
      nextProps = nextRawProps;

      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }

  assertValidProps(tag, nextProps);
  var propKey;
  var styleName;
  var styleUpdates = null;

  for (propKey in lastProps) {
    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
      continue;
    }

    if (propKey === STYLE$1) {
      var lastStyle = lastProps[propKey];

      for (styleName in lastStyle) {
        if (lastStyle.hasOwnProperty(styleName)) {
          if (!styleUpdates) {
            styleUpdates = {};
          }

          styleUpdates[styleName] = '';
        }
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {// Noop. This is handled by the clear text mechanism.
    } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
    } else if (propKey === AUTOFOCUS) {// Noop. It doesn't work on updates anyway.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      // This is a special case. If any listener updates we need to ensure
      // that the "current" fiber pointer gets updated so we need a commit
      // to update this element.
      if (!updatePayload) {
        updatePayload = [];
      }
    } else {
      // For all other deleted properties we add it to the queue. We use
      // the whitelist in the commit phase instead.
      (updatePayload = updatePayload || []).push(propKey, null);
    }
  }

  for (propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps != null ? lastProps[propKey] : undefined;

    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
      continue;
    }

    if (propKey === STYLE$1) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }

      if (lastProp) {
        // Unset styles on `lastProp` but not on `nextProp`.
        for (styleName in lastProp) {
          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
            if (!styleUpdates) {
              styleUpdates = {};
            }

            styleUpdates[styleName] = '';
          }
        } // Update styles that changed since `lastProp`.


        for (styleName in nextProp) {
          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            if (!styleUpdates) {
              styleUpdates = {};
            }

            styleUpdates[styleName] = nextProp[styleName];
          }
        }
      } else {
        // Relies on `updateStylesByID` not mutating `styleUpdates`.
        if (!styleUpdates) {
          if (!updatePayload) {
            updatePayload = [];
          }

          updatePayload.push(propKey, styleUpdates);
        }

        styleUpdates = nextProp;
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      var lastHtml = lastProp ? lastProp[HTML] : undefined;

      if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          (updatePayload = updatePayload || []).push(propKey, toStringOrTrustedType(nextHtml));
        }
      } else {// TODO: It might be too late to clear this if we have children
        // inserted already.
      }
    } else if (propKey === CHILDREN) {
      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
      }
    } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        // We eagerly listen to this even though we haven't committed yet.
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        ensureListeningTo(rootContainerElement, propKey);
      }

      if (!updatePayload && lastProp !== nextProp) {
        // This is a special case. If any listener updates we need to ensure
        // that the "current" props pointer gets updated so we need a commit
        // to update this element.
        updatePayload = [];
      }
    } else {
      // For any other property we always add it to the queue and then we
      // filter it out using the whitelist during the commit.
      (updatePayload = updatePayload || []).push(propKey, nextProp);
    }
  }

  if (styleUpdates) {
    {
      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE$1]);
    }

    (updatePayload = updatePayload || []).push(STYLE$1, styleUpdates);
  }

  return updatePayload;
} // Apply the diff.

function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
  // Update checked *before* name.
  // In the middle of an update, it is possible to have multiple checked.
  // When a checked radio tries to change name, browser makes another radio's checked false.
  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
    updateChecked(domElement, nextRawProps);
  }

  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
  var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.

  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
  // changed.

  switch (tag) {
    case 'input':
      // Update the wrapper around inputs *after* updating props. This has to
      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
      // raise warnings and prevent the new value from being assigned.
      updateWrapper(domElement, nextRawProps);
      break;

    case 'textarea':
      updateWrapper$1(domElement, nextRawProps);
      break;

    case 'select':
      // <select> value update needs to occur after <option> children
      // reconciliation
      postUpdateWrapper(domElement, nextRawProps);
      break;
  }
}

function getPossibleStandardName(propName) {
  {
    var lowerCasedName = propName.toLowerCase();

    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      return null;
    }

    return possibleStandardNames[lowerCasedName] || null;
  }

  return null;
}

function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
  var isCustomComponentTag;
  var extraAttributeNames;

  {
    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
    isCustomComponentTag = isCustomComponent(tag, rawProps);
    validatePropertiesInDevelopment(tag, rawProps);

    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
      didWarnShadyDOM = true;
    }
  } // TODO: Make sure that we check isMounted before firing any of these events.


  switch (tag) {
    case 'iframe':
    case 'object':
    case 'embed':
      trapBubbledEvent(TOP_LOAD, domElement);
      break;

    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }

      break;

    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      break;

    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      break;

    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      break;

    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      break;

    case 'input':
      initWrapperState(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.

      ensureListeningTo(rootContainerElement, 'onChange');
      break;

    case 'option':
      validateProps(domElement, rawProps);
      break;

    case 'select':
      initWrapperState$1(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.

      ensureListeningTo(rootContainerElement, 'onChange');
      break;

    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.

      ensureListeningTo(rootContainerElement, 'onChange');
      break;
  }

  assertValidProps(tag, rawProps);

  {
    extraAttributeNames = new Set();
    var attributes = domElement.attributes;

    for (var _i = 0; _i < attributes.length; _i++) {
      var name = attributes[_i].name.toLowerCase();

      switch (name) {
        // Built-in SSR attribute is whitelisted
        case 'data-reactroot':
          break;
        // Controlled attributes are not validated
        // TODO: Only ignore them on controlled tags.

        case 'value':
          break;

        case 'checked':
          break;

        case 'selected':
          break;

        default:
          // Intentionally use the original name.
          // See discussion in https://github.com/facebook/react/pull/10676.
          extraAttributeNames.add(attributes[_i].name);
      }
    }
  }

  var updatePayload = null;

  for (var propKey in rawProps) {
    if (!rawProps.hasOwnProperty(propKey)) {
      continue;
    }

    var nextProp = rawProps[propKey];

    if (propKey === CHILDREN) {
      // For text content children we compare against textContent. This
      // might match additional HTML that is hidden when we read it using
      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
      // satisfies our requirement. Our requirement is not to produce perfect
      // HTML and attributes. Ideally we should preserve structure but it's
      // ok not to if the visible content is still enough to indicate what
      // even listeners these nodes might be wired up to.
      // TODO: Warn if there is more than a single textNode as a child.
      // TODO: Should we use domElement.firstChild.nodeValue to compare?
      if (typeof nextProp === 'string') {
        if (domElement.textContent !== nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }

          updatePayload = [CHILDREN, nextProp];
        }
      } else if (typeof nextProp === 'number') {
        if (domElement.textContent !== '' + nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }

          updatePayload = [CHILDREN, '' + nextProp];
        }
      }
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (true && // Convince Flow we've calculated it (it's DEV-only in this method.)
    typeof isCustomComponentTag === 'boolean') {
      // Validate that the properties correspond to their expected values.
      var serverValue = void 0;
      var propertyInfo = getPropertyInfo(propKey);

      if (suppressHydrationWarning) {// Don't bother comparing. We're ignoring all these warnings.
      } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 || // Controlled attributes are not validated
      // TODO: Only ignore them on controlled tags.
      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {// Noop
      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
        var serverHTML = domElement.innerHTML;
        var nextHtml = nextProp ? nextProp[HTML] : undefined;
        var expectedHTML = normalizeHTML(domElement, nextHtml != null ? nextHtml : '');

        if (expectedHTML !== serverHTML) {
          warnForPropDifference(propKey, serverHTML, expectedHTML);
        }
      } else if (propKey === STYLE$1) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey);

        if (canDiffStyleForHydrationWarning) {
          var expectedStyle = createDangerousStringForStyles(nextProp);
          serverValue = domElement.getAttribute('style');

          if (expectedStyle !== serverValue) {
            warnForPropDifference(propKey, serverValue, expectedStyle);
          }
        }
      } else if (isCustomComponentTag) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey.toLowerCase());
        serverValue = getValueForAttribute(domElement, propKey, nextProp);

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
        var isMismatchDueToBadCasing = false;

        if (propertyInfo !== null) {
          // $FlowFixMe - Should be inferred as not undefined.
          extraAttributeNames.delete(propertyInfo.attributeName);
          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
        } else {
          var ownNamespace = parentNamespace;

          if (ownNamespace === HTML_NAMESPACE) {
            ownNamespace = getIntrinsicNamespace(tag);
          }

          if (ownNamespace === HTML_NAMESPACE) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
          } else {
            var standardName = getPossibleStandardName(propKey);

            if (standardName !== null && standardName !== propKey) {
              // If an SVG prop is supplied with bad casing, it will
              // be successfully parsed from HTML, but will produce a mismatch
              // (and would be incorrectly rendered on the client).
              // However, we already warn about bad casing elsewhere.
              // So we'll skip the misleading extra mismatch warning in this case.
              isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.

              extraAttributeNames.delete(standardName);
            } // $FlowFixMe - Should be inferred as not undefined.


            extraAttributeNames.delete(propKey);
          }

          serverValue = getValueForAttribute(domElement, propKey, nextProp);
        }

        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      }
    }
  }

  {
    // $FlowFixMe - Should be inferred as not undefined.
    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
      // $FlowFixMe - Should be inferred as not undefined.
      warnForExtraAttributes(extraAttributeNames);
    }
  }

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, true);
      break;

    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;

    case 'select':
    case 'option':
      // For input and textarea we current always set the value property at
      // post mount to force it to diverge from attributes. However, for
      // option and select we don't quite do the same thing and select
      // is not resilient to the DOM state changing so we don't do that here.
      // TODO: Consider not doing this for input and textarea.
      break;

    default:
      if (typeof rawProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }

  return updatePayload;
}
function diffHydratedText(textNode, text) {
  var isDifferent = textNode.nodeValue !== text;
  return isDifferent;
}
function warnForUnmatchedText(textNode, text) {
  {
    warnForTextDifference(textNode.nodeValue, text);
  }
}
function warnForDeletedHydratableElement(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
  }
}
function warnForDeletedHydratableText(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
  }
}
function warnForInsertedHydratedElement(parentNode, tag, props) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
  }
}
function warnForInsertedHydratedText(parentNode, text) {
  {
    if (text === '') {
      // We expect to insert empty text nodes since they're not represented in
      // the HTML.
      // TODO: Remove this special case if we can just avoid inserting empty
      // text nodes.
      return;
    }

    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
  }
}
function restoreControlledState$$1(domElement, tag, props) {
  switch (tag) {
    case 'input':
      restoreControlledState$1(domElement, props);
      return;

    case 'textarea':
      restoreControlledState$3(domElement, props);
      return;

    case 'select':
      restoreControlledState$2(domElement, props);
      return;
  }
}
function listenToEventResponderEventTypes(eventTypes, element) {
  if (enableFlareAPI) {
    // Get the listening Set for this element. We use this to track
    // what events we're listening to.
    var listeningSet = getListeningSetForElement(element); // Go through each target event type of the event responder

    for (var i = 0, length = eventTypes.length; i < length; ++i) {
      var eventType = eventTypes[i];
      var isPassive = !endsWith(eventType, '_active');
      var eventKey = isPassive ? eventType + '_passive' : eventType;
      var targetEventType = isPassive ? eventType : eventType.substring(0, eventType.length - 7);

      if (!listeningSet.has(eventKey)) {
        trapEventForResponderEventSystem(element, targetEventType, isPassive);
        listeningSet.add(eventKey);
      }
    }
  }
} // We can remove this once the event API is stable and out of a flag

if (enableFlareAPI) {
  setListenToResponderEventTypes(listenToEventResponderEventTypes);
}

function getActiveElement(doc) {
  doc = doc || (typeof document !== 'undefined' ? document : undefined);

  if (typeof doc === 'undefined') {
    return null;
  }

  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }

  return node;
}
/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */


function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }

    node = node.parentNode;
  }
}
/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */


function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === TEXT_NODE) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

/**
 * @param {DOMElement} outerNode
 * @return {?object}
 */

function getOffsets(outerNode) {
  var ownerDocument = outerNode.ownerDocument;
  var win = ownerDocument && ownerDocument.defaultView || window;
  var selection = win.getSelection && win.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode,
      anchorOffset = selection.anchorOffset,
      focusNode = selection.focusNode,
      focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
  // expose properties, triggering a "Permission denied error" if any of its
  // properties are accessed. The only seemingly possible way to avoid erroring
  // is to access a property that typically works for non-anonymous divs and
  // catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

  try {
    /* eslint-disable no-unused-expressions */
    anchorNode.nodeType;
    focusNode.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
}
/**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */

function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
  var length = 0;
  var start = -1;
  var end = -1;
  var indexWithinAnchor = 0;
  var indexWithinFocus = 0;
  var node = outerNode;
  var parentNode = null;

  outer: while (true) {
    var next = null;

    while (true) {
      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
        start = length + anchorOffset;
      }

      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
        end = length + focusOffset;
      }

      if (node.nodeType === TEXT_NODE) {
        length += node.nodeValue.length;
      }

      if ((next = node.firstChild) === null) {
        break;
      } // Moving from `node` to its first child `next`.


      parentNode = node;
      node = next;
    }

    while (true) {
      if (node === outerNode) {
        // If `outerNode` has children, this is always the second time visiting
        // it. If it has no children, this is still the first loop, and the only
        // valid selection is anchorNode and focusNode both equal to this node
        // and both offsets 0, in which case we will have handled above.
        break outer;
      }

      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
        start = length;
      }

      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
        end = length;
      }

      if ((next = node.nextSibling) !== null) {
        break;
      }

      node = parentNode;
      parentNode = node.parentNode;
    } // Moving from `node` to its next sibling `next`.


    node = next;
  }

  if (start === -1 || end === -1) {
    // This should never happen. (Would happen if the anchor/focus nodes aren't
    // actually inside the passed-in node.)
    return null;
  }

  return {
    start: start,
    end: end
  };
}
/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */

function setOffsets(node, offsets) {
  var doc = node.ownerDocument || document;
  var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
  // fails when pasting 100+ items)

  if (!win.getSelection) {
    return;
  }

  var selection = win.getSelection();
  var length = node.textContent.length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.

  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
      return;
    }

    var range = doc.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

function isTextNode(node) {
  return node && node.nodeType === TEXT_NODE;
}

function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

function isInDocument(node) {
  return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
}

function isSameOriginFrame(iframe) {
  try {
    // Accessing the contentDocument of a HTMLIframeElement can cause the browser
    // to throw, e.g. if it has a cross-origin src attribute.
    // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
    // iframe.contentDocument.defaultView;
    // A safety way is to access one of the cross origin properties: Window or Location
    // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
    return typeof iframe.contentWindow.location.href === 'string';
  } catch (err) {
    return false;
  }
}

function getActiveElementDeep() {
  var win = window;
  var element = getActiveElement();

  while (element instanceof win.HTMLIFrameElement) {
    if (isSameOriginFrame(element)) {
      win = element.contentWindow;
    } else {
      return element;
    }

    element = getActiveElement(win.document);
  }

  return element;
}
/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */

/**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */


function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
}
function getSelectionInformation() {
  var focusedElem = getActiveElementDeep();
  return {
    focusedElem: focusedElem,
    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
  };
}
/**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */

function restoreSelection(priorSelectionInformation) {
  var curFocusedElem = getActiveElementDeep();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;

  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
      setSelection(priorFocusedElem, priorSelectionRange);
    } // Focusing a node can change the scroll position, which is undesirable


    var ancestors = [];
    var ancestor = priorFocusedElem;

    while (ancestor = ancestor.parentNode) {
      if (ancestor.nodeType === ELEMENT_NODE) {
        ancestors.push({
          element: ancestor,
          left: ancestor.scrollLeft,
          top: ancestor.scrollTop
        });
      }
    }

    if (typeof priorFocusedElem.focus === 'function') {
      priorFocusedElem.focus();
    }

    for (var i = 0; i < ancestors.length; i++) {
      var info = ancestors[i];
      info.element.scrollLeft = info.left;
      info.element.scrollTop = info.top;
    }
  }
}
/**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */

function getSelection(input) {
  var selection;

  if ('selectionStart' in input) {
    // Modern browser with input or textarea.
    selection = {
      start: input.selectionStart,
      end: input.selectionEnd
    };
  } else {
    // Content editable or old IE textarea.
    selection = getOffsets(input);
  }

  return selection || {
    start: 0,
    end: 0
  };
}
/**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */

function setSelection(input, offsets) {
  var start = offsets.start,
      end = offsets.end;

  if (end === undefined) {
    end = start;
  }

  if ('selectionStart' in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length);
  } else {
    setOffsets(input, offsets);
  }
}

var validateDOMNesting = function () {};

var updatedAncestorInfo = function () {};

{
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.
  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope

  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope

  var buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags

  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
  var emptyAncestorInfo = {
    current: null,
    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,
    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  updatedAncestorInfo = function (oldInfo, tag) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);

    var info = {
      tag: tag
    };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }

    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    } // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }

    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }

    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }

    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }

    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }

    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }

    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };
  /**
   * Returns whether
   */


  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';

      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but

      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr

      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody

      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup

      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable

      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead

      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element

      case 'html':
        return tag === 'head' || tag === 'body' || tag === 'frameset';

      case 'frameset':
        return tag === 'frame';

      case '#document':
        return tag === 'html';
    } // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frameset':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };
  /**
   * Returns whether
   */


  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  var didWarn$1 = {};

  validateDOMNesting = function (childTag, childText, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      !(childTag == null) ? warningWithoutStack$1(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var invalidParentOrAncestor = invalidParent || invalidAncestor;

    if (!invalidParentOrAncestor) {
      return;
    }

    var ancestorTag = invalidParentOrAncestor.tag;
    var addendum = getCurrentFiberStackInDev();
    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;

    if (didWarn$1[warnKey]) {
      return;
    }

    didWarn$1[warnKey] = true;
    var tagDisplayName = childTag;
    var whitespaceInfo = '';

    if (childTag === '#text') {
      if (/\S/.test(childText)) {
        tagDisplayName = 'Text nodes';
      } else {
        tagDisplayName = 'Whitespace text nodes';
        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
      }
    } else {
      tagDisplayName = '<' + childTag + '>';
    }

    if (invalidParent) {
      var info = '';

      if (ancestorTag === 'table' && childTag === 'tr') {
        info += ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' + 'the browser.';
      }

      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
    } else {
      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
    }
  };
}

// can re-export everything from this module.

function shim() {
  {
    {
      throw Error("The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.");
    }
  }
} // Persistence (when unsupported)


var supportsPersistence = false;
var cloneInstance = shim;
var cloneFundamentalInstance = shim;
var createContainerChildSet = shim;
var appendChildToContainerChildSet = shim;
var finalizeContainerChildren = shim;
var replaceContainerChildren = shim;
var cloneHiddenInstance = shim;
var cloneHiddenTextInstance = shim;

var SUPPRESS_HYDRATION_WARNING;

{
  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
}

var SUSPENSE_START_DATA = '$';
var SUSPENSE_END_DATA = '/$';
var SUSPENSE_PENDING_START_DATA = '$?';
var SUSPENSE_FALLBACK_START_DATA = '$!';
var STYLE = 'style';
var eventsEnabled = null;
var selectionInformation = null;

function shouldAutoFocusHostComponent(type, props) {
  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      return !!props.autoFocus;
  }

  return false;
}

function getRootHostContext(rootContainerInstance) {
  var type;
  var namespace;
  var nodeType = rootContainerInstance.nodeType;

  switch (nodeType) {
    case DOCUMENT_NODE:
    case DOCUMENT_FRAGMENT_NODE:
      {
        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
        var root = rootContainerInstance.documentElement;
        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
        break;
      }

    default:
      {
        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
        var ownNamespace = container.namespaceURI || null;
        type = container.tagName;
        namespace = getChildNamespace(ownNamespace, type);
        break;
      }
  }

  {
    var validatedTag = type.toLowerCase();
    var ancestorInfo = updatedAncestorInfo(null, validatedTag);
    return {
      namespace: namespace,
      ancestorInfo: ancestorInfo
    };
  }

  return namespace;
}
function getChildHostContext(parentHostContext, type, rootContainerInstance) {
  {
    var parentHostContextDev = parentHostContext;
    var namespace = getChildNamespace(parentHostContextDev.namespace, type);
    var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
    return {
      namespace: namespace,
      ancestorInfo: ancestorInfo
    };
  }

  var parentNamespace = parentHostContext;
  return getChildNamespace(parentNamespace, type);
}
function getPublicInstance(instance) {
  return instance;
}
function prepareForCommit(containerInfo) {
  eventsEnabled = isEnabled();
  selectionInformation = getSelectionInformation();
  setEnabled(false);
}
function resetAfterCommit(containerInfo) {
  restoreSelection(selectionInformation);
  selectionInformation = null;
  setEnabled(eventsEnabled);
  eventsEnabled = null;
}
function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  var parentNamespace;

  {
    // TODO: take namespace into account when validating.
    var hostContextDev = hostContext;
    validateDOMNesting(type, null, hostContextDev.ancestorInfo);

    if (typeof props.children === 'string' || typeof props.children === 'number') {
      var string = '' + props.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }

    parentNamespace = hostContextDev.namespace;
  }

  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
  precacheFiberNode(internalInstanceHandle, domElement);
  updateFiberProps(domElement, props);
  return domElement;
}
function appendInitialChild(parentInstance, child) {
  parentInstance.appendChild(child);
}
function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
  setInitialProperties(domElement, type, props, rootContainerInstance);
  return shouldAutoFocusHostComponent(type, props);
}
function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
  {
    var hostContextDev = hostContext;

    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
      var string = '' + newProps.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }
  }

  return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
}
function shouldSetTextContent(type, props) {
  return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
}
function shouldDeprioritizeSubtree(type, props) {
  return !!props.hidden;
}
function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
  {
    var hostContextDev = hostContext;
    validateDOMNesting(null, text, hostContextDev.ancestorInfo);
  }

  var textNode = createTextNode(text, rootContainerInstance);
  precacheFiberNode(internalInstanceHandle, textNode);
  return textNode;
}
var isPrimaryRenderer = true;
var warnsIfNotActing = true; // This initialization code may run even on server environments
// if a component just imports ReactDOM (e.g. for findDOMNode).
// Some environments might not have setTimeout or clearTimeout.

var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
var noTimeout = -1; // -------------------
//     Mutation
// -------------------

var supportsMutation = true;
function commitMount(domElement, type, newProps, internalInstanceHandle) {
  // Despite the naming that might imply otherwise, this method only
  // fires if there is an `Update` effect scheduled during mounting.
  // This happens if `finalizeInitialChildren` returns `true` (which it
  // does to implement the `autoFocus` attribute on the client). But
  // there are also other cases when this might happen (such as patching
  // up text content during hydration mismatch). So we'll check this again.
  if (shouldAutoFocusHostComponent(type, newProps)) {
    domElement.focus();
  }
}
function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
  // Update the props handle so that we know which props are the ones with
  // with current event handlers.
  updateFiberProps(domElement, newProps); // Apply the diff to the DOM node.

  updateProperties(domElement, updatePayload, type, oldProps, newProps);
}
function resetTextContent(domElement) {
  setTextContent(domElement, '');
}
function commitTextUpdate(textInstance, oldText, newText) {
  textInstance.nodeValue = newText;
}
function appendChild(parentInstance, child) {
  parentInstance.appendChild(child);
}
function appendChildToContainer(container, child) {
  var parentNode;

  if (container.nodeType === COMMENT_NODE) {
    parentNode = container.parentNode;
    parentNode.insertBefore(child, container);
  } else {
    parentNode = container;
    parentNode.appendChild(child);
  } // This container might be used for a portal.
  // If something inside a portal is clicked, that click should bubble
  // through the React tree. However, on Mobile Safari the click would
  // never bubble through the *DOM* tree unless an ancestor with onclick
  // event exists. So we wouldn't see it and dispatch it.
  // This is why we ensure that non React root containers have inline onclick
  // defined.
  // https://github.com/facebook/react/issues/11918


  var reactRootContainer = container._reactRootContainer;

  if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
    // TODO: This cast may not be sound for SVG, MathML or custom elements.
    trapClickOnNonInteractiveElement(parentNode);
  }
}
function insertBefore(parentInstance, child, beforeChild) {
  parentInstance.insertBefore(child, beforeChild);
}
function insertInContainerBefore(container, child, beforeChild) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, beforeChild);
  } else {
    container.insertBefore(child, beforeChild);
  }
} // This is a specific event for the React Flare
// event system, so event responders can act
// accordingly to a DOM node being unmounted that
// previously had active document focus.

function dispatchDetachedVisibleNodeEvent(child) {
  if (enableFlareAPI && selectionInformation && child === selectionInformation.focusedElem) {
    var targetFiber = getClosestInstanceFromNode(child); // Simlulate a blur event to the React Flare responder system.

    dispatchEventForResponderEventSystem('detachedvisiblenode', targetFiber, {
      target: child,
      timeStamp: Date.now()
    }, child, RESPONDER_EVENT_SYSTEM | IS_PASSIVE);
  }
}

function removeChild(parentInstance, child) {
  dispatchDetachedVisibleNodeEvent(child);
  parentInstance.removeChild(child);
}
function removeChildFromContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.removeChild(child);
  } else {
    dispatchDetachedVisibleNodeEvent(child);
    container.removeChild(child);
  }
}
function clearSuspenseBoundary(parentInstance, suspenseInstance) {
  var node = suspenseInstance; // Delete all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  do {
    var nextNode = node.nextSibling;
    parentInstance.removeChild(node);

    if (nextNode && nextNode.nodeType === COMMENT_NODE) {
      var data = nextNode.data;

      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          parentInstance.removeChild(nextNode); // Retry if any event replaying was blocked on this.

          retryIfBlockedOn(suspenseInstance);
          return;
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) {
        depth++;
      }
    }

    node = nextNode;
  } while (node); // TODO: Warn, we didn't find the end comment boundary.
  // Retry if any event replaying was blocked on this.


  retryIfBlockedOn(suspenseInstance);
}
function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
  if (container.nodeType === COMMENT_NODE) {
    clearSuspenseBoundary(container.parentNode, suspenseInstance);
  } else if (container.nodeType === ELEMENT_NODE) {
    clearSuspenseBoundary(container, suspenseInstance);
  } else {} // Document nodes should never contain suspense boundaries.
  // Retry if any event replaying was blocked on this.


  retryIfBlockedOn(container);
}
function hideInstance(instance) {
  // TODO: Does this work for all element types? What about MathML? Should we
  // pass host context to this method?
  instance = instance;
  var style = instance.style;

  if (typeof style.setProperty === 'function') {
    style.setProperty('display', 'none', 'important');
  } else {
    style.display = 'none';
  }
}
function hideTextInstance(textInstance) {
  textInstance.nodeValue = '';
}
function unhideInstance(instance, props) {
  instance = instance;
  var styleProp = props[STYLE];
  var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
  instance.style.display = dangerousStyleValue('display', display);
}
function unhideTextInstance(textInstance, text) {
  textInstance.nodeValue = text;
} // -------------------
//     Hydration
// -------------------

var supportsHydration = true;
function canHydrateInstance(instance, type, props) {
  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
    return null;
  } // This has now been refined to an element node.


  return instance;
}
function canHydrateTextInstance(instance, text) {
  if (text === '' || instance.nodeType !== TEXT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  } // This has now been refined to a text node.


  return instance;
}
function canHydrateSuspenseInstance(instance) {
  if (instance.nodeType !== COMMENT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  } // This has now been refined to a suspense node.


  return instance;
}
function isSuspenseInstancePending(instance) {
  return instance.data === SUSPENSE_PENDING_START_DATA;
}
function isSuspenseInstanceFallback(instance) {
  return instance.data === SUSPENSE_FALLBACK_START_DATA;
}
function registerSuspenseInstanceRetry(instance, callback) {
  instance._reactRetry = callback;
}

function getNextHydratable(node) {
  // Skip non-hydratable nodes.
  for (; node != null; node = node.nextSibling) {
    var nodeType = node.nodeType;

    if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
      break;
    }

    if (enableSuspenseServerRenderer) {
      if (nodeType === COMMENT_NODE) {
        var nodeData = node.data;

        if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) {
          break;
        }
      }
    }
  }

  return node;
}

function getNextHydratableSibling(instance) {
  return getNextHydratable(instance.nextSibling);
}
function getFirstHydratableChild(parentInstance) {
  return getNextHydratable(parentInstance.firstChild);
}
function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
  // get attached.

  updateFiberProps(instance, props);
  var parentNamespace;

  {
    var hostContextDev = hostContext;
    parentNamespace = hostContextDev.namespace;
  }

  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
}
function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, textInstance);
  return diffHydratedText(textInstance, text);
}
function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, suspenseInstance);
}
function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
  var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;

      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          return getNextHydratableSibling(node);
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
        depth++;
      }
    }

    node = node.nextSibling;
  } // TODO: Warn, we didn't find the end comment boundary.


  return null;
} // Returns the SuspenseInstance if this node is a direct child of a
// SuspenseInstance. I.e. if its previous sibling is a Comment with
// SUSPENSE_x_START_DATA. Otherwise, null.

function getParentSuspenseInstance(targetInstance) {
  var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;

      if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
        if (depth === 0) {
          return node;
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_END_DATA) {
        depth++;
      }
    }

    node = node.previousSibling;
  }

  return null;
}
function commitHydratedContainer(container) {
  // Retry if any event replaying was blocked on this.
  retryIfBlockedOn(container);
}
function commitHydratedSuspenseInstance(suspenseInstance) {
  // Retry if any event replaying was blocked on this.
  retryIfBlockedOn(suspenseInstance);
}
function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
  {
    warnForUnmatchedText(textInstance, text);
  }
}
function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForUnmatchedText(textInstance, text);
  }
}
function didNotHydrateContainerInstance(parentContainer, instance) {
  {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentContainer, instance);
    } else if (instance.nodeType === COMMENT_NODE) {// TODO: warnForDeletedHydratableSuspenseBoundary
    } else {
      warnForDeletedHydratableText(parentContainer, instance);
    }
  }
}
function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentInstance, instance);
    } else if (instance.nodeType === COMMENT_NODE) {// TODO: warnForDeletedHydratableSuspenseBoundary
    } else {
      warnForDeletedHydratableText(parentInstance, instance);
    }
  }
}
function didNotFindHydratableContainerInstance(parentContainer, type, props) {
  {
    warnForInsertedHydratedElement(parentContainer, type, props);
  }
}
function didNotFindHydratableContainerTextInstance(parentContainer, text) {
  {
    warnForInsertedHydratedText(parentContainer, text);
  }
}

function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedElement(parentInstance, type, props);
  }
}
function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedText(parentInstance, text);
  }
}
function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {// TODO: warnForInsertedHydratedSuspense(parentInstance);
  }
}
function mountResponderInstance(responder, responderInstance, responderProps, responderState, instance) {
  // Listen to events
  var doc = instance.ownerDocument;
  var _ref = responder,
      rootEventTypes = _ref.rootEventTypes,
      targetEventTypes = _ref.targetEventTypes;

  if (targetEventTypes !== null) {
    listenToEventResponderEventTypes(targetEventTypes, doc);
  }

  if (rootEventTypes !== null) {
    addRootEventTypesForResponderInstance(responderInstance, rootEventTypes);
    listenToEventResponderEventTypes(rootEventTypes, doc);
  }

  mountEventResponder(responder, responderInstance, responderProps, responderState);
  return responderInstance;
}
function unmountResponderInstance(responderInstance) {
  if (enableFlareAPI) {
    // TODO stop listening to targetEventTypes
    unmountEventResponder(responderInstance);
  }
}
function getFundamentalComponentInstance(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var currentFiber = fundamentalInstance.currentFiber,
        impl = fundamentalInstance.impl,
        props = fundamentalInstance.props,
        state = fundamentalInstance.state;
    var instance = impl.getInstance(null, props, state);
    precacheFiberNode(currentFiber, instance);
    return instance;
  } // Because of the flag above, this gets around the Flow error;


  return null;
}
function mountFundamentalComponent(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var impl = fundamentalInstance.impl,
        instance = fundamentalInstance.instance,
        props = fundamentalInstance.props,
        state = fundamentalInstance.state;
    var onMount = impl.onMount;

    if (onMount !== undefined) {
      onMount(null, instance, props, state);
    }
  }
}
function shouldUpdateFundamentalComponent(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var impl = fundamentalInstance.impl,
        prevProps = fundamentalInstance.prevProps,
        props = fundamentalInstance.props,
        state = fundamentalInstance.state;
    var shouldUpdate = impl.shouldUpdate;

    if (shouldUpdate !== undefined) {
      return shouldUpdate(null, prevProps, props, state);
    }
  }

  return true;
}
function updateFundamentalComponent(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var impl = fundamentalInstance.impl,
        instance = fundamentalInstance.instance,
        prevProps = fundamentalInstance.prevProps,
        props = fundamentalInstance.props,
        state = fundamentalInstance.state;
    var onUpdate = impl.onUpdate;

    if (onUpdate !== undefined) {
      onUpdate(null, instance, prevProps, props, state);
    }
  }
}
function unmountFundamentalComponent(fundamentalInstance) {
  if (enableFundamentalAPI) {
    var impl = fundamentalInstance.impl,
        instance = fundamentalInstance.instance,
        props = fundamentalInstance.props,
        state = fundamentalInstance.state;
    var onUnmount = impl.onUnmount;

    if (onUnmount !== undefined) {
      onUnmount(null, instance, props, state);
    }
  }
}
function getInstanceFromNode$2(node) {
  return getClosestInstanceFromNode(node) || null;
}

var randomKey = Math.random().toString(36).slice(2);
var internalInstanceKey = '__reactInternalInstance$' + randomKey;
var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;
var internalContainerInstanceKey = '__reactContainere$' + randomKey;
function precacheFiberNode(hostInst, node) {
  node[internalInstanceKey] = hostInst;
}
function markContainerAsRoot(hostRoot, node) {
  node[internalContainerInstanceKey] = hostRoot;
}
function unmarkContainerAsRoot(node) {
  node[internalContainerInstanceKey] = null;
}
function isContainerMarkedAsRoot(node) {
  return !!node[internalContainerInstanceKey];
} // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
// If the target node is part of a hydrated or not yet rendered subtree, then
// this may also return a SuspenseComponent or HostRoot to indicate that.
// Conceptually the HostRoot fiber is a child of the Container node. So if you
// pass the Container node as the targetNode, you will not actually get the
// HostRoot back. To get to the HostRoot, you need to pass a child of it.
// The same thing applies to Suspense boundaries.

function getClosestInstanceFromNode(targetNode) {
  var targetInst = targetNode[internalInstanceKey];

  if (targetInst) {
    // Don't return HostRoot or SuspenseComponent here.
    return targetInst;
  } // If the direct event target isn't a React owned DOM node, we need to look
  // to see if one of its parents is a React owned DOM node.


  var parentNode = targetNode.parentNode;

  while (parentNode) {
    // We'll check if this is a container root that could include
    // React nodes in the future. We need to check this first because
    // if we're a child of a dehydrated container, we need to first
    // find that inner container before moving on to finding the parent
    // instance. Note that we don't check this field on  the targetNode
    // itself because the fibers are conceptually between the container
    // node and the first child. It isn't surrounding the container node.
    // If it's not a container, we check if it's an instance.
    targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];

    if (targetInst) {
      // Since this wasn't the direct target of the event, we might have
      // stepped past dehydrated DOM nodes to get here. However they could
      // also have been non-React nodes. We need to answer which one.
      // If we the instance doesn't have any children, then there can't be
      // a nested suspense boundary within it. So we can use this as a fast
      // bailout. Most of the time, when people add non-React children to
      // the tree, it is using a ref to a child-less DOM node.
      // Normally we'd only need to check one of the fibers because if it
      // has ever gone from having children to deleting them or vice versa
      // it would have deleted the dehydrated boundary nested inside already.
      // However, since the HostRoot starts out with an alternate it might
      // have one on the alternate so we need to check in case this was a
      // root.
      var alternate = targetInst.alternate;

      if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
        // Next we need to figure out if the node that skipped past is
        // nested within a dehydrated boundary and if so, which one.
        var suspenseInstance = getParentSuspenseInstance(targetNode);

        while (suspenseInstance !== null) {
          // We found a suspense instance. That means that we haven't
          // hydrated it yet. Even though we leave the comments in the
          // DOM after hydrating, and there are boundaries in the DOM
          // that could already be hydrated, we wouldn't have found them
          // through this pass since if the target is hydrated it would
          // have had an internalInstanceKey on it.
          // Let's get the fiber associated with the SuspenseComponent
          // as the deepest instance.
          var targetSuspenseInst = suspenseInstance[internalInstanceKey];

          if (targetSuspenseInst) {
            return targetSuspenseInst;
          } // If we don't find a Fiber on the comment, it might be because
          // we haven't gotten to hydrate it yet. There might still be a
          // parent boundary that hasn't above this one so we need to find
          // the outer most that is known.


          suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
          // host component also hasn't hydrated yet. We can return it
          // below since it will bail out on the isMounted check later.
        }
      }

      return targetInst;
    }

    targetNode = parentNode;
    parentNode = targetNode.parentNode;
  }

  return null;
}
/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */

function getInstanceFromNode$1(node) {
  var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];

  if (inst) {
    if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
      return inst;
    } else {
      return null;
    }
  }

  return null;
}
/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */

function getNodeFromInstance$1(inst) {
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber this, is just the state node right now. We assume it will be
    // a host component or host text.
    return inst.stateNode;
  } // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.


  {
    {
      throw Error("getNodeFromInstance: Invalid argument.");
    }
  }
}
function getFiberCurrentPropsFromNode$1(node) {
  return node[internalEventHandlersKey] || null;
}
function updateFiberProps(node, props) {
  node[internalEventHandlersKey] = props;
}

/**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */
var root = null;
var startText = null;
var fallbackText = null;
function initialize(nativeEventTarget) {
  root = nativeEventTarget;
  startText = getText();
  return true;
}
function reset() {
  root = null;
  startText = null;
  fallbackText = null;
}
function getData() {
  if (fallbackText) {
    return fallbackText;
  }

  var start;
  var startValue = startText;
  var startLength = startValue.length;
  var end;
  var endValue = getText();
  var endLength = endValue.length;

  for (start = 0; start < startLength; start++) {
    if (startValue[start] !== endValue[start]) {
      break;
    }
  }

  var minEnd = startLength - start;

  for (end = 1; end <= minEnd; end++) {
    if (startValue[startLength - end] !== endValue[endLength - end]) {
      break;
    }
  }

  var sliceTail = end > 1 ? 1 - end : undefined;
  fallbackText = endValue.slice(start, sliceTail);
  return fallbackText;
}
function getText() {
  if ('value' in root) {
    return root.value;
  }

  return root.textContent;
}

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */

var SyntheticCompositionEvent = SyntheticEvent.extend({
  data: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */

var SyntheticInputEvent = SyntheticEvent.extend({
  data: null
});

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space

var START_KEYCODE = 229;
var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
var documentMode = null;

if (canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
} // Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.


var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.

var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE); // Events and their corresponding property names.

var eventTypes$1 = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  }
}; // Track whether we've ever handled a keypress on the space key.

var hasSpaceKeypress = false;
/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */

function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}
/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */


function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case TOP_COMPOSITION_START:
      return eventTypes$1.compositionStart;

    case TOP_COMPOSITION_END:
      return eventTypes$1.compositionEnd;

    case TOP_COMPOSITION_UPDATE:
      return eventTypes$1.compositionUpdate;
  }
}
/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */


function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
}
/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */


function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_KEY_UP:
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;

    case TOP_KEY_DOWN:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;

    case TOP_KEY_PRESS:
    case TOP_MOUSE_DOWN:
    case TOP_BLUR:
      // Events are not possible without cancelling IME.
      return true;

    default:
      return false;
  }
}
/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */


function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;

  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }

  return null;
}
/**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */


function isUsingKoreanIME(nativeEvent) {
  return nativeEvent.locale === 'ko';
} // Track the current IME composition status, if any.


var isComposing = false;
/**
 * @return {?object} A SyntheticCompositionEvent.
 */

function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!isComposing) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes$1.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes$1.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!isComposing && eventType === eventTypes$1.compositionStart) {
      isComposing = initialize(nativeEventTarget);
    } else if (eventType === eventTypes$1.compositionEnd) {
      if (isComposing) {
        fallbackData = getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);

    if (customData !== null) {
      event.data = customData;
    }
  }

  accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * @param {TopLevelType} topLevelType Number from `TopLevelType`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */


function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_COMPOSITION_END:
      return getDataFromCustomEvent(nativeEvent);

    case TOP_KEY_PRESS:
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;

      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case TOP_TEXT_INPUT:
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to ignore it.

      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}
/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */


function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (isComposing) {
    if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = getData();
      reset();
      isComposing = false;
      return chars;
    }

    return null;
  }

  switch (topLevelType) {
    case TOP_PASTE:
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;

    case TOP_KEY_PRESS:
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (!isKeypressCommand(nativeEvent)) {
        // IE fires the `keypress` event when a user types an emoji via
        // Touch keyboard of Windows.  In such a case, the `char` property
        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
        // is 2, the property `which` does not represent an emoji correctly.
        // In such a case, we directly return the `char` property instead of
        // using `which`.
        if (nativeEvent.char && nativeEvent.char.length > 1) {
          return nativeEvent.char;
        } else if (nativeEvent.which) {
          return String.fromCharCode(nativeEvent.which);
        }
      }

      return null;

    case TOP_COMPOSITION_END:
      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;

    default:
      return null;
  }
}
/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */


function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  } // If no characters are being inserted, no BeforeInput event should
  // be fired.


  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes$1.beforeInput, targetInst, nativeEvent, nativeEventTarget);
  event.data = chars;
  accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */


var BeforeInputEventPlugin = {
  eventTypes: eventTypes$1,
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
    var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

    if (composition === null) {
      return beforeInput;
    }

    if (beforeInput === null) {
      return composition;
    }

    return [composition, beforeInput];
  }
};

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

var eventTypes$2 = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent.getPooled(eventTypes$2.change, inst, nativeEvent, target);
  event.type = 'change'; // Flag this event loop as needing state restore.

  enqueueStateRestore(target);
  accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */


var activeElement = null;
var activeElementInst = null;
/**
 * SECTION: handle `change` event
 */

function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.

  batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  runEventsInBatch(event);
}

function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance$1(targetInst);

  if (updateValueIfChanged(targetNode)) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CHANGE) {
    return targetInst;
  }
}
/**
 * SECTION: handle `input` event
 */


var isInputEventSupported = false;

if (canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}
/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */


function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}
/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */


function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  activeElement.detachEvent('onpropertychange', handlePropertyChange);
  activeElement = null;
  activeElementInst = null;
}
/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */


function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }

  if (getInstIfValueChanged(activeElementInst)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === TOP_FOCUS) {
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === TOP_BLUR) {
    stopWatchingForValueChange();
  }
} // For IE8 and IE9.


function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
  if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst);
  }
}
/**
 * SECTION: handle `click` event
 */


function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CLICK) {
    return getInstIfValueChanged(targetInst);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
    return getInstIfValueChanged(targetInst);
  }
}

function handleControlledInputBlur(node) {
  var state = node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  if (!disableInputAttributeSyncing) {
    // If controlled, assign the value attribute to the current value on blur
    setDefaultValue(node, 'number', node.value);
  }
}
/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */


var ChangeEventPlugin = {
  eventTypes: eventTypes$2,
  _isInputEventSupported: isInputEventSupported,
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;
    var getTargetInstFunc, handleEventFunc;

    if (shouldUseChangeEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForChangeEvent;
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);

      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    } // When blurring, set the value attribute for number inputs


    if (topLevelType === TOP_BLUR) {
      handleControlledInputBlur(targetNode);
    }
  }
};

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

var eventTypes$3 = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  pointerEnter: {
    registrationName: 'onPointerEnter',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  },
  pointerLeave: {
    registrationName: 'onPointerLeave',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  }
}; // We track the lastNativeEvent to ensure that when we encounter
// cases where we process the same nativeEvent multiple times,
// which can happen when have multiple ancestors, that we don't
// duplicate enter

var lastNativeEvent;
var EnterLeaveEventPlugin = {
  eventTypes: eventTypes$3,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
    var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
    var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;

    if (isOverEvent && (eventSystemFlags & IS_REPLAYED) === 0 && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      // If this is an over event with a target, then we've already dispatched
      // the event in the out event of the other target. If this is replayed,
      // then it's because we couldn't dispatch against this target previously
      // so we have to do it now instead.
      return null;
    }

    if (!isOutEvent && !isOverEvent) {
      // Must not be a mouse or pointer in or out - ignoring.
      return null;
    }

    var win;

    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;

      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;

    if (isOutEvent) {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? getClosestInstanceFromNode(related) : null;

      if (to !== null) {
        var nearestMounted = getNearestMountedFiber(to);

        if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
          to = null;
        }
      }
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var eventInterface, leaveEventType, enterEventType, eventTypePrefix;

    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
      eventInterface = SyntheticMouseEvent;
      leaveEventType = eventTypes$3.mouseLeave;
      enterEventType = eventTypes$3.mouseEnter;
      eventTypePrefix = 'mouse';
    } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
      eventInterface = SyntheticPointerEvent;
      leaveEventType = eventTypes$3.pointerLeave;
      enterEventType = eventTypes$3.pointerEnter;
      eventTypePrefix = 'pointer';
    }

    var fromNode = from == null ? win : getNodeFromInstance$1(from);
    var toNode = to == null ? win : getNodeFromInstance$1(to);
    var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
    leave.type = eventTypePrefix + 'leave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;
    var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
    enter.type = eventTypePrefix + 'enter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;
    accumulateEnterLeaveDispatches(leave, enter, from, to);

    if (nativeEvent === lastNativeEvent) {
      lastNativeEvent = null;
      return [leave];
    }

    lastNativeEvent = nativeEvent;
    return [leave, enter];
  }
};

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
  ;
}

var is$1 = typeof Object.is === 'function' ? Object.is : is;

var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */

function shallowEqual(objA, objB) {
  if (is$1(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  } // Test for A's keys different from B.


  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty$2.call(objB, keysA[i]) || !is$1(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;
var eventTypes$4 = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_DRAG_END, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
  }
};
var activeElement$1 = null;
var activeElementInst$1 = null;
var lastSelection = null;
var mouseDown = false;
/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */

function getSelection$1(node) {
  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else {
    var win = node.ownerDocument && node.ownerDocument.defaultView || window;
    var selection = win.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}
/**
 * Get document associated with the event target.
 *
 * @param {object} nativeEventTarget
 * @return {Document}
 */


function getEventTargetDocument(eventTarget) {
  return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
}
/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */


function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  var doc = getEventTargetDocument(nativeEventTarget);

  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
    return null;
  } // Only fire when selection has actually changed.


  var currentSelection = getSelection$1(activeElement$1);

  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;
    var syntheticEvent = SyntheticEvent.getPooled(eventTypes$4.select, activeElementInst$1, nativeEvent, nativeEventTarget);
    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement$1;
    accumulateTwoPhaseDispatches(syntheticEvent);
    return syntheticEvent;
  }

  return null;
}
/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */


var SelectEventPlugin = {
  eventTypes: eventTypes$4,
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
    var doc = getEventTargetDocument(nativeEventTarget); // Track whether all listeners exists for this plugin. If none exist, we do
    // not extract events. See #3639.

    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
      return null;
    }

    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case TOP_FOCUS:
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement$1 = targetNode;
          activeElementInst$1 = targetInst;
          lastSelection = null;
        }

        break;

      case TOP_BLUR:
        activeElement$1 = null;
        activeElementInst$1 = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.

      case TOP_MOUSE_DOWN:
        mouseDown = true;
        break;

      case TOP_CONTEXT_MENU:
      case TOP_MOUSE_UP:
      case TOP_DRAG_END:
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.

      case TOP_SELECTION_CHANGE:
        if (skipSelectionChangeEvent) {
          break;
        }

      // falls through

      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  }
};

/**
 * Inject modules for resolving DOM hierarchy and plugin ordering.
 */

injection.injectEventPluginOrder(DOMEventPluginOrder);
setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromNode$1, getNodeFromInstance$1);
/**
 * Some important event plugins included by default (without having to require
 * them).
 */

injection.injectEventPluginsByName({
  SimpleEventPlugin: SimpleEventPlugin,
  EnterLeaveEventPlugin: EnterLeaveEventPlugin,
  ChangeEventPlugin: ChangeEventPlugin,
  SelectEventPlugin: SelectEventPlugin,
  BeforeInputEventPlugin: BeforeInputEventPlugin
});

// Prefix measurements so that it's possible to filter them.
// Longer prefixes are hard to read in DevTools.
var reactEmoji = "\u269B";
var warningEmoji = "\u26D4";
var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function'; // Keep track of current fiber so that we know the path to unwind on pause.
// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?

var currentFiber = null; // If we're in the middle of user code, which fiber and method is it?
// Reusing `currentFiber` would be confusing for this because user code fiber
// can change during commit phase too, but we don't need to unwind it (since
// lifecycles in the commit phase don't resemble a tree).

var currentPhase = null;
var currentPhaseFiber = null; // Did lifecycle hook schedule an update? This is often a performance problem,
// so we will keep track of it, and include it in the report.
// Track commits caused by cascading updates.

var isCommitting = false;
var hasScheduledUpdateInCurrentCommit = false;
var hasScheduledUpdateInCurrentPhase = false;
var commitCountInCurrentWorkLoop = 0;
var effectCountInCurrentCommit = 0;
// to avoid stretch the commit phase with measurement overhead.

var labelsInCurrentCommit = new Set();

var formatMarkName = function (markName) {
  return reactEmoji + " " + markName;
};

var formatLabel = function (label, warning) {
  var prefix = warning ? warningEmoji + " " : reactEmoji + " ";
  var suffix = warning ? " Warning: " + warning : '';
  return "" + prefix + label + suffix;
};

var beginMark = function (markName) {
  performance.mark(formatMarkName(markName));
};

var clearMark = function (markName) {
  performance.clearMarks(formatMarkName(markName));
};

var endMark = function (label, markName, warning) {
  var formattedMarkName = formatMarkName(markName);
  var formattedLabel = formatLabel(label, warning);

  try {
    performance.measure(formattedLabel, formattedMarkName);
  } catch (err) {} // If previous mark was missing for some reason, this will throw.
  // This could only happen if React crashed in an unexpected place earlier.
  // Don't pile on with more errors.
  // Clear marks immediately to avoid growing buffer.


  performance.clearMarks(formattedMarkName);
  performance.clearMeasures(formattedLabel);
};

var getFiberMarkName = function (label, debugID) {
  return label + " (#" + debugID + ")";
};

var getFiberLabel = function (componentName, isMounted, phase) {
  if (phase === null) {
    // These are composite component total time measurements.
    return componentName + " [" + (isMounted ? 'update' : 'mount') + "]";
  } else {
    // Composite component methods.
    return componentName + "." + phase;
  }
};

var beginFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber.type) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);

  if (isCommitting && labelsInCurrentCommit.has(label)) {
    // During the commit phase, we don't show duplicate labels because
    // there is a fixed overhead for every measurement, and we don't
    // want to stretch the commit phase beyond necessary.
    return false;
  }

  labelsInCurrentCommit.add(label);
  var markName = getFiberMarkName(label, debugID);
  beginMark(markName);
  return true;
};

var clearFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber.type) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  clearMark(markName);
};

var endFiberMark = function (fiber, phase, warning) {
  var componentName = getComponentName(fiber.type) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  endMark(label, markName, warning);
};

var shouldIgnoreFiber = function (fiber) {
  // Host components should be skipped in the timeline.
  // We could check typeof fiber.type, but does this work with RN?
  switch (fiber.tag) {
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
    case Fragment:
    case ContextProvider:
    case ContextConsumer:
    case Mode:
      return true;

    default:
      return false;
  }
};

var clearPendingPhaseMeasurement = function () {
  if (currentPhase !== null && currentPhaseFiber !== null) {
    clearFiberMark(currentPhaseFiber, currentPhase);
  }

  currentPhaseFiber = null;
  currentPhase = null;
  hasScheduledUpdateInCurrentPhase = false;
};

var pauseTimers = function () {
  // Stops all currently active measurements so that they can be resumed
  // if we continue in a later deferred loop from the same unit of work.
  var fiber = currentFiber;

  while (fiber) {
    if (fiber._debugIsCurrentlyTiming) {
      endFiberMark(fiber, null, null);
    }

    fiber = fiber.return;
  }
};

var resumeTimersRecursively = function (fiber) {
  if (fiber.return !== null) {
    resumeTimersRecursively(fiber.return);
  }

  if (fiber._debugIsCurrentlyTiming) {
    beginFiberMark(fiber, null);
  }
};

var resumeTimers = function () {
  // Resumes all measurements that were active during the last deferred loop.
  if (currentFiber !== null) {
    resumeTimersRecursively(currentFiber);
  }
};

function recordEffect() {
  if (enableUserTimingAPI) {
    effectCountInCurrentCommit++;
  }
}
function recordScheduleUpdate() {
  if (enableUserTimingAPI) {
    if (isCommitting) {
      hasScheduledUpdateInCurrentCommit = true;
    }

    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
      hasScheduledUpdateInCurrentPhase = true;
    }
  }
}


function startWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    } // If we pause, this is the fiber to unwind from.


    currentFiber = fiber;

    if (!beginFiberMark(fiber, null)) {
      return;
    }

    fiber._debugIsCurrentlyTiming = true;
  }
}
function cancelWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    } // Remember we shouldn't complete measurement for this fiber.
    // Otherwise flamechart will be deep even for small updates.


    fiber._debugIsCurrentlyTiming = false;
    clearFiberMark(fiber, null);
  }
}
function stopWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    } // If we pause, its parent is the fiber to unwind from.


    currentFiber = fiber.return;

    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }

    fiber._debugIsCurrentlyTiming = false;
    endFiberMark(fiber, null, null);
  }
}
function stopFailedWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    } // If we pause, its parent is the fiber to unwind from.


    currentFiber = fiber.return;

    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }

    fiber._debugIsCurrentlyTiming = false;
    var warning = fiber.tag === SuspenseComponent ? 'Rendering was suspended' : 'An error was thrown inside this error boundary';
    endFiberMark(fiber, null, warning);
  }
}
function startPhaseTimer(fiber, phase) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    clearPendingPhaseMeasurement();

    if (!beginFiberMark(fiber, phase)) {
      return;
    }

    currentPhaseFiber = fiber;
    currentPhase = phase;
  }
}
function stopPhaseTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    if (currentPhase !== null && currentPhaseFiber !== null) {
      var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
      endFiberMark(currentPhaseFiber, currentPhase, warning);
    }

    currentPhase = null;
    currentPhaseFiber = null;
  }
}
function startWorkLoopTimer(nextUnitOfWork) {
  if (enableUserTimingAPI) {
    currentFiber = nextUnitOfWork;

    if (!supportsUserTiming) {
      return;
    }

    commitCountInCurrentWorkLoop = 0; // This is top level call.
    // Any other measurements are performed within.

    beginMark('(React Tree Reconciliation)'); // Resume any measurements that were in progress during the last loop.

    resumeTimers();
  }
}
function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var warning = null;

    if (interruptedBy !== null) {
      if (interruptedBy.tag === HostRoot) {
        warning = 'A top-level update interrupted the previous render';
      } else {
        var componentName = getComponentName(interruptedBy.type) || 'Unknown';
        warning = "An update to " + componentName + " interrupted the previous render";
      }
    } else if (commitCountInCurrentWorkLoop > 1) {
      warning = 'There were cascading updates';
    }

    commitCountInCurrentWorkLoop = 0;
    var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)'; // Pause any measurements until the next loop.

    pauseTimers();
    endMark(label, '(React Tree Reconciliation)', warning);
  }
}
function startCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    isCommitting = true;
    hasScheduledUpdateInCurrentCommit = false;
    labelsInCurrentCommit.clear();
    beginMark('(Committing Changes)');
  }
}
function stopCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var warning = null;

    if (hasScheduledUpdateInCurrentCommit) {
      warning = 'Lifecycle hook scheduled a cascading update';
    } else if (commitCountInCurrentWorkLoop > 0) {
      warning = 'Caused by a cascading update in earlier commit';
    }

    hasScheduledUpdateInCurrentCommit = false;
    commitCountInCurrentWorkLoop++;
    isCommitting = false;
    labelsInCurrentCommit.clear();
    endMark('(Committing Changes)', '(Committing Changes)', warning);
  }
}
function startCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    effectCountInCurrentCommit = 0;
    beginMark('(Committing Snapshot Effects)');
  }
}
function stopCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark("(Committing Snapshot Effects: " + count + " Total)", '(Committing Snapshot Effects)', null);
  }
}
function startCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    effectCountInCurrentCommit = 0;
    beginMark('(Committing Host Effects)');
  }
}
function stopCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark("(Committing Host Effects: " + count + " Total)", '(Committing Host Effects)', null);
  }
}
function startCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    effectCountInCurrentCommit = 0;
    beginMark('(Calling Lifecycle Methods)');
  }
}
function stopCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark("(Calling Lifecycle Methods: " + count + " Total)", '(Calling Lifecycle Methods)', null);
  }
}

var valueStack = [];
var fiberStack;

{
  fiberStack = [];
}

var index = -1;

function createCursor(defaultValue) {
  return {
    current: defaultValue
  };
}

function pop(cursor, fiber) {
  if (index < 0) {
    {
      warningWithoutStack$1(false, 'Unexpected pop.');
    }

    return;
  }

  {
    if (fiber !== fiberStack[index]) {
      warningWithoutStack$1(false, 'Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];
  valueStack[index] = null;

  {
    fiberStack[index] = null;
  }

  index--;
}

function push(cursor, value, fiber) {
  index++;
  valueStack[index] = cursor.current;

  {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
}

var warnedAboutMissingGetChildContext;

{
  warnedAboutMissingGetChildContext = {};
}

var emptyContextObject = {};

{
  Object.freeze(emptyContextObject);
} // A cursor to the current merged context object on the stack.


var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.

var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
// We use this to get access to the parent context after we have already
// pushed the next context provider, and now need to merge their contexts.

var previousContext = emptyContextObject;

function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
  if (disableLegacyContext) {
    return emptyContextObject;
  } else {
    if (didPushOwnContextIfProvider && isContextProvider(Component)) {
      // If the fiber is a context provider itself, when we read its context
      // we may have already pushed its own child context on the stack. A context
      // provider should not "see" its own child context. Therefore we read the
      // previous (parent) context instead for a context provider.
      return previousContext;
    }

    return contextStackCursor.current;
  }
}

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  if (disableLegacyContext) {
    return;
  } else {
    var instance = workInProgress.stateNode;
    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
  }
}

function getMaskedContext(workInProgress, unmaskedContext) {
  if (disableLegacyContext) {
    return emptyContextObject;
  } else {
    var type = workInProgress.type;
    var contextTypes = type.contextTypes;

    if (!contextTypes) {
      return emptyContextObject;
    } // Avoid recreating masked context unless unmasked context has changed.
    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
    // This may trigger infinite loops if componentWillReceiveProps calls setState.


    var instance = workInProgress.stateNode;

    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
      return instance.__reactInternalMemoizedMaskedChildContext;
    }

    var context = {};

    for (var key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    {
      var name = getComponentName(type) || 'Unknown';
      checkPropTypes_1(contextTypes, context, 'context', name, getCurrentFiberStackInDev);
    } // Cache unmasked context so we can avoid recreating masked context unless necessary.
    // Context is created before the class component is instantiated so check for instance.


    if (instance) {
      cacheContext(workInProgress, unmaskedContext, context);
    }

    return context;
  }
}

function hasContextChanged() {
  if (disableLegacyContext) {
    return false;
  } else {
    return didPerformWorkStackCursor.current;
  }
}

function isContextProvider(type) {
  if (disableLegacyContext) {
    return false;
  } else {
    var childContextTypes = type.childContextTypes;
    return childContextTypes !== null && childContextTypes !== undefined;
  }
}

function popContext(fiber) {
  if (disableLegacyContext) {
    return;
  } else {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function popTopLevelContextObject(fiber) {
  if (disableLegacyContext) {
    return;
  } else {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function pushTopLevelContextObject(fiber, context, didChange) {
  if (disableLegacyContext) {
    return;
  } else {
    if (!(contextStackCursor.current === emptyContextObject)) {
      {
        throw Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
      }
    }

    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }
}

function processChildContext(fiber, type, parentContext) {
  if (disableLegacyContext) {
    return parentContext;
  } else {
    var instance = fiber.stateNode;
    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
    // It has only been added in Fiber to match the (unintentional) behavior in Stack.

    if (typeof instance.getChildContext !== 'function') {
      {
        var componentName = getComponentName(type) || 'Unknown';

        if (!warnedAboutMissingGetChildContext[componentName]) {
          warnedAboutMissingGetChildContext[componentName] = true;
          warningWithoutStack$1(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
        }
      }

      return parentContext;
    }

    var childContext;

    {
      setCurrentPhase('getChildContext');
    }

    startPhaseTimer(fiber, 'getChildContext');
    childContext = instance.getChildContext();
    stopPhaseTimer();

    {
      setCurrentPhase(null);
    }

    for (var contextKey in childContext) {
      if (!(contextKey in childContextTypes)) {
        {
          throw Error((getComponentName(type) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes.");
        }
      }
    }

    {
      var name = getComponentName(type) || 'Unknown';
      checkPropTypes_1(childContextTypes, childContext, 'child context', name, // In practice, there is one case in which we won't get a stack. It's when
      // somebody calls unstable_renderSubtreeIntoContainer() and we process
      // context from the parent component instance. The stack will be missing
      // because it's outside of the reconciliation, and so the pointer has not
      // been set. This is rare and doesn't matter. We'll also remove that API.
      getCurrentFiberStackInDev);
    }

    return _assign({}, parentContext, {}, childContext);
  }
}

function pushContextProvider(workInProgress) {
  if (disableLegacyContext) {
    return false;
  } else {
    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
    // If the instance does not exist yet, we will push null at first,
    // and replace it on the stack later when invalidating the context.

    var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.

    previousContext = contextStackCursor.current;
    push(contextStackCursor, memoizedMergedChildContext, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }
}

function invalidateContextProvider(workInProgress, type, didChange) {
  if (disableLegacyContext) {
    return;
  } else {
    var instance = workInProgress.stateNode;

    if (!instance) {
      {
        throw Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
      }
    }

    if (didChange) {
      // Merge parent and own context.
      // Skip this if we're not updating due to sCU.
      // This avoids unnecessarily recomputing memoized values.
      var mergedContext = processChildContext(workInProgress, type, previousContext);
      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
      // It is important to unwind the context in the reverse order.

      pop(didPerformWorkStackCursor, workInProgress);
      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.

      push(contextStackCursor, mergedContext, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    } else {
      pop(didPerformWorkStackCursor, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    }
  }
}

function findCurrentUnmaskedContext(fiber) {
  if (disableLegacyContext) {
    return emptyContextObject;
  } else {
    // Currently this is only used with renderSubtreeIntoContainer; not sure if it
    // makes sense elsewhere
    if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) {
      {
        throw Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
      }
    }

    var node = fiber;

    do {
      switch (node.tag) {
        case HostRoot:
          return node.stateNode.context;

        case ClassComponent:
          {
            var Component = node.type;

            if (isContextProvider(Component)) {
              return node.stateNode.__reactInternalMemoizedMergedChildContext;
            }

            break;
          }
      }

      node = node.return;
    } while (node !== null);

    {
      {
        throw Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  }
}

var LegacyRoot = 0;
var BlockingRoot = 1;
var ConcurrentRoot = 2;

var ReactInternals$2 = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
var _ReactInternals$Sched$1 = ReactInternals$2.SchedulerTracing;
var __interactionsRef = _ReactInternals$Sched$1.__interactionsRef;
var __subscriberRef = _ReactInternals$Sched$1.__subscriberRef;
var unstable_clear = _ReactInternals$Sched$1.unstable_clear;
var unstable_getCurrent = _ReactInternals$Sched$1.unstable_getCurrent;
var unstable_getThreadID = _ReactInternals$Sched$1.unstable_getThreadID;
var unstable_subscribe = _ReactInternals$Sched$1.unstable_subscribe;
var unstable_trace = _ReactInternals$Sched$1.unstable_trace;
var unstable_unsubscribe = _ReactInternals$Sched$1.unstable_unsubscribe;
var unstable_wrap = _ReactInternals$Sched$1.unstable_wrap;

// Intentionally not named imports because Rollup would use dynamic dispatch for
// CommonJS interop named imports.
var Scheduler_runWithPriority = unstable_runWithPriority;
var Scheduler_scheduleCallback = unstable_scheduleCallback;
var Scheduler_cancelCallback = unstable_cancelCallback;
var Scheduler_shouldYield = unstable_shouldYield;
var Scheduler_requestPaint = unstable_requestPaint;
var Scheduler_now = unstable_now;
var Scheduler_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
var Scheduler_ImmediatePriority = unstable_ImmediatePriority;
var Scheduler_UserBlockingPriority = unstable_UserBlockingPriority;
var Scheduler_NormalPriority = unstable_NormalPriority;
var Scheduler_LowPriority = unstable_LowPriority;
var Scheduler_IdlePriority = unstable_IdlePriority;

if (enableSchedulerTracing) {
  // Provide explicit error message when production+profiling bundle of e.g.
  // react-dom is used with production (non-profiling) bundle of
  // scheduler/tracing
  if (!(__interactionsRef != null && __interactionsRef.current != null)) {
    {
      throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling");
    }
  }
}

var fakeCallbackNode = {}; // Except for NoPriority, these correspond to Scheduler priorities. We use
// ascending numbers so we can compare them like numbers. They start at 90 to
// avoid clashing with Scheduler's priorities.

var ImmediatePriority = 99;
var UserBlockingPriority$2 = 98;
var NormalPriority = 97;
var LowPriority = 96;
var IdlePriority = 95; // NoPriority is the absence of priority. Also React-only.

var NoPriority = 90;
var shouldYield = Scheduler_shouldYield;
var requestPaint = // Fall back gracefully if we're running an older version of Scheduler.
Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : function () {};
var syncQueue = null;
var immediateQueueCallbackNode = null;
var isFlushingSyncQueue = false;
var initialTimeMs = Scheduler_now(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.
// This will be the case for modern browsers that support `performance.now`. In
// older browsers, Scheduler falls back to `Date.now`, which returns a Unix
// timestamp. In that case, subtract the module initialization time to simulate
// the behavior of performance.now and keep our times small enough to fit
// within 32 bits.
// TODO: Consider lifting this into Scheduler.

var now = initialTimeMs < 10000 ? Scheduler_now : function () {
  return Scheduler_now() - initialTimeMs;
};
function getCurrentPriorityLevel() {
  switch (Scheduler_getCurrentPriorityLevel()) {
    case Scheduler_ImmediatePriority:
      return ImmediatePriority;

    case Scheduler_UserBlockingPriority:
      return UserBlockingPriority$2;

    case Scheduler_NormalPriority:
      return NormalPriority;

    case Scheduler_LowPriority:
      return LowPriority;

    case Scheduler_IdlePriority:
      return IdlePriority;

    default:
      {
        {
          throw Error("Unknown priority level.");
        }
      }

  }
}

function reactPriorityToSchedulerPriority(reactPriorityLevel) {
  switch (reactPriorityLevel) {
    case ImmediatePriority:
      return Scheduler_ImmediatePriority;

    case UserBlockingPriority$2:
      return Scheduler_UserBlockingPriority;

    case NormalPriority:
      return Scheduler_NormalPriority;

    case LowPriority:
      return Scheduler_LowPriority;

    case IdlePriority:
      return Scheduler_IdlePriority;

    default:
      {
        {
          throw Error("Unknown priority level.");
        }
      }

  }
}

function runWithPriority$2(reactPriorityLevel, fn) {
  var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
  return Scheduler_runWithPriority(priorityLevel, fn);
}
function scheduleCallback(reactPriorityLevel, callback, options) {
  var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
  return Scheduler_scheduleCallback(priorityLevel, callback, options);
}
function scheduleSyncCallback(callback) {
  // Push this callback into an internal queue. We'll flush these either in
  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
  if (syncQueue === null) {
    syncQueue = [callback]; // Flush the queue in the next tick, at the earliest.

    immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
  } else {
    // Push onto existing queue. Don't need to schedule a callback because
    // we already scheduled one when we created the queue.
    syncQueue.push(callback);
  }

  return fakeCallbackNode;
}
function cancelCallback(callbackNode) {
  if (callbackNode !== fakeCallbackNode) {
    Scheduler_cancelCallback(callbackNode);
  }
}
function flushSyncCallbackQueue() {
  if (immediateQueueCallbackNode !== null) {
    var node = immediateQueueCallbackNode;
    immediateQueueCallbackNode = null;
    Scheduler_cancelCallback(node);
  }

  flushSyncCallbackQueueImpl();
}

function flushSyncCallbackQueueImpl() {
  if (!isFlushingSyncQueue && syncQueue !== null) {
    // Prevent re-entrancy.
    isFlushingSyncQueue = true;
    var i = 0;

    try {
      var _isSync = true;
      var queue = syncQueue;
      runWithPriority$2(ImmediatePriority, function () {
        for (; i < queue.length; i++) {
          var callback = queue[i];

          do {
            callback = callback(_isSync);
          } while (callback !== null);
        }
      });
      syncQueue = null;
    } catch (error) {
      // If something throws, leave the remaining callbacks on the queue.
      if (syncQueue !== null) {
        syncQueue = syncQueue.slice(i + 1);
      } // Resume flushing in the next tick


      Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
      throw error;
    } finally {
      isFlushingSyncQueue = false;
    }
  }
}

var NoMode = 0;
var StrictMode = 1; // TODO: Remove BlockingMode and ConcurrentMode by reading from the root
// tag instead

var BlockingMode = 2;
var ConcurrentMode = 4;
var ProfileMode = 8;

// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111
var MAX_SIGNED_31_BIT_INT = 1073741823;

var NoWork = 0; // TODO: Think of a better name for Never. The key difference with Idle is that
// Never work can be committed in an inconsistent state without tearing the UI.
// The main example is offscreen content, like a hidden subtree. So one possible
// name is Offscreen. However, it also includes dehydrated Suspense boundaries,
// which are inconsistent in the sense that they haven't finished yet, but
// aren't visibly inconsistent because the server rendered HTML matches what the
// hydrated tree would look like.

var Never = 1; // Idle is slightly higher priority than Never. It must completely finish in
// order to be consistent.

var Idle = 2; // Continuous Hydration is a moving priority. It is slightly higher than Idle
// and is used to increase priority of hover targets. It is increasing with
// each usage so that last always wins.

var ContinuousHydration = 3;
var Sync = MAX_SIGNED_31_BIT_INT;
var Batched = Sync - 1;
var UNIT_SIZE = 10;
var MAGIC_NUMBER_OFFSET = Batched - 1; // 1 unit of expiration time represents 10ms.

function msToExpirationTime(ms) {
  // Always add an offset so that we don't clash with the magic number for NoWork.
  return MAGIC_NUMBER_OFFSET - (ms / UNIT_SIZE | 0);
}
function expirationTimeToMs(expirationTime) {
  return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;
}

function ceiling(num, precision) {
  return ((num / precision | 0) + 1) * precision;
}

function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
  return MAGIC_NUMBER_OFFSET - ceiling(MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
} // TODO: This corresponds to Scheduler's NormalPriority, not LowPriority. Update
// the names to reflect.


var LOW_PRIORITY_EXPIRATION = 5000;
var LOW_PRIORITY_BATCH_SIZE = 250;
function computeAsyncExpiration(currentTime) {
  return computeExpirationBucket(currentTime, LOW_PRIORITY_EXPIRATION, LOW_PRIORITY_BATCH_SIZE);
}
function computeSuspenseExpiration(currentTime, timeoutMs) {
  // TODO: Should we warn if timeoutMs is lower than the normal pri expiration time?
  return computeExpirationBucket(currentTime, timeoutMs, LOW_PRIORITY_BATCH_SIZE);
} // We intentionally set a higher expiration time for interactive updates in
// dev than in production.
//
// If the main thread is being blocked so long that you hit the expiration,
// it's a problem that could be solved with better scheduling.
//
// People will be more likely to notice this and fix it with the long
// expiration time in development.
//
// In production we opt for better UX at the risk of masking scheduling
// problems, by expiring fast.

var HIGH_PRIORITY_EXPIRATION = 500;
var HIGH_PRIORITY_BATCH_SIZE = 100;
function computeInteractiveExpiration(currentTime) {
  return computeExpirationBucket(currentTime, HIGH_PRIORITY_EXPIRATION, HIGH_PRIORITY_BATCH_SIZE);
}
function computeContinuousHydrationExpiration(currentTime) {
  // Each time we ask for a new one of these we increase the priority.
  // This ensures that the last one always wins since we can't deprioritize
  // once we've scheduled work already.
  return ContinuousHydration++;
}
function inferPriorityFromExpirationTime(currentTime, expirationTime) {
  if (expirationTime === Sync) {
    return ImmediatePriority;
  }

  if (expirationTime === Never || expirationTime === Idle) {
    return IdlePriority;
  }

  var msUntil = expirationTimeToMs(expirationTime) - expirationTimeToMs(currentTime);

  if (msUntil <= 0) {
    return ImmediatePriority;
  }

  if (msUntil <= HIGH_PRIORITY_EXPIRATION + HIGH_PRIORITY_BATCH_SIZE) {
    return UserBlockingPriority$2;
  }

  if (msUntil <= LOW_PRIORITY_EXPIRATION + LOW_PRIORITY_BATCH_SIZE) {
    return NormalPriority;
  } // TODO: Handle LowPriority
  // Assume anything lower has idle priority


  return IdlePriority;
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
var lowPriorityWarningWithoutStack = function () {};

{
  var printWarning$1 = function (format) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });

    if (typeof console !== 'undefined') {
      console.warn(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarningWithoutStack = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning$1.apply(void 0, [format].concat(args));
    }
  };
}

var lowPriorityWarningWithoutStack$1 = lowPriorityWarningWithoutStack;

var ReactStrictModeWarnings = {
  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
  flushPendingUnsafeLifecycleWarnings: function () {},
  recordLegacyContextWarning: function (fiber, instance) {},
  flushLegacyContextWarning: function () {},
  discardPendingWarnings: function () {}
};

{
  var findStrictRoot = function (fiber) {
    var maybeStrictRoot = null;
    var node = fiber;

    while (node !== null) {
      if (node.mode & StrictMode) {
        maybeStrictRoot = node;
      }

      node = node.return;
    }

    return maybeStrictRoot;
  };

  var setToSortedString = function (set) {
    var array = [];
    set.forEach(function (value) {
      array.push(value);
    });
    return array.sort().join(', ');
  };

  var pendingComponentWillMountWarnings = [];
  var pendingUNSAFE_ComponentWillMountWarnings = [];
  var pendingComponentWillReceivePropsWarnings = [];
  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
  var pendingComponentWillUpdateWarnings = [];
  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.

  var didWarnAboutUnsafeLifecycles = new Set();

  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
    // Dedup strategy: Warn once per component.
    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
      return;
    }

    if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.
    instance.componentWillMount.__suppressDeprecationWarning !== true) {
      pendingComponentWillMountWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === 'function') {
      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
    }

    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
      pendingComponentWillReceivePropsWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
    }

    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
      pendingComponentWillUpdateWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {
      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
    // We do an initial pass to gather component names
    var componentWillMountUniqueNames = new Set();

    if (pendingComponentWillMountWarnings.length > 0) {
      pendingComponentWillMountWarnings.forEach(function (fiber) {
        componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillMountWarnings = [];
    }

    var UNSAFE_componentWillMountUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
      pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {
        UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillMountWarnings = [];
    }

    var componentWillReceivePropsUniqueNames = new Set();

    if (pendingComponentWillReceivePropsWarnings.length > 0) {
      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
        componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillReceivePropsWarnings = [];
    }

    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {
        UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    }

    var componentWillUpdateUniqueNames = new Set();

    if (pendingComponentWillUpdateWarnings.length > 0) {
      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
        componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillUpdateWarnings = [];
    }

    var UNSAFE_componentWillUpdateUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {
        UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillUpdateWarnings = [];
    } // Finally, we flush all the warnings
    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'


    if (UNSAFE_componentWillMountUniqueNames.size > 0) {
      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
      warningWithoutStack$1(false, 'Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '\nPlease update the following components: %s', sortedNames);
    }

    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);

      warningWithoutStack$1(false, 'Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, " + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\n' + '\nPlease update the following components: %s', _sortedNames);
    }

    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);

      warningWithoutStack$1(false, 'Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '\nPlease update the following components: %s', _sortedNames2);
    }

    if (componentWillMountUniqueNames.size > 0) {
      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);

      lowPriorityWarningWithoutStack$1(false, 'componentWillMount has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames3);
    }

    if (componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);

      lowPriorityWarningWithoutStack$1(false, 'componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, refactor your " + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames4);
    }

    if (componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);

      lowPriorityWarningWithoutStack$1(false, 'componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames5);
    }
  };

  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.

  var didWarnAboutLegacyContext = new Set();

  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);

    if (strictRoot === null) {
      warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
      return;
    } // Dedup strategy: Warn once per component.


    if (didWarnAboutLegacyContext.has(fiber.type)) {
      return;
    }

    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
      if (warningsForRoot === undefined) {
        warningsForRoot = [];
        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
      }

      warningsForRoot.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
      var uniqueNames = new Set();
      fiberArray.forEach(function (fiber) {
        uniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutLegacyContext.add(fiber.type);
      });
      var sortedNames = setToSortedString(uniqueNames);
      var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);
      warningWithoutStack$1(false, 'Legacy context API has been detected within a strict-mode tree.' + '\n\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here: https://fb.me/react-legacy-context' + '%s', sortedNames, strictRootComponentStack);
    });
  };

  ReactStrictModeWarnings.discardPendingWarnings = function () {
    pendingComponentWillMountWarnings = [];
    pendingUNSAFE_ComponentWillMountWarnings = [];
    pendingComponentWillReceivePropsWarnings = [];
    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    pendingComponentWillUpdateWarnings = [];
    pendingUNSAFE_ComponentWillUpdateWarnings = [];
    pendingLegacyContextWarning = new Map();
  };
}

var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.

var failedBoundaries = null;
var setRefreshHandler = function (handler) {
  {
    resolveFamily = handler;
  }
};
function resolveFunctionForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }

    var family = resolveFamily(type);

    if (family === undefined) {
      return type;
    } // Use the latest known implementation.


    return family.current;
  }
}
function resolveClassForHotReloading(type) {
  // No implementation differences.
  return resolveFunctionForHotReloading(type);
}
function resolveForwardRefForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }

    var family = resolveFamily(type);

    if (family === undefined) {
      // Check if we're dealing with a real forwardRef. Don't want to crash early.
      if (type !== null && type !== undefined && typeof type.render === 'function') {
        // ForwardRef is special because its resolved .type is an object,
        // but it's possible that we only have its inner render function in the map.
        // If that inner render function is different, we'll build a new forwardRef type.
        var currentRender = resolveFunctionForHotReloading(type.render);

        if (type.render !== currentRender) {
          var syntheticType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: currentRender
          };

          if (type.displayName !== undefined) {
            syntheticType.displayName = type.displayName;
          }

          return syntheticType;
        }
      }

      return type;
    } // Use the latest known implementation.


    return family.current;
  }
}
function isCompatibleFamilyForHotReloading(fiber, element) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return false;
    }

    var prevType = fiber.elementType;
    var nextType = element.type; // If we got here, we know types aren't === equal.

    var needsCompareFamilies = false;
    var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;

    switch (fiber.tag) {
      case ClassComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          }

          break;
        }

      case FunctionComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            // We don't know the inner type yet.
            // We're going to assume that the lazy inner type is stable,
            // and so it is sufficient to avoid reconciling it away.
            // We're not going to unwrap or actually use the new lazy type.
            needsCompareFamilies = true;
          }

          break;
        }

      case ForwardRef:
        {
          if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }

          break;
        }

      case MemoComponent:
      case SimpleMemoComponent:
        {
          if ($$typeofNextType === REACT_MEMO_TYPE) {
            // TODO: if it was but can no longer be simple,
            // we shouldn't set this.
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }

          break;
        }

      default:
        return false;
    } // Check if both types have a family and it's the same one.


    if (needsCompareFamilies) {
      // Note: memo() and forwardRef() we'll compare outer rather than inner type.
      // This means both of them need to be registered to preserve state.
      // If we unwrapped and compared the inner types for wrappers instead,
      // then we would risk falsely saying two separate memo(Foo)
      // calls are equivalent because they wrap the same Foo function.
      var prevFamily = resolveFamily(prevType);

      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {
        return true;
      }
    }

    return false;
  }
}
function markFailedErrorBoundaryForHotReloading(fiber) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }

    if (typeof WeakSet !== 'function') {
      return;
    }

    if (failedBoundaries === null) {
      failedBoundaries = new WeakSet();
    }

    failedBoundaries.add(fiber);
  }
}
var scheduleRefresh = function (root, update) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }

    var staleFamilies = update.staleFamilies,
        updatedFamilies = update.updatedFamilies;
    flushPassiveEffects();
    flushSync(function () {
      scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
    });
  }
};
var scheduleRoot = function (root, element) {
  {
    if (root.context !== emptyContextObject) {
      // Super edge case: root has a legacy _renderSubtree context
      // but we don't know the parentComponent so we can't pass it.
      // Just ignore. We'll delete this with _renderSubtree code path later.
      return;
    }

    flushPassiveEffects();
    syncUpdates(function () {
      updateContainer(element, root, null, null);
    });
  }
};

function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
  {
    var alternate = fiber.alternate,
        child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;
    var candidateType = null;

    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;

      case ForwardRef:
        candidateType = type.render;
        break;

      default:
        break;
    }

    if (resolveFamily === null) {
      throw new Error('Expected resolveFamily to be set during hot reload.');
    }

    var needsRender = false;
    var needsRemount = false;

    if (candidateType !== null) {
      var family = resolveFamily(candidateType);

      if (family !== undefined) {
        if (staleFamilies.has(family)) {
          needsRemount = true;
        } else if (updatedFamilies.has(family)) {
          if (tag === ClassComponent) {
            needsRemount = true;
          } else {
            needsRender = true;
          }
        }
      }
    }

    if (failedBoundaries !== null) {
      if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
        needsRemount = true;
      }
    }

    if (needsRemount) {
      fiber._debugNeedsRemount = true;
    }

    if (needsRemount || needsRender) {
      scheduleWork(fiber, Sync);
    }

    if (child !== null && !needsRemount) {
      scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
    }

    if (sibling !== null) {
      scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
  }
}

var findHostInstancesForRefresh = function (root, families) {
  {
    var hostInstances = new Set();
    var types = new Set(families.map(function (family) {
      return family.current;
    }));
    findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
    return hostInstances;
  }
};

function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
  {
    var child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;
    var candidateType = null;

    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;

      case ForwardRef:
        candidateType = type.render;
        break;

      default:
        break;
    }

    var didMatch = false;

    if (candidateType !== null) {
      if (types.has(candidateType)) {
        didMatch = true;
      }
    }

    if (didMatch) {
      // We have a match. This only drills down to the closest host components.
      // There's no need to search deeper because for the purpose of giving
      // visual feedback, "flashing" outermost parent rectangles is sufficient.
      findHostInstancesForFiberShallowly(fiber, hostInstances);
    } else {
      // If there's no match, maybe there will be one further down in the child tree.
      if (child !== null) {
        findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
      }
    }

    if (sibling !== null) {
      findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
  }
}

function findHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);

    if (foundHostInstances) {
      return;
    } // If we didn't find any host children, fallback to closest host parent.


    var node = fiber;

    while (true) {
      switch (node.tag) {
        case HostComponent:
          hostInstances.add(node.stateNode);
          return;

        case HostPortal:
          hostInstances.add(node.stateNode.containerInfo);
          return;

        case HostRoot:
          hostInstances.add(node.stateNode.containerInfo);
          return;
      }

      if (node.return === null) {
        throw new Error('Expected to reach root first.');
      }

      node = node.return;
    }
  }
}

function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var node = fiber;
    var foundHostInstances = false;

    while (true) {
      if (node.tag === HostComponent) {
        // We got a match.
        foundHostInstances = true;
        hostInstances.add(node.stateNode); // There may still be more, so keep searching.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === fiber) {
        return foundHostInstances;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === fiber) {
          return foundHostInstances;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  return false;
}

function resolveDefaultProps(Component, baseProps) {
  if (Component && Component.defaultProps) {
    // Resolve default props. Taken from ReactElement
    var props = _assign({}, baseProps);

    var defaultProps = Component.defaultProps;

    for (var propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }

    return props;
  }

  return baseProps;
}
function readLazyComponentType(lazyComponent) {
  initializeLazyComponentType(lazyComponent);

  if (lazyComponent._status !== Resolved) {
    throw lazyComponent._result;
  }

  return lazyComponent._result;
}

var valueCursor = createCursor(null);
var rendererSigil;

{
  // Use this to detect multiple renderers using the same context
  rendererSigil = {};
}

var currentlyRenderingFiber = null;
var lastContextDependency = null;
var lastContextWithAllBitsObserved = null;
var isDisallowedContextReadInDEV = false;
function resetContextDependencies() {
  // This is called right before React yields execution, to ensure `readContext`
  // cannot be called outside the render phase.
  currentlyRenderingFiber = null;
  lastContextDependency = null;
  lastContextWithAllBitsObserved = null;

  {
    isDisallowedContextReadInDEV = false;
  }
}
function enterDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = true;
  }
}
function exitDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = false;
  }
}
function pushProvider(providerFiber, nextValue) {
  var context = providerFiber.type._context;

  if (isPrimaryRenderer) {
    push(valueCursor, context._currentValue, providerFiber);
    context._currentValue = nextValue;

    {
      !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer = rendererSigil;
    }
  } else {
    push(valueCursor, context._currentValue2, providerFiber);
    context._currentValue2 = nextValue;

    {
      !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer2 = rendererSigil;
    }
  }
}
function popProvider(providerFiber) {
  var currentValue = valueCursor.current;
  pop(valueCursor, providerFiber);
  var context = providerFiber.type._context;

  if (isPrimaryRenderer) {
    context._currentValue = currentValue;
  } else {
    context._currentValue2 = currentValue;
  }
}
function calculateChangedBits(context, newValue, oldValue) {
  if (is$1(oldValue, newValue)) {
    // No change
    return 0;
  } else {
    var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;

    {
      !((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits) ? warning$1(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
    }

    return changedBits | 0;
  }
}
function scheduleWorkOnParentPath(parent, renderExpirationTime) {
  // Update the child expiration time of all the ancestors, including
  // the alternates.
  var node = parent;

  while (node !== null) {
    var alternate = node.alternate;

    if (node.childExpirationTime < renderExpirationTime) {
      node.childExpirationTime = renderExpirationTime;

      if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
        alternate.childExpirationTime = renderExpirationTime;
      }
    } else if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
      alternate.childExpirationTime = renderExpirationTime;
    } else {
      // Neither alternate was updated, which means the rest of the
      // ancestor path already has sufficient priority.
      break;
    }

    node = node.return;
  }
}
function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
  var fiber = workInProgress.child;

  if (fiber !== null) {
    // Set the return pointer of the child to the work-in-progress fiber.
    fiber.return = workInProgress;
  }

  while (fiber !== null) {
    var nextFiber = void 0; // Visit this fiber.

    var list = fiber.dependencies;

    if (list !== null) {
      nextFiber = fiber.child;
      var dependency = list.firstContext;

      while (dependency !== null) {
        // Check if the context matches.
        if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
          // Match! Schedule an update on this fiber.
          if (fiber.tag === ClassComponent) {
            // Schedule a force update on the work-in-progress.
            var update = createUpdate(renderExpirationTime, null);
            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
            // update to the current fiber, too, which means it will persist even if
            // this render is thrown away. Since it's a race condition, not sure it's
            // worth fixing.

            enqueueUpdate(fiber, update);
          }

          if (fiber.expirationTime < renderExpirationTime) {
            fiber.expirationTime = renderExpirationTime;
          }

          var alternate = fiber.alternate;

          if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
            alternate.expirationTime = renderExpirationTime;
          }

          scheduleWorkOnParentPath(fiber.return, renderExpirationTime); // Mark the expiration time on the list, too.

          if (list.expirationTime < renderExpirationTime) {
            list.expirationTime = renderExpirationTime;
          } // Since we already found a match, we can stop traversing the
          // dependency list.


          break;
        }

        dependency = dependency.next;
      }
    } else if (fiber.tag === ContextProvider) {
      // Don't scan deeper if this is a matching provider
      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
    } else if (enableSuspenseServerRenderer && fiber.tag === DehydratedFragment) {
      // If a dehydrated suspense bounudary is in this subtree, we don't know
      // if it will have any context consumers in it. The best we can do is
      // mark it as having updates.
      var parentSuspense = fiber.return;

      if (!(parentSuspense !== null)) {
        {
          throw Error("We just came from a parent so we must have had a parent. This is a bug in React.");
        }
      }

      if (parentSuspense.expirationTime < renderExpirationTime) {
        parentSuspense.expirationTime = renderExpirationTime;
      }

      var _alternate = parentSuspense.alternate;

      if (_alternate !== null && _alternate.expirationTime < renderExpirationTime) {
        _alternate.expirationTime = renderExpirationTime;
      } // This is intentionally passing this fiber as the parent
      // because we want to schedule this fiber as having work
      // on its children. We'll use the childExpirationTime on
      // this fiber to indicate that a context has changed.


      scheduleWorkOnParentPath(parentSuspense, renderExpirationTime);
      nextFiber = fiber.sibling;
    } else {
      // Traverse down.
      nextFiber = fiber.child;
    }

    if (nextFiber !== null) {
      // Set the return pointer of the child to the work-in-progress fiber.
      nextFiber.return = fiber;
    } else {
      // No child. Traverse to next sibling.
      nextFiber = fiber;

      while (nextFiber !== null) {
        if (nextFiber === workInProgress) {
          // We're back to the root of this subtree. Exit.
          nextFiber = null;
          break;
        }

        var sibling = nextFiber.sibling;

        if (sibling !== null) {
          // Set the return pointer of the sibling to the work-in-progress fiber.
          sibling.return = nextFiber.return;
          nextFiber = sibling;
          break;
        } // No more siblings. Traverse up.


        nextFiber = nextFiber.return;
      }
    }

    fiber = nextFiber;
  }
}
function prepareToReadContext(workInProgress, renderExpirationTime) {
  currentlyRenderingFiber = workInProgress;
  lastContextDependency = null;
  lastContextWithAllBitsObserved = null;
  var dependencies = workInProgress.dependencies;

  if (dependencies !== null) {
    var firstContext = dependencies.firstContext;

    if (firstContext !== null) {
      if (dependencies.expirationTime >= renderExpirationTime) {
        // Context list has a pending update. Mark that this fiber performed work.
        markWorkInProgressReceivedUpdate();
      } // Reset the work-in-progress list


      dependencies.firstContext = null;
    }
  }
}
function readContext(context, observedBits) {
  {
    // This warning would fire if you read context inside a Hook like useMemo.
    // Unlike the class check below, it's not enforced in production for perf.
    !!isDisallowedContextReadInDEV ? warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().') : void 0;
  }

  if (lastContextWithAllBitsObserved === context) {// Nothing to do. We already observe everything in this context.
  } else if (observedBits === false || observedBits === 0) {// Do not observe any updates.
  } else {
    var resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.

    if (typeof observedBits !== 'number' || observedBits === MAX_SIGNED_31_BIT_INT) {
      // Observe all updates.
      lastContextWithAllBitsObserved = context;
      resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
    } else {
      resolvedObservedBits = observedBits;
    }

    var contextItem = {
      context: context,
      observedBits: resolvedObservedBits,
      next: null
    };

    if (lastContextDependency === null) {
      if (!(currentlyRenderingFiber !== null)) {
        {
          throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        }
      } // This is the first dependency for this component. Create a new list.


      lastContextDependency = contextItem;
      currentlyRenderingFiber.dependencies = {
        expirationTime: NoWork,
        firstContext: contextItem,
        responders: null
      };
    } else {
      // Append a new context item.
      lastContextDependency = lastContextDependency.next = contextItem;
    }
  }

  return isPrimaryRenderer ? context._currentValue : context._currentValue2;
}

// UpdateQueue is a linked list of prioritized updates.
//
// Like fibers, update queues come in pairs: a current queue, which represents
// the visible state of the screen, and a work-in-progress queue, which can be
// mutated and processed asynchronously before it is committed — a form of
// double buffering. If a work-in-progress render is discarded before finishing,
// we create a new work-in-progress by cloning the current queue.
//
// Both queues share a persistent, singly-linked list structure. To schedule an
// update, we append it to the end of both queues. Each queue maintains a
// pointer to first update in the persistent list that hasn't been processed.
// The work-in-progress pointer always has a position equal to or greater than
// the current queue, since we always work on that one. The current queue's
// pointer is only updated during the commit phase, when we swap in the
// work-in-progress.
//
// For example:
//
//   Current pointer:           A - B - C - D - E - F
//   Work-in-progress pointer:              D - E - F
//                                          ^
//                                          The work-in-progress queue has
//                                          processed more updates than current.
//
// The reason we append to both queues is because otherwise we might drop
// updates without ever processing them. For example, if we only add updates to
// the work-in-progress queue, some updates could be lost whenever a work-in
// -progress render restarts by cloning from current. Similarly, if we only add
// updates to the current queue, the updates will be lost whenever an already
// in-progress queue commits and swaps with the current queue. However, by
// adding to both queues, we guarantee that the update will be part of the next
// work-in-progress. (And because the work-in-progress queue becomes the
// current queue once it commits, there's no danger of applying the same
// update twice.)
//
// Prioritization
// --------------
//
// Updates are not sorted by priority, but by insertion; new updates are always
// appended to the end of the list.
//
// The priority is still important, though. When processing the update queue
// during the render phase, only the updates with sufficient priority are
// included in the result. If we skip an update because it has insufficient
// priority, it remains in the queue to be processed later, during a lower
// priority render. Crucially, all updates subsequent to a skipped update also
// remain in the queue *regardless of their priority*. That means high priority
// updates are sometimes processed twice, at two separate priorities. We also
// keep track of a base state, that represents the state before the first
// update in the queue is applied.
//
// For example:
//
//   Given a base state of '', and the following queue of updates
//
//     A1 - B2 - C1 - D2
//
//   where the number indicates the priority, and the update is applied to the
//   previous state by appending a letter, React will process these updates as
//   two separate renders, one per distinct priority level:
//
//   First render, at priority 1:
//     Base state: ''
//     Updates: [A1, C1]
//     Result state: 'AC'
//
//   Second render, at priority 2:
//     Base state: 'A'            <-  The base state does not include C1,
//                                    because B2 was skipped.
//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
//     Result state: 'ABCD'
//
// Because we process updates in insertion order, and rebase high priority
// updates when preceding updates are skipped, the final result is deterministic
// regardless of priority. Intermediate state may vary according to system
// resources, but the final state is always the same.
var UpdateState = 0;
var ReplaceState = 1;
var ForceUpdate = 2;
var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
// It should only be read right after calling `processUpdateQueue`, via
// `checkHasForceUpdateAfterProcessing`.

var hasForceUpdate = false;
var didWarnUpdateInsideUpdate;
var currentlyProcessingQueue;


{
  didWarnUpdateInsideUpdate = false;
  currentlyProcessingQueue = null;

  
}

function createUpdateQueue(baseState) {
  var queue = {
    baseState: baseState,
    firstUpdate: null,
    lastUpdate: null,
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,
    firstEffect: null,
    lastEffect: null,
    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function cloneUpdateQueue(currentQueue) {
  var queue = {
    baseState: currentQueue.baseState,
    firstUpdate: currentQueue.firstUpdate,
    lastUpdate: currentQueue.lastUpdate,
    // TODO: With resuming, if we bail out and resuse the child tree, we should
    // keep these effects.
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,
    firstEffect: null,
    lastEffect: null,
    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function createUpdate(expirationTime, suspenseConfig) {
  var update = {
    expirationTime: expirationTime,
    suspenseConfig: suspenseConfig,
    tag: UpdateState,
    payload: null,
    callback: null,
    next: null,
    nextEffect: null
  };

  {
    update.priority = getCurrentPriorityLevel();
  }

  return update;
}

function appendUpdateToQueue(queue, update) {
  // Append the update to the end of the list.
  if (queue.lastUpdate === null) {
    // Queue is empty
    queue.firstUpdate = queue.lastUpdate = update;
  } else {
    queue.lastUpdate.next = update;
    queue.lastUpdate = update;
  }
}

function enqueueUpdate(fiber, update) {
  // Update queues are created lazily.
  var alternate = fiber.alternate;
  var queue1;
  var queue2;

  if (alternate === null) {
    // There's only one fiber.
    queue1 = fiber.updateQueue;
    queue2 = null;

    if (queue1 === null) {
      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
    }
  } else {
    // There are two owners.
    queue1 = fiber.updateQueue;
    queue2 = alternate.updateQueue;

    if (queue1 === null) {
      if (queue2 === null) {
        // Neither fiber has an update queue. Create new ones.
        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
        queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
      } else {
        // Only one fiber has an update queue. Clone to create a new one.
        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
      }
    } else {
      if (queue2 === null) {
        // Only one fiber has an update queue. Clone to create a new one.
        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
      } else {// Both owners have an update queue.
      }
    }
  }

  if (queue2 === null || queue1 === queue2) {
    // There's only a single queue.
    appendUpdateToQueue(queue1, update);
  } else {
    // There are two queues. We need to append the update to both queues,
    // while accounting for the persistent structure of the list — we don't
    // want the same update to be added multiple times.
    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
      // One of the queues is not empty. We must add the update to both queues.
      appendUpdateToQueue(queue1, update);
      appendUpdateToQueue(queue2, update);
    } else {
      // Both queues are non-empty. The last update is the same in both lists,
      // because of structural sharing. So, only append to one of the lists.
      appendUpdateToQueue(queue1, update); // But we still need to update the `lastUpdate` pointer of queue2.

      queue2.lastUpdate = update;
    }
  }

  {
    if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
      warningWithoutStack$1(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
      didWarnUpdateInsideUpdate = true;
    }
  }
}
function enqueueCapturedUpdate(workInProgress, update) {
  // Captured updates go into a separate list, and only on the work-in-
  // progress queue.
  var workInProgressQueue = workInProgress.updateQueue;

  if (workInProgressQueue === null) {
    workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
  } else {
    // TODO: I put this here rather than createWorkInProgress so that we don't
    // clone the queue unnecessarily. There's probably a better way to
    // structure this.
    workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
  } // Append the update to the end of the list.


  if (workInProgressQueue.lastCapturedUpdate === null) {
    // This is the first render phase update
    workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
  } else {
    workInProgressQueue.lastCapturedUpdate.next = update;
    workInProgressQueue.lastCapturedUpdate = update;
  }
}

function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
  var current = workInProgress.alternate;

  if (current !== null) {
    // If the work-in-progress queue is equal to the current queue,
    // we need to clone it first.
    if (queue === current.updateQueue) {
      queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
    }
  }

  return queue;
}

function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
  switch (update.tag) {
    case ReplaceState:
      {
        var payload = update.payload;

        if (typeof payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();

            if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              payload.call(instance, prevState, nextProps);
            }
          }

          var nextState = payload.call(instance, prevState, nextProps);

          {
            exitDisallowedContextReadInDEV();
          }

          return nextState;
        } // State object


        return payload;
      }

    case CaptureUpdate:
      {
        workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
      }
    // Intentional fallthrough

    case UpdateState:
      {
        var _payload = update.payload;
        var partialState;

        if (typeof _payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();

            if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              _payload.call(instance, prevState, nextProps);
            }
          }

          partialState = _payload.call(instance, prevState, nextProps);

          {
            exitDisallowedContextReadInDEV();
          }
        } else {
          // Partial state object
          partialState = _payload;
        }

        if (partialState === null || partialState === undefined) {
          // Null and undefined are treated as no-ops.
          return prevState;
        } // Merge the partial state and the previous state.


        return _assign({}, prevState, partialState);
      }

    case ForceUpdate:
      {
        hasForceUpdate = true;
        return prevState;
      }
  }

  return prevState;
}

function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
  hasForceUpdate = false;
  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

  {
    currentlyProcessingQueue = queue;
  } // These values may change as we process the queue.


  var newBaseState = queue.baseState;
  var newFirstUpdate = null;
  var newExpirationTime = NoWork; // Iterate through the list of updates to compute the result.

  var update = queue.firstUpdate;
  var resultState = newBaseState;

  while (update !== null) {
    var updateExpirationTime = update.expirationTime;

    if (updateExpirationTime < renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstUpdate === null) {
        // This is the first skipped update. It will be the first update in
        // the new list.
        newFirstUpdate = update; // Since this is the first update that was skipped, the current result
        // is the new base state.

        newBaseState = resultState;
      } // Since this update will remain in the list, update the remaining
      // expiration time.


      if (newExpirationTime < updateExpirationTime) {
        newExpirationTime = updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority.
      // Mark the event time of this update as relevant to this render pass.
      // TODO: This should ideally use the true event time of this update rather than
      // its priority which is a derived and not reverseable value.
      // TODO: We should skip this update if it was already committed but currently
      // we have no way of detecting the difference between a committed and suspended
      // update here.
      markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig); // Process it and compute a new result.

      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var callback = update.callback;

      if (callback !== null) {
        workInProgress.effectTag |= Callback; // Set this to null, in case it was mutated during an aborted render.

        update.nextEffect = null;

        if (queue.lastEffect === null) {
          queue.firstEffect = queue.lastEffect = update;
        } else {
          queue.lastEffect.nextEffect = update;
          queue.lastEffect = update;
        }
      }
    } // Continue to the next update.


    update = update.next;
  } // Separately, iterate though the list of captured updates.


  var newFirstCapturedUpdate = null;
  update = queue.firstCapturedUpdate;

  while (update !== null) {
    var _updateExpirationTime = update.expirationTime;

    if (_updateExpirationTime < renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstCapturedUpdate === null) {
        // This is the first skipped captured update. It will be the first
        // update in the new list.
        newFirstCapturedUpdate = update; // If this is the first update that was skipped, the current result is
        // the new base state.

        if (newFirstUpdate === null) {
          newBaseState = resultState;
        }
      } // Since this update will remain in the list, update the remaining
      // expiration time.


      if (newExpirationTime < _updateExpirationTime) {
        newExpirationTime = _updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority. Process it and compute
      // a new result.
      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var _callback = update.callback;

      if (_callback !== null) {
        workInProgress.effectTag |= Callback; // Set this to null, in case it was mutated during an aborted render.

        update.nextEffect = null;

        if (queue.lastCapturedEffect === null) {
          queue.firstCapturedEffect = queue.lastCapturedEffect = update;
        } else {
          queue.lastCapturedEffect.nextEffect = update;
          queue.lastCapturedEffect = update;
        }
      }
    }

    update = update.next;
  }

  if (newFirstUpdate === null) {
    queue.lastUpdate = null;
  }

  if (newFirstCapturedUpdate === null) {
    queue.lastCapturedUpdate = null;
  } else {
    workInProgress.effectTag |= Callback;
  }

  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
    // We processed every update, without skipping. That means the new base
    // state is the same as the result state.
    newBaseState = resultState;
  }

  queue.baseState = newBaseState;
  queue.firstUpdate = newFirstUpdate;
  queue.firstCapturedUpdate = newFirstCapturedUpdate; // Set the remaining expiration time to be whatever is remaining in the queue.
  // This should be fine because the only two other things that contribute to
  // expiration time are props and context. We're already in the middle of the
  // begin phase by the time we start processing the queue, so we've already
  // dealt with the props. Context in components that specify
  // shouldComponentUpdate is tricky; but we'll have to account for
  // that regardless.

  markUnprocessedUpdateTime(newExpirationTime);
  workInProgress.expirationTime = newExpirationTime;
  workInProgress.memoizedState = resultState;

  {
    currentlyProcessingQueue = null;
  }
}

function callCallback(callback, context) {
  if (!(typeof callback === 'function')) {
    {
      throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
    }
  }

  callback.call(context);
}

function resetHasForceUpdateBeforeProcessing() {
  hasForceUpdate = false;
}
function checkHasForceUpdateAfterProcessing() {
  return hasForceUpdate;
}
function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
  // If the finished render included captured updates, and there are still
  // lower priority updates left over, we need to keep the captured updates
  // in the queue so that they are rebased and not dropped once we process the
  // queue again at the lower priority.
  if (finishedQueue.firstCapturedUpdate !== null) {
    // Join the captured update list to the end of the normal list.
    if (finishedQueue.lastUpdate !== null) {
      finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
      finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
    } // Clear the list of captured updates.


    finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
  } // Commit the effects


  commitUpdateEffects(finishedQueue.firstEffect, instance);
  finishedQueue.firstEffect = finishedQueue.lastEffect = null;
  commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
  finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
}

function commitUpdateEffects(effect, instance) {
  while (effect !== null) {
    var callback = effect.callback;

    if (callback !== null) {
      effect.callback = null;
      callCallback(callback, instance);
    }

    effect = effect.nextEffect;
  }
}

var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
function requestCurrentSuspenseConfig() {
  return ReactCurrentBatchConfig.suspense;
}

var fakeInternalInstance = {};
var isArray$1 = Array.isArray; // React.Component uses a shared frozen object by default.
// We'll use it to determine whether we need to initialize legacy refs.

var emptyRefsObject = new React.Component().refs;
var didWarnAboutStateAssignmentForComponent;
var didWarnAboutUninitializedState;
var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
var didWarnAboutLegacyLifecyclesAndDerivedState;
var didWarnAboutUndefinedDerivedState;
var warnOnUndefinedDerivedState;
var warnOnInvalidCallback$1;
var didWarnAboutDirectlyAssigningPropsToState;
var didWarnAboutContextTypeAndContextTypes;
var didWarnAboutInvalidateContextType;

{
  didWarnAboutStateAssignmentForComponent = new Set();
  didWarnAboutUninitializedState = new Set();
  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
  didWarnAboutDirectlyAssigningPropsToState = new Set();
  didWarnAboutUndefinedDerivedState = new Set();
  didWarnAboutContextTypeAndContextTypes = new Set();
  didWarnAboutInvalidateContextType = new Set();
  var didWarnOnInvalidCallback = new Set();

  warnOnInvalidCallback$1 = function (callback, callerName) {
    if (callback === null || typeof callback === 'function') {
      return;
    }

    var key = callerName + "_" + callback;

    if (!didWarnOnInvalidCallback.has(key)) {
      didWarnOnInvalidCallback.add(key);
      warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  };

  warnOnUndefinedDerivedState = function (type, partialState) {
    if (partialState === undefined) {
      var componentName = getComponentName(type) || 'Component';

      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
        didWarnAboutUndefinedDerivedState.add(componentName);
        warningWithoutStack$1(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
      }
    }
  }; // This is so gross but it's at least non-critical and can be removed if
  // it causes problems. This is meant to give a nicer error message for
  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
  // ...)) which otherwise throws a "_processChildContext is not a function"
  // exception.


  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
    enumerable: false,
    value: function () {
      {
        {
          throw Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
      }
    }
  });
  Object.freeze(fakeInternalInstance);
}

function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
  var prevState = workInProgress.memoizedState;

  {
    if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Invoke the function an extra time to help detect side-effects.
      getDerivedStateFromProps(nextProps, prevState);
    }
  }

  var partialState = getDerivedStateFromProps(nextProps, prevState);

  {
    warnOnUndefinedDerivedState(ctor, partialState);
  } // Merge the partial state and the previous state.


  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
  // base state.

  var updateQueue = workInProgress.updateQueue;

  if (updateQueue !== null && workInProgress.expirationTime === NoWork) {
    updateQueue.baseState = memoizedState;
  }
}
var classComponentUpdater = {
  isMounted: isMounted,
  enqueueSetState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = requestCurrentTimeForUpdate();
    var suspenseConfig = requestCurrentSuspenseConfig();
    var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
    var update = createUpdate(expirationTime, suspenseConfig);
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'setState');
      }

      update.callback = callback;
    }

    enqueueUpdate(fiber, update);
    scheduleWork(fiber, expirationTime);
  },
  enqueueReplaceState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = requestCurrentTimeForUpdate();
    var suspenseConfig = requestCurrentSuspenseConfig();
    var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
    var update = createUpdate(expirationTime, suspenseConfig);
    update.tag = ReplaceState;
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'replaceState');
      }

      update.callback = callback;
    }

    enqueueUpdate(fiber, update);
    scheduleWork(fiber, expirationTime);
  },
  enqueueForceUpdate: function (inst, callback) {
    var fiber = get(inst);
    var currentTime = requestCurrentTimeForUpdate();
    var suspenseConfig = requestCurrentSuspenseConfig();
    var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
    var update = createUpdate(expirationTime, suspenseConfig);
    update.tag = ForceUpdate;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'forceUpdate');
      }

      update.callback = callback;
    }

    enqueueUpdate(fiber, update);
    scheduleWork(fiber, expirationTime);
  }
};

function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
  var instance = workInProgress.stateNode;

  if (typeof instance.shouldComponentUpdate === 'function') {
    startPhaseTimer(workInProgress, 'shouldComponentUpdate');
    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
    stopPhaseTimer();

    {
      !(shouldUpdate !== undefined) ? warningWithoutStack$1(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component') : void 0;
    }

    return shouldUpdate;
  }

  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
  }

  return true;
}

function checkClassInstance(workInProgress, ctor, newProps) {
  var instance = workInProgress.stateNode;

  {
    var name = getComponentName(ctor) || 'Component';
    var renderPresent = instance.render;

    if (!renderPresent) {
      if (ctor.prototype && typeof ctor.prototype.render === 'function') {
        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
      } else {
        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
      }
    }

    var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
    !noGetInitialStateOnES6 ? warningWithoutStack$1(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
    var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
    !noGetDefaultPropsOnES6 ? warningWithoutStack$1(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
    var noInstancePropTypes = !instance.propTypes;
    !noInstancePropTypes ? warningWithoutStack$1(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
    var noInstanceContextType = !instance.contextType;
    !noInstanceContextType ? warningWithoutStack$1(false, 'contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name) : void 0;

    if (disableLegacyContext) {
      if (ctor.childContextTypes) {
        warningWithoutStack$1(false, '%s uses the legacy childContextTypes API which is no longer supported. ' + 'Use React.createContext() instead.', name);
      }

      if (ctor.contextTypes) {
        warningWithoutStack$1(false, '%s uses the legacy contextTypes API which is no longer supported. ' + 'Use React.createContext() with static contextType instead.', name);
      }
    } else {
      var noInstanceContextTypes = !instance.contextTypes;
      !noInstanceContextTypes ? warningWithoutStack$1(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;

      if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
        didWarnAboutContextTypeAndContextTypes.add(ctor);
        warningWithoutStack$1(false, '%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
      }
    }

    var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
    !noComponentShouldUpdate ? warningWithoutStack$1(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;

    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
      warningWithoutStack$1(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');
    }

    var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
    !noComponentDidUnmount ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
    var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
    !noComponentDidReceiveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
    var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
    !noComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
    var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
    !noUnsafeComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
    var hasMutatedProps = instance.props !== newProps;
    !(instance.props === undefined || !hasMutatedProps) ? warningWithoutStack$1(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
    var noInstanceDefaultProps = !instance.defaultProps;
    !noInstanceDefaultProps ? warningWithoutStack$1(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;

    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
      warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));
    }

    var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
    !noInstanceGetDerivedStateFromProps ? warningWithoutStack$1(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromError !== 'function';
    !noInstanceGetDerivedStateFromCatch ? warningWithoutStack$1(false, '%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noStaticGetSnapshotBeforeUpdate = typeof ctor.getSnapshotBeforeUpdate !== 'function';
    !noStaticGetSnapshotBeforeUpdate ? warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
    var _state = instance.state;

    if (_state && (typeof _state !== 'object' || isArray$1(_state))) {
      warningWithoutStack$1(false, '%s.state: must be set to an object or null', name);
    }

    if (typeof instance.getChildContext === 'function') {
      !(typeof ctor.childContextTypes === 'object') ? warningWithoutStack$1(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
    }
  }
}

function adoptClassInstance(workInProgress, instance) {
  instance.updater = classComponentUpdater;
  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates

  set(instance, workInProgress);

  {
    instance._reactInternalInstance = fakeInternalInstance;
  }
}

function constructClassInstance(workInProgress, ctor, props, renderExpirationTime) {
  var isLegacyContextConsumer = false;
  var unmaskedContext = emptyContextObject;
  var context = emptyContextObject;
  var contextType = ctor.contextType;

  {
    if ('contextType' in ctor) {
      var isValid = // Allow null for conditional declaration
      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>

      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
        didWarnAboutInvalidateContextType.add(ctor);
        var addendum = '';

        if (contextType === undefined) {
          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';
        } else if (typeof contextType !== 'object') {
          addendum = ' However, it is set to a ' + typeof contextType + '.';
        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
          addendum = ' Did you accidentally pass the Context.Provider instead?';
        } else if (contextType._context !== undefined) {
          // <Context.Consumer>
          addendum = ' Did you accidentally pass the Context.Consumer instead?';
        } else {
          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
        }

        warningWithoutStack$1(false, '%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentName(ctor) || 'Component', addendum);
      }
    }
  }

  if (typeof contextType === 'object' && contextType !== null) {
    context = readContext(contextType);
  } else if (!disableLegacyContext) {
    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    var contextTypes = ctor.contextTypes;
    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
  } // Instantiate twice to help detect side-effects.


  {
    if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      new ctor(props, context); // eslint-disable-line no-new
    }
  }

  var instance = new ctor(props, context);
  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
  adoptClassInstance(workInProgress, instance);

  {
    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
      var componentName = getComponentName(ctor) || 'Component';

      if (!didWarnAboutUninitializedState.has(componentName)) {
        didWarnAboutUninitializedState.add(componentName);
        warningWithoutStack$1(false, '`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
      }
    } // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Warn about these lifecycles if they are present.
    // Don't warn about react-lifecycles-compat polyfilled methods though.


    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
      var foundWillMountName = null;
      var foundWillReceivePropsName = null;
      var foundWillUpdateName = null;

      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
        foundWillMountName = 'componentWillMount';
      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
        foundWillMountName = 'UNSAFE_componentWillMount';
      }

      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
        foundWillReceivePropsName = 'componentWillReceiveProps';
      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
      }

      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
        foundWillUpdateName = 'componentWillUpdate';
      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
      }

      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
        var _componentName = getComponentName(ctor) || 'Component';

        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';

        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
          warningWithoutStack$1(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
        }
      }
    }
  } // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // ReactFiberContext usually updates this cache but can't for newly-created instances.


  if (isLegacyContextConsumer) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return instance;
}

function callComponentWillMount(workInProgress, instance) {
  startPhaseTimer(workInProgress, 'componentWillMount');
  var oldState = instance.state;

  if (typeof instance.componentWillMount === 'function') {
    instance.componentWillMount();
  }

  if (typeof instance.UNSAFE_componentWillMount === 'function') {
    instance.UNSAFE_componentWillMount();
  }

  stopPhaseTimer();

  if (oldState !== instance.state) {
    {
      warningWithoutStack$1(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');
    }

    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
  var oldState = instance.state;
  startPhaseTimer(workInProgress, 'componentWillReceiveProps');

  if (typeof instance.componentWillReceiveProps === 'function') {
    instance.componentWillReceiveProps(newProps, nextContext);
  }

  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
  }

  stopPhaseTimer();

  if (instance.state !== oldState) {
    {
      var componentName = getComponentName(workInProgress.type) || 'Component';

      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
        didWarnAboutStateAssignmentForComponent.add(componentName);
        warningWithoutStack$1(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
      }
    }

    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
} // Invokes the mount life-cycles on a previously never rendered instance.


function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
  {
    checkClassInstance(workInProgress, ctor, newProps);
  }

  var instance = workInProgress.stateNode;
  instance.props = newProps;
  instance.state = workInProgress.memoizedState;
  instance.refs = emptyRefsObject;
  var contextType = ctor.contextType;

  if (typeof contextType === 'object' && contextType !== null) {
    instance.context = readContext(contextType);
  } else if (disableLegacyContext) {
    instance.context = emptyContextObject;
  } else {
    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    instance.context = getMaskedContext(workInProgress, unmaskedContext);
  }

  {
    if (instance.state === newProps) {
      var componentName = getComponentName(ctor) || 'Component';

      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
        didWarnAboutDirectlyAssigningPropsToState.add(componentName);
        warningWithoutStack$1(false, '%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
    }

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
    }
  }

  var updateQueue = workInProgress.updateQueue;

  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    instance.state = workInProgress.memoizedState;
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    instance.state = workInProgress.memoizedState;
  } // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.


  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
    // process them now.

    updateQueue = workInProgress.updateQueue;

    if (updateQueue !== null) {
      processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
      instance.state = workInProgress.memoizedState;
    }
  }

  if (typeof instance.componentDidMount === 'function') {
    workInProgress.effectTag |= Update;
  }
}

function resumeMountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
  var instance = workInProgress.stateNode;
  var oldProps = workInProgress.memoizedProps;
  instance.props = oldProps;
  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;

  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else if (!disableLegacyContext) {
    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.
  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.

  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();
  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;

  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }

  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }

    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillMount');

      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }

      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }

      stopPhaseTimer();
    }

    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    } // If shouldComponentUpdate returned false, we should still update the
    // memoized state to indicate that this work can be reused.


    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  } // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.


  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;
  return shouldUpdate;
} // Invokes the update life-cycles and returns false if it shouldn't rerender.


function updateClassInstance(current, workInProgress, ctor, newProps, renderExpirationTime) {
  var instance = workInProgress.stateNode;
  var oldProps = workInProgress.memoizedProps;
  instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps);
  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;

  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else if (!disableLegacyContext) {
    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.
  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.

  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();
  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;

  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }

  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    }

    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillUpdate');

      if (typeof instance.componentWillUpdate === 'function') {
        instance.componentWillUpdate(newProps, newState, nextContext);
      }

      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
      }

      stopPhaseTimer();
    }

    if (typeof instance.componentDidUpdate === 'function') {
      workInProgress.effectTag |= Update;
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      workInProgress.effectTag |= Snapshot;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    } // If shouldComponentUpdate returned false, we should still update the
    // memoized props/state to indicate that this work can be reused.


    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  } // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.


  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;
  return shouldUpdate;
}

var didWarnAboutMaps;
var didWarnAboutGenerators;
var didWarnAboutStringRefs;
var ownerHasKeyUseWarning;
var ownerHasFunctionTypeWarning;

var warnForMissingKey = function (child) {};

{
  didWarnAboutMaps = false;
  didWarnAboutGenerators = false;
  didWarnAboutStringRefs = {};
  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */

  ownerHasKeyUseWarning = {};
  ownerHasFunctionTypeWarning = {};

  warnForMissingKey = function (child) {
    if (child === null || typeof child !== 'object') {
      return;
    }

    if (!child._store || child._store.validated || child.key != null) {
      return;
    }

    if (!(typeof child._store === 'object')) {
      {
        throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
      }
    }

    child._store.validated = true;
    var currentComponentErrorInfo = 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + getCurrentFiberStackInDev();

    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }

    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
    warning$1(false, 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.');
  };
}

var isArray = Array.isArray;

function coerceRef(returnFiber, current$$1, element) {
  var mixedRef = element.ref;

  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
    {
      // TODO: Clean this up once we turn on the string ref warning for
      // everyone, because the strict mode case will no longer be relevant
      if (returnFiber.mode & StrictMode || warnAboutStringRefs) {
        var componentName = getComponentName(returnFiber.type) || 'Component';

        if (!didWarnAboutStringRefs[componentName]) {
          if (warnAboutStringRefs) {
            warningWithoutStack$1(false, 'Component "%s" contains the string ref "%s". Support for string refs ' + 'will be removed in a future major release. We recommend using ' + 'useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref%s', componentName, mixedRef, getStackByFiberInDevAndProd(returnFiber));
          } else {
            warningWithoutStack$1(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref%s', mixedRef, getStackByFiberInDevAndProd(returnFiber));
          }

          didWarnAboutStringRefs[componentName] = true;
        }
      }
    }

    if (element._owner) {
      var owner = element._owner;
      var inst;

      if (owner) {
        var ownerFiber = owner;

        if (!(ownerFiber.tag === ClassComponent)) {
          {
            throw Error("Function components cannot have refs. Did you mean to use React.forwardRef()?");
          }
        }

        inst = ownerFiber.stateNode;
      }

      if (!inst) {
        {
          throw Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
        }
      }

      var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref

      if (current$$1 !== null && current$$1.ref !== null && typeof current$$1.ref === 'function' && current$$1.ref._stringRef === stringRef) {
        return current$$1.ref;
      }

      var ref = function (value) {
        var refs = inst.refs;

        if (refs === emptyRefsObject) {
          // This is a lazy pooled frozen object, so we need to initialize.
          refs = inst.refs = {};
        }

        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };

      ref._stringRef = stringRef;
      return ref;
    } else {
      if (!(typeof mixedRef === 'string')) {
        {
          throw Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
        }
      }

      if (!element._owner) {
        {
          throw Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.");
        }
      }
    }
  }

  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  if (returnFiber.type !== 'textarea') {
    var addendum = '';

    {
      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getCurrentFiberStackInDev();
    }

    {
      {
        throw Error("Objects are not valid as a React child (found: " + (Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild) + ")." + addendum);
      }
    }
  }
}

function warnOnFunctionType() {
  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + getCurrentFiberStackInDev();

  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
    return;
  }

  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;
  warning$1(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
} // This wrapper function exists because I expect to clone the code in each path
// to be able to optimize each path individually by branching early. This needs
// a compiler or we can do it manually. Helpers that don't need this branching
// live outside of this function.


function ChildReconciler(shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return;
    } // Deletions are added in reversed order so we add it to the front.
    // At this point, the return fiber's effect list is empty except for
    // deletions, so we can just append the deletion to the list. The remaining
    // effects aren't added until the complete phase. Once we implement
    // resuming, this may not be true.


    var last = returnFiber.lastEffect;

    if (last !== null) {
      last.nextEffect = childToDelete;
      returnFiber.lastEffect = childToDelete;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }

    childToDelete.nextEffect = null;
    childToDelete.effectTag = Deletion;
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return null;
    } // TODO: For the shouldClone case, this could be micro-optimized a bit by
    // assuming that after the first child we've already added everything.


    var childToDelete = currentFirstChild;

    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }

    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    // Add the remaining children to a temporary map so that we can find them by
    // keys quickly. Implicit (null) keys get added to this set with their index
    // instead.
    var existingChildren = new Map();
    var existingChild = currentFirstChild;

    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }

      existingChild = existingChild.sibling;
    }

    return existingChildren;
  }

  function useFiber(fiber, pendingProps, expirationTime) {
    // We currently set sibling to null and index to 0 here because it is easy
    // to forget to do before returning it. E.g. for the single child case.
    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
    clone.index = 0;
    clone.sibling = null;
    return clone;
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;

    if (!shouldTrackSideEffects) {
      // Noop.
      return lastPlacedIndex;
    }

    var current$$1 = newFiber.alternate;

    if (current$$1 !== null) {
      var oldIndex = current$$1.index;

      if (oldIndex < lastPlacedIndex) {
        // This is a move.
        newFiber.effectTag = Placement;
        return lastPlacedIndex;
      } else {
        // This item can stay in place.
        return oldIndex;
      }
    } else {
      // This is an insertion.
      newFiber.effectTag = Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    // This is simpler for the single child case. We only need to do a
    // placement for inserting new children.
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.effectTag = Placement;
    }

    return newFiber;
  }

  function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
    if (current$$1 === null || current$$1.tag !== HostText) {
      // Insert
      var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current$$1, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current$$1, element, expirationTime) {
    if (current$$1 !== null && (current$$1.elementType === element.type || ( // Keep this check inline so it only runs on the false path:
    isCompatibleFamilyForHotReloading(current$$1, element)))) {
      // Move based on index
      var existing = useFiber(current$$1, element.props, expirationTime);
      existing.ref = coerceRef(returnFiber, current$$1, element);
      existing.return = returnFiber;

      {
        existing._debugSource = element._source;
        existing._debugOwner = element._owner;
      }

      return existing;
    } else {
      // Insert
      var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
      created.ref = coerceRef(returnFiber, current$$1, element);
      created.return = returnFiber;
      return created;
    }
  }

  function updatePortal(returnFiber, current$$1, portal, expirationTime) {
    if (current$$1 === null || current$$1.tag !== HostPortal || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) {
      // Insert
      var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current$$1, portal.children || [], expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
    if (current$$1 === null || current$$1.tag !== Fragment) {
      // Insert
      var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current$$1, fragment, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);

            _created.ref = coerceRef(returnFiber, null, newChild);
            _created.return = returnFiber;
            return _created;
          }

        case REACT_PORTAL_TYPE:
          {
            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);

            _created2.return = returnFiber;
            return _created2;
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);

        _created3.return = returnFiber;
        return _created3;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
    // Update the fiber if the keys match, otherwise return null.
    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      if (key !== null) {
        return null;
      }

      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              if (newChild.type === REACT_FRAGMENT_TYPE) {
                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
              }

              return updateElement(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }

        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }

        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys, so we neither have to check the old nor
      // new node for the key. If both are text nodes, they match.
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

            if (newChild.type === REACT_FRAGMENT_TYPE) {
              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
            }

            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
          }

        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

            return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber3 = existingChildren.get(newIdx) || null;

        return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }
  /**
   * Warns if there is a duplicate or missing key
   */


  function warnOnInvalidKey(child, knownKeys) {
    {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }

      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_PORTAL_TYPE:
          warnForMissingKey(child);
          var key = child.key;

          if (typeof key !== 'string') {
            break;
          }

          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }

          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }

          warning$1(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);
          break;

        default:
          break;
      }
    }

    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
    // This algorithm can't optimize by searching from both ends since we
    // don't have backpointers on fibers. I'm trying to see how far we can get
    // with that model. If it ends up not being worth the tradeoffs, we can
    // add it later.
    // Even with a two ended optimization, we'd want to optimize for the case
    // where there are few changes and brute force the comparison instead of
    // going for the Map. It'd like to explore hitting that path first in
    // forward-only mode and only go for the Map once we notice that we need
    // lots of look ahead. This doesn't handle reversal as well as two ended
    // search but that's unusual. Besides, for the two ended optimization to
    // work on Iterables, we'd need to copy the whole set.
    // In this first iteration, we'll just live with hitting the bad case
    // (adding everything to a Map) in for every insert/move.
    // If you change this code, also update reconcileChildrenIterator() which
    // uses the same algorithm.
    {
      // First, validate keys.
      var knownKeys = null;

      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnInvalidKey(child, knownKeys);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;
    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }

      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }

        break;
      }

      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }

      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }

      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);

        if (_newFiber === null) {
          continue;
        }

        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }

        previousNewFiber = _newFiber;
      }

      return resultingFirstChild;
    } // Add all children to a key map for quick lookups.


    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);

      if (_newFiber2 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }

        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }

        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
    // This is the same implementation as reconcileChildrenArray(),
    // but using the iterator instead.
    var iteratorFn = getIteratorFn(newChildrenIterable);

    if (!(typeof iteratorFn === 'function')) {
      {
        throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
      }
    }

    {
      // We don't support rendering Generators because it's a mutation.
      // See https://github.com/facebook/react/issues/12995
      if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
      newChildrenIterable[Symbol.toStringTag] === 'Generator') {
        !didWarnAboutGenerators ? warning$1(false, 'Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.') : void 0;
        didWarnAboutGenerators = true;
      } // Warn about using Maps as children


      if (newChildrenIterable.entries === iteratorFn) {
        !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
        didWarnAboutMaps = true;
      } // First, validate keys.
      // We'll get a different iterator later for the main pass.


      var _newChildren = iteratorFn.call(newChildrenIterable);

      if (_newChildren) {
        var knownKeys = null;

        var _step = _newChildren.next();

        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnInvalidKey(child, knownKeys);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);

    if (!(newChildren != null)) {
      {
        throw Error("An iterable object provided no iterator.");
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;
    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    var step = newChildren.next();

    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }

      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }

        break;
      }

      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }

      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }

      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);

        if (_newFiber3 === null) {
          continue;
        }

        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }

        previousNewFiber = _newFiber3;
      }

      return resultingFirstChild;
    } // Add all children to a key map for quick lookups.


    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);

      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }

        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }

        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
    // There's no need to check for keys on text nodes since we don't have a
    // way to define them.
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      // We already have an existing node so let's just update it and delete
      // the rest.
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    } // The existing first child is not a text node so we need to create one
    // and delete the existing ones.


    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
    var key = element.key;
    var child = currentFirstChild;

    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.elementType === element.type || ( // Keep this check inline so it only runs on the false path:
        isCompatibleFamilyForHotReloading(child, element))) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
          existing.ref = coerceRef(returnFiber, child, element);
          existing.return = returnFiber;

          {
            existing._debugSource = element._source;
            existing._debugOwner = element._owner;
          }

          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }

      child = child.sibling;
    }

    if (element.type === REACT_FRAGMENT_TYPE) {
      var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
      created.return = returnFiber;
      return created;
    } else {
      var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);

      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
      _created4.return = returnFiber;
      return _created4;
    }
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
    var key = portal.key;
    var child = currentFirstChild;

    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, portal.children || [], expirationTime);
          existing.return = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }

      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  } // This API will tag the children with the side-effect of the reconciliation
  // itself. They will be added to the side-effect list as we pass through the
  // children and the parent.


  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
    // This function is not recursive.
    // If the top level item is an array, we treat it as a set of children,
    // not as a fragment. Nested arrays on the other hand will be treated as
    // fragment nodes. Recursion happens at the normal flow.
    // Handle top level unkeyed fragments as if they were arrays.
    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
    // We treat the ambiguous cases above the same.
    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;

    if (isUnkeyedTopLevelFragment) {
      newChild = newChild.props.children;
    } // Handle object types


    var isObject = typeof newChild === 'object' && newChild !== null;

    if (isObject) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));

        case REACT_PORTAL_TYPE:
          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
      }
    }

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
    }

    if (isArray(newChild)) {
      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (getIteratorFn(newChild)) {
      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (isObject) {
      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
      // If the new child is undefined, and the return fiber is a composite
      // component, throw an error. If Fiber return types are disabled,
      // we already threw above.
      switch (returnFiber.tag) {
        case ClassComponent:
          {
            {
              var instance = returnFiber.stateNode;

              if (instance.render._isMockFunction) {
                // We allow auto-mocks to proceed as if they're returning null.
                break;
              }
            }
          }
        // Intentionally fall through to the next case, which handles both
        // functions and classes
        // eslint-disable-next-lined no-fallthrough

        case FunctionComponent:
          {
            var Component = returnFiber.type;

            {
              {
                throw Error((Component.displayName || Component.name || 'Component') + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.");
              }
            }
          }
      }
    } // Remaining cases are all treated as empty.


    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

var reconcileChildFibers = ChildReconciler(true);
var mountChildFibers = ChildReconciler(false);
function cloneChildFibers(current$$1, workInProgress) {
  if (!(current$$1 === null || workInProgress.child === current$$1.child)) {
    {
      throw Error("Resuming work not yet implemented.");
    }
  }

  if (workInProgress.child === null) {
    return;
  }

  var currentChild = workInProgress.child;
  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
  workInProgress.child = newChild;
  newChild.return = workInProgress;

  while (currentChild.sibling !== null) {
    currentChild = currentChild.sibling;
    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
    newChild.return = workInProgress;
  }

  newChild.sibling = null;
} // Reset a workInProgress child set to prepare it for a second pass.

function resetChildFibers(workInProgress, renderExpirationTime) {
  var child = workInProgress.child;

  while (child !== null) {
    resetWorkInProgress(child, renderExpirationTime);
    child = child.sibling;
  }
}

var NO_CONTEXT = {};
var contextStackCursor$1 = createCursor(NO_CONTEXT);
var contextFiberStackCursor = createCursor(NO_CONTEXT);
var rootInstanceStackCursor = createCursor(NO_CONTEXT);

function requiredContext(c) {
  if (!(c !== NO_CONTEXT)) {
    {
      throw Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
    }
  }

  return c;
}

function getRootHostContainer() {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  return rootInstance;
}

function pushHostContainer(fiber, nextRootInstance) {
  // Push current root instance onto the stack;
  // This allows us to reset root when portals are popped.
  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.

  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
  // However, we can't just call getRootHostContext() and push it because
  // we'd have a different number of entries on the stack depending on
  // whether getRootHostContext() throws somewhere in renderer code or not.
  // So we push an empty value first. This lets us safely unwind on errors.

  push(contextStackCursor$1, NO_CONTEXT, fiber);
  var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.

  pop(contextStackCursor$1, fiber);
  push(contextStackCursor$1, nextRootContext, fiber);
}

function popHostContainer(fiber) {
  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
  pop(rootInstanceStackCursor, fiber);
}

function getHostContext() {
  var context = requiredContext(contextStackCursor$1.current);
  return context;
}

function pushHostContext(fiber) {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  var context = requiredContext(contextStackCursor$1.current);
  var nextContext = getChildHostContext(context, fiber.type, rootInstance); // Don't push this Fiber's context unless it's unique.

  if (context === nextContext) {
    return;
  } // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.


  push(contextFiberStackCursor, fiber, fiber);
  push(contextStackCursor$1, nextContext, fiber);
}

function popHostContext(fiber) {
  // Do not pop unless this Fiber provided the current context.
  // pushHostContext() only pushes Fibers that provide unique contexts.
  if (contextFiberStackCursor.current !== fiber) {
    return;
  }

  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
}

var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
// inherited deeply down the subtree. The upper bits only affect
// this immediate suspense boundary and gets reset each new
// boundary or suspense list.

var SubtreeSuspenseContextMask = 1; // Subtree Flags:
// InvisibleParentSuspenseContext indicates that one of our parent Suspense
// boundaries is not currently showing visible main content.
// Either because it is already showing a fallback or is not mounted at all.
// We can use this to determine if it is desirable to trigger a fallback at
// the parent. If not, then we might need to trigger undesirable boundaries
// and/or suspend the commit to avoid hiding the parent content.

var InvisibleParentSuspenseContext = 1; // Shallow Flags:
// ForceSuspenseFallback can be used by SuspenseList to force newly added
// items into their fallback state during one of the render passes.

var ForceSuspenseFallback = 2;
var suspenseStackCursor = createCursor(DefaultSuspenseContext);
function hasSuspenseContext(parentContext, flag) {
  return (parentContext & flag) !== 0;
}
function setDefaultShallowSuspenseContext(parentContext) {
  return parentContext & SubtreeSuspenseContextMask;
}
function setShallowSuspenseContext(parentContext, shallowContext) {
  return parentContext & SubtreeSuspenseContextMask | shallowContext;
}
function addSubtreeSuspenseContext(parentContext, subtreeContext) {
  return parentContext | subtreeContext;
}
function pushSuspenseContext(fiber, newContext) {
  push(suspenseStackCursor, newContext, fiber);
}
function popSuspenseContext(fiber) {
  pop(suspenseStackCursor, fiber);
}

function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
  // If it was the primary children that just suspended, capture and render the
  // fallback. Otherwise, don't capture and bubble to the next boundary.
  var nextState = workInProgress.memoizedState;

  if (nextState !== null) {
    if (nextState.dehydrated !== null) {
      // A dehydrated boundary always captures.
      return true;
    }

    return false;
  }

  var props = workInProgress.memoizedProps; // In order to capture, the Suspense component must have a fallback prop.

  if (props.fallback === undefined) {
    return false;
  } // Regular boundaries always capture.


  if (props.unstable_avoidThisFallback !== true) {
    return true;
  } // If it's a boundary we should avoid, then we prefer to bubble up to the
  // parent boundary if it is currently invisible.


  if (hasInvisibleParent) {
    return false;
  } // If the parent is not able to handle it, we must handle it.


  return true;
}
function findFirstSuspended(row) {
  var node = row;

  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;

      if (state !== null) {
        var dehydrated = state.dehydrated;

        if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
          return node;
        }
      }
    } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
    // keep track of whether it suspended or not.
    node.memoizedProps.revealOrder !== undefined) {
      var didSuspend = (node.effectTag & DidCapture) !== NoEffect;

      if (didSuspend) {
        return node;
      }
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === row) {
      return null;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === row) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }

  return null;
}

var emptyObject = {};
var isArray$2 = Array.isArray;
function createResponderInstance(responder, responderProps, responderState, fiber) {
  return {
    fiber: fiber,
    props: responderProps,
    responder: responder,
    rootEventTypes: null,
    state: responderState
  };
}

function mountEventResponder$1(responder, responderProps, fiber, respondersMap, rootContainerInstance) {
  var responderState = emptyObject;
  var getInitialState = responder.getInitialState;

  if (getInitialState !== null) {
    responderState = getInitialState(responderProps);
  }

  var responderInstance = createResponderInstance(responder, responderProps, responderState, fiber);

  if (!rootContainerInstance) {
    var node = fiber;

    while (node !== null) {
      var tag = node.tag;

      if (tag === HostComponent) {
        rootContainerInstance = node.stateNode;
        break;
      } else if (tag === HostRoot) {
        rootContainerInstance = node.stateNode.containerInfo;
        break;
      }

      node = node.return;
    }
  }

  mountResponderInstance(responder, responderInstance, responderProps, responderState, rootContainerInstance);
  respondersMap.set(responder, responderInstance);
}

function updateEventListener(listener, fiber, visistedResponders, respondersMap, rootContainerInstance) {
  var responder;
  var props;

  if (listener) {
    responder = listener.responder;
    props = listener.props;
  }

  if (!(responder && responder.$$typeof === REACT_RESPONDER_TYPE)) {
    {
      throw Error("An invalid value was used as an event listener. Expect one or many event listeners created via React.unstable_useResponder().");
    }
  }

  var listenerProps = props;

  if (visistedResponders.has(responder)) {
    // show warning
    {
      warning$1(false, 'Duplicate event responder "%s" found in event listeners. ' + 'Event listeners passed to elements cannot use the same event responder more than once.', responder.displayName);
    }

    return;
  }

  visistedResponders.add(responder);
  var responderInstance = respondersMap.get(responder);

  if (responderInstance === undefined) {
    // Mount (happens in either complete or commit phase)
    mountEventResponder$1(responder, listenerProps, fiber, respondersMap, rootContainerInstance);
  } else {
    // Update (happens during commit phase only)
    responderInstance.props = listenerProps;
    responderInstance.fiber = fiber;
  }
}

function updateEventListeners(listeners, fiber, rootContainerInstance) {
  var visistedResponders = new Set();
  var dependencies = fiber.dependencies;

  if (listeners != null) {
    if (dependencies === null) {
      dependencies = fiber.dependencies = {
        expirationTime: NoWork,
        firstContext: null,
        responders: new Map()
      };
    }

    var respondersMap = dependencies.responders;

    if (respondersMap === null) {
      respondersMap = new Map();
    }

    if (isArray$2(listeners)) {
      for (var i = 0, length = listeners.length; i < length; i++) {
        var listener = listeners[i];
        updateEventListener(listener, fiber, visistedResponders, respondersMap, rootContainerInstance);
      }
    } else {
      updateEventListener(listeners, fiber, visistedResponders, respondersMap, rootContainerInstance);
    }
  }

  if (dependencies !== null) {
    var _respondersMap = dependencies.responders;

    if (_respondersMap !== null) {
      // Unmount
      var mountedResponders = Array.from(_respondersMap.keys());

      for (var _i = 0, _length = mountedResponders.length; _i < _length; _i++) {
        var mountedResponder = mountedResponders[_i];

        if (!visistedResponders.has(mountedResponder)) {
          var responderInstance = _respondersMap.get(mountedResponder);

          unmountResponderInstance(responderInstance);

          _respondersMap.delete(mountedResponder);
        }
      }
    }
  }
}
function createResponderListener(responder, props) {
  var eventResponderListener = {
    responder: responder,
    props: props
  };

  {
    Object.freeze(eventResponderListener);
  }

  return eventResponderListener;
}

var NoEffect$1 =
/*             */
0;
var UnmountSnapshot =
/*      */
2;
var UnmountMutation =
/*      */
4;
var MountMutation =
/*        */
8;
var UnmountLayout =
/*        */
16;
var MountLayout =
/*          */
32;
var MountPassive =
/*         */
64;
var UnmountPassive =
/*       */
128;

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
var didWarnAboutMismatchedHooksForComponent;

{
  didWarnAboutMismatchedHooksForComponent = new Set();
}

// These are set right before calling the component.
var renderExpirationTime$1 = NoWork; // The work-in-progress fiber. I've named it differently to distinguish it from
// the work-in-progress hook.

var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
// current hook list is the list that belongs to the current fiber. The
// work-in-progress hook list is a new list that will be added to the
// work-in-progress fiber.

var currentHook = null;
var nextCurrentHook = null;
var firstWorkInProgressHook = null;
var workInProgressHook = null;
var nextWorkInProgressHook = null;
var remainingExpirationTime = NoWork;
var componentUpdateQueue = null;
var sideEffectTag = 0; // Updates scheduled during render will trigger an immediate re-render at the
// end of the current pass. We can't store these updates on the normal queue,
// because if the work is aborted, they should be discarded. Because this is
// a relatively rare case, we also don't want to add an additional field to
// either the hook or queue object types. So we store them in a lazily create
// map of queue -> render-phase updates, which are discarded once the component
// completes without re-rendering.
// Whether an update was scheduled during the currently executing render pass.

var didScheduleRenderPhaseUpdate = false; // Lazily created map of render-phase updates

var renderPhaseUpdates = null; // Counter to prevent infinite loops.

var numberOfReRenders = 0;
var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook

var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
// The list stores the order of hooks used during the initial render (mount).
// Subsequent renders (updates) reference this list.

var hookTypesDev = null;
var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
// the dependencies for Hooks that need them (e.g. useEffect or useMemo).
// When true, such Hooks will always be "remounted". Only used during hot reload.

var ignorePreviousDependencies = false;

function mountHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev === null) {
      hookTypesDev = [hookName];
    } else {
      hookTypesDev.push(hookName);
    }
  }
}

function updateHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev !== null) {
      hookTypesUpdateIndexDev++;

      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
        warnOnHookMismatchInDev(hookName);
      }
    }
  }
}

function checkDepsAreArrayDev(deps) {
  {
    if (deps !== undefined && deps !== null && !Array.isArray(deps)) {
      // Verify deps, but only on mount to avoid extra checks.
      // It's unlikely their type would change as usually you define them inline.
      warning$1(false, '%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);
    }
  }
}

function warnOnHookMismatchInDev(currentHookName) {
  {
    var componentName = getComponentName(currentlyRenderingFiber$1.type);

    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
      didWarnAboutMismatchedHooksForComponent.add(componentName);

      if (hookTypesDev !== null) {
        var table = '';
        var secondColumnStart = 30;

        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
          var oldHookName = hookTypesDev[i];
          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
          var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
          // lol @ IE not supporting String#repeat

          while (row.length < secondColumnStart) {
            row += ' ';
          }

          row += newHookName + '\n';
          table += row;
        }

        warning$1(false, 'React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://fb.me/rules-of-hooks\n\n' + '   Previous render            Next render\n' + '   ------------------------------------------------------\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', componentName, table);
      }
    }
  }
}

function throwInvalidHookError() {
  {
    {
      throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.");
    }
  }
}

function areHookInputsEqual(nextDeps, prevDeps) {
  {
    if (ignorePreviousDependencies) {
      // Only true when this component is being hot reloaded.
      return false;
    }
  }

  if (prevDeps === null) {
    {
      warning$1(false, '%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
    }

    return false;
  }

  {
    // Don't bother comparing lengths in prod because these arrays should be
    // passed inline.
    if (nextDeps.length !== prevDeps.length) {
      warning$1(false, 'The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
    }
  }

  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
    if (is$1(nextDeps[i], prevDeps[i])) {
      continue;
    }

    return false;
  }

  return true;
}

function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
  renderExpirationTime$1 = nextRenderExpirationTime;
  currentlyRenderingFiber$1 = workInProgress;
  nextCurrentHook = current !== null ? current.memoizedState : null;

  {
    hookTypesDev = current !== null ? current._debugHookTypes : null;
    hookTypesUpdateIndexDev = -1; // Used for hot reloading:

    ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
  } // The following should have already been reset
  // currentHook = null;
  // workInProgressHook = null;
  // remainingExpirationTime = NoWork;
  // componentUpdateQueue = null;
  // didScheduleRenderPhaseUpdate = false;
  // renderPhaseUpdates = null;
  // numberOfReRenders = 0;
  // sideEffectTag = 0;
  // TODO Warn if no hooks are used at all during mount, then some are used during update.
  // Currently we will identify the update render as a mount because nextCurrentHook === null.
  // This is tricky because it's valid for certain types of components (e.g. React.lazy)
  // Using nextCurrentHook to differentiate between mount/update only works if at least one stateful hook is used.
  // Non-stateful hooks (e.g. context) don't get added to memoizedState,
  // so nextCurrentHook would be null during updates and mounts.


  {
    if (nextCurrentHook !== null) {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
    } else if (hookTypesDev !== null) {
      // This dispatcher handles an edge case where a component is updating,
      // but no stateful hooks have been used.
      // We want to match the production code behavior (which will use HooksDispatcherOnMount),
      // but with the extra DEV validation to ensure hooks ordering hasn't changed.
      // This dispatcher does that.
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
    } else {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
    }
  }

  var children = Component(props, refOrContext);

  if (didScheduleRenderPhaseUpdate) {
    do {
      didScheduleRenderPhaseUpdate = false;
      numberOfReRenders += 1;

      {
        // Even when hot reloading, allow dependencies to stabilize
        // after first render to prevent infinite render phase updates.
        ignorePreviousDependencies = false;
      } // Start over from the beginning of the list


      nextCurrentHook = current !== null ? current.memoizedState : null;
      nextWorkInProgressHook = firstWorkInProgressHook;
      currentHook = null;
      workInProgressHook = null;
      componentUpdateQueue = null;

      {
        // Also validate hook order for cascading updates.
        hookTypesUpdateIndexDev = -1;
      }

      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
      children = Component(props, refOrContext);
    } while (didScheduleRenderPhaseUpdate);

    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  } // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrancy.


  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
  var renderedWork = currentlyRenderingFiber$1;
  renderedWork.memoizedState = firstWorkInProgressHook;
  renderedWork.expirationTime = remainingExpirationTime;
  renderedWork.updateQueue = componentUpdateQueue;
  renderedWork.effectTag |= sideEffectTag;

  {
    renderedWork._debugHookTypes = hookTypesDev;
  } // This check uses currentHook so that it works the same in DEV and prod bundles.
  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.


  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
  renderExpirationTime$1 = NoWork;
  currentlyRenderingFiber$1 = null;
  currentHook = null;
  nextCurrentHook = null;
  firstWorkInProgressHook = null;
  workInProgressHook = null;
  nextWorkInProgressHook = null;

  {
    currentHookNameInDev = null;
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;
  }

  remainingExpirationTime = NoWork;
  componentUpdateQueue = null;
  sideEffectTag = 0; // These were reset above
  // didScheduleRenderPhaseUpdate = false;
  // renderPhaseUpdates = null;
  // numberOfReRenders = 0;

  if (!!didRenderTooFewHooks) {
    {
      throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
    }
  }

  return children;
}
function bailoutHooks(current, workInProgress, expirationTime) {
  workInProgress.updateQueue = current.updateQueue;
  workInProgress.effectTag &= ~(Passive | Update);

  if (current.expirationTime <= expirationTime) {
    current.expirationTime = NoWork;
  }
}
function resetHooks() {
  // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrancy.
  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher; // This is used to reset the state of this module when a component throws.
  // It's also called inside mountIndeterminateComponent if we determine the
  // component is a module-style component.

  renderExpirationTime$1 = NoWork;
  currentlyRenderingFiber$1 = null;
  currentHook = null;
  nextCurrentHook = null;
  firstWorkInProgressHook = null;
  workInProgressHook = null;
  nextWorkInProgressHook = null;

  {
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;
    currentHookNameInDev = null;
  }

  remainingExpirationTime = NoWork;
  componentUpdateQueue = null;
  sideEffectTag = 0;
  didScheduleRenderPhaseUpdate = false;
  renderPhaseUpdates = null;
  numberOfReRenders = 0;
}

function mountWorkInProgressHook() {
  var hook = {
    memoizedState: null,
    baseState: null,
    queue: null,
    baseUpdate: null,
    next: null
  };

  if (workInProgressHook === null) {
    // This is the first hook in the list
    firstWorkInProgressHook = workInProgressHook = hook;
  } else {
    // Append to the end of the list
    workInProgressHook = workInProgressHook.next = hook;
  }

  return workInProgressHook;
}

function updateWorkInProgressHook() {
  // This function is used both for updates and for re-renders triggered by a
  // render phase update. It assumes there is either a current hook we can
  // clone, or a work-in-progress hook from a previous render pass that we can
  // use as a base. When we reach the end of the base list, we must switch to
  // the dispatcher used for mounts.
  if (nextWorkInProgressHook !== null) {
    // There's already a work-in-progress. Reuse it.
    workInProgressHook = nextWorkInProgressHook;
    nextWorkInProgressHook = workInProgressHook.next;
    currentHook = nextCurrentHook;
    nextCurrentHook = currentHook !== null ? currentHook.next : null;
  } else {
    // Clone from the current hook.
    if (!(nextCurrentHook !== null)) {
      {
        throw Error("Rendered more hooks than during the previous render.");
      }
    }

    currentHook = nextCurrentHook;
    var newHook = {
      memoizedState: currentHook.memoizedState,
      baseState: currentHook.baseState,
      queue: currentHook.queue,
      baseUpdate: currentHook.baseUpdate,
      next: null
    };

    if (workInProgressHook === null) {
      // This is the first hook in the list.
      workInProgressHook = firstWorkInProgressHook = newHook;
    } else {
      // Append to the end of the list.
      workInProgressHook = workInProgressHook.next = newHook;
    }

    nextCurrentHook = currentHook.next;
  }

  return workInProgressHook;
}

function createFunctionComponentUpdateQueue() {
  return {
    lastEffect: null
  };
}

function basicStateReducer(state, action) {
  return typeof action === 'function' ? action(state) : action;
}

function mountReducer(reducer, initialArg, init) {
  var hook = mountWorkInProgressHook();
  var initialState;

  if (init !== undefined) {
    initialState = init(initialArg);
  } else {
    initialState = initialArg;
  }

  hook.memoizedState = hook.baseState = initialState;
  var queue = hook.queue = {
    last: null,
    dispatch: null,
    lastRenderedReducer: reducer,
    lastRenderedState: initialState
  };
  var dispatch = queue.dispatch = dispatchAction.bind(null, // Flow doesn't know this is non-null, but we do.
  currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateReducer(reducer, initialArg, init) {
  var hook = updateWorkInProgressHook();
  var queue = hook.queue;

  if (!(queue !== null)) {
    {
      throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
    }
  }

  queue.lastRenderedReducer = reducer;

  if (numberOfReRenders > 0) {
    // This is a re-render. Apply the new render phase updates to the previous
    // work-in-progress hook.
    var _dispatch = queue.dispatch;

    if (renderPhaseUpdates !== null) {
      // Render phase updates are stored in a map of queue -> linked list
      var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

      if (firstRenderPhaseUpdate !== undefined) {
        renderPhaseUpdates.delete(queue);
        var newState = hook.memoizedState;
        var update = firstRenderPhaseUpdate;

        do {
          // Process this render phase update. We don't have to check the
          // priority because it will always be the same as the current
          // render's.
          var action = update.action;
          newState = reducer(newState, action);
          update = update.next;
        } while (update !== null); // Mark that the fiber performed work, but only if the new state is
        // different from the current state.


        if (!is$1(newState, hook.memoizedState)) {
          markWorkInProgressReceivedUpdate();
        }

        hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
        // the base state unless the queue is empty.
        // TODO: Not sure if this is the desired semantics, but it's what we
        // do for gDSFP. I can't remember why.

        if (hook.baseUpdate === queue.last) {
          hook.baseState = newState;
        }

        queue.lastRenderedState = newState;
        return [newState, _dispatch];
      }
    }

    return [hook.memoizedState, _dispatch];
  } // The last update in the entire queue


  var last = queue.last; // The last update that is part of the base state.

  var baseUpdate = hook.baseUpdate;
  var baseState = hook.baseState; // Find the first unprocessed update.

  var first;

  if (baseUpdate !== null) {
    if (last !== null) {
      // For the first update, the queue is a circular linked list where
      // `queue.last.next = queue.first`. Once the first update commits, and
      // the `baseUpdate` is no longer empty, we can unravel the list.
      last.next = null;
    }

    first = baseUpdate.next;
  } else {
    first = last !== null ? last.next : null;
  }

  if (first !== null) {
    var _newState = baseState;
    var newBaseState = null;
    var newBaseUpdate = null;
    var prevUpdate = baseUpdate;
    var _update = first;
    var didSkip = false;

    do {
      var updateExpirationTime = _update.expirationTime;

      if (updateExpirationTime < renderExpirationTime$1) {
        // Priority is insufficient. Skip this update. If this is the first
        // skipped update, the previous update/state is the new base
        // update/state.
        if (!didSkip) {
          didSkip = true;
          newBaseUpdate = prevUpdate;
          newBaseState = _newState;
        } // Update the remaining priority in the queue.


        if (updateExpirationTime > remainingExpirationTime) {
          remainingExpirationTime = updateExpirationTime;
          markUnprocessedUpdateTime(remainingExpirationTime);
        }
      } else {
        // This update does have sufficient priority.
        // Mark the event time of this update as relevant to this render pass.
        // TODO: This should ideally use the true event time of this update rather than
        // its priority which is a derived and not reverseable value.
        // TODO: We should skip this update if it was already committed but currently
        // we have no way of detecting the difference between a committed and suspended
        // update here.
        markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig); // Process this update.

        if (_update.eagerReducer === reducer) {
          // If this update was processed eagerly, and its reducer matches the
          // current reducer, we can use the eagerly computed state.
          _newState = _update.eagerState;
        } else {
          var _action = _update.action;
          _newState = reducer(_newState, _action);
        }
      }

      prevUpdate = _update;
      _update = _update.next;
    } while (_update !== null && _update !== first);

    if (!didSkip) {
      newBaseUpdate = prevUpdate;
      newBaseState = _newState;
    } // Mark that the fiber performed work, but only if the new state is
    // different from the current state.


    if (!is$1(_newState, hook.memoizedState)) {
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = _newState;
    hook.baseUpdate = newBaseUpdate;
    hook.baseState = newBaseState;
    queue.lastRenderedState = _newState;
  }

  var dispatch = queue.dispatch;
  return [hook.memoizedState, dispatch];
}

function mountState(initialState) {
  var hook = mountWorkInProgressHook();

  if (typeof initialState === 'function') {
    initialState = initialState();
  }

  hook.memoizedState = hook.baseState = initialState;
  var queue = hook.queue = {
    last: null,
    dispatch: null,
    lastRenderedReducer: basicStateReducer,
    lastRenderedState: initialState
  };
  var dispatch = queue.dispatch = dispatchAction.bind(null, // Flow doesn't know this is non-null, but we do.
  currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateState(initialState) {
  return updateReducer(basicStateReducer, initialState);
}

function pushEffect(tag, create, destroy, deps) {
  var effect = {
    tag: tag,
    create: create,
    destroy: destroy,
    deps: deps,
    // Circular
    next: null
  };

  if (componentUpdateQueue === null) {
    componentUpdateQueue = createFunctionComponentUpdateQueue();
    componentUpdateQueue.lastEffect = effect.next = effect;
  } else {
    var lastEffect = componentUpdateQueue.lastEffect;

    if (lastEffect === null) {
      componentUpdateQueue.lastEffect = effect.next = effect;
    } else {
      var firstEffect = lastEffect.next;
      lastEffect.next = effect;
      effect.next = firstEffect;
      componentUpdateQueue.lastEffect = effect;
    }
  }

  return effect;
}

function mountRef(initialValue) {
  var hook = mountWorkInProgressHook();
  var ref = {
    current: initialValue
  };

  {
    Object.seal(ref);
  }

  hook.memoizedState = ref;
  return ref;
}

function updateRef(initialValue) {
  var hook = updateWorkInProgressHook();
  return hook.memoizedState;
}

function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  sideEffectTag |= fiberEffectTag;
  hook.memoizedState = pushEffect(hookEffectTag, create, undefined, nextDeps);
}

function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var destroy = undefined;

  if (currentHook !== null) {
    var prevEffect = currentHook.memoizedState;
    destroy = prevEffect.destroy;

    if (nextDeps !== null) {
      var prevDeps = prevEffect.deps;

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        pushEffect(NoEffect$1, create, destroy, nextDeps);
        return;
      }
    }
  }

  sideEffectTag |= fiberEffectTag;
  hook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextDeps);
}

function mountEffect(create, deps) {
  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
    }
  }

  return mountEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
}

function updateEffect(create, deps) {
  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
    }
  }

  return updateEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
}

function mountLayoutEffect(create, deps) {
  return mountEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
}

function updateLayoutEffect(create, deps) {
  return updateEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
}

function imperativeHandleEffect(create, ref) {
  if (typeof ref === 'function') {
    var refCallback = ref;

    var _inst = create();

    refCallback(_inst);
    return function () {
      refCallback(null);
    };
  } else if (ref !== null && ref !== undefined) {
    var refObject = ref;

    {
      !refObject.hasOwnProperty('current') ? warning$1(false, 'Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}') : void 0;
    }

    var _inst2 = create();

    refObject.current = _inst2;
    return function () {
      refObject.current = null;
    };
  }
}

function mountImperativeHandle(ref, create, deps) {
  {
    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
  } // TODO: If deps are provided, should we skip comparing the ref itself?


  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
  return mountEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function updateImperativeHandle(ref, create, deps) {
  {
    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
  } // TODO: If deps are provided, should we skip comparing the ref itself?


  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
  return updateEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function mountDebugValue(value, formatterFn) {// This hook is normally a no-op.
  // The react-debug-hooks package injects its own implementation
  // so that e.g. DevTools can display custom hook values.
}

var updateDebugValue = mountDebugValue;

function mountCallback(callback, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function updateCallback(callback, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;

  if (prevState !== null) {
    if (nextDeps !== null) {
      var prevDeps = prevState[1];

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }

  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function mountMemo(nextCreate, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function updateMemo(nextCreate, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;

  if (prevState !== null) {
    // Assume these are defined. If they're not, areHookInputsEqual will warn.
    if (nextDeps !== null) {
      var prevDeps = prevState[1];

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }

  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function mountDeferredValue(value, config) {
  var _mountState = mountState(value),
      prevValue = _mountState[0],
      setValue = _mountState[1];

  mountEffect(function () {
    unstable_next(function () {
      var previousConfig = ReactCurrentBatchConfig$1.suspense;
      ReactCurrentBatchConfig$1.suspense = config === undefined ? null : config;

      try {
        setValue(value);
      } finally {
        ReactCurrentBatchConfig$1.suspense = previousConfig;
      }
    });
  }, [value, config]);
  return prevValue;
}

function updateDeferredValue(value, config) {
  var _updateState = updateState(value),
      prevValue = _updateState[0],
      setValue = _updateState[1];

  updateEffect(function () {
    unstable_next(function () {
      var previousConfig = ReactCurrentBatchConfig$1.suspense;
      ReactCurrentBatchConfig$1.suspense = config === undefined ? null : config;

      try {
        setValue(value);
      } finally {
        ReactCurrentBatchConfig$1.suspense = previousConfig;
      }
    });
  }, [value, config]);
  return prevValue;
}

function mountTransition(config) {
  var _mountState2 = mountState(false),
      isPending = _mountState2[0],
      setPending = _mountState2[1];

  var startTransition = mountCallback(function (callback) {
    setPending(true);
    unstable_next(function () {
      var previousConfig = ReactCurrentBatchConfig$1.suspense;
      ReactCurrentBatchConfig$1.suspense = config === undefined ? null : config;

      try {
        setPending(false);
        callback();
      } finally {
        ReactCurrentBatchConfig$1.suspense = previousConfig;
      }
    });
  }, [config, isPending]);
  return [startTransition, isPending];
}

function updateTransition(config) {
  var _updateState2 = updateState(false),
      isPending = _updateState2[0],
      setPending = _updateState2[1];

  var startTransition = updateCallback(function (callback) {
    setPending(true);
    unstable_next(function () {
      var previousConfig = ReactCurrentBatchConfig$1.suspense;
      ReactCurrentBatchConfig$1.suspense = config === undefined ? null : config;

      try {
        setPending(false);
        callback();
      } finally {
        ReactCurrentBatchConfig$1.suspense = previousConfig;
      }
    });
  }, [config, isPending]);
  return [startTransition, isPending];
}

function dispatchAction(fiber, queue, action) {
  if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
    {
      throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
    }
  }

  {
    !(typeof arguments[3] !== 'function') ? warning$1(false, "State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().') : void 0;
  }

  var alternate = fiber.alternate;

  if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
    // This is a render phase update. Stash it in a lazily-created map of
    // queue -> linked list of updates. After this render pass, we'll restart
    // and apply the stashed updates on top of the work-in-progress hook.
    didScheduleRenderPhaseUpdate = true;
    var update = {
      expirationTime: renderExpirationTime$1,
      suspenseConfig: null,
      action: action,
      eagerReducer: null,
      eagerState: null,
      next: null
    };

    {
      update.priority = getCurrentPriorityLevel();
    }

    if (renderPhaseUpdates === null) {
      renderPhaseUpdates = new Map();
    }

    var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

    if (firstRenderPhaseUpdate === undefined) {
      renderPhaseUpdates.set(queue, update);
    } else {
      // Append the update to the end of the list.
      var lastRenderPhaseUpdate = firstRenderPhaseUpdate;

      while (lastRenderPhaseUpdate.next !== null) {
        lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
      }

      lastRenderPhaseUpdate.next = update;
    }
  } else {
    var currentTime = requestCurrentTimeForUpdate();
    var suspenseConfig = requestCurrentSuspenseConfig();
    var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
    var _update2 = {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      action: action,
      eagerReducer: null,
      eagerState: null,
      next: null
    };

    {
      _update2.priority = getCurrentPriorityLevel();
    } // Append the update to the end of the list.


    var last = queue.last;

    if (last === null) {
      // This is the first update. Create a circular list.
      _update2.next = _update2;
    } else {
      var first = last.next;

      if (first !== null) {
        // Still circular.
        _update2.next = first;
      }

      last.next = _update2;
    }

    queue.last = _update2;

    if (fiber.expirationTime === NoWork && (alternate === null || alternate.expirationTime === NoWork)) {
      // The queue is currently empty, which means we can eagerly compute the
      // next state before entering the render phase. If the new state is the
      // same as the current state, we may be able to bail out entirely.
      var lastRenderedReducer = queue.lastRenderedReducer;

      if (lastRenderedReducer !== null) {
        var prevDispatcher;

        {
          prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
        }

        try {
          var currentState = queue.lastRenderedState;
          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
          // it, on the update object. If the reducer hasn't changed by the
          // time we enter the render phase, then the eager state can be used
          // without calling the reducer again.

          _update2.eagerReducer = lastRenderedReducer;
          _update2.eagerState = eagerState;

          if (is$1(eagerState, currentState)) {
            // Fast path. We can bail out without scheduling React to re-render.
            // It's still possible that we'll need to rebase this update later,
            // if the component re-renders for a different reason and by that
            // time the reducer has changed.
            return;
          }
        } catch (error) {// Suppress the error. It will throw again in the render phase.
        } finally {
          {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        }
      }
    }

    {
      // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
      if ('undefined' !== typeof jest) {
        warnIfNotScopedWithMatchingAct(fiber);
        warnIfNotCurrentlyActingUpdatesInDev(fiber);
      }
    }

    scheduleWork(fiber, expirationTime);
  }
}

var ContextOnlyDispatcher = {
  readContext: readContext,
  useCallback: throwInvalidHookError,
  useContext: throwInvalidHookError,
  useEffect: throwInvalidHookError,
  useImperativeHandle: throwInvalidHookError,
  useLayoutEffect: throwInvalidHookError,
  useMemo: throwInvalidHookError,
  useReducer: throwInvalidHookError,
  useRef: throwInvalidHookError,
  useState: throwInvalidHookError,
  useDebugValue: throwInvalidHookError,
  useResponder: throwInvalidHookError,
  useDeferredValue: throwInvalidHookError,
  useTransition: throwInvalidHookError
};
var HooksDispatcherOnMountInDEV = null;
var HooksDispatcherOnMountWithHookTypesInDEV = null;
var HooksDispatcherOnUpdateInDEV = null;
var InvalidNestedHooksDispatcherOnMountInDEV = null;
var InvalidNestedHooksDispatcherOnUpdateInDEV = null;

{
  var warnInvalidContextAccess = function () {
    warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
  };

  var warnInvalidHookAccess = function () {
    warning$1(false, 'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://fb.me/rules-of-hooks');
  };

  HooksDispatcherOnMountInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      mountHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      mountHookTypesDev();
      return mountDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      mountHookTypesDev();
      return createResponderListener(responder, props);
    },
    useDeferredValue: function (value, config) {
      currentHookNameInDev = 'useDeferredValue';
      mountHookTypesDev();
      return mountDeferredValue(value, config);
    },
    useTransition: function (config) {
      currentHookNameInDev = 'useTransition';
      mountHookTypesDev();
      return mountTransition(config);
    }
  };
  HooksDispatcherOnMountWithHookTypesInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return mountDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      updateHookTypesDev();
      return createResponderListener(responder, props);
    },
    useDeferredValue: function (value, config) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return mountDeferredValue(value, config);
    },
    useTransition: function (config) {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return mountTransition(config);
    }
  };
  HooksDispatcherOnUpdateInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return updateRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return updateDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      updateHookTypesDev();
      return createResponderListener(responder, props);
    },
    useDeferredValue: function (value, config) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return updateDeferredValue(value, config);
    },
    useTransition: function (config) {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return updateTransition(config);
    }
  };
  InvalidNestedHooksDispatcherOnMountInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return createResponderListener(responder, props);
    },
    useDeferredValue: function (value, config) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDeferredValue(value, config);
    },
    useTransition: function (config) {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountTransition(config);
    }
  };
  InvalidNestedHooksDispatcherOnUpdateInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDebugValue(value, formatterFn);
    },
    useResponder: function (responder, props) {
      currentHookNameInDev = 'useResponder';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return createResponderListener(responder, props);
    },
    useDeferredValue: function (value, config) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDeferredValue(value, config);
    },
    useTransition: function (config) {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateTransition(config);
    }
  };
}

// CommonJS interop named imports.

var now$1 = unstable_now;
var commitTime = 0;
var profilerStartTime = -1;

function getCommitTime() {
  return commitTime;
}

function recordCommitTime() {
  if (!enableProfilerTimer) {
    return;
  }

  commitTime = now$1();
}

function startProfilerTimer(fiber) {
  if (!enableProfilerTimer) {
    return;
  }

  profilerStartTime = now$1();

  if (fiber.actualStartTime < 0) {
    fiber.actualStartTime = now$1();
  }
}

function stopProfilerTimerIfRunning(fiber) {
  if (!enableProfilerTimer) {
    return;
  }

  profilerStartTime = -1;
}

function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
  if (!enableProfilerTimer) {
    return;
  }

  if (profilerStartTime >= 0) {
    var elapsedTime = now$1() - profilerStartTime;
    fiber.actualDuration += elapsedTime;

    if (overrideBaseTime) {
      fiber.selfBaseDuration = elapsedTime;
    }

    profilerStartTime = -1;
  }
}

// This may have been an insertion or a hydration.

var hydrationParentFiber = null;
var nextHydratableInstance = null;
var isHydrating = false;

function warnIfHydrating() {
  {
    !!isHydrating ? warning$1(false, 'We should not be hydrating here. This is a bug in React. Please file a bug.') : void 0;
  }
}

function enterHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }

  var parentInstance = fiber.stateNode.containerInfo;
  nextHydratableInstance = getFirstHydratableChild(parentInstance);
  hydrationParentFiber = fiber;
  isHydrating = true;
  return true;
}

function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance) {
  if (!supportsHydration) {
    return false;
  }

  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);
  popToNextHostParent(fiber);
  isHydrating = true;
  return true;
}

function deleteHydratableInstance(returnFiber, instance) {
  {
    switch (returnFiber.tag) {
      case HostRoot:
        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
        break;

      case HostComponent:
        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
        break;
    }
  }

  var childToDelete = createFiberFromHostInstanceForDeletion();
  childToDelete.stateNode = instance;
  childToDelete.return = returnFiber;
  childToDelete.effectTag = Deletion; // This might seem like it belongs on progressedFirstDeletion. However,
  // these children are not part of the reconciliation list of children.
  // Even if we abort and rereconcile the children, that will try to hydrate
  // again and the nodes are still in the host tree so these will be
  // recreated.

  if (returnFiber.lastEffect !== null) {
    returnFiber.lastEffect.nextEffect = childToDelete;
    returnFiber.lastEffect = childToDelete;
  } else {
    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
  }
}

function insertNonHydratedInstance(returnFiber, fiber) {
  fiber.effectTag = fiber.effectTag & ~Hydrating | Placement;

  {
    switch (returnFiber.tag) {
      case HostRoot:
        {
          var parentContainer = returnFiber.stateNode.containerInfo;

          switch (fiber.tag) {
            case HostComponent:
              var type = fiber.type;
              var props = fiber.pendingProps;
              didNotFindHydratableContainerInstance(parentContainer, type, props);
              break;

            case HostText:
              var text = fiber.pendingProps;
              didNotFindHydratableContainerTextInstance(parentContainer, text);
              break;

            case SuspenseComponent:
              
              break;
          }

          break;
        }

      case HostComponent:
        {
          var parentType = returnFiber.type;
          var parentProps = returnFiber.memoizedProps;
          var parentInstance = returnFiber.stateNode;

          switch (fiber.tag) {
            case HostComponent:
              var _type = fiber.type;
              var _props = fiber.pendingProps;
              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
              break;

            case HostText:
              var _text = fiber.pendingProps;
              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
              break;

            case SuspenseComponent:
              didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance);
              break;
          }

          break;
        }

      default:
        return;
    }
  }
}

function tryHydrate(fiber, nextInstance) {
  switch (fiber.tag) {
    case HostComponent:
      {
        var type = fiber.type;
        var props = fiber.pendingProps;
        var instance = canHydrateInstance(nextInstance, type, props);

        if (instance !== null) {
          fiber.stateNode = instance;
          return true;
        }

        return false;
      }

    case HostText:
      {
        var text = fiber.pendingProps;
        var textInstance = canHydrateTextInstance(nextInstance, text);

        if (textInstance !== null) {
          fiber.stateNode = textInstance;
          return true;
        }

        return false;
      }

    case SuspenseComponent:
      {
        if (enableSuspenseServerRenderer) {
          var suspenseInstance = canHydrateSuspenseInstance(nextInstance);

          if (suspenseInstance !== null) {
            var suspenseState = {
              dehydrated: suspenseInstance,
              retryTime: Never
            };
            fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.
            // This simplifies the code for getHostSibling and deleting nodes,
            // since it doesn't have to consider all Suspense boundaries and
            // check if they're dehydrated ones or not.

            var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
            dehydratedFragment.return = fiber;
            fiber.child = dehydratedFragment;
            return true;
          }
        }

        return false;
      }

    default:
      return false;
  }
}

function tryToClaimNextHydratableInstance(fiber) {
  if (!isHydrating) {
    return;
  }

  var nextInstance = nextHydratableInstance;

  if (!nextInstance) {
    // Nothing to hydrate. Make it an insertion.
    insertNonHydratedInstance(hydrationParentFiber, fiber);
    isHydrating = false;
    hydrationParentFiber = fiber;
    return;
  }

  var firstAttemptedInstance = nextInstance;

  if (!tryHydrate(fiber, nextInstance)) {
    // If we can't hydrate this instance let's try the next one.
    // We use this as a heuristic. It's based on intuition and not data so it
    // might be flawed or unnecessary.
    nextInstance = getNextHydratableSibling(firstAttemptedInstance);

    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
      // Nothing to hydrate. Make it an insertion.
      insertNonHydratedInstance(hydrationParentFiber, fiber);
      isHydrating = false;
      hydrationParentFiber = fiber;
      return;
    } // We matched the next one, we'll now assume that the first one was
    // superfluous and we'll delete it. Since we can't eagerly delete it
    // we'll have to schedule a deletion. To do that, this node needs a dummy
    // fiber associated with it.


    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
  }

  hydrationParentFiber = fiber;
  nextHydratableInstance = getFirstHydratableChild(nextInstance);
}

function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
  if (!supportsHydration) {
    {
      {
        throw Error("Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  }

  var instance = fiber.stateNode;
  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber); // TODO: Type this specific to this type of component.

  fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
  // is a new ref we mark this as an update.

  if (updatePayload !== null) {
    return true;
  }

  return false;
}

function prepareToHydrateHostTextInstance(fiber) {
  if (!supportsHydration) {
    {
      {
        throw Error("Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  }

  var textInstance = fiber.stateNode;
  var textContent = fiber.memoizedProps;
  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);

  {
    if (shouldUpdate) {
      // We assume that prepareToHydrateHostTextInstance is called in a context where the
      // hydration parent is the parent host component of this host text.
      var returnFiber = hydrationParentFiber;

      if (returnFiber !== null) {
        switch (returnFiber.tag) {
          case HostRoot:
            {
              var parentContainer = returnFiber.stateNode.containerInfo;
              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
              break;
            }

          case HostComponent:
            {
              var parentType = returnFiber.type;
              var parentProps = returnFiber.memoizedProps;
              var parentInstance = returnFiber.stateNode;
              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
              break;
            }
        }
      }
    }
  }

  return shouldUpdate;
}

function prepareToHydrateHostSuspenseInstance(fiber) {
  if (!supportsHydration) {
    {
      {
        throw Error("Expected prepareToHydrateHostSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  }

  var suspenseState = fiber.memoizedState;
  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

  if (!suspenseInstance) {
    {
      throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
    }
  }

  hydrateSuspenseInstance(suspenseInstance, fiber);
}

function skipPastDehydratedSuspenseInstance(fiber) {
  if (!supportsHydration) {
    {
      {
        throw Error("Expected skipPastDehydratedSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
  }

  var suspenseState = fiber.memoizedState;
  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

  if (!suspenseInstance) {
    {
      throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
    }
  }

  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
}

function popToNextHostParent(fiber) {
  var parent = fiber.return;

  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
    parent = parent.return;
  }

  hydrationParentFiber = parent;
}

function popHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }

  if (fiber !== hydrationParentFiber) {
    // We're deeper than the current hydration context, inside an inserted
    // tree.
    return false;
  }

  if (!isHydrating) {
    // If we're not currently hydrating but we're in a hydration context, then
    // we were an insertion and now need to pop up reenter hydration of our
    // siblings.
    popToNextHostParent(fiber);
    isHydrating = true;
    return false;
  }

  var type = fiber.type; // If we have any remaining hydratable nodes, we need to delete them now.
  // We only do this deeper than head and body since they tend to have random
  // other nodes in them. We also ignore components with pure text content in
  // side of them.
  // TODO: Better heuristic.

  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
    var nextInstance = nextHydratableInstance;

    while (nextInstance) {
      deleteHydratableInstance(fiber, nextInstance);
      nextInstance = getNextHydratableSibling(nextInstance);
    }
  }

  popToNextHostParent(fiber);

  if (fiber.tag === SuspenseComponent) {
    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
  } else {
    nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
  }

  return true;
}

function resetHydrationState() {
  if (!supportsHydration) {
    return;
  }

  hydrationParentFiber = null;
  nextHydratableInstance = null;
  isHydrating = false;
}

var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
var didReceiveUpdate = false;
var didWarnAboutBadClass;
var didWarnAboutModulePatternComponent;
var didWarnAboutContextTypeOnFunctionComponent;
var didWarnAboutGetDerivedStateOnFunctionComponent;
var didWarnAboutFunctionRefs;
var didWarnAboutReassigningProps;
var didWarnAboutMaxDuration;
var didWarnAboutRevealOrder;
var didWarnAboutTailOptions;
var didWarnAboutDefaultPropsOnFunctionComponent;

{
  didWarnAboutBadClass = {};
  didWarnAboutModulePatternComponent = {};
  didWarnAboutContextTypeOnFunctionComponent = {};
  didWarnAboutGetDerivedStateOnFunctionComponent = {};
  didWarnAboutFunctionRefs = {};
  didWarnAboutReassigningProps = false;
  didWarnAboutMaxDuration = false;
  didWarnAboutRevealOrder = {};
  didWarnAboutTailOptions = {};
  didWarnAboutDefaultPropsOnFunctionComponent = {};
}

function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
  if (current$$1 === null) {
    // If this is a fresh new component that hasn't been rendered yet, we
    // won't update its child set by applying minimal side-effects. Instead,
    // we will add them all to the child before it gets rendered. That means
    // we can optimize this reconciliation pass by not tracking side-effects.
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
  } else {
    // If the current child is the same as the work in progress, it means that
    // we haven't yet started any work on these children. Therefore, we use
    // the clone algorithm to create a copy of all the current children.
    // If we had any progressed work already, that is invalid at this point so
    // let's throw it out.
    workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }
}

function forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime) {
  // This function is fork of reconcileChildren. It's used in cases where we
  // want to reconcile without matching against the existing set. This has the
  // effect of all current children being unmounted; even if the type and key
  // are the same, the old child is unmounted and a new child is created.
  //
  // To do this, we're going to go through the reconcile algorithm twice. In
  // the first pass, we schedule a deletion for all the current children by
  // passing null.
  workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime); // In the second pass, we mount the new children. The trick here is that we
  // pass null in place of where we usually pass the current child set. This has
  // the effect of remounting all children regardless of whether their their
  // identity matches.

  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
}

function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens after the first render suspends.
  // We'll need to figure out if this is fine or can cause issues.
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes_1(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component), getCurrentFiberStackInDev);
      }
    }
  }

  var render = Component.render;
  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent

  var nextChildren;
  prepareToReadContext(workInProgress, renderExpirationTime);

  {
    ReactCurrentOwner$3.current = workInProgress;
    setCurrentPhase('render');
    nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);

    if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Only double-render components with Hooks
      if (workInProgress.memoizedState !== null) {
        nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);
      }
    }

    setCurrentPhase(null);
  }

  if (current$$1 !== null && !didReceiveUpdate) {
    bailoutHooks(current$$1, workInProgress, renderExpirationTime);
    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  } // React DevTools reads this flag.


  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
  if (current$$1 === null) {
    var type = Component.type;

    if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
    Component.defaultProps === undefined) {
      var resolvedType = type;

      {
        resolvedType = resolveFunctionForHotReloading(type);
      } // If this is a plain function component without default props,
      // and with only the default shallow comparison, we upgrade it
      // to a SimpleMemoComponent to allow fast path updates.


      workInProgress.tag = SimpleMemoComponent;
      workInProgress.type = resolvedType;

      {
        validateFunctionComponentInDev(workInProgress, type);
      }

      return updateSimpleMemoComponent(current$$1, workInProgress, resolvedType, nextProps, updateExpirationTime, renderExpirationTime);
    }

    {
      var innerPropTypes = type.propTypes;

      if (innerPropTypes) {
        // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes_1(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(type), getCurrentFiberStackInDev);
      }
    }

    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
    child.ref = workInProgress.ref;
    child.return = workInProgress;
    workInProgress.child = child;
    return child;
  }

  {
    var _type = Component.type;
    var _innerPropTypes = _type.propTypes;

    if (_innerPropTypes) {
      // Inner memo component props aren't currently validated in createElement.
      // We could move it there, but we'd still need this for lazy code path.
      checkPropTypes_1(_innerPropTypes, nextProps, // Resolved props
      'prop', getComponentName(_type), getCurrentFiberStackInDev);
    }
  }

  var currentChild = current$$1.child; // This is always exactly one child

  if (updateExpirationTime < renderExpirationTime) {
    // This will be the props with resolved defaultProps,
    // unlike current.memoizedProps which will be the unresolved ones.
    var prevProps = currentChild.memoizedProps; // Default to shallow comparison

    var compare = Component.compare;
    compare = compare !== null ? compare : shallowEqual;

    if (compare(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {
      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    }
  } // React DevTools reads this flag.


  workInProgress.effectTag |= PerformedWork;
  var newChild = createWorkInProgress(currentChild, nextProps, renderExpirationTime);
  newChild.ref = workInProgress.ref;
  newChild.return = workInProgress;
  workInProgress.child = newChild;
  return newChild;
}

function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens when the inner render suspends.
  // We'll need to figure out if this is fine or can cause issues.
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var outerMemoType = workInProgress.elementType;

      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
        // We warn when you define propTypes on lazy()
        // so let's just skip over it to find memo() outer wrapper.
        // Inner props for memo are validated later.
        outerMemoType = refineResolvedLazyComponent(outerMemoType);
      }

      var outerPropTypes = outerMemoType && outerMemoType.propTypes;

      if (outerPropTypes) {
        checkPropTypes_1(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)
        'prop', getComponentName(outerMemoType), getCurrentFiberStackInDev);
      } // Inner propTypes will be validated in the function component path.

    }
  }

  if (current$$1 !== null) {
    var prevProps = current$$1.memoizedProps;

    if (shallowEqual(prevProps, nextProps) && current$$1.ref === workInProgress.ref && ( // Prevent bailout if the implementation changed due to hot reload:
    workInProgress.type === current$$1.type)) {
      didReceiveUpdate = false;

      if (updateExpirationTime < renderExpirationTime) {
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }
    }
  }

  return updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
}

function updateFragment(current$$1, workInProgress, renderExpirationTime) {
  var nextChildren = workInProgress.pendingProps;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateMode(current$$1, workInProgress, renderExpirationTime) {
  var nextChildren = workInProgress.pendingProps.children;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateProfiler(current$$1, workInProgress, renderExpirationTime) {
  if (enableProfilerTimer) {
    workInProgress.effectTag |= Update;
  }

  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function markRef(current$$1, workInProgress) {
  var ref = workInProgress.ref;

  if (current$$1 === null && ref !== null || current$$1 !== null && current$$1.ref !== ref) {
    // Schedule a Ref effect
    workInProgress.effectTag |= Ref;
  }
}

function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes_1(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component), getCurrentFiberStackInDev);
      }
    }
  }

  var context;

  if (!disableLegacyContext) {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  var nextChildren;
  prepareToReadContext(workInProgress, renderExpirationTime);

  {
    ReactCurrentOwner$3.current = workInProgress;
    setCurrentPhase('render');
    nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);

    if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Only double-render components with Hooks
      if (workInProgress.memoizedState !== null) {
        nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
      }
    }

    setCurrentPhase(null);
  }

  if (current$$1 !== null && !didReceiveUpdate) {
    bailoutHooks(current$$1, workInProgress, renderExpirationTime);
    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  } // React DevTools reads this flag.


  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes_1(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component), getCurrentFiberStackInDev);
      }
    }
  } // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.


  var hasContext;

  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }

  prepareToReadContext(workInProgress, renderExpirationTime);
  var instance = workInProgress.stateNode;
  var shouldUpdate;

  if (instance === null) {
    if (current$$1 !== null) {
      // An class component without an instance only mounts if it suspended
      // inside a non- concurrent tree, in an inconsistent state. We want to
      // tree it like a new mount, even though an empty version of it already
      // committed. Disconnect the alternate pointers.
      current$$1.alternate = null;
      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

      workInProgress.effectTag |= Placement;
    } // In the initial pass we might need to construct the instance.


    constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
    mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
    shouldUpdate = true;
  } else if (current$$1 === null) {
    // In a resume, we'll already have an instance we can reuse.
    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
  } else {
    shouldUpdate = updateClassInstance(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  var nextUnitOfWork = finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime);

  {
    var inst = workInProgress.stateNode;

    if (inst.props !== nextProps) {
      !didWarnAboutReassigningProps ? warning$1(false, 'It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component') : void 0;
      didWarnAboutReassigningProps = true;
    }
  }

  return nextUnitOfWork;
}

function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
  // Refs should update even if shouldComponentUpdate returns false
  markRef(current$$1, workInProgress);
  var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;

  if (!shouldUpdate && !didCaptureError) {
    // Context providers should defer to sCU for rendering
    if (hasContext) {
      invalidateContextProvider(workInProgress, Component, false);
    }

    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  }

  var instance = workInProgress.stateNode; // Rerender

  ReactCurrentOwner$3.current = workInProgress;
  var nextChildren;

  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
    // If we captured an error, but getDerivedStateFrom catch is not defined,
    // unmount all the children. componentDidCatch will schedule an update to
    // re-render a fallback. This is temporary until we migrate everyone to
    // the new API.
    // TODO: Warn in a future release.
    nextChildren = null;

    if (enableProfilerTimer) {
      stopProfilerTimerIfRunning(workInProgress);
    }
  } else {
    {
      setCurrentPhase('render');
      nextChildren = instance.render();

      if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
        instance.render();
      }

      setCurrentPhase(null);
    }
  } // React DevTools reads this flag.


  workInProgress.effectTag |= PerformedWork;

  if (current$$1 !== null && didCaptureError) {
    // If we're recovering from an error, reconcile without reusing any of
    // the existing children. Conceptually, the normal children and the children
    // that are shown on error are two different sets, so we shouldn't reuse
    // normal children even if their identities match.
    forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime);
  } else {
    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  } // Memoize state using the values we just used to render.
  // TODO: Restructure so we never read values from the instance.


  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.

  if (hasContext) {
    invalidateContextProvider(workInProgress, Component, true);
  }

  return workInProgress.child;
}

function pushHostRootContext(workInProgress) {
  var root = workInProgress.stateNode;

  if (root.pendingContext) {
    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
  } else if (root.context) {
    // Should always be set
    pushTopLevelContextObject(workInProgress, root.context, false);
  }

  pushHostContainer(workInProgress, root.containerInfo);
}

function updateHostRoot(current$$1, workInProgress, renderExpirationTime) {
  pushHostRootContext(workInProgress);
  var updateQueue = workInProgress.updateQueue;

  if (!(updateQueue !== null)) {
    {
      throw Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.");
    }
  }

  var nextProps = workInProgress.pendingProps;
  var prevState = workInProgress.memoizedState;
  var prevChildren = prevState !== null ? prevState.element : null;
  processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
  var nextState = workInProgress.memoizedState; // Caution: React DevTools currently depends on this property
  // being called "element".

  var nextChildren = nextState.element;

  if (nextChildren === prevChildren) {
    // If the state is the same as before, that's a bailout because we had
    // no work that expires at this time.
    resetHydrationState();
    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  }

  var root = workInProgress.stateNode;

  if (root.hydrate && enterHydrationState(workInProgress)) {
    // If we don't have any current children this might be the first pass.
    // We always try to hydrate. If this isn't a hydration pass there won't
    // be any children to hydrate which is effectively the same thing as
    // not hydrating.
    var child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    workInProgress.child = child;
    var node = child;

    while (node) {
      // Mark each child as hydrating. This is a fast path to know whether this
      // tree is part of a hydrating tree. This is used to determine if a child
      // node has fully mounted yet, and for scheduling event replaying.
      // Conceptually this is similar to Placement in that a new subtree is
      // inserted into the React tree here. It just happens to not need DOM
      // mutations because it already exists.
      node.effectTag = node.effectTag & ~Placement | Hydrating;
      node = node.sibling;
    }
  } else {
    // Otherwise reset hydration state in case we aborted and resumed another
    // root.
    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    resetHydrationState();
  }

  return workInProgress.child;
}

function updateHostComponent(current$$1, workInProgress, renderExpirationTime) {
  pushHostContext(workInProgress);

  if (current$$1 === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }

  var type = workInProgress.type;
  var nextProps = workInProgress.pendingProps;
  var prevProps = current$$1 !== null ? current$$1.memoizedProps : null;
  var nextChildren = nextProps.children;
  var isDirectTextChild = shouldSetTextContent(type, nextProps);

  if (isDirectTextChild) {
    // We special case a direct text child of a host node. This is a common
    // case. We won't handle it as a reified child. We will instead handle
    // this in the host environment that also have access to this prop. That
    // avoids allocating another HostText fiber and traversing it.
    nextChildren = null;
  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
    // If we're switching from a direct text child to a normal child, or to
    // empty, we need to schedule the text content to be reset.
    workInProgress.effectTag |= ContentReset;
  }

  markRef(current$$1, workInProgress); // Check the host config to see if the children are offscreen/hidden.

  if (workInProgress.mode & ConcurrentMode && renderExpirationTime !== Never && shouldDeprioritizeSubtree(type, nextProps)) {
    if (enableSchedulerTracing) {
      markSpawnedWork(Never);
    } // Schedule this fiber to re-render at offscreen priority. Then bailout.


    workInProgress.expirationTime = workInProgress.childExpirationTime = Never;
    return null;
  }

  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateHostText(current$$1, workInProgress) {
  if (current$$1 === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  } // Nothing to do here. This is terminal. We'll do the completion step
  // immediately after.


  return null;
}

function mountLazyComponent(_current, workInProgress, elementType, updateExpirationTime, renderExpirationTime) {
  if (_current !== null) {
    // An lazy component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

    workInProgress.effectTag |= Placement;
  }

  var props = workInProgress.pendingProps; // We can't start a User Timing measurement with correct label yet.
  // Cancel and resume right after we know the tag.

  cancelWorkTimer(workInProgress);
  var Component = readLazyComponentType(elementType); // Store the unwrapped component in the type.

  workInProgress.type = Component;
  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
  startWorkTimer(workInProgress);
  var resolvedProps = resolveDefaultProps(Component, props);
  var child;

  switch (resolvedTag) {
    case FunctionComponent:
      {
        {
          validateFunctionComponentInDev(workInProgress, Component);
          workInProgress.type = Component = resolveFunctionForHotReloading(Component);
        }

        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
        break;
      }

    case ClassComponent:
      {
        {
          workInProgress.type = Component = resolveClassForHotReloading(Component);
        }

        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
        break;
      }

    case ForwardRef:
      {
        {
          workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
        }

        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderExpirationTime);
        break;
      }

    case MemoComponent:
      {
        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = Component.propTypes;

            if (outerPropTypes) {
              checkPropTypes_1(outerPropTypes, resolvedProps, // Resolved for outer only
              'prop', getComponentName(Component), getCurrentFiberStackInDev);
            }
          }
        }

        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too
        updateExpirationTime, renderExpirationTime);
        break;
      }

    default:
      {
        var hint = '';

        {
          if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
            hint = ' Did you wrap a component in React.lazy() more than once?';
          }
        } // This message intentionally doesn't mention ForwardRef or MemoComponent
        // because the fact that it's a separate type of work is an
        // implementation detail.


        {
          {
            throw Error("Element type is invalid. Received a promise that resolves to: " + Component + ". Lazy element type must resolve to a class or function." + hint);
          }
        }
      }
  }

  return child;
}

function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderExpirationTime) {
  if (_current !== null) {
    // An incomplete component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

    workInProgress.effectTag |= Placement;
  } // Promote the fiber to a class and try rendering again.


  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
  // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.

  var hasContext;

  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }

  prepareToReadContext(workInProgress, renderExpirationTime);
  constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
  mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
}

function mountIndeterminateComponent(_current, workInProgress, Component, renderExpirationTime) {
  if (_current !== null) {
    // An indeterminate component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

    workInProgress.effectTag |= Placement;
  }

  var props = workInProgress.pendingProps;
  var context;

  if (!disableLegacyContext) {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  prepareToReadContext(workInProgress, renderExpirationTime);
  var value;

  {
    if (Component.prototype && typeof Component.prototype.render === 'function') {
      var componentName = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutBadClass[componentName]) {
        warningWithoutStack$1(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
        didWarnAboutBadClass[componentName] = true;
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
    }

    ReactCurrentOwner$3.current = workInProgress;
    value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
  } // React DevTools reads this flag.


  workInProgress.effectTag |= PerformedWork;

  if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
    {
      var _componentName = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutModulePatternComponent[_componentName]) {
        warningWithoutStack$1(false, 'The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);
        didWarnAboutModulePatternComponent[_componentName] = true;
      }
    } // Proceed under the assumption that this is a class instance


    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.

    resetHooks(); // Push context providers early to prevent context stack mismatches.
    // During mounting we don't know the child context yet as the instance doesn't exist.
    // We will invalidate the child context in finishClassComponent() right after rendering.

    var hasContext = false;

    if (isContextProvider(Component)) {
      hasContext = true;
      pushContextProvider(workInProgress);
    } else {
      hasContext = false;
    }

    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
    var getDerivedStateFromProps = Component.getDerivedStateFromProps;

    if (typeof getDerivedStateFromProps === 'function') {
      applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
    }

    adoptClassInstance(workInProgress, value);
    mountClassInstance(workInProgress, Component, props, renderExpirationTime);
    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
  } else {
    // Proceed under the assumption that this is a function component
    workInProgress.tag = FunctionComponent;

    {
      if (disableLegacyContext && Component.contextTypes) {
        warningWithoutStack$1(false, '%s uses the legacy contextTypes API which is no longer supported. ' + 'Use React.createContext() with React.useContext() instead.', getComponentName(Component) || 'Unknown');
      }

      if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
        // Only double-render components with Hooks
        if (workInProgress.memoizedState !== null) {
          value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
        }
      }
    }

    reconcileChildren(null, workInProgress, value, renderExpirationTime);

    {
      validateFunctionComponentInDev(workInProgress, Component);
    }

    return workInProgress.child;
  }
}

function validateFunctionComponentInDev(workInProgress, Component) {
  if (Component) {
    !!Component.childContextTypes ? warningWithoutStack$1(false, '%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component') : void 0;
  }

  if (workInProgress.ref !== null) {
    var info = '';
    var ownerName = getCurrentFiberOwnerNameInDevOrNull();

    if (ownerName) {
      info += '\n\nCheck the render method of `' + ownerName + '`.';
    }

    var warningKey = ownerName || workInProgress._debugID || '';
    var debugSource = workInProgress._debugSource;

    if (debugSource) {
      warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
    }

    if (!didWarnAboutFunctionRefs[warningKey]) {
      didWarnAboutFunctionRefs[warningKey] = true;
      warning$1(false, 'Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);
    }
  }

  if (warnAboutDefaultPropsOnFunctionComponents && Component.defaultProps !== undefined) {
    var componentName = getComponentName(Component) || 'Unknown';

    if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
      warningWithoutStack$1(false, '%s: Support for defaultProps will be removed from function components ' + 'in a future major release. Use JavaScript default parameters instead.', componentName);
      didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
    }
  }

  if (typeof Component.getDerivedStateFromProps === 'function') {
    var _componentName2 = getComponentName(Component) || 'Unknown';

    if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName2]) {
      warningWithoutStack$1(false, '%s: Function components do not support getDerivedStateFromProps.', _componentName2);
      didWarnAboutGetDerivedStateOnFunctionComponent[_componentName2] = true;
    }
  }

  if (typeof Component.contextType === 'object' && Component.contextType !== null) {
    var _componentName3 = getComponentName(Component) || 'Unknown';

    if (!didWarnAboutContextTypeOnFunctionComponent[_componentName3]) {
      warningWithoutStack$1(false, '%s: Function components do not support contextType.', _componentName3);
      didWarnAboutContextTypeOnFunctionComponent[_componentName3] = true;
    }
  }
}

var SUSPENDED_MARKER = {
  dehydrated: null,
  retryTime: NoWork
};

function shouldRemainOnFallback(suspenseContext, current$$1, workInProgress) {
  // If the context is telling us that we should show a fallback, and we're not
  // already showing content, then we should show the fallback instead.
  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback) && (current$$1 === null || current$$1.memoizedState !== null);
}

function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
  var mode = workInProgress.mode;
  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.

  {
    if (shouldSuspend(workInProgress)) {
      workInProgress.effectTag |= DidCapture;
    }
  }

  var suspenseContext = suspenseStackCursor.current;
  var nextDidTimeout = false;
  var didSuspend = (workInProgress.effectTag & DidCapture) !== NoEffect;

  if (didSuspend || shouldRemainOnFallback(suspenseContext, current$$1, workInProgress)) {
    // Something in this boundary's subtree already suspended. Switch to
    // rendering the fallback children.
    nextDidTimeout = true;
    workInProgress.effectTag &= ~DidCapture;
  } else {
    // Attempting the main content
    if (current$$1 === null || current$$1.memoizedState !== null) {
      // This is a new mount or this boundary is already showing a fallback state.
      // Mark this subtree context as having at least one invisible parent that could
      // handle the fallback state.
      // Boundaries without fallbacks or should be avoided are not considered since
      // they cannot handle preferred fallback states.
      if (nextProps.fallback !== undefined && nextProps.unstable_avoidThisFallback !== true) {
        suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
      }
    }
  }

  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
  pushSuspenseContext(workInProgress, suspenseContext);

  {
    if ('maxDuration' in nextProps) {
      if (!didWarnAboutMaxDuration) {
        didWarnAboutMaxDuration = true;
        warning$1(false, 'maxDuration has been removed from React. ' + 'Remove the maxDuration prop.');
      }
    }
  } // This next part is a bit confusing. If the children timeout, we switch to
  // showing the fallback children in place of the "primary" children.
  // However, we don't want to delete the primary children because then their
  // state will be lost (both the React state and the host state, e.g.
  // uncontrolled form inputs). Instead we keep them mounted and hide them.
  // Both the fallback children AND the primary children are rendered at the
  // same time. Once the primary children are un-suspended, we can delete
  // the fallback children — don't need to preserve their state.
  //
  // The two sets of children are siblings in the host environment, but
  // semantically, for purposes of reconciliation, they are two separate sets.
  // So we store them using two fragment fibers.
  //
  // However, we want to avoid allocating extra fibers for every placeholder.
  // They're only necessary when the children time out, because that's the
  // only time when both sets are mounted.
  //
  // So, the extra fragment fibers are only used if the children time out.
  // Otherwise, we render the primary children directly. This requires some
  // custom reconciliation logic to preserve the state of the primary
  // children. It's essentially a very basic form of re-parenting.


  if (current$$1 === null) {
    // If we're currently hydrating, try to hydrate this boundary.
    // But only if this has a fallback.
    if (nextProps.fallback !== undefined) {
      tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.

      if (enableSuspenseServerRenderer) {
        var suspenseState = workInProgress.memoizedState;

        if (suspenseState !== null) {
          var dehydrated = suspenseState.dehydrated;

          if (dehydrated !== null) {
            return mountDehydratedSuspenseComponent(workInProgress, dehydrated, renderExpirationTime);
          }
        }
      }
    } // This is the initial mount. This branch is pretty simple because there's
    // no previous state that needs to be preserved.


    if (nextDidTimeout) {
      // Mount separate fragments for primary and fallback children.
      var nextFallbackChildren = nextProps.fallback;
      var primaryChildFragment = createFiberFromFragment(null, mode, NoWork, null);
      primaryChildFragment.return = workInProgress;

      if ((workInProgress.mode & BlockingMode) === NoMode) {
        // Outside of blocking mode, we commit the effects from the
        // partially completed, timed-out tree, too.
        var progressedState = workInProgress.memoizedState;
        var progressedPrimaryChild = progressedState !== null ? workInProgress.child.child : workInProgress.child;
        primaryChildFragment.child = progressedPrimaryChild;
        var progressedChild = progressedPrimaryChild;

        while (progressedChild !== null) {
          progressedChild.return = primaryChildFragment;
          progressedChild = progressedChild.sibling;
        }
      }

      var fallbackChildFragment = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);
      fallbackChildFragment.return = workInProgress;
      primaryChildFragment.sibling = fallbackChildFragment; // Skip the primary children, and continue working on the
      // fallback children.

      workInProgress.memoizedState = SUSPENDED_MARKER;
      workInProgress.child = primaryChildFragment;
      return fallbackChildFragment;
    } else {
      // Mount the primary children without an intermediate fragment fiber.
      var nextPrimaryChildren = nextProps.children;
      workInProgress.memoizedState = null;
      return workInProgress.child = mountChildFibers(workInProgress, null, nextPrimaryChildren, renderExpirationTime);
    }
  } else {
    // This is an update. This branch is more complicated because we need to
    // ensure the state of the primary children is preserved.
    var prevState = current$$1.memoizedState;

    if (prevState !== null) {
      if (enableSuspenseServerRenderer) {
        var _dehydrated = prevState.dehydrated;

        if (_dehydrated !== null) {
          if (!didSuspend) {
            return updateDehydratedSuspenseComponent(current$$1, workInProgress, _dehydrated, prevState, renderExpirationTime);
          } else if (workInProgress.memoizedState !== null) {
            // Something suspended and we should still be in dehydrated mode.
            // Leave the existing child in place.
            workInProgress.child = current$$1.child; // The dehydrated completion pass expects this flag to be there
            // but the normal suspense pass doesn't.

            workInProgress.effectTag |= DidCapture;
            return null;
          } else {
            // Suspended but we should no longer be in dehydrated mode.
            // Therefore we now have to render the fallback. Wrap the children
            // in a fragment fiber to keep them separate from the fallback
            // children.
            var _nextFallbackChildren = nextProps.fallback;

            var _primaryChildFragment = createFiberFromFragment( // It shouldn't matter what the pending props are because we aren't
            // going to render this fragment.
            null, mode, NoWork, null);

            _primaryChildFragment.return = workInProgress; // This is always null since we never want the previous child
            // that we're not going to hydrate.

            _primaryChildFragment.child = null;

            if ((workInProgress.mode & BlockingMode) === NoMode) {
              // Outside of blocking mode, we commit the effects from the
              // partially completed, timed-out tree, too.
              var _progressedChild = _primaryChildFragment.child = workInProgress.child;

              while (_progressedChild !== null) {
                _progressedChild.return = _primaryChildFragment;
                _progressedChild = _progressedChild.sibling;
              }
            } else {
              // We will have dropped the effect list which contains the deletion.
              // We need to reconcile to delete the current child.
              reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime);
            } // Because primaryChildFragment is a new fiber that we're inserting as the
            // parent of a new tree, we need to set its treeBaseDuration.


            if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
              // treeBaseDuration is the sum of all the child tree base durations.
              var treeBaseDuration = 0;
              var hiddenChild = _primaryChildFragment.child;

              while (hiddenChild !== null) {
                treeBaseDuration += hiddenChild.treeBaseDuration;
                hiddenChild = hiddenChild.sibling;
              }

              _primaryChildFragment.treeBaseDuration = treeBaseDuration;
            } // Create a fragment from the fallback children, too.


            var _fallbackChildFragment = createFiberFromFragment(_nextFallbackChildren, mode, renderExpirationTime, null);

            _fallbackChildFragment.return = workInProgress;
            _primaryChildFragment.sibling = _fallbackChildFragment;
            _fallbackChildFragment.effectTag |= Placement;
            _primaryChildFragment.childExpirationTime = NoWork;
            workInProgress.memoizedState = SUSPENDED_MARKER;
            workInProgress.child = _primaryChildFragment; // Skip the primary children, and continue working on the
            // fallback children.

            return _fallbackChildFragment;
          }
        }
      } // The current tree already timed out. That means each child set is
      // wrapped in a fragment fiber.


      var currentPrimaryChildFragment = current$$1.child;
      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;

      if (nextDidTimeout) {
        // Still timed out. Reuse the current primary children by cloning
        // its fragment. We're going to skip over these entirely.
        var _nextFallbackChildren2 = nextProps.fallback;

        var _primaryChildFragment2 = createWorkInProgress(currentPrimaryChildFragment, currentPrimaryChildFragment.pendingProps, NoWork);

        _primaryChildFragment2.return = workInProgress;

        if ((workInProgress.mode & BlockingMode) === NoMode) {
          // Outside of blocking mode, we commit the effects from the
          // partially completed, timed-out tree, too.
          var _progressedState = workInProgress.memoizedState;

          var _progressedPrimaryChild = _progressedState !== null ? workInProgress.child.child : workInProgress.child;

          if (_progressedPrimaryChild !== currentPrimaryChildFragment.child) {
            _primaryChildFragment2.child = _progressedPrimaryChild;
            var _progressedChild2 = _progressedPrimaryChild;

            while (_progressedChild2 !== null) {
              _progressedChild2.return = _primaryChildFragment2;
              _progressedChild2 = _progressedChild2.sibling;
            }
          }
        } // Because primaryChildFragment is a new fiber that we're inserting as the
        // parent of a new tree, we need to set its treeBaseDuration.


        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
          // treeBaseDuration is the sum of all the child tree base durations.
          var _treeBaseDuration = 0;
          var _hiddenChild = _primaryChildFragment2.child;

          while (_hiddenChild !== null) {
            _treeBaseDuration += _hiddenChild.treeBaseDuration;
            _hiddenChild = _hiddenChild.sibling;
          }

          _primaryChildFragment2.treeBaseDuration = _treeBaseDuration;
        } // Clone the fallback child fragment, too. These we'll continue
        // working on.


        var _fallbackChildFragment2 = createWorkInProgress(currentFallbackChildFragment, _nextFallbackChildren2, currentFallbackChildFragment.expirationTime);

        _fallbackChildFragment2.return = workInProgress;
        _primaryChildFragment2.sibling = _fallbackChildFragment2;
        _primaryChildFragment2.childExpirationTime = NoWork; // Skip the primary children, and continue working on the
        // fallback children.

        workInProgress.memoizedState = SUSPENDED_MARKER;
        workInProgress.child = _primaryChildFragment2;
        return _fallbackChildFragment2;
      } else {
        // No longer suspended. Switch back to showing the primary children,
        // and remove the intermediate fragment fiber.
        var _nextPrimaryChildren = nextProps.children;
        var currentPrimaryChild = currentPrimaryChildFragment.child;
        var primaryChild = reconcileChildFibers(workInProgress, currentPrimaryChild, _nextPrimaryChildren, renderExpirationTime); // If this render doesn't suspend, we need to delete the fallback
        // children. Wait until the complete phase, after we've confirmed the
        // fallback is no longer needed.
        // TODO: Would it be better to store the fallback fragment on
        // the stateNode?
        // Continue rendering the children, like we normally do.

        workInProgress.memoizedState = null;
        return workInProgress.child = primaryChild;
      }
    } else {
      // The current tree has not already timed out. That means the primary
      // children are not wrapped in a fragment fiber.
      var _currentPrimaryChild = current$$1.child;

      if (nextDidTimeout) {
        // Timed out. Wrap the children in a fragment fiber to keep them
        // separate from the fallback children.
        var _nextFallbackChildren3 = nextProps.fallback;

        var _primaryChildFragment3 = createFiberFromFragment( // It shouldn't matter what the pending props are because we aren't
        // going to render this fragment.
        null, mode, NoWork, null);

        _primaryChildFragment3.return = workInProgress;
        _primaryChildFragment3.child = _currentPrimaryChild;

        if (_currentPrimaryChild !== null) {
          _currentPrimaryChild.return = _primaryChildFragment3;
        } // Even though we're creating a new fiber, there are no new children,
        // because we're reusing an already mounted tree. So we don't need to
        // schedule a placement.
        // primaryChildFragment.effectTag |= Placement;


        if ((workInProgress.mode & BlockingMode) === NoMode) {
          // Outside of blocking mode, we commit the effects from the
          // partially completed, timed-out tree, too.
          var _progressedState2 = workInProgress.memoizedState;

          var _progressedPrimaryChild2 = _progressedState2 !== null ? workInProgress.child.child : workInProgress.child;

          _primaryChildFragment3.child = _progressedPrimaryChild2;
          var _progressedChild3 = _progressedPrimaryChild2;

          while (_progressedChild3 !== null) {
            _progressedChild3.return = _primaryChildFragment3;
            _progressedChild3 = _progressedChild3.sibling;
          }
        } // Because primaryChildFragment is a new fiber that we're inserting as the
        // parent of a new tree, we need to set its treeBaseDuration.


        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
          // treeBaseDuration is the sum of all the child tree base durations.
          var _treeBaseDuration2 = 0;
          var _hiddenChild2 = _primaryChildFragment3.child;

          while (_hiddenChild2 !== null) {
            _treeBaseDuration2 += _hiddenChild2.treeBaseDuration;
            _hiddenChild2 = _hiddenChild2.sibling;
          }

          _primaryChildFragment3.treeBaseDuration = _treeBaseDuration2;
        } // Create a fragment from the fallback children, too.


        var _fallbackChildFragment3 = createFiberFromFragment(_nextFallbackChildren3, mode, renderExpirationTime, null);

        _fallbackChildFragment3.return = workInProgress;
        _primaryChildFragment3.sibling = _fallbackChildFragment3;
        _fallbackChildFragment3.effectTag |= Placement;
        _primaryChildFragment3.childExpirationTime = NoWork; // Skip the primary children, and continue working on the
        // fallback children.

        workInProgress.memoizedState = SUSPENDED_MARKER;
        workInProgress.child = _primaryChildFragment3;
        return _fallbackChildFragment3;
      } else {
        // Still haven't timed out.  Continue rendering the children, like we
        // normally do.
        workInProgress.memoizedState = null;
        var _nextPrimaryChildren2 = nextProps.children;
        return workInProgress.child = reconcileChildFibers(workInProgress, _currentPrimaryChild, _nextPrimaryChildren2, renderExpirationTime);
      }
    }
  }
}

function retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime) {
  // We're now not suspended nor dehydrated.
  workInProgress.memoizedState = null; // Retry with the full children.

  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children; // This will ensure that the children get Placement effects and
  // that the old child gets a Deletion effect.
  // We could also call forceUnmountCurrentAndReconcile.

  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderExpirationTime) {
  // During the first pass, we'll bail out and not drill into the children.
  // Instead, we'll leave the content in place and try to hydrate it later.
  if ((workInProgress.mode & BlockingMode) === NoMode) {
    {
      warning$1(false, 'Cannot hydrate Suspense in legacy mode. Switch from ' + 'ReactDOM.hydrate(element, container) to ' + 'ReactDOM.createBlockingRoot(container, { hydrate: true })' + '.render(element) or remove the Suspense components from ' + 'the server rendered components.');
    }

    workInProgress.expirationTime = Sync;
  } else if (isSuspenseInstanceFallback(suspenseInstance)) {
    // This is a client-only boundary. Since we won't get any content from the server
    // for this, we need to schedule that at a higher priority based on when it would
    // have timed out. In theory we could render it in this pass but it would have the
    // wrong priority associated with it and will prevent hydration of parent path.
    // Instead, we'll leave work left on it to render it in a separate commit.
    // TODO This time should be the time at which the server rendered response that is
    // a parent to this boundary was displayed. However, since we currently don't have
    // a protocol to transfer that time, we'll just estimate it by using the current
    // time. This will mean that Suspense timeouts are slightly shifted to later than
    // they should be.
    var serverDisplayTime = requestCurrentTimeForUpdate(); // Schedule a normal pri update to render this content.

    var newExpirationTime = computeAsyncExpiration(serverDisplayTime);

    if (enableSchedulerTracing) {
      markSpawnedWork(newExpirationTime);
    }

    workInProgress.expirationTime = newExpirationTime;
  } else {
    // We'll continue hydrating the rest at offscreen priority since we'll already
    // be showing the right content coming from the server, it is no rush.
    workInProgress.expirationTime = Never;

    if (enableSchedulerTracing) {
      markSpawnedWork(Never);
    }
  }

  return null;
}

function updateDehydratedSuspenseComponent(current$$1, workInProgress, suspenseInstance, suspenseState, renderExpirationTime) {
  // We should never be hydrating at this point because it is the first pass,
  // but after we've already committed once.
  warnIfHydrating();

  if ((workInProgress.mode & BlockingMode) === NoMode) {
    return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
  }

  if (isSuspenseInstanceFallback(suspenseInstance)) {
    // This boundary is in a permanent fallback state. In this case, we'll never
    // get an update and we'll never be able to hydrate the final content. Let's just try the
    // client side render instead.
    return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
  } // We use childExpirationTime to indicate that a child might depend on context, so if
  // any context has changed, we need to treat is as if the input might have changed.


  var hasContextChanged$$1 = current$$1.childExpirationTime >= renderExpirationTime;

  if (didReceiveUpdate || hasContextChanged$$1) {
    // This boundary has changed since the first render. This means that we are now unable to
    // hydrate it. We might still be able to hydrate it using an earlier expiration time, if
    // we are rendering at lower expiration than sync.
    if (renderExpirationTime < Sync) {
      if (suspenseState.retryTime <= renderExpirationTime) {
        // This render is even higher pri than we've seen before, let's try again
        // at even higher pri.
        var attemptHydrationAtExpirationTime = renderExpirationTime + 1;
        suspenseState.retryTime = attemptHydrationAtExpirationTime;
        scheduleWork(current$$1, attemptHydrationAtExpirationTime); // TODO: Early abort this render.
      } else {// We have already tried to ping at a higher priority than we're rendering with
          // so if we got here, we must have failed to hydrate at those levels. We must
          // now give up. Instead, we're going to delete the whole subtree and instead inject
          // a new real Suspense boundary to take its place, which may render content
          // or fallback. This might suspend for a while and if it does we might still have
          // an opportunity to hydrate before this pass commits.
        }
    } // If we have scheduled higher pri work above, this will probably just abort the render
    // since we now have higher priority work, but in case it doesn't, we need to prepare to
    // render something, if we time out. Even if that requires us to delete everything and
    // skip hydration.
    // Delay having to do this as long as the suspense timeout allows us.


    renderDidSuspendDelayIfPossible();
    return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
  } else if (isSuspenseInstancePending(suspenseInstance)) {
    // This component is still pending more data from the server, so we can't hydrate its
    // content. We treat it as if this component suspended itself. It might seem as if
    // we could just try to render it client-side instead. However, this will perform a
    // lot of unnecessary work and is unlikely to complete since it often will suspend
    // on missing data anyway. Additionally, the server might be able to render more
    // than we can on the client yet. In that case we'd end up with more fallback states
    // on the client than if we just leave it alone. If the server times out or errors
    // these should update this boundary to the permanent Fallback state instead.
    // Mark it as having captured (i.e. suspended).
    workInProgress.effectTag |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.

    workInProgress.child = current$$1.child; // Register a callback to retry this boundary once the server has sent the result.

    registerSuspenseInstanceRetry(suspenseInstance, retryDehydratedSuspenseBoundary.bind(null, current$$1));
    return null;
  } else {
    // This is the first attempt.
    reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance);
    var nextProps = workInProgress.pendingProps;
    var nextChildren = nextProps.children;
    var child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    var node = child;

    while (node) {
      // Mark each child as hydrating. This is a fast path to know whether this
      // tree is part of a hydrating tree. This is used to determine if a child
      // node has fully mounted yet, and for scheduling event replaying.
      // Conceptually this is similar to Placement in that a new subtree is
      // inserted into the React tree here. It just happens to not need DOM
      // mutations because it already exists.
      node.effectTag |= Hydrating;
      node = node.sibling;
    }

    workInProgress.child = child;
    return workInProgress.child;
  }
}

function scheduleWorkOnFiber(fiber, renderExpirationTime) {
  if (fiber.expirationTime < renderExpirationTime) {
    fiber.expirationTime = renderExpirationTime;
  }

  var alternate = fiber.alternate;

  if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
    alternate.expirationTime = renderExpirationTime;
  }

  scheduleWorkOnParentPath(fiber.return, renderExpirationTime);
}

function propagateSuspenseContextChange(workInProgress, firstChild, renderExpirationTime) {
  // Mark any Suspense boundaries with fallbacks as having work to do.
  // If they were previously forced into fallbacks, they may now be able
  // to unblock.
  var node = firstChild;

  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;

      if (state !== null) {
        scheduleWorkOnFiber(node, renderExpirationTime);
      }
    } else if (node.tag === SuspenseListComponent) {
      // If the tail is hidden there might not be an Suspense boundaries
      // to schedule work on. In this case we have to schedule it on the
      // list itself.
      // We don't have to traverse to the children of the list since
      // the list will propagate the change when it rerenders.
      scheduleWorkOnFiber(node, renderExpirationTime);
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === workInProgress) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === workInProgress) {
        return;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function findLastContentRow(firstChild) {
  // This is going to find the last row among these children that is already
  // showing content on the screen, as opposed to being in fallback state or
  // new. If a row has multiple Suspense boundaries, any of them being in the
  // fallback state, counts as the whole row being in a fallback state.
  // Note that the "rows" will be workInProgress, but any nested children
  // will still be current since we haven't rendered them yet. The mounted
  // order may not be the same as the new order. We use the new order.
  var row = firstChild;
  var lastContentRow = null;

  while (row !== null) {
    var currentRow = row.alternate; // New rows can't be content rows.

    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
      lastContentRow = row;
    }

    row = row.sibling;
  }

  return lastContentRow;
}

function validateRevealOrder(revealOrder) {
  {
    if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
      didWarnAboutRevealOrder[revealOrder] = true;

      if (typeof revealOrder === 'string') {
        switch (revealOrder.toLowerCase()) {
          case 'together':
          case 'forwards':
          case 'backwards':
            {
              warning$1(false, '"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
              break;
            }

          case 'forward':
          case 'backward':
            {
              warning$1(false, '"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
              break;
            }

          default:
            warning$1(false, '"%s" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
            break;
        }
      } else {
        warning$1(false, '%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
      }
    }
  }
}

function validateTailOptions(tailMode, revealOrder) {
  {
    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
        didWarnAboutTailOptions[tailMode] = true;
        warning$1(false, '"%s" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean "collapsed" or "hidden"?', tailMode);
      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
        didWarnAboutTailOptions[tailMode] = true;
        warning$1(false, '<SuspenseList tail="%s" /> is only valid if revealOrder is ' + '"forwards" or "backwards". ' + 'Did you mean to specify revealOrder="forwards"?', tailMode);
      }
    }
  }
}

function validateSuspenseListNestedChild(childSlot, index) {
  {
    var isArray = Array.isArray(childSlot);
    var isIterable = !isArray && typeof getIteratorFn(childSlot) === 'function';

    if (isArray || isIterable) {
      var type = isArray ? 'array' : 'iterable';
      warning$1(false, 'A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);
      return false;
    }
  }

  return true;
}

function validateSuspenseListChildren(children, revealOrder) {
  {
    if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          if (!validateSuspenseListNestedChild(children[i], i)) {
            return;
          }
        }
      } else {
        var iteratorFn = getIteratorFn(children);

        if (typeof iteratorFn === 'function') {
          var childrenIterator = iteratorFn.call(children);

          if (childrenIterator) {
            var step = childrenIterator.next();
            var _i = 0;

            for (; !step.done; step = childrenIterator.next()) {
              if (!validateSuspenseListNestedChild(step.value, _i)) {
                return;
              }

              _i++;
            }
          }
        } else {
          warning$1(false, 'A single row was passed to a <SuspenseList revealOrder="%s" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);
        }
      }
    }
  }
}

function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode, lastEffectBeforeRendering) {
  var renderState = workInProgress.memoizedState;

  if (renderState === null) {
    workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode,
      lastEffect: lastEffectBeforeRendering
    };
  } else {
    // We can reuse the existing object from previous renders.
    renderState.isBackwards = isBackwards;
    renderState.rendering = null;
    renderState.last = lastContentRow;
    renderState.tail = tail;
    renderState.tailExpiration = 0;
    renderState.tailMode = tailMode;
    renderState.lastEffect = lastEffectBeforeRendering;
  }
} // This can end up rendering this component multiple passes.
// The first pass splits the children fibers into two sets. A head and tail.
// We first render the head. If anything is in fallback state, we do another
// pass through beginWork to rerender all children (including the tail) with
// the force suspend context. If the first render didn't have anything in
// in fallback state. Then we render each row in the tail one-by-one.
// That happens in the completeWork phase without going back to beginWork.


function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
  var nextProps = workInProgress.pendingProps;
  var revealOrder = nextProps.revealOrder;
  var tailMode = nextProps.tail;
  var newChildren = nextProps.children;
  validateRevealOrder(revealOrder);
  validateTailOptions(tailMode, revealOrder);
  validateSuspenseListChildren(newChildren, revealOrder);
  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
  var suspenseContext = suspenseStackCursor.current;
  var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);

  if (shouldForceFallback) {
    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
    workInProgress.effectTag |= DidCapture;
  } else {
    var didSuspendBefore = current$$1 !== null && (current$$1.effectTag & DidCapture) !== NoEffect;

    if (didSuspendBefore) {
      // If we previously forced a fallback, we need to schedule work
      // on any nested boundaries to let them know to try to render
      // again. This is the same as context updating.
      propagateSuspenseContextChange(workInProgress, workInProgress.child, renderExpirationTime);
    }

    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
  }

  pushSuspenseContext(workInProgress, suspenseContext);

  if ((workInProgress.mode & BlockingMode) === NoMode) {
    // Outside of blocking mode, SuspenseList doesn't work so we just
    // use make it a noop by treating it as the default revealOrder.
    workInProgress.memoizedState = null;
  } else {
    switch (revealOrder) {
      case 'forwards':
        {
          var lastContentRow = findLastContentRow(workInProgress.child);
          var tail;

          if (lastContentRow === null) {
            // The whole list is part of the tail.
            // TODO: We could fast path by just rendering the tail now.
            tail = workInProgress.child;
            workInProgress.child = null;
          } else {
            // Disconnect the tail rows after the content row.
            // We're going to render them separately later.
            tail = lastContentRow.sibling;
            lastContentRow.sibling = null;
          }

          initSuspenseListRenderState(workInProgress, false, // isBackwards
          tail, lastContentRow, tailMode, workInProgress.lastEffect);
          break;
        }

      case 'backwards':
        {
          // We're going to find the first row that has existing content.
          // At the same time we're going to reverse the list of everything
          // we pass in the meantime. That's going to be our tail in reverse
          // order.
          var _tail = null;
          var row = workInProgress.child;
          workInProgress.child = null;

          while (row !== null) {
            var currentRow = row.alternate; // New rows can't be content rows.

            if (currentRow !== null && findFirstSuspended(currentRow) === null) {
              // This is the beginning of the main content.
              workInProgress.child = row;
              break;
            }

            var nextRow = row.sibling;
            row.sibling = _tail;
            _tail = row;
            row = nextRow;
          } // TODO: If workInProgress.child is null, we can continue on the tail immediately.


          initSuspenseListRenderState(workInProgress, true, // isBackwards
          _tail, null, // last
          tailMode, workInProgress.lastEffect);
          break;
        }

      case 'together':
        {
          initSuspenseListRenderState(workInProgress, false, // isBackwards
          null, // tail
          null, // last
          undefined, workInProgress.lastEffect);
          break;
        }

      default:
        {
          // The default reveal order is the same as not having
          // a boundary.
          workInProgress.memoizedState = null;
        }
    }
  }

  return workInProgress.child;
}

function updatePortalComponent(current$$1, workInProgress, renderExpirationTime) {
  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
  var nextChildren = workInProgress.pendingProps;

  if (current$$1 === null) {
    // Portals are special because we don't append the children during mount
    // but at commit. Therefore we need to track insertions which the normal
    // flow doesn't do during mount. This doesn't happen at the root because
    // the root always starts with a "current" with a null child.
    // TODO: Consider unifying this with how the root works.
    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
  } else {
    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  }

  return workInProgress.child;
}

function updateContextProvider(current$$1, workInProgress, renderExpirationTime) {
  var providerType = workInProgress.type;
  var context = providerType._context;
  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;
  var newValue = newProps.value;

  {
    var providerPropTypes = workInProgress.type.propTypes;

    if (providerPropTypes) {
      checkPropTypes_1(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackInDev);
    }
  }

  pushProvider(workInProgress, newValue);

  if (oldProps !== null) {
    var oldValue = oldProps.value;
    var changedBits = calculateChangedBits(context, newValue, oldValue);

    if (changedBits === 0) {
      // No change. Bailout early if children are the same.
      if (oldProps.children === newProps.children && !hasContextChanged()) {
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }
    } else {
      // The context value changed. Search for matching consumers and schedule
      // them to update.
      propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
    }
  }

  var newChildren = newProps.children;
  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
  return workInProgress.child;
}

var hasWarnedAboutUsingContextAsConsumer = false;

function updateContextConsumer(current$$1, workInProgress, renderExpirationTime) {
  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
  // DEV mode, we create a separate object for Context.Consumer that acts
  // like a proxy to Context. This proxy object adds unnecessary code in PROD
  // so we use the old behaviour (Context.Consumer references Context) to
  // reduce size and overhead. The separate object references context via
  // a property called "_context", which also gives us the ability to check
  // in DEV mode if this property exists or not and warn if it does not.

  {
    if (context._context === undefined) {
      // This may be because it's a Context (rather than a Consumer).
      // Or it may be because it's older React where they're the same thing.
      // We only want to warn if we're sure it's a new React.
      if (context !== context.Consumer) {
        if (!hasWarnedAboutUsingContextAsConsumer) {
          hasWarnedAboutUsingContextAsConsumer = true;
          warning$1(false, 'Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
        }
      }
    } else {
      context = context._context;
    }
  }

  var newProps = workInProgress.pendingProps;
  var render = newProps.children;

  {
    !(typeof render === 'function') ? warningWithoutStack$1(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
  }

  prepareToReadContext(workInProgress, renderExpirationTime);
  var newValue = readContext(context, newProps.unstable_observedBits);
  var newChildren;

  {
    ReactCurrentOwner$3.current = workInProgress;
    setCurrentPhase('render');
    newChildren = render(newValue);
    setCurrentPhase(null);
  } // React DevTools reads this flag.


  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateFundamentalComponent$1(current$$1, workInProgress, renderExpirationTime) {
  var fundamentalImpl = workInProgress.type.impl;

  if (fundamentalImpl.reconcileChildren === false) {
    return null;
  }

  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateScopeComponent(current$$1, workInProgress, renderExpirationTime) {
  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function markWorkInProgressReceivedUpdate() {
  didReceiveUpdate = true;
}

function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
  cancelWorkTimer(workInProgress);

  if (current$$1 !== null) {
    // Reuse previous dependencies
    workInProgress.dependencies = current$$1.dependencies;
  }

  if (enableProfilerTimer) {
    // Don't update "base" render times for bailouts.
    stopProfilerTimerIfRunning(workInProgress);
  }

  var updateExpirationTime = workInProgress.expirationTime;

  if (updateExpirationTime !== NoWork) {
    markUnprocessedUpdateTime(updateExpirationTime);
  } // Check if the children have any pending work.


  var childExpirationTime = workInProgress.childExpirationTime;

  if (childExpirationTime < renderExpirationTime) {
    // The children don't have any work either. We can skip them.
    // TODO: Once we add back resuming, we should check if the children are
    // a work-in-progress set. If so, we need to transfer their effects.
    return null;
  } else {
    // This fiber doesn't have work, but its subtree does. Clone the child
    // fibers and continue.
    cloneChildFibers(current$$1, workInProgress);
    return workInProgress.child;
  }
}

function remountFiber(current$$1, oldWorkInProgress, newWorkInProgress) {
  {
    var returnFiber = oldWorkInProgress.return;

    if (returnFiber === null) {
      throw new Error('Cannot swap the root fiber.');
    } // Disconnect from the old current.
    // It will get deleted.


    current$$1.alternate = null;
    oldWorkInProgress.alternate = null; // Connect to the new tree.

    newWorkInProgress.index = oldWorkInProgress.index;
    newWorkInProgress.sibling = oldWorkInProgress.sibling;
    newWorkInProgress.return = oldWorkInProgress.return;
    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.

    if (oldWorkInProgress === returnFiber.child) {
      returnFiber.child = newWorkInProgress;
    } else {
      var prevSibling = returnFiber.child;

      if (prevSibling === null) {
        throw new Error('Expected parent to have a child.');
      }

      while (prevSibling.sibling !== oldWorkInProgress) {
        prevSibling = prevSibling.sibling;

        if (prevSibling === null) {
          throw new Error('Expected to find the previous sibling.');
        }
      }

      prevSibling.sibling = newWorkInProgress;
    } // Delete the old fiber and place the new one.
    // Since the old fiber is disconnected, we have to schedule it manually.


    var last = returnFiber.lastEffect;

    if (last !== null) {
      last.nextEffect = current$$1;
      returnFiber.lastEffect = current$$1;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = current$$1;
    }

    current$$1.nextEffect = null;
    current$$1.effectTag = Deletion;
    newWorkInProgress.effectTag |= Placement; // Restart work from the new fiber.

    return newWorkInProgress;
  }
}

function beginWork$1(current$$1, workInProgress, renderExpirationTime) {
  var updateExpirationTime = workInProgress.expirationTime;

  {
    if (workInProgress._debugNeedsRemount && current$$1 !== null) {
      // This will restart the begin phase with a new fiber.
      return remountFiber(current$$1, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.expirationTime));
    }
  }

  if (current$$1 !== null) {
    var oldProps = current$$1.memoizedProps;
    var newProps = workInProgress.pendingProps;

    if (oldProps !== newProps || hasContextChanged() || ( // Force a re-render if the implementation changed due to hot reload:
    workInProgress.type !== current$$1.type)) {
      // If props or context changed, mark the fiber as having performed work.
      // This may be unset if the props are determined to be equal later (memo).
      didReceiveUpdate = true;
    } else if (updateExpirationTime < renderExpirationTime) {
      didReceiveUpdate = false; // This fiber does not have any pending work. Bailout without entering
      // the begin phase. There's still some bookkeeping we that needs to be done
      // in this optimized path, mostly pushing stuff onto the stack.

      switch (workInProgress.tag) {
        case HostRoot:
          pushHostRootContext(workInProgress);
          resetHydrationState();
          break;

        case HostComponent:
          pushHostContext(workInProgress);

          if (workInProgress.mode & ConcurrentMode && renderExpirationTime !== Never && shouldDeprioritizeSubtree(workInProgress.type, newProps)) {
            if (enableSchedulerTracing) {
              markSpawnedWork(Never);
            } // Schedule this fiber to re-render at offscreen priority. Then bailout.


            workInProgress.expirationTime = workInProgress.childExpirationTime = Never;
            return null;
          }

          break;

        case ClassComponent:
          {
            var Component = workInProgress.type;

            if (isContextProvider(Component)) {
              pushContextProvider(workInProgress);
            }

            break;
          }

        case HostPortal:
          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
          break;

        case ContextProvider:
          {
            var newValue = workInProgress.memoizedProps.value;
            pushProvider(workInProgress, newValue);
            break;
          }

        case Profiler:
          if (enableProfilerTimer) {
            // Profiler should only call onRender when one of its descendants actually rendered.
            var hasChildWork = workInProgress.childExpirationTime >= renderExpirationTime;

            if (hasChildWork) {
              workInProgress.effectTag |= Update;
            }
          }

          break;

        case SuspenseComponent:
          {
            var state = workInProgress.memoizedState;

            if (state !== null) {
              if (enableSuspenseServerRenderer) {
                if (state.dehydrated !== null) {
                  pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has
                  // been unsuspended it has committed as a resolved Suspense component.
                  // If it needs to be retried, it should have work scheduled on it.

                  workInProgress.effectTag |= DidCapture;
                  break;
                }
              } // If this boundary is currently timed out, we need to decide
              // whether to retry the primary children, or to skip over it and
              // go straight to the fallback. Check the priority of the primary
              // child fragment.


              var primaryChildFragment = workInProgress.child;
              var primaryChildExpirationTime = primaryChildFragment.childExpirationTime;

              if (primaryChildExpirationTime !== NoWork && primaryChildExpirationTime >= renderExpirationTime) {
                // The primary children have pending work. Use the normal path
                // to attempt to render the primary children again.
                return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
              } else {
                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                // priority. Bailout.

                var child = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);

                if (child !== null) {
                  // The fallback children have pending work. Skip over the
                  // primary children and work on the fallback.
                  return child.sibling;
                } else {
                  return null;
                }
              }
            } else {
              pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
            }

            break;
          }

        case SuspenseListComponent:
          {
            var didSuspendBefore = (current$$1.effectTag & DidCapture) !== NoEffect;

            var _hasChildWork = workInProgress.childExpirationTime >= renderExpirationTime;

            if (didSuspendBefore) {
              if (_hasChildWork) {
                // If something was in fallback state last time, and we have all the
                // same children then we're still in progressive loading state.
                // Something might get unblocked by state updates or retries in the
                // tree which will affect the tail. So we need to use the normal
                // path to compute the correct tail.
                return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
              } // If none of the children had any work, that means that none of
              // them got retried so they'll still be blocked in the same way
              // as before. We can fast bail out.


              workInProgress.effectTag |= DidCapture;
            } // If nothing suspended before and we're rendering the same children,
            // then the tail doesn't matter. Anything new that suspends will work
            // in the "together" mode, so we can continue from the state we had.


            var renderState = workInProgress.memoizedState;

            if (renderState !== null) {
              // Reset to the "together" mode in case we've started a different
              // update in the past but didn't complete it.
              renderState.rendering = null;
              renderState.tail = null;
            }

            pushSuspenseContext(workInProgress, suspenseStackCursor.current);

            if (_hasChildWork) {
              break;
            } else {
              // If none of the children had any work, that means that none of
              // them got retried so they'll still be blocked in the same way
              // as before. We can fast bail out.
              return null;
            }
          }
      }

      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    } else {
      // An update was scheduled on this fiber, but there are no new props
      // nor legacy context. Set this to false. If an update queue or context
      // consumer produces a changed value, it will set this to true. Otherwise,
      // the component will assume the children have not changed and bail out.
      didReceiveUpdate = false;
    }
  } else {
    didReceiveUpdate = false;
  } // Before entering the begin phase, clear the expiration time.


  workInProgress.expirationTime = NoWork;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      {
        return mountIndeterminateComponent(current$$1, workInProgress, workInProgress.type, renderExpirationTime);
      }

    case LazyComponent:
      {
        var elementType = workInProgress.elementType;
        return mountLazyComponent(current$$1, workInProgress, elementType, updateExpirationTime, renderExpirationTime);
      }

    case FunctionComponent:
      {
        var _Component = workInProgress.type;
        var unresolvedProps = workInProgress.pendingProps;
        var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
        return updateFunctionComponent(current$$1, workInProgress, _Component, resolvedProps, renderExpirationTime);
      }

    case ClassComponent:
      {
        var _Component2 = workInProgress.type;
        var _unresolvedProps = workInProgress.pendingProps;

        var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);

        return updateClassComponent(current$$1, workInProgress, _Component2, _resolvedProps, renderExpirationTime);
      }

    case HostRoot:
      return updateHostRoot(current$$1, workInProgress, renderExpirationTime);

    case HostComponent:
      return updateHostComponent(current$$1, workInProgress, renderExpirationTime);

    case HostText:
      return updateHostText(current$$1, workInProgress);

    case SuspenseComponent:
      return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

    case HostPortal:
      return updatePortalComponent(current$$1, workInProgress, renderExpirationTime);

    case ForwardRef:
      {
        var type = workInProgress.type;
        var _unresolvedProps2 = workInProgress.pendingProps;

        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);

        return updateForwardRef(current$$1, workInProgress, type, _resolvedProps2, renderExpirationTime);
      }

    case Fragment:
      return updateFragment(current$$1, workInProgress, renderExpirationTime);

    case Mode:
      return updateMode(current$$1, workInProgress, renderExpirationTime);

    case Profiler:
      return updateProfiler(current$$1, workInProgress, renderExpirationTime);

    case ContextProvider:
      return updateContextProvider(current$$1, workInProgress, renderExpirationTime);

    case ContextConsumer:
      return updateContextConsumer(current$$1, workInProgress, renderExpirationTime);

    case MemoComponent:
      {
        var _type2 = workInProgress.type;
        var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.

        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);

        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = _type2.propTypes;

            if (outerPropTypes) {
              checkPropTypes_1(outerPropTypes, _resolvedProps3, // Resolved for outer only
              'prop', getComponentName(_type2), getCurrentFiberStackInDev);
            }
          }
        }

        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
        return updateMemoComponent(current$$1, workInProgress, _type2, _resolvedProps3, updateExpirationTime, renderExpirationTime);
      }

    case SimpleMemoComponent:
      {
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);
      }

    case IncompleteClassComponent:
      {
        var _Component3 = workInProgress.type;
        var _unresolvedProps4 = workInProgress.pendingProps;

        var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);

        return mountIncompleteClassComponent(current$$1, workInProgress, _Component3, _resolvedProps4, renderExpirationTime);
      }

    case SuspenseListComponent:
      {
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
      }

    case FundamentalComponent:
      {
        if (enableFundamentalAPI) {
          return updateFundamentalComponent$1(current$$1, workInProgress, renderExpirationTime);
        }

        break;
      }

    case ScopeComponent:
      {
        if (enableScopeAPI) {
          return updateScopeComponent(current$$1, workInProgress, renderExpirationTime);
        }

        break;
      }
  }

  {
    {
      throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
  }
}

function createFundamentalStateInstance(currentFiber, props, impl, state) {
  return {
    currentFiber: currentFiber,
    impl: impl,
    instance: null,
    prevProps: null,
    props: props,
    state: state
  };
}

function isFiberSuspenseAndTimedOut(fiber) {
  return fiber.tag === SuspenseComponent && fiber.memoizedState !== null;
}

function getSuspenseFallbackChild(fiber) {
  return fiber.child.sibling.child;
}

var emptyObject$1 = {};

function collectScopedNodes(node, fn, scopedNodes) {
  if (enableScopeAPI) {
    if (node.tag === HostComponent) {
      var _type = node.type,
          memoizedProps = node.memoizedProps,
          stateNode = node.stateNode;

      var _instance = getPublicInstance(stateNode);

      if (_instance !== null && fn(_type, memoizedProps || emptyObject$1, _instance) === true) {
        scopedNodes.push(_instance);
      }
    }

    var child = node.child;

    if (isFiberSuspenseAndTimedOut(node)) {
      child = getSuspenseFallbackChild(node);
    }

    if (child !== null) {
      collectScopedNodesFromChildren(child, fn, scopedNodes);
    }
  }
}

function collectFirstScopedNode(node, fn) {
  if (enableScopeAPI) {
    if (node.tag === HostComponent) {
      var _type2 = node.type,
          memoizedProps = node.memoizedProps,
          stateNode = node.stateNode;

      var _instance2 = getPublicInstance(stateNode);

      if (_instance2 !== null && fn(_type2, memoizedProps, _instance2) === true) {
        return _instance2;
      }
    }

    var child = node.child;

    if (isFiberSuspenseAndTimedOut(node)) {
      child = getSuspenseFallbackChild(node);
    }

    if (child !== null) {
      return collectFirstScopedNodeFromChildren(child, fn);
    }
  }

  return null;
}

function collectScopedNodesFromChildren(startingChild, fn, scopedNodes) {
  var child = startingChild;

  while (child !== null) {
    collectScopedNodes(child, fn, scopedNodes);
    child = child.sibling;
  }
}

function collectFirstScopedNodeFromChildren(startingChild, fn) {
  var child = startingChild;

  while (child !== null) {
    var scopedNode = collectFirstScopedNode(child, fn);

    if (scopedNode !== null) {
      return scopedNode;
    }

    child = child.sibling;
  }

  return null;
}

function collectNearestScopeMethods(node, scope, childrenScopes) {
  if (isValidScopeNode(node, scope)) {
    childrenScopes.push(node.stateNode.methods);
  } else {
    var child = node.child;

    if (isFiberSuspenseAndTimedOut(node)) {
      child = getSuspenseFallbackChild(node);
    }

    if (child !== null) {
      collectNearestChildScopeMethods(child, scope, childrenScopes);
    }
  }
}

function collectNearestChildScopeMethods(startingChild, scope, childrenScopes) {
  var child = startingChild;

  while (child !== null) {
    collectNearestScopeMethods(child, scope, childrenScopes);
    child = child.sibling;
  }
}

function isValidScopeNode(node, scope) {
  return node.tag === ScopeComponent && node.type === scope && node.stateNode !== null;
}

function createScopeMethods(scope, instance) {
  return {
    getChildren: function () {
      var currentFiber = instance.fiber;
      var child = currentFiber.child;
      var childrenScopes = [];

      if (child !== null) {
        collectNearestChildScopeMethods(child, scope, childrenScopes);
      }

      return childrenScopes.length === 0 ? null : childrenScopes;
    },
    getChildrenFromRoot: function () {
      var currentFiber = instance.fiber;
      var node = currentFiber;

      while (node !== null) {
        var parent = node.return;

        if (parent === null) {
          break;
        }

        node = parent;

        if (node.tag === ScopeComponent && node.type === scope) {
          break;
        }
      }

      var childrenScopes = [];
      collectNearestChildScopeMethods(node.child, scope, childrenScopes);
      return childrenScopes.length === 0 ? null : childrenScopes;
    },
    getParent: function () {
      var node = instance.fiber.return;

      while (node !== null) {
        if (node.tag === ScopeComponent && node.type === scope) {
          return node.stateNode.methods;
        }

        node = node.return;
      }

      return null;
    },
    getProps: function () {
      var currentFiber = instance.fiber;
      return currentFiber.memoizedProps;
    },
    queryAllNodes: function (fn) {
      var currentFiber = instance.fiber;
      var child = currentFiber.child;
      var scopedNodes = [];

      if (child !== null) {
        collectScopedNodesFromChildren(child, fn, scopedNodes);
      }

      return scopedNodes.length === 0 ? null : scopedNodes;
    },
    queryFirstNode: function (fn) {
      var currentFiber = instance.fiber;
      var child = currentFiber.child;

      if (child !== null) {
        return collectFirstScopedNodeFromChildren(child, fn);
      }

      return null;
    },
    containsNode: function (node) {
      var fiber = getInstanceFromNode$2(node);

      while (fiber !== null) {
        if (fiber.tag === ScopeComponent && fiber.type === scope && fiber.stateNode === instance) {
          return true;
        }

        fiber = fiber.return;
      }

      return false;
    }
  };
}

function markUpdate(workInProgress) {
  // Tag the fiber with an update effect. This turns a Placement into
  // a PlacementAndUpdate.
  workInProgress.effectTag |= Update;
}

function markRef$1(workInProgress) {
  workInProgress.effectTag |= Ref;
}

var appendAllChildren;
var updateHostContainer;
var updateHostComponent$1;
var updateHostText$1;

if (supportsMutation) {
  // Mutation mode
  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;

    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendInitialChild(parent, node.stateNode);
      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
        appendInitialChild(parent, node.stateNode.instance);
      } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === workInProgress) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function (workInProgress) {// Noop
  };

  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    // If we have an alternate, that means this is an update and we need to
    // schedule a side-effect to do the updates.
    var oldProps = current.memoizedProps;

    if (oldProps === newProps) {
      // In mutation mode, this is sufficient for a bailout because
      // we won't touch this node even if children changed.
      return;
    } // If we get updated because one of our children updated, we don't
    // have newProps so we'll have to reuse them.
    // TODO: Split the update API as separate for the props vs. children.
    // Even better would be if children weren't special cased at all tho.


    var instance = workInProgress.stateNode;
    var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
    // component is hitting the resume path. Figure out why. Possibly
    // related to `hidden`.

    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.

    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
    // is a new ref we mark this as an update. All the work is done in commitWork.

    if (updatePayload) {
      markUpdate(workInProgress);
    }
  };

  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // If the text differs, mark it as an update. All the work in done in commitWork.
    if (oldText !== newText) {
      markUpdate(workInProgress);
    }
  };
} else if (supportsPersistence) {
  // Persistent host tree mode
  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;

    while (node !== null) {
      // eslint-disable-next-line no-labels
      branches: if (node.tag === HostComponent) {
        var instance = node.stateNode;

        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var props = node.memoizedProps;
          var type = node.type;
          instance = cloneHiddenInstance(instance, type, props, node);
        }

        appendInitialChild(parent, instance);
      } else if (node.tag === HostText) {
        var _instance = node.stateNode;

        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var text = node.memoizedProps;
          _instance = cloneHiddenTextInstance(_instance, text, node);
        }

        appendInitialChild(parent, _instance);
      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
        var _instance2 = node.stateNode.instance;

        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var _props = node.memoizedProps;
          var _type = node.type;
          _instance2 = cloneHiddenInstance(_instance2, _type, _props, node);
        }

        appendInitialChild(parent, _instance2);
      } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.tag === SuspenseComponent) {
        if ((node.effectTag & Update) !== NoEffect) {
          // Need to toggle the visibility of the primary children.
          var newIsHidden = node.memoizedState !== null;

          if (newIsHidden) {
            var primaryChildParent = node.child;

            if (primaryChildParent !== null) {
              if (primaryChildParent.child !== null) {
                primaryChildParent.child.return = primaryChildParent;
                appendAllChildren(parent, primaryChildParent, true, newIsHidden);
              }

              var fallbackChildParent = primaryChildParent.sibling;

              if (fallbackChildParent !== null) {
                fallbackChildParent.return = node;
                node = fallbackChildParent;
                continue;
              }
            }
          }
        }

        if (node.child !== null) {
          // Continue traversing like normal
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      } // $FlowFixMe This is correct but Flow is confused by the labeled break.


      node = node;

      if (node === workInProgress) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }; // An unfortunate fork of appendAllChildren because we have two different parent types.


  var appendAllChildrenToContainer = function (containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;

    while (node !== null) {
      // eslint-disable-next-line no-labels
      branches: if (node.tag === HostComponent) {
        var instance = node.stateNode;

        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var props = node.memoizedProps;
          var type = node.type;
          instance = cloneHiddenInstance(instance, type, props, node);
        }

        appendChildToContainerChildSet(containerChildSet, instance);
      } else if (node.tag === HostText) {
        var _instance3 = node.stateNode;

        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var text = node.memoizedProps;
          _instance3 = cloneHiddenTextInstance(_instance3, text, node);
        }

        appendChildToContainerChildSet(containerChildSet, _instance3);
      } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
        var _instance4 = node.stateNode.instance;

        if (needsVisibilityToggle && isHidden) {
          // This child is inside a timed out tree. Hide it.
          var _props2 = node.memoizedProps;
          var _type2 = node.type;
          _instance4 = cloneHiddenInstance(_instance4, _type2, _props2, node);
        }

        appendChildToContainerChildSet(containerChildSet, _instance4);
      } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.tag === SuspenseComponent) {
        if ((node.effectTag & Update) !== NoEffect) {
          // Need to toggle the visibility of the primary children.
          var newIsHidden = node.memoizedState !== null;

          if (newIsHidden) {
            var primaryChildParent = node.child;

            if (primaryChildParent !== null) {
              if (primaryChildParent.child !== null) {
                primaryChildParent.child.return = primaryChildParent;
                appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, newIsHidden);
              }

              var fallbackChildParent = primaryChildParent.sibling;

              if (fallbackChildParent !== null) {
                fallbackChildParent.return = node;
                node = fallbackChildParent;
                continue;
              }
            }
          }
        }

        if (node.child !== null) {
          // Continue traversing like normal
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      } // $FlowFixMe This is correct but Flow is confused by the labeled break.


      node = node;

      if (node === workInProgress) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function (workInProgress) {
    var portalOrRoot = workInProgress.stateNode;
    var childrenUnchanged = workInProgress.firstEffect === null;

    if (childrenUnchanged) {// No changes, just reuse the existing instance.
    } else {
      var container = portalOrRoot.containerInfo;
      var newChildSet = createContainerChildSet(container); // If children might have changed, we have to add them all to the set.

      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
      portalOrRoot.pendingChildren = newChildSet; // Schedule an update on the container to swap out the container.

      markUpdate(workInProgress);
      finalizeContainerChildren(container, newChildSet);
    }
  };

  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    var currentInstance = current.stateNode;
    var oldProps = current.memoizedProps; // If there are no effects associated with this node, then none of our children had any updates.
    // This guarantees that we can reuse all of them.

    var childrenUnchanged = workInProgress.firstEffect === null;

    if (childrenUnchanged && oldProps === newProps) {
      // No changes, just reuse the existing instance.
      // Note that this might release a previous clone.
      workInProgress.stateNode = currentInstance;
      return;
    }

    var recyclableInstance = workInProgress.stateNode;
    var currentHostContext = getHostContext();
    var updatePayload = null;

    if (oldProps !== newProps) {
      updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
    }

    if (childrenUnchanged && updatePayload === null) {
      // No changes, just reuse the existing instance.
      // Note that this might release a previous clone.
      workInProgress.stateNode = currentInstance;
      return;
    }

    var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);

    if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
      markUpdate(workInProgress);
    }

    workInProgress.stateNode = newInstance;

    if (childrenUnchanged) {
      // If there are no other effects in this tree, we need to flag this node as having one.
      // Even though we're not going to use it for anything.
      // Otherwise parents won't know that there are new children to propagate upwards.
      markUpdate(workInProgress);
    } else {
      // If children might have changed, we have to add them all to the set.
      appendAllChildren(newInstance, workInProgress, false, false);
    }
  };

  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    if (oldText !== newText) {
      // If the text content differs, we'll create a new text instance for it.
      var rootContainerInstance = getRootHostContainer();
      var currentHostContext = getHostContext();
      workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress); // We'll have to mark it as having an effect, even though we won't use the effect for anything.
      // This lets the parents know that at least one of their children has changed.

      markUpdate(workInProgress);
    }
  };
} else {
  // No host operations
  updateHostContainer = function (workInProgress) {// Noop
  };

  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {// Noop
  };

  updateHostText$1 = function (current, workInProgress, oldText, newText) {// Noop
  };
}

function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
  switch (renderState.tailMode) {
    case 'hidden':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var tailNode = renderState.tail;
        var lastTailNode = null;

        while (tailNode !== null) {
          if (tailNode.alternate !== null) {
            lastTailNode = tailNode;
          }

          tailNode = tailNode.sibling;
        } // Next we're simply going to delete all insertions after the
        // last rendered item.


        if (lastTailNode === null) {
          // All remaining items in the tail are insertions.
          renderState.tail = null;
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          lastTailNode.sibling = null;
        }

        break;
      }

    case 'collapsed':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var _tailNode = renderState.tail;
        var _lastTailNode = null;

        while (_tailNode !== null) {
          if (_tailNode.alternate !== null) {
            _lastTailNode = _tailNode;
          }

          _tailNode = _tailNode.sibling;
        } // Next we're simply going to delete all insertions after the
        // last rendered item.


        if (_lastTailNode === null) {
          // All remaining items in the tail are insertions.
          if (!hasRenderedATailFallback && renderState.tail !== null) {
            // We suspended during the head. We want to show at least one
            // row at the tail. So we'll keep on and cut off the rest.
            renderState.tail.sibling = null;
          } else {
            renderState.tail = null;
          }
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          _lastTailNode.sibling = null;
        }

        break;
      }
  }
}

function completeWork(current, workInProgress, renderExpirationTime) {
  var newProps = workInProgress.pendingProps;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      break;

    case LazyComponent:
      break;

    case SimpleMemoComponent:
    case FunctionComponent:
      break;

    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }

        break;
      }

    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var fiberRoot = workInProgress.stateNode;

        if (fiberRoot.pendingContext) {
          fiberRoot.context = fiberRoot.pendingContext;
          fiberRoot.pendingContext = null;
        }

        if (current === null || current.child === null) {
          // If we hydrated, pop so that we can delete any remaining children
          // that weren't hydrated.
          var wasHydrated = popHydrationState(workInProgress);

          if (wasHydrated) {
            // If we hydrated, then we'll need to schedule an update for
            // the commit side-effects on the root.
            markUpdate(workInProgress);
          }
        }

        updateHostContainer(workInProgress);
        break;
      }

    case HostComponent:
      {
        popHostContext(workInProgress);
        var rootContainerInstance = getRootHostContainer();
        var type = workInProgress.type;

        if (current !== null && workInProgress.stateNode != null) {
          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);

          if (enableFlareAPI) {
            var prevListeners = current.memoizedProps.listeners;
            var nextListeners = newProps.listeners;

            if (prevListeners !== nextListeners) {
              markUpdate(workInProgress);
            }
          }

          if (current.ref !== workInProgress.ref) {
            markRef$1(workInProgress);
          }
        } else {
          if (!newProps) {
            if (!(workInProgress.stateNode !== null)) {
              {
                throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              }
            } // This can happen when we abort work.


            break;
          }

          var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
          // "stack" as the parent. Then append children as we go in beginWork
          // or completeWork depending on we want to add then top->down or
          // bottom->up. Top->down is faster in IE11.

          var _wasHydrated = popHydrationState(workInProgress);

          if (_wasHydrated) {
            // TODO: Move this and createInstance step into the beginPhase
            // to consolidate.
            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
              // If changes to the hydrated node needs to be applied at the
              // commit-phase we mark this as such.
              markUpdate(workInProgress);
            }

            if (enableFlareAPI) {
              var listeners = newProps.listeners;

              if (listeners != null) {
                updateEventListeners(listeners, workInProgress, rootContainerInstance);
              }
            }
          } else {
            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
            appendAllChildren(instance, workInProgress, false, false); // This needs to be set before we mount Flare event listeners

            workInProgress.stateNode = instance;

            if (enableFlareAPI) {
              var _listeners = newProps.listeners;

              if (_listeners != null) {
                updateEventListeners(_listeners, workInProgress, rootContainerInstance);
              }
            } // Certain renderers require commit-time effects for initial mount.
            // (eg DOM renderer supports auto-focus for certain elements).
            // Make sure such renderers get scheduled for later work.


            if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance, currentHostContext)) {
              markUpdate(workInProgress);
            }
          }

          if (workInProgress.ref !== null) {
            // If there is a ref on a host node we need to schedule a callback
            markRef$1(workInProgress);
          }
        }

        break;
      }

    case HostText:
      {
        var newText = newProps;

        if (current && workInProgress.stateNode != null) {
          var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
          // to schedule a side-effect to do the updates.

          updateHostText$1(current, workInProgress, oldText, newText);
        } else {
          if (typeof newText !== 'string') {
            if (!(workInProgress.stateNode !== null)) {
              {
                throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              }
            } // This can happen when we abort work.

          }

          var _rootContainerInstance = getRootHostContainer();

          var _currentHostContext = getHostContext();

          var _wasHydrated2 = popHydrationState(workInProgress);

          if (_wasHydrated2) {
            if (prepareToHydrateHostTextInstance(workInProgress)) {
              markUpdate(workInProgress);
            }
          } else {
            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
          }
        }

        break;
      }

    case ForwardRef:
      break;

    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);
        var nextState = workInProgress.memoizedState;

        if (enableSuspenseServerRenderer) {
          if (nextState !== null && nextState.dehydrated !== null) {
            if (current === null) {
              var _wasHydrated3 = popHydrationState(workInProgress);

              if (!_wasHydrated3) {
                {
                  throw Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                }
              }

              prepareToHydrateHostSuspenseInstance(workInProgress);

              if (enableSchedulerTracing) {
                markSpawnedWork(Never);
              }

              return null;
            } else {
              // We should never have been in a hydration state if we didn't have a current.
              // However, in some of those paths, we might have reentered a hydration state
              // and then we might be inside a hydration state. In that case, we'll need to
              // exit out of it.
              resetHydrationState();

              if ((workInProgress.effectTag & DidCapture) === NoEffect) {
                // This boundary did not suspend so it's now hydrated and unsuspended.
                workInProgress.memoizedState = null;
              } // If nothing suspended, we need to schedule an effect to mark this boundary
              // as having hydrated so events know that they're free be invoked.
              // It's also a signal to replay events and the suspense callback.
              // If something suspended, schedule an effect to attach retry listeners.
              // So we might as well always mark this.


              workInProgress.effectTag |= Update;
              return null;
            }
          }
        }

        if ((workInProgress.effectTag & DidCapture) !== NoEffect) {
          // Something suspended. Re-render with the fallback children.
          workInProgress.expirationTime = renderExpirationTime; // Do not reset the effect list.

          return workInProgress;
        }

        var nextDidTimeout = nextState !== null;
        var prevDidTimeout = false;

        if (current === null) {
          if (workInProgress.memoizedProps.fallback !== undefined) {
            popHydrationState(workInProgress);
          }
        } else {
          var prevState = current.memoizedState;
          prevDidTimeout = prevState !== null;

          if (!nextDidTimeout && prevState !== null) {
            // We just switched from the fallback to the normal children.
            // Delete the fallback.
            // TODO: Would it be better to store the fallback fragment on
            // the stateNode during the begin phase?
            var currentFallbackChild = current.child.sibling;

            if (currentFallbackChild !== null) {
              // Deletions go at the beginning of the return fiber's effect list
              var first = workInProgress.firstEffect;

              if (first !== null) {
                workInProgress.firstEffect = currentFallbackChild;
                currentFallbackChild.nextEffect = first;
              } else {
                workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;
                currentFallbackChild.nextEffect = null;
              }

              currentFallbackChild.effectTag = Deletion;
            }
          }
        }

        if (nextDidTimeout && !prevDidTimeout) {
          // If this subtreee is running in blocking mode we can suspend,
          // otherwise we won't suspend.
          // TODO: This will still suspend a synchronous tree if anything
          // in the concurrent tree already suspended during this render.
          // This is a known bug.
          if ((workInProgress.mode & BlockingMode) !== NoMode) {
            // TODO: Move this back to throwException because this is too late
            // if this is a large tree which is common for initial loads. We
            // don't know if we should restart a render or not until we get
            // this marker, and this is too late.
            // If this render already had a ping or lower pri updates,
            // and this is the first time we know we're going to suspend we
            // should be able to immediately restart from within throwException.
            var hasInvisibleChildContext = current === null && workInProgress.memoizedProps.unstable_avoidThisFallback !== true;

            if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
              // If this was in an invisible tree or a new render, then showing
              // this boundary is ok.
              renderDidSuspend();
            } else {
              // Otherwise, we're going to have to hide content so we should
              // suspend for longer if possible.
              renderDidSuspendDelayIfPossible();
            }
          }
        }

        if (supportsPersistence) {
          // TODO: Only schedule updates if not prevDidTimeout.
          if (nextDidTimeout) {
            // If this boundary just timed out, schedule an effect to attach a
            // retry listener to the proimse. This flag is also used to hide the
            // primary children.
            workInProgress.effectTag |= Update;
          }
        }

        if (supportsMutation) {
          // TODO: Only schedule updates if these values are non equal, i.e. it changed.
          if (nextDidTimeout || prevDidTimeout) {
            // If this boundary just timed out, schedule an effect to attach a
            // retry listener to the proimse. This flag is also used to hide the
            // primary children. In mutation mode, we also need the flag to
            // *unhide* children that were previously hidden, so check if the
            // is currently timed out, too.
            workInProgress.effectTag |= Update;
          }
        }

        if (enableSuspenseCallback && workInProgress.updateQueue !== null && workInProgress.memoizedProps.suspenseCallback != null) {
          // Always notify the callback
          workInProgress.effectTag |= Update;
        }

        break;
      }

    case Fragment:
      break;

    case Mode:
      break;

    case Profiler:
      break;

    case HostPortal:
      popHostContainer(workInProgress);
      updateHostContainer(workInProgress);
      break;

    case ContextProvider:
      // Pop provider fiber
      popProvider(workInProgress);
      break;

    case ContextConsumer:
      break;

    case MemoComponent:
      break;

    case IncompleteClassComponent:
      {
        // Same as class component case. I put it down here so that the tags are
        // sequential to ensure this switch is compiled to a jump table.
        var _Component = workInProgress.type;

        if (isContextProvider(_Component)) {
          popContext(workInProgress);
        }

        break;
      }

    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress);
        var renderState = workInProgress.memoizedState;

        if (renderState === null) {
          // We're running in the default, "independent" mode. We don't do anything
          // in this mode.
          break;
        }

        var didSuspendAlready = (workInProgress.effectTag & DidCapture) !== NoEffect;
        var renderedTail = renderState.rendering;

        if (renderedTail === null) {
          // We just rendered the head.
          if (!didSuspendAlready) {
            // This is the first pass. We need to figure out if anything is still
            // suspended in the rendered set.
            // If new content unsuspended, but there's still some content that
            // didn't. Then we need to do a second pass that forces everything
            // to keep showing their fallbacks.
            // We might be suspended if something in this render pass suspended, or
            // something in the previous committed pass suspended. Otherwise,
            // there's no chance so we can skip the expensive call to
            // findFirstSuspended.
            var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.effectTag & DidCapture) === NoEffect);

            if (!cannotBeSuspended) {
              var row = workInProgress.child;

              while (row !== null) {
                var suspended = findFirstSuspended(row);

                if (suspended !== null) {
                  didSuspendAlready = true;
                  workInProgress.effectTag |= DidCapture;
                  cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                  // part of the second pass. In that case nothing will subscribe to
                  // its thennables. Instead, we'll transfer its thennables to the
                  // SuspenseList so that it can retry if they resolve.
                  // There might be multiple of these in the list but since we're
                  // going to wait for all of them anyway, it doesn't really matter
                  // which ones gets to ping. In theory we could get clever and keep
                  // track of how many dependencies remain but it gets tricky because
                  // in the meantime, we can add/remove/change items and dependencies.
                  // We might bail out of the loop before finding any but that
                  // doesn't matter since that means that the other boundaries that
                  // we did find already has their listeners attached.

                  var newThennables = suspended.updateQueue;

                  if (newThennables !== null) {
                    workInProgress.updateQueue = newThennables;
                    workInProgress.effectTag |= Update;
                  } // Rerender the whole list, but this time, we'll force fallbacks
                  // to stay in place.
                  // Reset the effect list before doing the second pass since that's now invalid.


                  if (renderState.lastEffect === null) {
                    workInProgress.firstEffect = null;
                  }

                  workInProgress.lastEffect = renderState.lastEffect; // Reset the child fibers to their original state.

                  resetChildFibers(workInProgress, renderExpirationTime); // Set up the Suspense Context to force suspense and immediately
                  // rerender the children.

                  pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                  return workInProgress.child;
                }

                row = row.sibling;
              }
            }
          } else {
            cutOffTailIfNeeded(renderState, false);
          } // Next we're going to render the tail.

        } else {
          // Append the rendered row to the child list.
          if (!didSuspendAlready) {
            var _suspended = findFirstSuspended(renderedTail);

            if (_suspended !== null) {
              workInProgress.effectTag |= DidCapture;
              didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
              // get lost if this row ends up dropped during a second pass.

              var _newThennables = _suspended.updateQueue;

              if (_newThennables !== null) {
                workInProgress.updateQueue = _newThennables;
                workInProgress.effectTag |= Update;
              }

              cutOffTailIfNeeded(renderState, true); // This might have been modified.

              if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate) {
                // We need to delete the row we just rendered.
                // Reset the effect list to what it was before we rendered this
                // child. The nested children have already appended themselves.
                var lastEffect = workInProgress.lastEffect = renderState.lastEffect; // Remove any effects that were appended after this point.

                if (lastEffect !== null) {
                  lastEffect.nextEffect = null;
                } // We're done.


                return null;
              }
            } else if (now() > renderState.tailExpiration && renderExpirationTime > Never) {
              // We have now passed our CPU deadline and we'll just give up further
              // attempts to render the main content and only render fallbacks.
              // The assumption is that this is usually faster.
              workInProgress.effectTag |= DidCapture;
              didSuspendAlready = true;
              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
              // to get it started back up to attempt the next item. If we can show
              // them, then they really have the same priority as this render.
              // So we'll pick it back up the very next render pass once we've had
              // an opportunity to yield for paint.

              var nextPriority = renderExpirationTime - 1;
              workInProgress.expirationTime = workInProgress.childExpirationTime = nextPriority;

              if (enableSchedulerTracing) {
                markSpawnedWork(nextPriority);
              }
            }
          }

          if (renderState.isBackwards) {
            // The effect list of the backwards tail will have been added
            // to the end. This breaks the guarantee that life-cycles fire in
            // sibling order but that isn't a strong guarantee promised by React.
            // Especially since these might also just pop in during future commits.
            // Append to the beginning of the list.
            renderedTail.sibling = workInProgress.child;
            workInProgress.child = renderedTail;
          } else {
            var previousSibling = renderState.last;

            if (previousSibling !== null) {
              previousSibling.sibling = renderedTail;
            } else {
              workInProgress.child = renderedTail;
            }

            renderState.last = renderedTail;
          }
        }

        if (renderState.tail !== null) {
          // We still have tail rows to render.
          if (renderState.tailExpiration === 0) {
            // Heuristic for how long we're willing to spend rendering rows
            // until we just give up and show what we have so far.
            var TAIL_EXPIRATION_TIMEOUT_MS = 500;
            renderState.tailExpiration = now() + TAIL_EXPIRATION_TIMEOUT_MS;
          } // Pop a row.


          var next = renderState.tail;
          renderState.rendering = next;
          renderState.tail = next.sibling;
          renderState.lastEffect = workInProgress.lastEffect;
          next.sibling = null; // Restore the context.
          // TODO: We can probably just avoid popping it instead and only
          // setting it the first time we go from not suspended to suspended.

          var suspenseContext = suspenseStackCursor.current;

          if (didSuspendAlready) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
          } else {
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          }

          pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.

          return next;
        }

        break;
      }

    case FundamentalComponent:
      {
        if (enableFundamentalAPI) {
          var fundamentalImpl = workInProgress.type.impl;
          var fundamentalInstance = workInProgress.stateNode;

          if (fundamentalInstance === null) {
            var getInitialState = fundamentalImpl.getInitialState;
            var fundamentalState;

            if (getInitialState !== undefined) {
              fundamentalState = getInitialState(newProps);
            }

            fundamentalInstance = workInProgress.stateNode = createFundamentalStateInstance(workInProgress, newProps, fundamentalImpl, fundamentalState || {});

            var _instance5 = getFundamentalComponentInstance(fundamentalInstance);

            fundamentalInstance.instance = _instance5;

            if (fundamentalImpl.reconcileChildren === false) {
              return null;
            }

            appendAllChildren(_instance5, workInProgress, false, false);
            mountFundamentalComponent(fundamentalInstance);
          } else {
            // We fire update in commit phase
            var prevProps = fundamentalInstance.props;
            fundamentalInstance.prevProps = prevProps;
            fundamentalInstance.props = newProps;
            fundamentalInstance.currentFiber = workInProgress;

            if (supportsPersistence) {
              var _instance6 = cloneFundamentalInstance(fundamentalInstance);

              fundamentalInstance.instance = _instance6;
              appendAllChildren(_instance6, workInProgress, false, false);
            }

            var shouldUpdate = shouldUpdateFundamentalComponent(fundamentalInstance);

            if (shouldUpdate) {
              markUpdate(workInProgress);
            }
          }
        }

        break;
      }

    case ScopeComponent:
      {
        if (enableScopeAPI) {
          if (current === null) {
            var _type3 = workInProgress.type;
            var scopeInstance = {
              fiber: workInProgress,
              methods: null
            };
            workInProgress.stateNode = scopeInstance;
            scopeInstance.methods = createScopeMethods(_type3, scopeInstance);

            if (enableFlareAPI) {
              var _listeners2 = newProps.listeners;

              if (_listeners2 != null) {
                var _rootContainerInstance2 = getRootHostContainer();

                updateEventListeners(_listeners2, workInProgress, _rootContainerInstance2);
              }
            }

            if (workInProgress.ref !== null) {
              markRef$1(workInProgress);
              markUpdate(workInProgress);
            }
          } else {
            if (enableFlareAPI) {
              var _prevListeners = current.memoizedProps.listeners;
              var _nextListeners = newProps.listeners;

              if (_prevListeners !== _nextListeners || workInProgress.ref !== null) {
                markUpdate(workInProgress);
              }
            } else {
              if (workInProgress.ref !== null) {
                markUpdate(workInProgress);
              }
            }

            if (current.ref !== workInProgress.ref) {
              markRef$1(workInProgress);
            }
          }
        }

        break;
      }

    default:
      {
        {
          throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
        }
      }

  }

  return null;
}

function unwindWork(workInProgress, renderExpirationTime) {
  switch (workInProgress.tag) {
    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }

        var effectTag = workInProgress.effectTag;

        if (effectTag & ShouldCapture) {
          workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
          return workInProgress;
        }

        return null;
      }

    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var _effectTag = workInProgress.effectTag;

        if (!((_effectTag & DidCapture) === NoEffect)) {
          {
            throw Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue.");
          }
        }

        workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
        return workInProgress;
      }

    case HostComponent:
      {
        // TODO: popHydrationState
        popHostContext(workInProgress);
        return null;
      }

    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);

        if (enableSuspenseServerRenderer) {
          var suspenseState = workInProgress.memoizedState;

          if (suspenseState !== null && suspenseState.dehydrated !== null) {
            if (!(workInProgress.alternate !== null)) {
              {
                throw Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
              }
            }

            resetHydrationState();
          }
        }

        var _effectTag2 = workInProgress.effectTag;

        if (_effectTag2 & ShouldCapture) {
          workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.

          return workInProgress;
        }

        return null;
      }

    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
        // caught by a nested boundary. If not, it should bubble through.

        return null;
      }

    case HostPortal:
      popHostContainer(workInProgress);
      return null;

    case ContextProvider:
      popProvider(workInProgress);
      return null;

    default:
      return null;
  }
}

function unwindInterruptedWork(interruptedWork) {
  switch (interruptedWork.tag) {
    case ClassComponent:
      {
        var childContextTypes = interruptedWork.type.childContextTypes;

        if (childContextTypes !== null && childContextTypes !== undefined) {
          popContext(interruptedWork);
        }

        break;
      }

    case HostRoot:
      {
        popHostContainer(interruptedWork);
        popTopLevelContextObject(interruptedWork);
        break;
      }

    case HostComponent:
      {
        popHostContext(interruptedWork);
        break;
      }

    case HostPortal:
      popHostContainer(interruptedWork);
      break;

    case SuspenseComponent:
      popSuspenseContext(interruptedWork);
      break;

    case SuspenseListComponent:
      popSuspenseContext(interruptedWork);
      break;

    case ContextProvider:
      popProvider(interruptedWork);
      break;

    default:
      break;
  }
}

function createCapturedValue(value, source) {
  // If the value is an error, call this function immediately after it is thrown
  // so the stack is accurate.
  return {
    value: value,
    source: source,
    stack: getStackByFiberInDevAndProd(source)
  };
}

// This module is forked in different environments.
// By default, return `true` to log errors to the console.
// Forks can return `false` if this isn't desirable.
function showErrorDialog(capturedError) {
  return true;
}

function logCapturedError(capturedError) {
  var logError = showErrorDialog(capturedError); // Allow injected showErrorDialog() to prevent default console.error logging.
  // This enables renderers like ReactNative to better manage redbox behavior.

  if (logError === false) {
    return;
  }

  var error = capturedError.error;

  {
    var componentName = capturedError.componentName,
        componentStack = capturedError.componentStack,
        errorBoundaryName = capturedError.errorBoundaryName,
        errorBoundaryFound = capturedError.errorBoundaryFound,
        willRetry = capturedError.willRetry; // Browsers support silencing uncaught errors by calling
    // `preventDefault()` in window `error` handler.
    // We record this information as an expando on the error.

    if (error != null && error._suppressLogging) {
      if (errorBoundaryFound && willRetry) {
        // The error is recoverable and was silenced.
        // Ignore it and don't print the stack addendum.
        // This is handy for testing error boundaries without noise.
        return;
      } // The error is fatal. Since the silencing might have
      // been accidental, we'll surface it anyway.
      // However, the browser would have silenced the original error
      // so we'll print it first, and then print the stack addendum.


      console.error(error); // For a more detailed description of this block, see:
      // https://github.com/facebook/react/pull/13384
    }

    var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
    var errorBoundaryMessage; // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.

    if (errorBoundaryFound && errorBoundaryName) {
      if (willRetry) {
        errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
      } else {
        errorBoundaryMessage = "This error was initially handled by the error boundary " + errorBoundaryName + ".\n" + "Recreating the tree from scratch failed so React will unmount the tree.";
      }
    } else {
      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
    }

    var combinedMessage = "" + componentNameMessage + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
    // We don't include the original error message and JS stack because the browser
    // has already printed it. Even if the application swallows the error, it is still
    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.

    console.error(combinedMessage);
  }
}

var didWarnAboutUndefinedSnapshotBeforeUpdate = null;

{
  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
}

var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
function logError(boundary, errorInfo) {
  var source = errorInfo.source;
  var stack = errorInfo.stack;

  if (stack === null && source !== null) {
    stack = getStackByFiberInDevAndProd(source);
  }

  var capturedError = {
    componentName: source !== null ? getComponentName(source.type) : null,
    componentStack: stack !== null ? stack : '',
    error: errorInfo.value,
    errorBoundary: null,
    errorBoundaryName: null,
    errorBoundaryFound: false,
    willRetry: false
  };

  if (boundary !== null && boundary.tag === ClassComponent) {
    capturedError.errorBoundary = boundary.stateNode;
    capturedError.errorBoundaryName = getComponentName(boundary.type);
    capturedError.errorBoundaryFound = true;
    capturedError.willRetry = true;
  }

  try {
    logCapturedError(capturedError);
  } catch (e) {
    // This method must not throw, or React internal state will get messed up.
    // If console.error is overridden, or logCapturedError() shows a dialog that throws,
    // we want to report this error outside of the normal stack as a last resort.
    // https://github.com/facebook/react/issues/13188
    setTimeout(function () {
      throw e;
    });
  }
}

var callComponentWillUnmountWithTimer = function (current$$1, instance) {
  startPhaseTimer(current$$1, 'componentWillUnmount');
  instance.props = current$$1.memoizedProps;
  instance.state = current$$1.memoizedState;
  instance.componentWillUnmount();
  stopPhaseTimer();
}; // Capture errors so they don't interrupt unmounting.


function safelyCallComponentWillUnmount(current$$1, instance) {
  {
    invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current$$1, instance);

    if (hasCaughtError()) {
      var unmountError = clearCaughtError();
      captureCommitPhaseError(current$$1, unmountError);
    }
  }
}

function safelyDetachRef(current$$1) {
  var ref = current$$1.ref;

  if (ref !== null) {
    if (typeof ref === 'function') {
      {
        invokeGuardedCallback(null, ref, null, null);

        if (hasCaughtError()) {
          var refError = clearCaughtError();
          captureCommitPhaseError(current$$1, refError);
        }
      }
    } else {
      ref.current = null;
    }
  }
}

function safelyCallDestroy(current$$1, destroy) {
  {
    invokeGuardedCallback(null, destroy, null);

    if (hasCaughtError()) {
      var error = clearCaughtError();
      captureCommitPhaseError(current$$1, error);
    }
  }
}

function commitBeforeMutationLifeCycles(current$$1, finishedWork) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);
        return;
      }

    case ClassComponent:
      {
        if (finishedWork.effectTag & Snapshot) {
          if (current$$1 !== null) {
            var prevProps = current$$1.memoizedProps;
            var prevState = current$$1.memoizedState;
            startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
            var instance = finishedWork.stateNode; // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.

            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              }
            }

            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);

            {
              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;

              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                didWarnSet.add(finishedWork.type);
                warningWithoutStack$1(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));
              }
            }

            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
            stopPhaseTimer();
          }
        }

        return;
      }

    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
    case IncompleteClassComponent:
      // Nothing to do for these component types
      return;

    default:
      {
        {
          {
            throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }
  }
}

function commitHookEffectList(unmountTag, mountTag, finishedWork) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;

    do {
      if ((effect.tag & unmountTag) !== NoEffect$1) {
        // Unmount
        var destroy = effect.destroy;
        effect.destroy = undefined;

        if (destroy !== undefined) {
          destroy();
        }
      }

      if ((effect.tag & mountTag) !== NoEffect$1) {
        // Mount
        var create = effect.create;
        effect.destroy = create();

        {
          var _destroy = effect.destroy;

          if (_destroy !== undefined && typeof _destroy !== 'function') {
            var addendum = void 0;

            if (_destroy === null) {
              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';
            } else if (typeof _destroy.then === 'function') {
              addendum = '\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + 'useEffect(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + 'Learn more about data fetching with Hooks: https://fb.me/react-hooks-data-fetching';
            } else {
              addendum = ' You returned: ' + _destroy;
            }

            warningWithoutStack$1(false, 'An effect function must not return anything besides a function, ' + 'which is used for clean-up.%s%s', addendum, getStackByFiberInDevAndProd(finishedWork));
          }
        }
      }

      effect = effect.next;
    } while (effect !== firstEffect);
  }
}

function commitPassiveHookEffects(finishedWork) {
  if ((finishedWork.effectTag & Passive) !== NoEffect) {
    switch (finishedWork.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);
          commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
          break;
        }

      default:
        break;
    }
  }
}

function commitLifeCycles(finishedRoot, current$$1, finishedWork, committedExpirationTime) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        commitHookEffectList(UnmountLayout, MountLayout, finishedWork);
        break;
      }

    case ClassComponent:
      {
        var instance = finishedWork.stateNode;

        if (finishedWork.effectTag & Update) {
          if (current$$1 === null) {
            startPhaseTimer(finishedWork, 'componentDidMount'); // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.

            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              }
            }

            instance.componentDidMount();
            stopPhaseTimer();
          } else {
            var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);
            var prevState = current$$1.memoizedState;
            startPhaseTimer(finishedWork, 'componentDidUpdate'); // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.

            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              }
            }

            instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
            stopPhaseTimer();
          }
        }

        var updateQueue = finishedWork.updateQueue;

        if (updateQueue !== null) {
          {
            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
              !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
            }
          } // We could update instance props and state here,
          // but instead we rely on them being set during last render.
          // TODO: revisit this when we implement resuming.


          commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
        }

        return;
      }

    case HostRoot:
      {
        var _updateQueue = finishedWork.updateQueue;

        if (_updateQueue !== null) {
          var _instance = null;

          if (finishedWork.child !== null) {
            switch (finishedWork.child.tag) {
              case HostComponent:
                _instance = getPublicInstance(finishedWork.child.stateNode);
                break;

              case ClassComponent:
                _instance = finishedWork.child.stateNode;
                break;
            }
          }

          commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
        }

        return;
      }

    case HostComponent:
      {
        var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
        // (eg DOM renderer may schedule auto-focus for inputs and form controls).
        // These effects should only be committed when components are first mounted,
        // aka when there is no current/alternate.

        if (current$$1 === null && finishedWork.effectTag & Update) {
          var type = finishedWork.type;
          var props = finishedWork.memoizedProps;
          commitMount(_instance2, type, props, finishedWork);
        }

        return;
      }

    case HostText:
      {
        // We have no life-cycles associated with text.
        return;
      }

    case HostPortal:
      {
        // We have no life-cycles associated with portals.
        return;
      }

    case Profiler:
      {
        if (enableProfilerTimer) {
          var onRender = finishedWork.memoizedProps.onRender;

          if (typeof onRender === 'function') {
            if (enableSchedulerTracing) {
              onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime(), finishedRoot.memoizedInteractions);
            } else {
              onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime());
            }
          }
        }

        return;
      }

    case SuspenseComponent:
      {
        commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
        return;
      }

    case SuspenseListComponent:
    case IncompleteClassComponent:
    case FundamentalComponent:
    case ScopeComponent:
      return;

    default:
      {
        {
          {
            throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }
  }
}

function hideOrUnhideAllChildren(finishedWork, isHidden) {
  if (supportsMutation) {
    // We only have the top Fiber that was inserted but we need to recurse down its
    // children to find all the terminal nodes.
    var node = finishedWork;

    while (true) {
      if (node.tag === HostComponent) {
        var instance = node.stateNode;

        if (isHidden) {
          hideInstance(instance);
        } else {
          unhideInstance(node.stateNode, node.memoizedProps);
        }
      } else if (node.tag === HostText) {
        var _instance3 = node.stateNode;

        if (isHidden) {
          hideTextInstance(_instance3);
        } else {
          unhideTextInstance(_instance3, node.memoizedProps);
        }
      } else if (node.tag === SuspenseComponent && node.memoizedState !== null && node.memoizedState.dehydrated === null) {
        // Found a nested Suspense component that timed out. Skip over the
        // primary child fragment, which should remain hidden.
        var fallbackChildFragment = node.child.sibling;
        fallbackChildFragment.return = node;
        node = fallbackChildFragment;
        continue;
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === finishedWork) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === finishedWork) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }
}

function commitAttachRef(finishedWork) {
  var ref = finishedWork.ref;

  if (ref !== null) {
    var instance = finishedWork.stateNode;
    var instanceToUse;

    switch (finishedWork.tag) {
      case HostComponent:
        instanceToUse = getPublicInstance(instance);
        break;

      default:
        instanceToUse = instance;
    } // Moved outside to ensure DCE works with this flag


    if (enableScopeAPI && finishedWork.tag === ScopeComponent) {
      instanceToUse = instance.methods;
    }

    if (typeof ref === 'function') {
      ref(instanceToUse);
    } else {
      {
        if (!ref.hasOwnProperty('current')) {
          warningWithoutStack$1(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork.type), getStackByFiberInDevAndProd(finishedWork));
        }
      }

      ref.current = instanceToUse;
    }
  }
}

function commitDetachRef(current$$1) {
  var currentRef = current$$1.ref;

  if (currentRef !== null) {
    if (typeof currentRef === 'function') {
      currentRef(null);
    } else {
      currentRef.current = null;
    }
  }
} // User-originating errors (lifecycles and refs) should not interrupt
// deletion, so don't let them throw. Host-originating errors should
// interrupt deletion, so it's okay


function commitUnmount(finishedRoot, current$$1, renderPriorityLevel) {
  onCommitUnmount(current$$1);

  switch (current$$1.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
      {
        var updateQueue = current$$1.updateQueue;

        if (updateQueue !== null) {
          var lastEffect = updateQueue.lastEffect;

          if (lastEffect !== null) {
            var firstEffect = lastEffect.next; // When the owner fiber is deleted, the destroy function of a passive
            // effect hook is called during the synchronous commit phase. This is
            // a concession to implementation complexity. Calling it in the
            // passive effect phase (like they usually are, when dependencies
            // change during an update) would require either traversing the
            // children of the deleted fiber again, or including unmount effects
            // as part of the fiber effect list.
            //
            // Because this is during the sync commit phase, we need to change
            // the priority.
            //
            // TODO: Reconsider this implementation trade off.

            var priorityLevel = renderPriorityLevel > NormalPriority ? NormalPriority : renderPriorityLevel;
            runWithPriority$2(priorityLevel, function () {
              var effect = firstEffect;

              do {
                var destroy = effect.destroy;

                if (destroy !== undefined) {
                  safelyCallDestroy(current$$1, destroy);
                }

                effect = effect.next;
              } while (effect !== firstEffect);
            });
          }
        }

        break;
      }

    case ClassComponent:
      {
        safelyDetachRef(current$$1);
        var instance = current$$1.stateNode;

        if (typeof instance.componentWillUnmount === 'function') {
          safelyCallComponentWillUnmount(current$$1, instance);
        }

        return;
      }

    case HostComponent:
      {
        if (enableFlareAPI) {
          var dependencies = current$$1.dependencies;

          if (dependencies !== null) {
            var respondersMap = dependencies.responders;

            if (respondersMap !== null) {
              var responderInstances = Array.from(respondersMap.values());

              for (var i = 0, length = responderInstances.length; i < length; i++) {
                var responderInstance = responderInstances[i];
                unmountResponderInstance(responderInstance);
              }

              dependencies.responders = null;
            }
          }
        }

        safelyDetachRef(current$$1);
        return;
      }

    case HostPortal:
      {
        // TODO: this is recursive.
        // We are also not using this parent because
        // the portal will get pushed immediately.
        if (supportsMutation) {
          unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel);
        } else if (supportsPersistence) {
          emptyPortalContainer(current$$1);
        }

        return;
      }

    case FundamentalComponent:
      {
        if (enableFundamentalAPI) {
          var fundamentalInstance = current$$1.stateNode;

          if (fundamentalInstance !== null) {
            unmountFundamentalComponent(fundamentalInstance);
            current$$1.stateNode = null;
          }
        }

        return;
      }

    case DehydratedFragment:
      {
        if (enableSuspenseCallback) {
          var hydrationCallbacks = finishedRoot.hydrationCallbacks;

          if (hydrationCallbacks !== null) {
            var onDeleted = hydrationCallbacks.onDeleted;

            if (onDeleted) {
              onDeleted(current$$1.stateNode);
            }
          }
        }

        return;
      }

    case ScopeComponent:
      {
        if (enableScopeAPI) {
          safelyDetachRef(current$$1);
        }
      }
  }
}

function commitNestedUnmounts(finishedRoot, root, renderPriorityLevel) {
  // While we're inside a removed host node we don't want to call
  // removeChild on the inner nodes because they're removed by the top
  // call anyway. We also want to call componentWillUnmount on all
  // composites before this host node is removed from the tree. Therefore
  // we do an inner loop while we're still inside the host node.
  var node = root;

  while (true) {
    commitUnmount(finishedRoot, node, renderPriorityLevel); // Visit children because they may contain more composite or host nodes.
    // Skip portals because commitUnmount() currently visits them recursively.

    if (node.child !== null && ( // If we use mutation we drill down into portals using commitUnmount above.
    // If we don't use mutation we drill down into portals here instead.
    !supportsMutation || node.tag !== HostPortal)) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === root) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === root) {
        return;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function detachFiber(current$$1) {
  var alternate = current$$1.alternate; // Cut off the return pointers to disconnect it from the tree. Ideally, we
  // should clear the child pointer of the parent alternate to let this
  // get GC:ed but we don't know which for sure which parent is the current
  // one so we'll settle for GC:ing the subtree of this child. This child
  // itself will be GC:ed when the parent updates the next time.

  current$$1.return = null;
  current$$1.child = null;
  current$$1.memoizedState = null;
  current$$1.updateQueue = null;
  current$$1.dependencies = null;
  current$$1.alternate = null;
  current$$1.firstEffect = null;
  current$$1.lastEffect = null;
  current$$1.pendingProps = null;
  current$$1.memoizedProps = null;

  if (alternate !== null) {
    detachFiber(alternate);
  }
}

function emptyPortalContainer(current$$1) {
  if (!supportsPersistence) {
    return;
  }

  var portal = current$$1.stateNode;
  var containerInfo = portal.containerInfo;
  var emptyChildSet = createContainerChildSet(containerInfo);
  replaceContainerChildren(containerInfo, emptyChildSet);
}

function commitContainer(finishedWork) {
  if (!supportsPersistence) {
    return;
  }

  switch (finishedWork.tag) {
    case ClassComponent:
    case HostComponent:
    case HostText:
    case FundamentalComponent:
      {
        return;
      }

    case HostRoot:
    case HostPortal:
      {
        var portalOrRoot = finishedWork.stateNode;
        var containerInfo = portalOrRoot.containerInfo,
            pendingChildren = portalOrRoot.pendingChildren;
        replaceContainerChildren(containerInfo, pendingChildren);
        return;
      }

    default:
      {
        {
          {
            throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }
  }
}

function getHostParentFiber(fiber) {
  var parent = fiber.return;

  while (parent !== null) {
    if (isHostParent(parent)) {
      return parent;
    }

    parent = parent.return;
  }

  {
    {
      throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
  }
}

function isHostParent(fiber) {
  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
}

function getHostSibling(fiber) {
  // We're going to search forward into the tree until we find a sibling host
  // node. Unfortunately, if multiple insertions are done in a row we have to
  // search past them. This leads to exponential search for the next sibling.
  // TODO: Find a more efficient way to do this.
  var node = fiber;

  siblings: while (true) {
    // If we didn't find anything, let's try the next sibling.
    while (node.sibling === null) {
      if (node.return === null || isHostParent(node.return)) {
        // If we pop out of the root or hit the parent the fiber we are the
        // last sibling.
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;

    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
      // If it is not host node and, we might have a host node inside it.
      // Try to search down until we find one.
      if (node.effectTag & Placement) {
        // If we don't have a child, try the siblings instead.
        continue siblings;
      } // If we don't have a child, try the siblings instead.
      // We also skip portals because they are not part of this host tree.


      if (node.child === null || node.tag === HostPortal) {
        continue siblings;
      } else {
        node.child.return = node;
        node = node.child;
      }
    } // Check if this host node is stable or about to be placed.


    if (!(node.effectTag & Placement)) {
      // Found it!
      return node.stateNode;
    }
  }
}

function commitPlacement(finishedWork) {
  if (!supportsMutation) {
    return;
  } // Recursively insert all host nodes into the parent.


  var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.

  var parent;
  var isContainer;
  var parentStateNode = parentFiber.stateNode;

  switch (parentFiber.tag) {
    case HostComponent:
      parent = parentStateNode;
      isContainer = false;
      break;

    case HostRoot:
      parent = parentStateNode.containerInfo;
      isContainer = true;
      break;

    case HostPortal:
      parent = parentStateNode.containerInfo;
      isContainer = true;
      break;

    case FundamentalComponent:
      if (enableFundamentalAPI) {
        parent = parentStateNode.instance;
        isContainer = false;
      }

    // eslint-disable-next-line-no-fallthrough

    default:
      {
        {
          throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
      }

  }

  if (parentFiber.effectTag & ContentReset) {
    // Reset the text content of the parent before doing any insertions
    resetTextContent(parent); // Clear ContentReset from the effect tag

    parentFiber.effectTag &= ~ContentReset;
  }

  var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
  // children to find all the terminal nodes.

  var node = finishedWork;

  while (true) {
    var isHost = node.tag === HostComponent || node.tag === HostText;

    if (isHost || enableFundamentalAPI && node.tag === FundamentalComponent) {
      var stateNode = isHost ? node.stateNode : node.stateNode.instance;

      if (before) {
        if (isContainer) {
          insertInContainerBefore(parent, stateNode, before);
        } else {
          insertBefore(parent, stateNode, before);
        }
      } else {
        if (isContainer) {
          appendChildToContainer(parent, stateNode);
        } else {
          appendChild(parent, stateNode);
        }
      }
    } else if (node.tag === HostPortal) {// If the insertion itself is a portal, then we don't want to traverse
      // down its children. Instead, we'll get insertions from each child in
      // the portal directly.
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === finishedWork) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === finishedWork) {
        return;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel) {
  // We only have the top Fiber that was deleted but we need to recurse down its
  // children to find all the terminal nodes.
  var node = current$$1; // Each iteration, currentParent is populated with node's host parent if not
  // currentParentIsValid.

  var currentParentIsValid = false; // Note: these two variables *must* always be updated together.

  var currentParent;
  var currentParentIsContainer;

  while (true) {
    if (!currentParentIsValid) {
      var parent = node.return;

      findParent: while (true) {
        if (!(parent !== null)) {
          {
            throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        var parentStateNode = parent.stateNode;

        switch (parent.tag) {
          case HostComponent:
            currentParent = parentStateNode;
            currentParentIsContainer = false;
            break findParent;

          case HostRoot:
            currentParent = parentStateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;

          case HostPortal:
            currentParent = parentStateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;

          case FundamentalComponent:
            if (enableFundamentalAPI) {
              currentParent = parentStateNode.instance;
              currentParentIsContainer = false;
            }

        }

        parent = parent.return;
      }

      currentParentIsValid = true;
    }

    if (node.tag === HostComponent || node.tag === HostText) {
      commitNestedUnmounts(finishedRoot, node, renderPriorityLevel); // After all the children have unmounted, it is now safe to remove the
      // node from the tree.

      if (currentParentIsContainer) {
        removeChildFromContainer(currentParent, node.stateNode);
      } else {
        removeChild(currentParent, node.stateNode);
      } // Don't visit children because we already visited them.

    } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
      var fundamentalNode = node.stateNode.instance;
      commitNestedUnmounts(finishedRoot, node, renderPriorityLevel); // After all the children have unmounted, it is now safe to remove the
      // node from the tree.

      if (currentParentIsContainer) {
        removeChildFromContainer(currentParent, fundamentalNode);
      } else {
        removeChild(currentParent, fundamentalNode);
      }
    } else if (enableSuspenseServerRenderer && node.tag === DehydratedFragment) {
      if (enableSuspenseCallback) {
        var hydrationCallbacks = finishedRoot.hydrationCallbacks;

        if (hydrationCallbacks !== null) {
          var onDeleted = hydrationCallbacks.onDeleted;

          if (onDeleted) {
            onDeleted(node.stateNode);
          }
        }
      } // Delete the dehydrated suspense boundary and all of its content.


      if (currentParentIsContainer) {
        clearSuspenseBoundaryFromContainer(currentParent, node.stateNode);
      } else {
        clearSuspenseBoundary(currentParent, node.stateNode);
      }
    } else if (node.tag === HostPortal) {
      if (node.child !== null) {
        // When we go into a portal, it becomes the parent to remove from.
        // We will reassign it back when we pop the portal on the way up.
        currentParent = node.stateNode.containerInfo;
        currentParentIsContainer = true; // Visit children because portals might contain host components.

        node.child.return = node;
        node = node.child;
        continue;
      }
    } else {
      commitUnmount(finishedRoot, node, renderPriorityLevel); // Visit children because we may find more host components below.

      if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
    }

    if (node === current$$1) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === current$$1) {
        return;
      }

      node = node.return;

      if (node.tag === HostPortal) {
        // When we go out of the portal, we need to restore the parent.
        // Since we don't keep a stack of them, we will search for it.
        currentParentIsValid = false;
      }
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function commitDeletion(finishedRoot, current$$1, renderPriorityLevel) {
  if (supportsMutation) {
    // Recursively delete all host nodes from the parent.
    // Detach refs and call componentWillUnmount() on the whole subtree.
    unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel);
  } else {
    // Detach refs and call componentWillUnmount() on the whole subtree.
    commitNestedUnmounts(finishedRoot, current$$1, renderPriorityLevel);
  }

  detachFiber(current$$1);
}

function commitWork(current$$1, finishedWork) {
  if (!supportsMutation) {
    switch (finishedWork.tag) {
      case FunctionComponent:
      case ForwardRef:
      case MemoComponent:
      case SimpleMemoComponent:
        {
          // Note: We currently never use MountMutation, but useLayout uses
          // UnmountMutation.
          commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
          return;
        }

      case Profiler:
        {
          return;
        }

      case SuspenseComponent:
        {
          commitSuspenseComponent(finishedWork);
          attachSuspenseRetryListeners(finishedWork);
          return;
        }

      case SuspenseListComponent:
        {
          attachSuspenseRetryListeners(finishedWork);
          return;
        }

      case HostRoot:
        {
          if (supportsHydration) {
            var root = finishedWork.stateNode;

            if (root.hydrate) {
              // We've just hydrated. No need to hydrate again.
              root.hydrate = false;
              commitHydratedContainer(root.containerInfo);
            }
          }

          break;
        }
    }

    commitContainer(finishedWork);
    return;
  }

  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
      {
        // Note: We currently never use MountMutation, but useLayout uses
        // UnmountMutation.
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        return;
      }

    case ClassComponent:
      {
        return;
      }

    case HostComponent:
      {
        var instance = finishedWork.stateNode;

        if (instance != null) {
          // Commit the work prepared earlier.
          var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
          // as the newProps. The updatePayload will contain the real change in
          // this case.

          var oldProps = current$$1 !== null ? current$$1.memoizedProps : newProps;
          var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.

          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;

          if (updatePayload !== null) {
            commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
          }

          if (enableFlareAPI) {
            var prevListeners = oldProps.listeners;
            var nextListeners = newProps.listeners;

            if (prevListeners !== nextListeners) {
              updateEventListeners(nextListeners, finishedWork, null);
            }
          }
        }

        return;
      }

    case HostText:
      {
        if (!(finishedWork.stateNode !== null)) {
          {
            throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        var textInstance = finishedWork.stateNode;
        var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
        // as the newProps. The updatePayload will contain the real change in
        // this case.

        var oldText = current$$1 !== null ? current$$1.memoizedProps : newText;
        commitTextUpdate(textInstance, oldText, newText);
        return;
      }

    case HostRoot:
      {
        if (supportsHydration) {
          var _root = finishedWork.stateNode;

          if (_root.hydrate) {
            // We've just hydrated. No need to hydrate again.
            _root.hydrate = false;
            commitHydratedContainer(_root.containerInfo);
          }
        }

        return;
      }

    case Profiler:
      {
        return;
      }

    case SuspenseComponent:
      {
        commitSuspenseComponent(finishedWork);
        attachSuspenseRetryListeners(finishedWork);
        return;
      }

    case SuspenseListComponent:
      {
        attachSuspenseRetryListeners(finishedWork);
        return;
      }

    case IncompleteClassComponent:
      {
        return;
      }

    case FundamentalComponent:
      {
        if (enableFundamentalAPI) {
          var fundamentalInstance = finishedWork.stateNode;
          updateFundamentalComponent(fundamentalInstance);
        }

        return;
      }

    case ScopeComponent:
      {
        if (enableScopeAPI) {
          var scopeInstance = finishedWork.stateNode;
          scopeInstance.fiber = finishedWork;

          if (enableFlareAPI) {
            var _newProps = finishedWork.memoizedProps;

            var _oldProps = current$$1 !== null ? current$$1.memoizedProps : _newProps;

            var _prevListeners = _oldProps.listeners;
            var _nextListeners = _newProps.listeners;

            if (_prevListeners !== _nextListeners) {
              updateEventListeners(_nextListeners, finishedWork, null);
            }
          }
        }

        return;
      }

    default:
      {
        {
          {
            throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }
  }
}

function commitSuspenseComponent(finishedWork) {
  var newState = finishedWork.memoizedState;
  var newDidTimeout;
  var primaryChildParent = finishedWork;

  if (newState === null) {
    newDidTimeout = false;
  } else {
    newDidTimeout = true;
    primaryChildParent = finishedWork.child;
    markCommitTimeOfFallback();
  }

  if (supportsMutation && primaryChildParent !== null) {
    hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);
  }

  if (enableSuspenseCallback && newState !== null) {
    var suspenseCallback = finishedWork.memoizedProps.suspenseCallback;

    if (typeof suspenseCallback === 'function') {
      var thenables = finishedWork.updateQueue;

      if (thenables !== null) {
        suspenseCallback(new Set(thenables));
      }
    } else {
      if (suspenseCallback !== undefined) {
        warning$1(false, 'Unexpected type for suspenseCallback.');
      }
    }
  }
}

function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
  if (!supportsHydration) {
    return;
  }

  var newState = finishedWork.memoizedState;

  if (newState === null) {
    var current$$1 = finishedWork.alternate;

    if (current$$1 !== null) {
      var prevState = current$$1.memoizedState;

      if (prevState !== null) {
        var suspenseInstance = prevState.dehydrated;

        if (suspenseInstance !== null) {
          commitHydratedSuspenseInstance(suspenseInstance);

          if (enableSuspenseCallback) {
            var hydrationCallbacks = finishedRoot.hydrationCallbacks;

            if (hydrationCallbacks !== null) {
              var onHydrated = hydrationCallbacks.onHydrated;

              if (onHydrated) {
                onHydrated(suspenseInstance);
              }
            }
          }
        }
      }
    }
  }
}

function attachSuspenseRetryListeners(finishedWork) {
  // If this boundary just timed out, then it will have a set of thenables.
  // For each thenable, attach a listener so that when it resolves, React
  // attempts to re-render the boundary in the primary (pre-timeout) state.
  var thenables = finishedWork.updateQueue;

  if (thenables !== null) {
    finishedWork.updateQueue = null;
    var retryCache = finishedWork.stateNode;

    if (retryCache === null) {
      retryCache = finishedWork.stateNode = new PossiblyWeakSet();
    }

    thenables.forEach(function (thenable) {
      // Memoize using the boundary fiber to prevent redundant listeners.
      var retry = resolveRetryThenable.bind(null, finishedWork, thenable);

      if (!retryCache.has(thenable)) {
        if (enableSchedulerTracing) {
          if (thenable.__reactDoNotTraceInteractions !== true) {
            retry = unstable_wrap(retry);
          }
        }

        retryCache.add(thenable);
        thenable.then(retry, retry);
      }
    });
  }
}

function commitResetTextContent(current$$1) {
  if (!supportsMutation) {
    return;
  }

  resetTextContent(current$$1.stateNode);
}

var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;

function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime, null); // Unmount the root by rendering null.

  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
  // being called "element".

  update.payload = {
    element: null
  };
  var error = errorInfo.value;

  update.callback = function () {
    onUncaughtError(error);
    logError(fiber, errorInfo);
  };

  return update;
}

function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime, null);
  update.tag = CaptureUpdate;
  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

  if (typeof getDerivedStateFromError === 'function') {
    var error = errorInfo.value;

    update.payload = function () {
      logError(fiber, errorInfo);
      return getDerivedStateFromError(error);
    };
  }

  var inst = fiber.stateNode;

  if (inst !== null && typeof inst.componentDidCatch === 'function') {
    update.callback = function callback() {
      {
        markFailedErrorBoundaryForHotReloading(fiber);
      }

      if (typeof getDerivedStateFromError !== 'function') {
        // To preserve the preexisting retry behavior of error boundaries,
        // we keep track of which ones already failed during this batch.
        // This gets reset before we yield back to the browser.
        // TODO: Warn in strict mode if getDerivedStateFromError is
        // not defined.
        markLegacyErrorBoundaryAsFailed(this); // Only log here if componentDidCatch is the only error boundary method defined

        logError(fiber, errorInfo);
      }

      var error = errorInfo.value;
      var stack = errorInfo.stack;
      this.componentDidCatch(error, {
        componentStack: stack !== null ? stack : ''
      });

      {
        if (typeof getDerivedStateFromError !== 'function') {
          // If componentDidCatch is the only error boundary method defined,
          // then it needs to call setState to recover from errors.
          // If no state update is scheduled then the boundary will swallow the error.
          !(fiber.expirationTime === Sync) ? warningWithoutStack$1(false, '%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown') : void 0;
        }
      }
    };
  } else {
    update.callback = function () {
      markFailedErrorBoundaryForHotReloading(fiber);
    };
  }

  return update;
}

function attachPingListener(root, renderExpirationTime, thenable) {
  // Attach a listener to the promise to "ping" the root and retry. But
  // only if one does not already exist for the current render expiration
  // time (which acts like a "thread ID" here).
  var pingCache = root.pingCache;
  var threadIDs;

  if (pingCache === null) {
    pingCache = root.pingCache = new PossiblyWeakMap$1();
    threadIDs = new Set();
    pingCache.set(thenable, threadIDs);
  } else {
    threadIDs = pingCache.get(thenable);

    if (threadIDs === undefined) {
      threadIDs = new Set();
      pingCache.set(thenable, threadIDs);
    }
  }

  if (!threadIDs.has(renderExpirationTime)) {
    // Memoize using the thread ID to prevent redundant listeners.
    threadIDs.add(renderExpirationTime);
    var ping = pingSuspendedRoot.bind(null, root, thenable, renderExpirationTime);
    thenable.then(ping, ping);
  }
}

function throwException(root, returnFiber, sourceFiber, value, renderExpirationTime) {
  // The source fiber did not complete.
  sourceFiber.effectTag |= Incomplete; // Its effect list is no longer valid.

  sourceFiber.firstEffect = sourceFiber.lastEffect = null;

  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
    // This is a thenable.
    var thenable = value;
    checkForWrongSuspensePriorityInDEV(sourceFiber);
    var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext); // Schedule the nearest Suspense to re-render the timed out view.

    var _workInProgress = returnFiber;

    do {
      if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
        // Found the nearest boundary.
        // Stash the promise on the boundary fiber. If the boundary times out, we'll
        // attach another listener to flip the boundary back to its normal state.
        var thenables = _workInProgress.updateQueue;

        if (thenables === null) {
          var updateQueue = new Set();
          updateQueue.add(thenable);
          _workInProgress.updateQueue = updateQueue;
        } else {
          thenables.add(thenable);
        } // If the boundary is outside of blocking mode, we should *not*
        // suspend the commit. Pretend as if the suspended component rendered
        // null and keep rendering. In the commit phase, we'll schedule a
        // subsequent synchronous update to re-render the Suspense.
        //
        // Note: It doesn't matter whether the component that suspended was
        // inside a blocking mode tree. If the Suspense is outside of it, we
        // should *not* suspend the commit.


        if ((_workInProgress.mode & BlockingMode) === NoMode) {
          _workInProgress.effectTag |= DidCapture; // We're going to commit this fiber even though it didn't complete.
          // But we shouldn't call any lifecycle methods or callbacks. Remove
          // all lifecycle effect tags.

          sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);

          if (sourceFiber.tag === ClassComponent) {
            var currentSourceFiber = sourceFiber.alternate;

            if (currentSourceFiber === null) {
              // This is a new mount. Change the tag so it's not mistaken for a
              // completed class component. For example, we should not call
              // componentWillUnmount if it is deleted.
              sourceFiber.tag = IncompleteClassComponent;
            } else {
              // When we try rendering again, we should not reuse the current fiber,
              // since it's known to be in an inconsistent state. Use a force update to
              // prevent a bail out.
              var update = createUpdate(Sync, null);
              update.tag = ForceUpdate;
              enqueueUpdate(sourceFiber, update);
            }
          } // The source fiber did not complete. Mark it with Sync priority to
          // indicate that it still has pending work.


          sourceFiber.expirationTime = Sync; // Exit without suspending.

          return;
        } // Confirmed that the boundary is in a concurrent mode tree. Continue
        // with the normal suspend path.
        //
        // After this we'll use a set of heuristics to determine whether this
        // render pass will run to completion or restart or "suspend" the commit.
        // The actual logic for this is spread out in different places.
        //
        // This first principle is that if we're going to suspend when we complete
        // a root, then we should also restart if we get an update or ping that
        // might unsuspend it, and vice versa. The only reason to suspend is
        // because you think you might want to restart before committing. However,
        // it doesn't make sense to restart only while in the period we're suspended.
        //
        // Restarting too aggressively is also not good because it starves out any
        // intermediate loading state. So we use heuristics to determine when.
        // Suspense Heuristics
        //
        // If nothing threw a Promise or all the same fallbacks are already showing,
        // then don't suspend/restart.
        //
        // If this is an initial render of a new tree of Suspense boundaries and
        // those trigger a fallback, then don't suspend/restart. We want to ensure
        // that we can show the initial loading state as quickly as possible.
        //
        // If we hit a "Delayed" case, such as when we'd switch from content back into
        // a fallback, then we should always suspend/restart. SuspenseConfig applies to
        // this case. If none is defined, JND is used instead.
        //
        // If we're already showing a fallback and it gets "retried", allowing us to show
        // another level, but there's still an inner boundary that would show a fallback,
        // then we suspend/restart for 500ms since the last time we showed a fallback
        // anywhere in the tree. This effectively throttles progressive loading into a
        // consistent train of commits. This also gives us an opportunity to restart to
        // get to the completed state slightly earlier.
        //
        // If there's ambiguity due to batching it's resolved in preference of:
        // 1) "delayed", 2) "initial render", 3) "retry".
        //
        // We want to ensure that a "busy" state doesn't get force committed. We want to
        // ensure that new initial loading states can commit as soon as possible.


        attachPingListener(root, renderExpirationTime, thenable);
        _workInProgress.effectTag |= ShouldCapture;
        _workInProgress.expirationTime = renderExpirationTime;
        return;
      } // This boundary already captured during this render. Continue to the next
      // boundary.


      _workInProgress = _workInProgress.return;
    } while (_workInProgress !== null); // No boundary was found. Fallthrough to error mode.
    // TODO: Use invariant so the message is stripped in prod?


    value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.' + getStackByFiberInDevAndProd(sourceFiber));
  } // We didn't find a boundary that could handle this type of exception. Start
  // over and traverse parent path again, this time treating the exception
  // as an error.


  renderDidError();
  value = createCapturedValue(value, sourceFiber);
  var workInProgress = returnFiber;

  do {
    switch (workInProgress.tag) {
      case HostRoot:
        {
          var _errorInfo = value;
          workInProgress.effectTag |= ShouldCapture;
          workInProgress.expirationTime = renderExpirationTime;

          var _update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);

          enqueueCapturedUpdate(workInProgress, _update);
          return;
        }

      case ClassComponent:
        // Capture and retry
        var errorInfo = value;
        var ctor = workInProgress.type;
        var instance = workInProgress.stateNode;

        if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
          workInProgress.effectTag |= ShouldCapture;
          workInProgress.expirationTime = renderExpirationTime; // Schedule the error boundary to re-render using updated state

          var _update2 = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);

          enqueueCapturedUpdate(workInProgress, _update2);
          return;
        }

        break;

      default:
        break;
    }

    workInProgress = workInProgress.return;
  } while (workInProgress !== null);
}

var ceil = Math.ceil;
var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;
var IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;
var NoContext =
/*                    */
0;
var BatchedContext =
/*               */
1;
var EventContext =
/*                 */
2;
var DiscreteEventContext =
/*         */
4;
var LegacyUnbatchedContext =
/*       */
8;
var RenderContext =
/*                */
16;
var CommitContext =
/*                */
32;
var RootIncomplete = 0;
var RootFatalErrored = 1;
var RootErrored = 2;
var RootSuspended = 3;
var RootSuspendedWithDelay = 4;
var RootCompleted = 5;
// Describes where we are in the React execution stack
var executionContext = NoContext; // The root we're working on

var workInProgressRoot = null; // The fiber we're working on

var workInProgress = null; // The expiration time we're rendering

var renderExpirationTime = NoWork; // Whether to root completed, errored, suspended, etc.

var workInProgressRootExitStatus = RootIncomplete; // A fatal error, if one is thrown

var workInProgressRootFatalError = null; // Most recent event time among processed updates during this render.
// This is conceptually a time stamp but expressed in terms of an ExpirationTime
// because we deal mostly with expiration times in the hot path, so this avoids
// the conversion happening in the hot path.

var workInProgressRootLatestProcessedExpirationTime = Sync;
var workInProgressRootLatestSuspenseTimeout = Sync;
var workInProgressRootCanSuspendUsingConfig = null; // The work left over by components that were visited during this render. Only
// includes unprocessed updates, not work in bailed out children.

var workInProgressRootNextUnprocessedUpdateTime = NoWork; // If we're pinged while rendering we don't always restart immediately.
// This flag determines if it might be worthwhile to restart if an opportunity
// happens latere.

var workInProgressRootHasPendingPing = false; // The most recent time we committed a fallback. This lets us ensure a train
// model where we don't commit new loading states in too quick succession.

var globalMostRecentFallbackTime = 0;
var FALLBACK_THROTTLE_MS = 500;
var nextEffect = null;
var hasUncaughtError = false;
var firstUncaughtError = null;
var legacyErrorBoundariesThatAlreadyFailed = null;
var rootDoesHavePassiveEffects = false;
var rootWithPendingPassiveEffects = null;
var pendingPassiveEffectsRenderPriority = NoPriority;
var pendingPassiveEffectsExpirationTime = NoWork;
var rootsWithPendingDiscreteUpdates = null; // Use these to prevent an infinite loop of nested updates

var NESTED_UPDATE_LIMIT = 50;
var nestedUpdateCount = 0;
var rootWithNestedUpdates = null;
var NESTED_PASSIVE_UPDATE_LIMIT = 50;
var nestedPassiveUpdateCount = 0;
var interruptedBy = null; // Marks the need to reschedule pending interactions at these expiration times
// during the commit phase. This enables them to be traced across components
// that spawn new work during render. E.g. hidden boundaries, suspended SSR
// hydration or SuspenseList.

var spawnedWorkDuringRender = null; // Expiration times are computed by adding to the current time (the start
// time). However, if two updates are scheduled within the same event, we
// should treat their start times as simultaneous, even if the actual clock
// time has advanced between the first and second call.
// In other words, because expiration times determine how updates are batched,
// we want all updates of like priority that occur within the same event to
// receive the same expiration time. Otherwise we get tearing.

var currentEventTime = NoWork;
function requestCurrentTimeForUpdate() {
  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    // We're inside React, so it's fine to read the actual time.
    return msToExpirationTime(now());
  } // We're not inside React, so we may be in the middle of a browser event.


  if (currentEventTime !== NoWork) {
    // Use the same start time for all updates until we enter React again.
    return currentEventTime;
  } // This is the first update since React yielded. Compute a new start time.


  currentEventTime = msToExpirationTime(now());
  return currentEventTime;
}
function getCurrentTime() {
  return msToExpirationTime(now());
}
function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
  var mode = fiber.mode;

  if ((mode & BlockingMode) === NoMode) {
    return Sync;
  }

  var priorityLevel = getCurrentPriorityLevel();

  if ((mode & ConcurrentMode) === NoMode) {
    return priorityLevel === ImmediatePriority ? Sync : Batched;
  }

  if ((executionContext & RenderContext) !== NoContext) {
    // Use whatever time we're already rendering
    // TODO: Should there be a way to opt out, like with `runWithPriority`?
    return renderExpirationTime;
  }

  var expirationTime;

  if (suspenseConfig !== null) {
    // Compute an expiration time based on the Suspense timeout.
    expirationTime = computeSuspenseExpiration(currentTime, suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION);
  } else {
    // Compute an expiration time based on the Scheduler priority.
    switch (priorityLevel) {
      case ImmediatePriority:
        expirationTime = Sync;
        break;

      case UserBlockingPriority$2:
        // TODO: Rename this to computeUserBlockingExpiration
        expirationTime = computeInteractiveExpiration(currentTime);
        break;

      case NormalPriority:
      case LowPriority:
        // TODO: Handle LowPriority
        // TODO: Rename this to... something better.
        expirationTime = computeAsyncExpiration(currentTime);
        break;

      case IdlePriority:
        expirationTime = Idle;
        break;

      default:
        {
          {
            throw Error("Expected a valid priority level");
          }
        }

    }
  } // If we're in the middle of rendering a tree, do not update at the same
  // expiration time that is already rendering.
  // TODO: We shouldn't have to do this if the update is on a different root.
  // Refactor computeExpirationForFiber + scheduleUpdate so we have access to
  // the root when we check for this condition.


  if (workInProgressRoot !== null && expirationTime === renderExpirationTime) {
    // This is a trick to move this update into a separate batch
    expirationTime -= 1;
  }

  return expirationTime;
}
function scheduleUpdateOnFiber(fiber, expirationTime) {
  checkForNestedUpdates();
  warnAboutInvalidUpdatesOnClassComponentsInDEV(fiber);
  var root = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

  if (root === null) {
    warnAboutUpdateOnUnmountedFiberInDEV(fiber);
    return;
  }

  checkForInterruption(fiber, expirationTime);
  recordScheduleUpdate(); // TODO: computeExpirationForFiber also reads the priority. Pass the
  // priority as an argument to that function and this one.

  var priorityLevel = getCurrentPriorityLevel();

  if (expirationTime === Sync) {
    if ( // Check if we're inside unbatchedUpdates
    (executionContext & LegacyUnbatchedContext) !== NoContext && // Check if we're not already rendering
    (executionContext & (RenderContext | CommitContext)) === NoContext) {
      // Register pending interactions on the root to avoid losing traced interaction data.
      schedulePendingInteractions(root, expirationTime); // This is a legacy edge case. The initial mount of a ReactDOM.render-ed
      // root inside of batchedUpdates should be synchronous, but layout updates
      // should be deferred until the end of the batch.

      performSyncWorkOnRoot(root);
    } else {
      ensureRootIsScheduled(root);
      schedulePendingInteractions(root, expirationTime);

      if (executionContext === NoContext) {
        // Flush the synchronous work now, unless we're already working or inside
        // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
        // scheduleCallbackForFiber to preserve the ability to schedule a callback
        // without immediately flushing it. We only do this for user-initiated
        // updates, to preserve historical behavior of legacy mode.
        flushSyncCallbackQueue();
      }
    }
  } else {
    ensureRootIsScheduled(root);
    schedulePendingInteractions(root, expirationTime);
  }

  if ((executionContext & DiscreteEventContext) !== NoContext && ( // Only updates at user-blocking priority or greater are considered
  // discrete, even inside a discrete event.
  priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority)) {
    // This is the result of a discrete event. Track the lowest priority
    // discrete update per root so we can flush them early, if needed.
    if (rootsWithPendingDiscreteUpdates === null) {
      rootsWithPendingDiscreteUpdates = new Map([[root, expirationTime]]);
    } else {
      var lastDiscreteTime = rootsWithPendingDiscreteUpdates.get(root);

      if (lastDiscreteTime === undefined || lastDiscreteTime > expirationTime) {
        rootsWithPendingDiscreteUpdates.set(root, expirationTime);
      }
    }
  }
}
var scheduleWork = scheduleUpdateOnFiber; // This is split into a separate function so we can mark a fiber with pending
// work without treating it as a typical update that originates from an event;
// e.g. retrying a Suspense boundary isn't an update, but it does schedule work
// on a fiber.

function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
  // Update the source fiber's expiration time
  if (fiber.expirationTime < expirationTime) {
    fiber.expirationTime = expirationTime;
  }

  var alternate = fiber.alternate;

  if (alternate !== null && alternate.expirationTime < expirationTime) {
    alternate.expirationTime = expirationTime;
  } // Walk the parent path to the root and update the child expiration time.


  var node = fiber.return;
  var root = null;

  if (node === null && fiber.tag === HostRoot) {
    root = fiber.stateNode;
  } else {
    while (node !== null) {
      alternate = node.alternate;

      if (node.childExpirationTime < expirationTime) {
        node.childExpirationTime = expirationTime;

        if (alternate !== null && alternate.childExpirationTime < expirationTime) {
          alternate.childExpirationTime = expirationTime;
        }
      } else if (alternate !== null && alternate.childExpirationTime < expirationTime) {
        alternate.childExpirationTime = expirationTime;
      }

      if (node.return === null && node.tag === HostRoot) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
  }

  if (root !== null) {
    if (workInProgressRoot === root) {
      // Received an update to a tree that's in the middle of rendering. Mark
      // that's unprocessed work on this root.
      markUnprocessedUpdateTime(expirationTime);

      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
        // The root already suspended with a delay, which means this render
        // definitely won't finish. Since we have a new update, let's mark it as
        // suspended now, right before marking the incoming update. This has the
        // effect of interrupting the current render and switching to the update.
        // TODO: This happens to work when receiving an update during the render
        // phase, because of the trick inside computeExpirationForFiber to
        // subtract 1 from `renderExpirationTime` to move it into a
        // separate bucket. But we should probably model it with an exception,
        // using the same mechanism we use to force hydration of a subtree.
        // TODO: This does not account for low pri updates that were already
        // scheduled before the root started rendering. Need to track the next
        // pending expiration time (perhaps by backtracking the return path) and
        // then trigger a restart in the `renderDidSuspendDelayIfPossible` path.
        markRootSuspendedAtTime(root, renderExpirationTime);
      }
    } // Mark that the root has a pending update.


    markRootUpdatedAtTime(root, expirationTime);
  }

  return root;
}

function getNextRootExpirationTimeToWorkOn(root) {
  // Determines the next expiration time that the root should render, taking
  // into account levels that may be suspended, or levels that may have
  // received a ping.
  var lastExpiredTime = root.lastExpiredTime;

  if (lastExpiredTime !== NoWork) {
    return lastExpiredTime;
  } // "Pending" refers to any update that hasn't committed yet, including if it
  // suspended. The "suspended" range is therefore a subset.


  var firstPendingTime = root.firstPendingTime;

  if (!isRootSuspendedAtTime(root, firstPendingTime)) {
    // The highest priority pending time is not suspended. Let's work on that.
    return firstPendingTime;
  } // If the first pending time is suspended, check if there's a lower priority
  // pending level that we know about. Or check if we received a ping. Work
  // on whichever is higher priority.


  var lastPingedTime = root.lastPingedTime;
  var nextKnownPendingLevel = root.nextKnownPendingLevel;
  return lastPingedTime > nextKnownPendingLevel ? lastPingedTime : nextKnownPendingLevel;
} // Use this function to schedule a task for a root. There's only one task per
// root; if a task was already scheduled, we'll check to make sure the
// expiration time of the existing task is the same as the expiration time of
// the next level that the root has work on. This function is called on every
// update, and right before exiting a task.


function ensureRootIsScheduled(root) {
  var lastExpiredTime = root.lastExpiredTime;

  if (lastExpiredTime !== NoWork) {
    // Special case: Expired work should flush synchronously.
    root.callbackExpirationTime = Sync;
    root.callbackPriority = ImmediatePriority;
    root.callbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
    return;
  }

  var expirationTime = getNextRootExpirationTimeToWorkOn(root);
  var existingCallbackNode = root.callbackNode;

  if (expirationTime === NoWork) {
    // There's nothing to work on.
    if (existingCallbackNode !== null) {
      root.callbackNode = null;
      root.callbackExpirationTime = NoWork;
      root.callbackPriority = NoPriority;
    }

    return;
  } // TODO: If this is an update, we already read the current time. Pass the
  // time as an argument.


  var currentTime = requestCurrentTimeForUpdate();
  var priorityLevel = inferPriorityFromExpirationTime(currentTime, expirationTime); // If there's an existing render task, confirm it has the correct priority and
  // expiration time. Otherwise, we'll cancel it and schedule a new one.

  if (existingCallbackNode !== null) {
    var existingCallbackPriority = root.callbackPriority;
    var existingCallbackExpirationTime = root.callbackExpirationTime;

    if ( // Callback must have the exact same expiration time.
    existingCallbackExpirationTime === expirationTime && // Callback must have greater or equal priority.
    existingCallbackPriority >= priorityLevel) {
      // Existing callback is sufficient.
      return;
    } // Need to schedule a new task.
    // TODO: Instead of scheduling a new task, we should be able to change the
    // priority of the existing one.


    cancelCallback(existingCallbackNode);
  }

  root.callbackExpirationTime = expirationTime;
  root.callbackPriority = priorityLevel;
  var callbackNode;

  if (expirationTime === Sync) {
    // Sync React callbacks are scheduled on a special internal queue
    callbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
  } else if (disableSchedulerTimeoutBasedOnReactExpirationTime) {
    callbackNode = scheduleCallback(priorityLevel, performConcurrentWorkOnRoot.bind(null, root));
  } else {
    callbackNode = scheduleCallback(priorityLevel, performConcurrentWorkOnRoot.bind(null, root), // Compute a task timeout based on the expiration time. This also affects
    // ordering because tasks are processed in timeout order.
    {
      timeout: expirationTimeToMs(expirationTime) - now()
    });
  }

  root.callbackNode = callbackNode;
} // This is the entry point for every concurrent task, i.e. anything that
// goes through Scheduler.


function performConcurrentWorkOnRoot(root, didTimeout) {
  // Since we know we're in a React event, we can clear the current
  // event time. The next update will compute a new event time.
  currentEventTime = NoWork;

  if (didTimeout) {
    // The render task took too long to complete. Mark the current time as
    // expired to synchronously render all expired work in a single batch.
    var currentTime = requestCurrentTimeForUpdate();
    markRootExpiredAtTime(root, currentTime); // This will schedule a synchronous callback.

    ensureRootIsScheduled(root);
    return null;
  } // Determine the next expiration time to work on, using the fields stored
  // on the root.


  var expirationTime = getNextRootExpirationTimeToWorkOn(root);

  if (expirationTime !== NoWork) {
    var originalCallbackNode = root.callbackNode;

    if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
      {
        throw Error("Should not already be working.");
      }
    }

    flushPassiveEffects(); // If the root or expiration time have changed, throw out the existing stack
    // and prepare a fresh one. Otherwise we'll continue where we left off.

    if (root !== workInProgressRoot || expirationTime !== renderExpirationTime) {
      prepareFreshStack(root, expirationTime);
      startWorkOnPendingInteractions(root, expirationTime);
    } // If we have a work-in-progress fiber, it means there's still work to do
    // in this root.


    if (workInProgress !== null) {
      var prevExecutionContext = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = pushDispatcher(root);
      var prevInteractions = pushInteractions(root);
      startWorkLoopTimer(workInProgress);

      do {
        try {
          workLoopConcurrent();
          break;
        } catch (thrownValue) {
          handleError(root, thrownValue);
        }
      } while (true);

      resetContextDependencies();
      executionContext = prevExecutionContext;
      popDispatcher(prevDispatcher);

      if (enableSchedulerTracing) {
        popInteractions(prevInteractions);
      }

      if (workInProgressRootExitStatus === RootFatalErrored) {
        var fatalError = workInProgressRootFatalError;
        stopInterruptedWorkLoopTimer();
        prepareFreshStack(root, expirationTime);
        markRootSuspendedAtTime(root, expirationTime);
        ensureRootIsScheduled(root);
        throw fatalError;
      }

      if (workInProgress !== null) {
        // There's still work left over. Exit without committing.
        stopInterruptedWorkLoopTimer();
      } else {
        // We now have a consistent tree. The next step is either to commit it,
        // or, if something suspended, wait to commit it after a timeout.
        stopFinishedWorkLoopTimer();
        var finishedWork = root.finishedWork = root.current.alternate;
        root.finishedExpirationTime = expirationTime;
        finishConcurrentRender(root, finishedWork, workInProgressRootExitStatus, expirationTime);
      }

      ensureRootIsScheduled(root);

      if (root.callbackNode === originalCallbackNode) {
        // The task node scheduled for this root is the same one that's
        // currently executed. Need to return a continuation.
        return performConcurrentWorkOnRoot.bind(null, root);
      }
    }
  }

  return null;
}

function finishConcurrentRender(root, finishedWork, exitStatus, expirationTime) {
  // Set this to null to indicate there's no in-progress render.
  workInProgressRoot = null;

  switch (exitStatus) {
    case RootIncomplete:
    case RootFatalErrored:
      {
        {
          {
            throw Error("Root did not complete. This is a bug in React.");
          }
        }
      }
    // Flow knows about invariant, so it complains if I add a break
    // statement, but eslint doesn't know about invariant, so it complains
    // if I do. eslint-disable-next-line no-fallthrough

    case RootErrored:
      {
        // If this was an async render, the error may have happened due to
        // a mutation in a concurrent event. Try rendering one more time,
        // synchronously, to see if the error goes away. If there are
        // lower priority updates, let's include those, too, in case they
        // fix the inconsistency. Render at Idle to include all updates.
        // If it was Idle or Never or some not-yet-invented time, render
        // at that time.
        markRootExpiredAtTime(root, expirationTime > Idle ? Idle : expirationTime); // We assume that this second render pass will be synchronous
        // and therefore not hit this path again.

        break;
      }

    case RootSuspended:
      {
        markRootSuspendedAtTime(root, expirationTime);
        var lastSuspendedTime = root.lastSuspendedTime;

        if (expirationTime === lastSuspendedTime) {
          root.nextKnownPendingLevel = getRemainingExpirationTime(finishedWork);
        }

        flushSuspensePriorityWarningInDEV(); // We have an acceptable loading state. We need to figure out if we
        // should immediately commit it or wait a bit.
        // If we have processed new updates during this render, we may now
        // have a new loading state ready. We want to ensure that we commit
        // that as soon as possible.

        var hasNotProcessedNewUpdates = workInProgressRootLatestProcessedExpirationTime === Sync;

        if (hasNotProcessedNewUpdates && // do not delay if we're inside an act() scope
        !(true && flushSuspenseFallbacksInTests && IsThisRendererActing.current)) {
          // If we have not processed any new updates during this pass, then
          // this is either a retry of an existing fallback state or a
          // hidden tree. Hidden trees shouldn't be batched with other work
          // and after that's fixed it can only be a retry. We're going to
          // throttle committing retries so that we don't show too many
          // loading states too quickly.
          var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.

          if (msUntilTimeout > 10) {
            if (workInProgressRootHasPendingPing) {
              var lastPingedTime = root.lastPingedTime;

              if (lastPingedTime === NoWork || lastPingedTime >= expirationTime) {
                // This render was pinged but we didn't get to restart
                // earlier so try restarting now instead.
                root.lastPingedTime = expirationTime;
                prepareFreshStack(root, expirationTime);
                break;
              }
            }

            var nextTime = getNextRootExpirationTimeToWorkOn(root);

            if (nextTime !== NoWork && nextTime !== expirationTime) {
              // There's additional work on this root.
              break;
            }

            if (lastSuspendedTime !== NoWork && lastSuspendedTime !== expirationTime) {
              // We should prefer to render the fallback of at the last
              // suspended level. Ping the last suspended level to try
              // rendering it again.
              root.lastPingedTime = lastSuspendedTime;
              break;
            } // The render is suspended, it hasn't timed out, and there's no
            // lower priority work to do. Instead of committing the fallback
            // immediately, wait for more data to arrive.


            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), msUntilTimeout);
            break;
          }
        } // The work expired. Commit immediately.


        commitRoot(root);
        break;
      }

    case RootSuspendedWithDelay:
      {
        markRootSuspendedAtTime(root, expirationTime);
        var _lastSuspendedTime = root.lastSuspendedTime;

        if (expirationTime === _lastSuspendedTime) {
          root.nextKnownPendingLevel = getRemainingExpirationTime(finishedWork);
        }

        flushSuspensePriorityWarningInDEV();

        if ( // do not delay if we're inside an act() scope
        !(true && flushSuspenseFallbacksInTests && IsThisRendererActing.current)) {
          // We're suspended in a state that should be avoided. We'll try to
          // avoid committing it for as long as the timeouts let us.
          if (workInProgressRootHasPendingPing) {
            var _lastPingedTime = root.lastPingedTime;

            if (_lastPingedTime === NoWork || _lastPingedTime >= expirationTime) {
              // This render was pinged but we didn't get to restart earlier
              // so try restarting now instead.
              root.lastPingedTime = expirationTime;
              prepareFreshStack(root, expirationTime);
              break;
            }
          }

          var _nextTime = getNextRootExpirationTimeToWorkOn(root);

          if (_nextTime !== NoWork && _nextTime !== expirationTime) {
            // There's additional work on this root.
            break;
          }

          if (_lastSuspendedTime !== NoWork && _lastSuspendedTime !== expirationTime) {
            // We should prefer to render the fallback of at the last
            // suspended level. Ping the last suspended level to try
            // rendering it again.
            root.lastPingedTime = _lastSuspendedTime;
            break;
          }

          var _msUntilTimeout;

          if (workInProgressRootLatestSuspenseTimeout !== Sync) {
            // We have processed a suspense config whose expiration time we
            // can use as the timeout.
            _msUntilTimeout = expirationTimeToMs(workInProgressRootLatestSuspenseTimeout) - now();
          } else if (workInProgressRootLatestProcessedExpirationTime === Sync) {
            // This should never normally happen because only new updates
            // cause delayed states, so we should have processed something.
            // However, this could also happen in an offscreen tree.
            _msUntilTimeout = 0;
          } else {
            // If we don't have a suspense config, we're going to use a
            // heuristic to determine how long we can suspend.
            var eventTimeMs = inferTimeFromExpirationTime(workInProgressRootLatestProcessedExpirationTime);
            var currentTimeMs = now();
            var timeUntilExpirationMs = expirationTimeToMs(expirationTime) - currentTimeMs;
            var timeElapsed = currentTimeMs - eventTimeMs;

            if (timeElapsed < 0) {
              // We get this wrong some time since we estimate the time.
              timeElapsed = 0;
            }

            _msUntilTimeout = jnd(timeElapsed) - timeElapsed; // Clamp the timeout to the expiration time. TODO: Once the
            // event time is exact instead of inferred from expiration time
            // we don't need this.

            if (timeUntilExpirationMs < _msUntilTimeout) {
              _msUntilTimeout = timeUntilExpirationMs;
            }
          } // Don't bother with a very short suspense time.


          if (_msUntilTimeout > 10) {
            // The render is suspended, it hasn't timed out, and there's no
            // lower priority work to do. Instead of committing the fallback
            // immediately, wait for more data to arrive.
            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout);
            break;
          }
        } // The work expired. Commit immediately.


        commitRoot(root);
        break;
      }

    case RootCompleted:
      {
        // The work completed. Ready to commit.
        if ( // do not delay if we're inside an act() scope
        !(true && flushSuspenseFallbacksInTests && IsThisRendererActing.current) && workInProgressRootLatestProcessedExpirationTime !== Sync && workInProgressRootCanSuspendUsingConfig !== null) {
          // If we have exceeded the minimum loading delay, which probably
          // means we have shown a spinner already, we might have to suspend
          // a bit longer to ensure that the spinner is shown for
          // enough time.
          var _msUntilTimeout2 = computeMsUntilSuspenseLoadingDelay(workInProgressRootLatestProcessedExpirationTime, expirationTime, workInProgressRootCanSuspendUsingConfig);

          if (_msUntilTimeout2 > 10) {
            markRootSuspendedAtTime(root, expirationTime);
            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout2);
            break;
          }
        }

        commitRoot(root);
        break;
      }

    default:
      {
        {
          {
            throw Error("Unknown root exit status.");
          }
        }
      }
  }
} // This is the entry point for synchronous tasks that don't go
// through Scheduler


function performSyncWorkOnRoot(root) {
  // Check if there's expired work on this root. Otherwise, render at Sync.
  var lastExpiredTime = root.lastExpiredTime;
  var expirationTime = lastExpiredTime !== NoWork ? lastExpiredTime : Sync;

  if (root.finishedExpirationTime === expirationTime) {
    // There's already a pending commit at this expiration time.
    // TODO: This is poorly factored. This case only exists for the
    // batch.commit() API.
    commitRoot(root);
  } else {
    if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
      {
        throw Error("Should not already be working.");
      }
    }

    flushPassiveEffects(); // If the root or expiration time have changed, throw out the existing stack
    // and prepare a fresh one. Otherwise we'll continue where we left off.

    if (root !== workInProgressRoot || expirationTime !== renderExpirationTime) {
      prepareFreshStack(root, expirationTime);
      startWorkOnPendingInteractions(root, expirationTime);
    } // If we have a work-in-progress fiber, it means there's still work to do
    // in this root.


    if (workInProgress !== null) {
      var prevExecutionContext = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = pushDispatcher(root);
      var prevInteractions = pushInteractions(root);
      startWorkLoopTimer(workInProgress);

      do {
        try {
          workLoopSync();
          break;
        } catch (thrownValue) {
          handleError(root, thrownValue);
        }
      } while (true);

      resetContextDependencies();
      executionContext = prevExecutionContext;
      popDispatcher(prevDispatcher);

      if (enableSchedulerTracing) {
        popInteractions(prevInteractions);
      }

      if (workInProgressRootExitStatus === RootFatalErrored) {
        var fatalError = workInProgressRootFatalError;
        stopInterruptedWorkLoopTimer();
        prepareFreshStack(root, expirationTime);
        markRootSuspendedAtTime(root, expirationTime);
        ensureRootIsScheduled(root);
        throw fatalError;
      }

      if (workInProgress !== null) {
        // This is a sync render, so we should have finished the whole tree.
        {
          {
            throw Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      } else {
        // We now have a consistent tree. Because this is a sync render, we
        // will commit it even if something suspended.
        stopFinishedWorkLoopTimer();
        root.finishedWork = root.current.alternate;
        root.finishedExpirationTime = expirationTime;
        finishSyncRender(root, workInProgressRootExitStatus, expirationTime);
      } // Before exiting, make sure there's a callback scheduled for the next
      // pending level.


      ensureRootIsScheduled(root);
    }
  }

  return null;
}

function finishSyncRender(root, exitStatus, expirationTime) {
  // Set this to null to indicate there's no in-progress render.
  workInProgressRoot = null;

  {
    if (exitStatus === RootSuspended || exitStatus === RootSuspendedWithDelay) {
      flushSuspensePriorityWarningInDEV();
    }
  }

  commitRoot(root);
}

function flushRoot(root, expirationTime) {
  markRootExpiredAtTime(root, expirationTime);
  ensureRootIsScheduled(root);

  if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
    flushSyncCallbackQueue();
  }
}
function flushDiscreteUpdates() {
  // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.
  // However, `act` uses `batchedUpdates`, so there's no way to distinguish
  // those two cases. Need to fix this before exposing flushDiscreteUpdates
  // as a public API.
  if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
    if (true && (executionContext & RenderContext) !== NoContext) {
      warning$1(false, 'unstable_flushDiscreteUpdates: Cannot flush updates when React is ' + 'already rendering.');
    } // We're already rendering, so we can't synchronously flush pending work.
    // This is probably a nested event dispatch triggered by a lifecycle/effect,
    // like `el.focus()`. Exit.


    return;
  }

  flushPendingDiscreteUpdates(); // If the discrete updates scheduled passive effects, flush them now so that
  // they fire before the next serial event.

  flushPassiveEffects();
}

function syncUpdates(fn, a, b, c) {
  return runWithPriority$2(ImmediatePriority, fn.bind(null, a, b, c));
}

function flushPendingDiscreteUpdates() {
  if (rootsWithPendingDiscreteUpdates !== null) {
    // For each root with pending discrete updates, schedule a callback to
    // immediately flush them.
    var roots = rootsWithPendingDiscreteUpdates;
    rootsWithPendingDiscreteUpdates = null;
    roots.forEach(function (expirationTime, root) {
      markRootExpiredAtTime(root, expirationTime);
      ensureRootIsScheduled(root);
    }); // Now flush the immediate queue.

    flushSyncCallbackQueue();
  }
}

function batchedUpdates$1(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}
function batchedEventUpdates$1(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext |= EventContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}
function discreteUpdates$1(fn, a, b, c) {
  var prevExecutionContext = executionContext;
  executionContext |= DiscreteEventContext;

  try {
    // Should this
    return runWithPriority$2(UserBlockingPriority$2, fn.bind(null, a, b, c));
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}
function unbatchedUpdates(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext &= ~BatchedContext;
  executionContext |= LegacyUnbatchedContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}
function flushSync(fn, a) {
  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    {
      {
        throw Error("flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.");
      }
    }
  }

  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;

  try {
    return runWithPriority$2(ImmediatePriority, fn.bind(null, a));
  } finally {
    executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
    // Note that this will happen even if batchedUpdates is higher up
    // the stack.

    flushSyncCallbackQueue();
  }
}
function flushControlled(fn) {
  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;

  try {
    runWithPriority$2(ImmediatePriority, fn);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      flushSyncCallbackQueue();
    }
  }
}

function prepareFreshStack(root, expirationTime) {
  root.finishedWork = null;
  root.finishedExpirationTime = NoWork;
  var timeoutHandle = root.timeoutHandle;

  if (timeoutHandle !== noTimeout) {
    // The root previous suspended and scheduled a timeout to commit a fallback
    // state. Now that we have additional work, cancel the timeout.
    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above

    cancelTimeout(timeoutHandle);
  }

  if (workInProgress !== null) {
    var interruptedWork = workInProgress.return;

    while (interruptedWork !== null) {
      unwindInterruptedWork(interruptedWork);
      interruptedWork = interruptedWork.return;
    }
  }

  workInProgressRoot = root;
  workInProgress = createWorkInProgress(root.current, null, expirationTime);
  renderExpirationTime = expirationTime;
  workInProgressRootExitStatus = RootIncomplete;
  workInProgressRootFatalError = null;
  workInProgressRootLatestProcessedExpirationTime = Sync;
  workInProgressRootLatestSuspenseTimeout = Sync;
  workInProgressRootCanSuspendUsingConfig = null;
  workInProgressRootNextUnprocessedUpdateTime = NoWork;
  workInProgressRootHasPendingPing = false;

  if (enableSchedulerTracing) {
    spawnedWorkDuringRender = null;
  }

  {
    ReactStrictModeWarnings.discardPendingWarnings();
    componentsThatTriggeredHighPriSuspend = null;
  }
}

function handleError(root, thrownValue) {
  do {
    try {
      // Reset module-level state that was set during the render phase.
      resetContextDependencies();
      resetHooks();
      resetCurrentFiber();

      if (workInProgress === null || workInProgress.return === null) {
        // Expected to be working on a non-root fiber. This is a fatal error
        // because there's no ancestor that can handle it; the root is
        // supposed to capture all errors that weren't caught by an error
        // boundary.
        workInProgressRootExitStatus = RootFatalErrored;
        workInProgressRootFatalError = thrownValue;
        return null;
      }

      if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
        // Record the time spent rendering before an error was thrown. This
        // avoids inaccurate Profiler durations in the case of a
        // suspended render.
        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);
      }

      throwException(root, workInProgress.return, workInProgress, thrownValue, renderExpirationTime);
      workInProgress = completeUnitOfWork(workInProgress);
    } catch (yetAnotherThrownValue) {
      // Something in the return path also threw.
      thrownValue = yetAnotherThrownValue;
      continue;
    } // Return to the normal work loop.


    return;
  } while (true);
}

function pushDispatcher(root) {
  var prevDispatcher = ReactCurrentDispatcher.current;
  ReactCurrentDispatcher.current = ContextOnlyDispatcher;

  if (prevDispatcher === null) {
    // The React isomorphic package does not include a default dispatcher.
    // Instead the first renderer will lazily attach one, in order to give
    // nicer error messages.
    return ContextOnlyDispatcher;
  } else {
    return prevDispatcher;
  }
}

function popDispatcher(prevDispatcher) {
  ReactCurrentDispatcher.current = prevDispatcher;
}

function pushInteractions(root) {
  if (enableSchedulerTracing) {
    var prevInteractions = __interactionsRef.current;
    __interactionsRef.current = root.memoizedInteractions;
    return prevInteractions;
  }

  return null;
}

function popInteractions(prevInteractions) {
  if (enableSchedulerTracing) {
    __interactionsRef.current = prevInteractions;
  }
}

function markCommitTimeOfFallback() {
  globalMostRecentFallbackTime = now();
}
function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
  if (expirationTime < workInProgressRootLatestProcessedExpirationTime && expirationTime > Idle) {
    workInProgressRootLatestProcessedExpirationTime = expirationTime;
  }

  if (suspenseConfig !== null) {
    if (expirationTime < workInProgressRootLatestSuspenseTimeout && expirationTime > Idle) {
      workInProgressRootLatestSuspenseTimeout = expirationTime; // Most of the time we only have one config and getting wrong is not bad.

      workInProgressRootCanSuspendUsingConfig = suspenseConfig;
    }
  }
}
function markUnprocessedUpdateTime(expirationTime) {
  if (expirationTime > workInProgressRootNextUnprocessedUpdateTime) {
    workInProgressRootNextUnprocessedUpdateTime = expirationTime;
  }
}
function renderDidSuspend() {
  if (workInProgressRootExitStatus === RootIncomplete) {
    workInProgressRootExitStatus = RootSuspended;
  }
}
function renderDidSuspendDelayIfPossible() {
  if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) {
    workInProgressRootExitStatus = RootSuspendedWithDelay;
  } // Check if there's a lower priority update somewhere else in the tree.


  if (workInProgressRootNextUnprocessedUpdateTime !== NoWork && workInProgressRoot !== null) {
    // Mark the current render as suspended, and then mark that there's a
    // pending update.
    // TODO: This should immediately interrupt the current render, instead
    // of waiting until the next time we yield.
    markRootSuspendedAtTime(workInProgressRoot, renderExpirationTime);
    markRootUpdatedAtTime(workInProgressRoot, workInProgressRootNextUnprocessedUpdateTime);
  }
}
function renderDidError() {
  if (workInProgressRootExitStatus !== RootCompleted) {
    workInProgressRootExitStatus = RootErrored;
  }
} // Called during render to determine if anything has suspended.
// Returns false if we're not sure.

function renderHasNotSuspendedYet() {
  // If something errored or completed, we can't really be sure,
  // so those are false.
  return workInProgressRootExitStatus === RootIncomplete;
}

function inferTimeFromExpirationTime(expirationTime) {
  // We don't know exactly when the update was scheduled, but we can infer an
  // approximate start time from the expiration time.
  var earliestExpirationTimeMs = expirationTimeToMs(expirationTime);
  return earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;
}

function inferTimeFromExpirationTimeWithSuspenseConfig(expirationTime, suspenseConfig) {
  // We don't know exactly when the update was scheduled, but we can infer an
  // approximate start time from the expiration time by subtracting the timeout
  // that was added to the event time.
  var earliestExpirationTimeMs = expirationTimeToMs(expirationTime);
  return earliestExpirationTimeMs - (suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION);
} // The work loop is an extremely hot path. Tell Closure not to inline it.

/** @noinline */


function workLoopSync() {
  // Already timed out, so perform work without checking if we need to yield.
  while (workInProgress !== null) {
    workInProgress = performUnitOfWork(workInProgress);
  }
}
/** @noinline */


function workLoopConcurrent() {
  // Perform work until Scheduler asks us to yield
  while (workInProgress !== null && !shouldYield()) {
    workInProgress = performUnitOfWork(workInProgress);
  }
}

function performUnitOfWork(unitOfWork) {
  // The current, flushed, state of this fiber is the alternate. Ideally
  // nothing should rely on this, but relying on it here means that we don't
  // need an additional field on the work in progress.
  var current$$1 = unitOfWork.alternate;
  startWorkTimer(unitOfWork);
  setCurrentFiber(unitOfWork);
  var next;

  if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {
    startProfilerTimer(unitOfWork);
    next = beginWork$$1(current$$1, unitOfWork, renderExpirationTime);
    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
  } else {
    next = beginWork$$1(current$$1, unitOfWork, renderExpirationTime);
  }

  resetCurrentFiber();
  unitOfWork.memoizedProps = unitOfWork.pendingProps;

  if (next === null) {
    // If this doesn't spawn new work, complete the current work.
    next = completeUnitOfWork(unitOfWork);
  }

  ReactCurrentOwner$2.current = null;
  return next;
}

function completeUnitOfWork(unitOfWork) {
  // Attempt to complete the current unit of work, then move to the next
  // sibling. If there are no more siblings, return to the parent fiber.
  workInProgress = unitOfWork;

  do {
    // The current, flushed, state of this fiber is the alternate. Ideally
    // nothing should rely on this, but relying on it here means that we don't
    // need an additional field on the work in progress.
    var current$$1 = workInProgress.alternate;
    var returnFiber = workInProgress.return; // Check if the work completed or if something threw.

    if ((workInProgress.effectTag & Incomplete) === NoEffect) {
      setCurrentFiber(workInProgress);
      var next = void 0;

      if (!enableProfilerTimer || (workInProgress.mode & ProfileMode) === NoMode) {
        next = completeWork(current$$1, workInProgress, renderExpirationTime);
      } else {
        startProfilerTimer(workInProgress);
        next = completeWork(current$$1, workInProgress, renderExpirationTime); // Update render duration assuming we didn't error.

        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);
      }

      stopWorkTimer(workInProgress);
      resetCurrentFiber();
      resetChildExpirationTime(workInProgress);

      if (next !== null) {
        // Completing this fiber spawned new work. Work on that next.
        return next;
      }

      if (returnFiber !== null && // Do not append effects to parents if a sibling failed to complete
      (returnFiber.effectTag & Incomplete) === NoEffect) {
        // Append all the effects of the subtree and this fiber onto the effect
        // list of the parent. The completion order of the children affects the
        // side-effect order.
        if (returnFiber.firstEffect === null) {
          returnFiber.firstEffect = workInProgress.firstEffect;
        }

        if (workInProgress.lastEffect !== null) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
          }

          returnFiber.lastEffect = workInProgress.lastEffect;
        } // If this fiber had side-effects, we append it AFTER the children's
        // side-effects. We can perform certain side-effects earlier if needed,
        // by doing multiple passes over the effect list. We don't want to
        // schedule our own side-effect on our own list because if end up
        // reusing children we'll schedule this effect onto itself since we're
        // at the end.


        var effectTag = workInProgress.effectTag; // Skip both NoWork and PerformedWork tags when creating the effect
        // list. PerformedWork effect is read by React DevTools but shouldn't be
        // committed.

        if (effectTag > PerformedWork) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress;
          } else {
            returnFiber.firstEffect = workInProgress;
          }

          returnFiber.lastEffect = workInProgress;
        }
      }
    } else {
      // This fiber did not complete because something threw. Pop values off
      // the stack without entering the complete phase. If this is a boundary,
      // capture values if possible.
      var _next = unwindWork(workInProgress, renderExpirationTime); // Because this fiber did not complete, don't reset its expiration time.


      if (enableProfilerTimer && (workInProgress.mode & ProfileMode) !== NoMode) {
        // Record the render duration for the fiber that errored.
        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false); // Include the time spent working on failed children before continuing.

        var actualDuration = workInProgress.actualDuration;
        var child = workInProgress.child;

        while (child !== null) {
          actualDuration += child.actualDuration;
          child = child.sibling;
        }

        workInProgress.actualDuration = actualDuration;
      }

      if (_next !== null) {
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        // Since we're restarting, remove anything that is not a host effect
        // from the effect tag.
        // TODO: The name stopFailedWorkTimer is misleading because Suspense
        // also captures and restarts.
        stopFailedWorkTimer(workInProgress);
        _next.effectTag &= HostEffectMask;
        return _next;
      }

      stopWorkTimer(workInProgress);

      if (returnFiber !== null) {
        // Mark the parent fiber as incomplete and clear its effect list.
        returnFiber.firstEffect = returnFiber.lastEffect = null;
        returnFiber.effectTag |= Incomplete;
      }
    }

    var siblingFiber = workInProgress.sibling;

    if (siblingFiber !== null) {
      // If there is more work to do in this returnFiber, do that next.
      return siblingFiber;
    } // Otherwise, return to the parent


    workInProgress = returnFiber;
  } while (workInProgress !== null); // We've reached the root.


  if (workInProgressRootExitStatus === RootIncomplete) {
    workInProgressRootExitStatus = RootCompleted;
  }

  return null;
}

function getRemainingExpirationTime(fiber) {
  var updateExpirationTime = fiber.expirationTime;
  var childExpirationTime = fiber.childExpirationTime;
  return updateExpirationTime > childExpirationTime ? updateExpirationTime : childExpirationTime;
}

function resetChildExpirationTime(completedWork) {
  if (renderExpirationTime !== Never && completedWork.childExpirationTime === Never) {
    // The children of this component are hidden. Don't bubble their
    // expiration times.
    return;
  }

  var newChildExpirationTime = NoWork; // Bubble up the earliest expiration time.

  if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {
    // In profiling mode, resetChildExpirationTime is also used to reset
    // profiler durations.
    var actualDuration = completedWork.actualDuration;
    var treeBaseDuration = completedWork.selfBaseDuration; // When a fiber is cloned, its actualDuration is reset to 0. This value will
    // only be updated if work is done on the fiber (i.e. it doesn't bailout).
    // When work is done, it should bubble to the parent's actualDuration. If
    // the fiber has not been cloned though, (meaning no work was done), then
    // this value will reflect the amount of time spent working on a previous
    // render. In that case it should not bubble. We determine whether it was
    // cloned by comparing the child pointer.

    var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;
    var child = completedWork.child;

    while (child !== null) {
      var childUpdateExpirationTime = child.expirationTime;
      var childChildExpirationTime = child.childExpirationTime;

      if (childUpdateExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = childUpdateExpirationTime;
      }

      if (childChildExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = childChildExpirationTime;
      }

      if (shouldBubbleActualDurations) {
        actualDuration += child.actualDuration;
      }

      treeBaseDuration += child.treeBaseDuration;
      child = child.sibling;
    }

    completedWork.actualDuration = actualDuration;
    completedWork.treeBaseDuration = treeBaseDuration;
  } else {
    var _child = completedWork.child;

    while (_child !== null) {
      var _childUpdateExpirationTime = _child.expirationTime;
      var _childChildExpirationTime = _child.childExpirationTime;

      if (_childUpdateExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = _childUpdateExpirationTime;
      }

      if (_childChildExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = _childChildExpirationTime;
      }

      _child = _child.sibling;
    }
  }

  completedWork.childExpirationTime = newChildExpirationTime;
}

function commitRoot(root) {
  var renderPriorityLevel = getCurrentPriorityLevel();
  runWithPriority$2(ImmediatePriority, commitRootImpl.bind(null, root, renderPriorityLevel));
  return null;
}

function commitRootImpl(root, renderPriorityLevel) {
  do {
    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
    // means `flushPassiveEffects` will sometimes result in additional
    // passive effects. So we need to keep flushing in a loop until there are
    // no more pending effects.
    // TODO: Might be better if `flushPassiveEffects` did not automatically
    // flush synchronous work at the end, to avoid factoring hazards like this.
    flushPassiveEffects();
  } while (rootWithPendingPassiveEffects !== null);

  flushRenderPhaseStrictModeWarningsInDEV();

  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
    {
      throw Error("Should not already be working.");
    }
  }

  var finishedWork = root.finishedWork;
  var expirationTime = root.finishedExpirationTime;

  if (finishedWork === null) {
    return null;
  }

  root.finishedWork = null;
  root.finishedExpirationTime = NoWork;

  if (!(finishedWork !== root.current)) {
    {
      throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
    }
  } // commitRoot never returns a continuation; it always finishes synchronously.
  // So we can clear these now to allow a new callback to be scheduled.


  root.callbackNode = null;
  root.callbackExpirationTime = NoWork;
  root.callbackPriority = NoPriority;
  root.nextKnownPendingLevel = NoWork;
  startCommitTimer(); // Update the first and last pending times on this root. The new first
  // pending time is whatever is left on the root fiber.

  var remainingExpirationTimeBeforeCommit = getRemainingExpirationTime(finishedWork);
  markRootFinishedAtTime(root, expirationTime, remainingExpirationTimeBeforeCommit);

  if (root === workInProgressRoot) {
    // We can reset these now that they are finished.
    workInProgressRoot = null;
    workInProgress = null;
    renderExpirationTime = NoWork;
  } else {} // This indicates that the last root we worked on is not the same one that
  // we're committing now. This most commonly happens when a suspended root
  // times out.
  // Get the list of effects.


  var firstEffect;

  if (finishedWork.effectTag > PerformedWork) {
    // A fiber's effect list consists only of its children, not itself. So if
    // the root has an effect, we need to add it to the end of the list. The
    // resulting list is the set that would belong to the root's parent, if it
    // had one; that is, all the effects in the tree including the root.
    if (finishedWork.lastEffect !== null) {
      finishedWork.lastEffect.nextEffect = finishedWork;
      firstEffect = finishedWork.firstEffect;
    } else {
      firstEffect = finishedWork;
    }
  } else {
    // There is no effect on the root.
    firstEffect = finishedWork.firstEffect;
  }

  if (firstEffect !== null) {
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;
    var prevInteractions = pushInteractions(root); // Reset this to null before calling lifecycles

    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
    // of the effect list for each phase: all mutation effects come before all
    // layout effects, and so on.
    // The first phase a "before mutation" phase. We use this phase to read the
    // state of the host tree right before we mutate it. This is where
    // getSnapshotBeforeUpdate is called.

    startCommitSnapshotEffectsTimer();
    prepareForCommit(root.containerInfo);
    nextEffect = firstEffect;

    do {
      {
        invokeGuardedCallback(null, commitBeforeMutationEffects, null);

        if (hasCaughtError()) {
          if (!(nextEffect !== null)) {
            {
              throw Error("Should be working on an effect.");
            }
          }

          var error = clearCaughtError();
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null);

    stopCommitSnapshotEffectsTimer();

    if (enableProfilerTimer) {
      // Mark the current commit time to be shared by all Profilers in this
      // batch. This enables them to be grouped later.
      recordCommitTime();
    } // The next phase is the mutation phase, where we mutate the host tree.


    startCommitHostEffectsTimer();
    nextEffect = firstEffect;

    do {
      {
        invokeGuardedCallback(null, commitMutationEffects, null, root, renderPriorityLevel);

        if (hasCaughtError()) {
          if (!(nextEffect !== null)) {
            {
              throw Error("Should be working on an effect.");
            }
          }

          var _error = clearCaughtError();

          captureCommitPhaseError(nextEffect, _error);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null);

    stopCommitHostEffectsTimer();
    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
    // the mutation phase, so that the previous tree is still current during
    // componentWillUnmount, but before the layout phase, so that the finished
    // work is current during componentDidMount/Update.

    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
    // the host tree after it's been mutated. The idiomatic use case for this is
    // layout, but class component lifecycles also fire here for legacy reasons.

    startCommitLifeCyclesTimer();
    nextEffect = firstEffect;

    do {
      {
        invokeGuardedCallback(null, commitLayoutEffects, null, root, expirationTime);

        if (hasCaughtError()) {
          if (!(nextEffect !== null)) {
            {
              throw Error("Should be working on an effect.");
            }
          }

          var _error2 = clearCaughtError();

          captureCommitPhaseError(nextEffect, _error2);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null);

    stopCommitLifeCyclesTimer();
    nextEffect = null; // Tell Scheduler to yield at the end of the frame, so the browser has an
    // opportunity to paint.

    requestPaint();

    if (enableSchedulerTracing) {
      popInteractions(prevInteractions);
    }

    executionContext = prevExecutionContext;
  } else {
    // No effects.
    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
    // no effects.
    // TODO: Maybe there's a better way to report this.

    startCommitSnapshotEffectsTimer();
    stopCommitSnapshotEffectsTimer();

    if (enableProfilerTimer) {
      recordCommitTime();
    }

    startCommitHostEffectsTimer();
    stopCommitHostEffectsTimer();
    startCommitLifeCyclesTimer();
    stopCommitLifeCyclesTimer();
  }

  stopCommitTimer();
  var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;

  if (rootDoesHavePassiveEffects) {
    // This commit has passive effects. Stash a reference to them. But don't
    // schedule a callback until after flushing layout work.
    rootDoesHavePassiveEffects = false;
    rootWithPendingPassiveEffects = root;
    pendingPassiveEffectsExpirationTime = expirationTime;
    pendingPassiveEffectsRenderPriority = renderPriorityLevel;
  } else {
    // We are done with the effect chain at this point so let's clear the
    // nextEffect pointers to assist with GC. If we have passive effects, we'll
    // clear this in flushPassiveEffects.
    nextEffect = firstEffect;

    while (nextEffect !== null) {
      var nextNextEffect = nextEffect.nextEffect;
      nextEffect.nextEffect = null;
      nextEffect = nextNextEffect;
    }
  } // Check if there's remaining work on this root


  var remainingExpirationTime = root.firstPendingTime;

  if (remainingExpirationTime !== NoWork) {
    if (enableSchedulerTracing) {
      if (spawnedWorkDuringRender !== null) {
        var expirationTimes = spawnedWorkDuringRender;
        spawnedWorkDuringRender = null;

        for (var i = 0; i < expirationTimes.length; i++) {
          scheduleInteractions(root, expirationTimes[i], root.memoizedInteractions);
        }
      }

      schedulePendingInteractions(root, remainingExpirationTime);
    }
  } else {
    // If there's no remaining work, we can clear the set of already failed
    // error boundaries.
    legacyErrorBoundariesThatAlreadyFailed = null;
  }

  if (enableSchedulerTracing) {
    if (!rootDidHavePassiveEffects) {
      // If there are no passive effects, then we can complete the pending interactions.
      // Otherwise, we'll wait until after the passive effects are flushed.
      // Wait to do this until after remaining work has been scheduled,
      // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.
      finishPendingInteractions(root, expirationTime);
    }
  }

  if (remainingExpirationTime === Sync) {
    // Count the number of times the root synchronously re-renders without
    // finishing. If there are too many, it indicates an infinite update loop.
    if (root === rootWithNestedUpdates) {
      nestedUpdateCount++;
    } else {
      nestedUpdateCount = 0;
      rootWithNestedUpdates = root;
    }
  } else {
    nestedUpdateCount = 0;
  }

  onCommitRoot(finishedWork.stateNode, expirationTime); // Always call this before exiting `commitRoot`, to ensure that any
  // additional work on this root is scheduled.

  ensureRootIsScheduled(root);

  if (hasUncaughtError) {
    hasUncaughtError = false;
    var _error3 = firstUncaughtError;
    firstUncaughtError = null;
    throw _error3;
  }

  if ((executionContext & LegacyUnbatchedContext) !== NoContext) {
    // This is a legacy edge case. We just committed the initial mount of
    // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired
    // synchronously, but layout updates should be deferred until the end
    // of the batch.
    return null;
  } // If layout work was scheduled, flush it now.


  flushSyncCallbackQueue();
  return null;
}

function commitBeforeMutationEffects() {
  while (nextEffect !== null) {
    var effectTag = nextEffect.effectTag;

    if ((effectTag & Snapshot) !== NoEffect) {
      setCurrentFiber(nextEffect);
      recordEffect();
      var current$$1 = nextEffect.alternate;
      commitBeforeMutationLifeCycles(current$$1, nextEffect);
      resetCurrentFiber();
    }

    if ((effectTag & Passive) !== NoEffect) {
      // If there are passive effects, schedule a callback to flush at
      // the earliest opportunity.
      if (!rootDoesHavePassiveEffects) {
        rootDoesHavePassiveEffects = true;
        scheduleCallback(NormalPriority, function () {
          flushPassiveEffects();
          return null;
        });
      }
    }

    nextEffect = nextEffect.nextEffect;
  }
}

function commitMutationEffects(root, renderPriorityLevel) {
  // TODO: Should probably move the bulk of this function to commitWork.
  while (nextEffect !== null) {
    setCurrentFiber(nextEffect);
    var effectTag = nextEffect.effectTag;

    if (effectTag & ContentReset) {
      commitResetTextContent(nextEffect);
    }

    if (effectTag & Ref) {
      var current$$1 = nextEffect.alternate;

      if (current$$1 !== null) {
        commitDetachRef(current$$1);
      }
    } // The following switch statement is only concerned about placement,
    // updates, and deletions. To avoid needing to add a case for every possible
    // bitmap value, we remove the secondary effects from the effect tag and
    // switch on that value.


    var primaryEffectTag = effectTag & (Placement | Update | Deletion | Hydrating);

    switch (primaryEffectTag) {
      case Placement:
        {
          commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
          // inserted, before any life-cycles like componentDidMount gets called.
          // TODO: findDOMNode doesn't rely on this any more but isMounted does
          // and isMounted is deprecated anyway so we should be able to kill this.

          nextEffect.effectTag &= ~Placement;
          break;
        }

      case PlacementAndUpdate:
        {
          // Placement
          commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
          // inserted, before any life-cycles like componentDidMount gets called.

          nextEffect.effectTag &= ~Placement; // Update

          var _current = nextEffect.alternate;
          commitWork(_current, nextEffect);
          break;
        }

      case Hydrating:
        {
          nextEffect.effectTag &= ~Hydrating;
          break;
        }

      case HydratingAndUpdate:
        {
          nextEffect.effectTag &= ~Hydrating; // Update

          var _current2 = nextEffect.alternate;
          commitWork(_current2, nextEffect);
          break;
        }

      case Update:
        {
          var _current3 = nextEffect.alternate;
          commitWork(_current3, nextEffect);
          break;
        }

      case Deletion:
        {
          commitDeletion(root, nextEffect, renderPriorityLevel);
          break;
        }
    } // TODO: Only record a mutation effect if primaryEffectTag is non-zero.


    recordEffect();
    resetCurrentFiber();
    nextEffect = nextEffect.nextEffect;
  }
}

function commitLayoutEffects(root, committedExpirationTime) {
  // TODO: Should probably move the bulk of this function to commitWork.
  while (nextEffect !== null) {
    setCurrentFiber(nextEffect);
    var effectTag = nextEffect.effectTag;

    if (effectTag & (Update | Callback)) {
      recordEffect();
      var current$$1 = nextEffect.alternate;
      commitLifeCycles(root, current$$1, nextEffect, committedExpirationTime);
    }

    if (effectTag & Ref) {
      recordEffect();
      commitAttachRef(nextEffect);
    }

    resetCurrentFiber();
    nextEffect = nextEffect.nextEffect;
  }
}

function flushPassiveEffects() {
  if (pendingPassiveEffectsRenderPriority !== NoPriority) {
    var priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority ? NormalPriority : pendingPassiveEffectsRenderPriority;
    pendingPassiveEffectsRenderPriority = NoPriority;
    return runWithPriority$2(priorityLevel, flushPassiveEffectsImpl);
  }
}

function flushPassiveEffectsImpl() {
  if (rootWithPendingPassiveEffects === null) {
    return false;
  }

  var root = rootWithPendingPassiveEffects;
  var expirationTime = pendingPassiveEffectsExpirationTime;
  rootWithPendingPassiveEffects = null;
  pendingPassiveEffectsExpirationTime = NoWork;

  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
    {
      throw Error("Cannot flush passive effects while already rendering.");
    }
  }

  var prevExecutionContext = executionContext;
  executionContext |= CommitContext;
  var prevInteractions = pushInteractions(root); // Note: This currently assumes there are no passive effects on the root
  // fiber, because the root is not part of its own effect list. This could
  // change in the future.

  var effect = root.current.firstEffect;

  while (effect !== null) {
    {
      setCurrentFiber(effect);
      invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);

      if (hasCaughtError()) {
        if (!(effect !== null)) {
          {
            throw Error("Should be working on an effect.");
          }
        }

        var error = clearCaughtError();
        captureCommitPhaseError(effect, error);
      }

      resetCurrentFiber();
    }

    var nextNextEffect = effect.nextEffect; // Remove nextEffect pointer to assist GC

    effect.nextEffect = null;
    effect = nextNextEffect;
  }

  if (enableSchedulerTracing) {
    popInteractions(prevInteractions);
    finishPendingInteractions(root, expirationTime);
  }

  executionContext = prevExecutionContext;
  flushSyncCallbackQueue(); // If additional passive effects were scheduled, increment a counter. If this
  // exceeds the limit, we'll fire a warning.

  nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;
  return true;
}

function isAlreadyFailedLegacyErrorBoundary(instance) {
  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
}
function markLegacyErrorBoundaryAsFailed(instance) {
  if (legacyErrorBoundariesThatAlreadyFailed === null) {
    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
  } else {
    legacyErrorBoundariesThatAlreadyFailed.add(instance);
  }
}

function prepareToThrowUncaughtError(error) {
  if (!hasUncaughtError) {
    hasUncaughtError = true;
    firstUncaughtError = error;
  }
}

var onUncaughtError = prepareToThrowUncaughtError;

function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
  var errorInfo = createCapturedValue(error, sourceFiber);
  var update = createRootErrorUpdate(rootFiber, errorInfo, Sync);
  enqueueUpdate(rootFiber, update);
  var root = markUpdateTimeFromFiberToRoot(rootFiber, Sync);

  if (root !== null) {
    ensureRootIsScheduled(root);
    schedulePendingInteractions(root, Sync);
  }
}

function captureCommitPhaseError(sourceFiber, error) {
  if (sourceFiber.tag === HostRoot) {
    // Error was thrown at the root. There is no parent, so the root
    // itself should capture it.
    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
    return;
  }

  var fiber = sourceFiber.return;

  while (fiber !== null) {
    if (fiber.tag === HostRoot) {
      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
      return;
    } else if (fiber.tag === ClassComponent) {
      var ctor = fiber.type;
      var instance = fiber.stateNode;

      if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
        var errorInfo = createCapturedValue(error, sourceFiber);
        var update = createClassErrorUpdate(fiber, errorInfo, // TODO: This is always sync
        Sync);
        enqueueUpdate(fiber, update);
        var root = markUpdateTimeFromFiberToRoot(fiber, Sync);

        if (root !== null) {
          ensureRootIsScheduled(root);
          schedulePendingInteractions(root, Sync);
        }

        return;
      }
    }

    fiber = fiber.return;
  }
}
function pingSuspendedRoot(root, thenable, suspendedTime) {
  var pingCache = root.pingCache;

  if (pingCache !== null) {
    // The thenable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    pingCache.delete(thenable);
  }

  if (workInProgressRoot === root && renderExpirationTime === suspendedTime) {
    // Received a ping at the same priority level at which we're currently
    // rendering. We might want to restart this render. This should mirror
    // the logic of whether or not a root suspends once it completes.
    // TODO: If we're rendering sync either due to Sync, Batched or expired,
    // we should probably never restart.
    // If we're suspended with delay, we'll always suspend so we can always
    // restart. If we're suspended without any updates, it might be a retry.
    // If it's early in the retry we can restart. We can't know for sure
    // whether we'll eventually process an update during this render pass,
    // but it's somewhat unlikely that we get to a ping before that, since
    // getting to the root most update is usually very fast.
    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && workInProgressRootLatestProcessedExpirationTime === Sync && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
      // Restart from the root. Don't need to schedule a ping because
      // we're already working on this tree.
      prepareFreshStack(root, renderExpirationTime);
    } else {
      // Even though we can't restart right now, we might get an
      // opportunity later. So we mark this render as having a ping.
      workInProgressRootHasPendingPing = true;
    }

    return;
  }

  if (!isRootSuspendedAtTime(root, suspendedTime)) {
    // The root is no longer suspended at this time.
    return;
  }

  var lastPingedTime = root.lastPingedTime;

  if (lastPingedTime !== NoWork && lastPingedTime < suspendedTime) {
    // There's already a lower priority ping scheduled.
    return;
  } // Mark the time at which this ping was scheduled.


  root.lastPingedTime = suspendedTime;

  if (root.finishedExpirationTime === suspendedTime) {
    // If there's a pending fallback waiting to commit, throw it away.
    root.finishedExpirationTime = NoWork;
    root.finishedWork = null;
  }

  ensureRootIsScheduled(root);
  schedulePendingInteractions(root, suspendedTime);
}

function retryTimedOutBoundary(boundaryFiber, retryTime) {
  // The boundary fiber (a Suspense component or SuspenseList component)
  // previously was rendered in its fallback state. One of the promises that
  // suspended it has resolved, which means at least part of the tree was
  // likely unblocked. Try rendering again, at a new expiration time.
  if (retryTime === NoWork) {
    var suspenseConfig = null; // Retries don't carry over the already committed update.

    var currentTime = requestCurrentTimeForUpdate();
    retryTime = computeExpirationForFiber(currentTime, boundaryFiber, suspenseConfig);
  } // TODO: Special case idle priority?


  var root = markUpdateTimeFromFiberToRoot(boundaryFiber, retryTime);

  if (root !== null) {
    ensureRootIsScheduled(root);
    schedulePendingInteractions(root, retryTime);
  }
}

function retryDehydratedSuspenseBoundary(boundaryFiber) {
  var suspenseState = boundaryFiber.memoizedState;
  var retryTime = NoWork;

  if (suspenseState !== null) {
    retryTime = suspenseState.retryTime;
  }

  retryTimedOutBoundary(boundaryFiber, retryTime);
}
function resolveRetryThenable(boundaryFiber, thenable) {
  var retryTime = NoWork; // Default

  var retryCache;

  if (enableSuspenseServerRenderer) {
    switch (boundaryFiber.tag) {
      case SuspenseComponent:
        retryCache = boundaryFiber.stateNode;
        var suspenseState = boundaryFiber.memoizedState;

        if (suspenseState !== null) {
          retryTime = suspenseState.retryTime;
        }

        break;

      case SuspenseListComponent:
        retryCache = boundaryFiber.stateNode;
        break;

      default:
        {
          {
            throw Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
          }
        }

    }
  } else {
    retryCache = boundaryFiber.stateNode;
  }

  if (retryCache !== null) {
    // The thenable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    retryCache.delete(thenable);
  }

  retryTimedOutBoundary(boundaryFiber, retryTime);
} // Computes the next Just Noticeable Difference (JND) boundary.
// The theory is that a person can't tell the difference between small differences in time.
// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
// difference in the experience. However, waiting for longer might mean that we can avoid
// showing an intermediate loading state. The longer we have already waited, the harder it
// is to tell small differences in time. Therefore, the longer we've already waited,
// the longer we can wait additionally. At some point we have to give up though.
// We pick a train model where the next boundary commits at a consistent schedule.
// These particular numbers are vague estimates. We expect to adjust them based on research.

function jnd(timeElapsed) {
  return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
}

function computeMsUntilSuspenseLoadingDelay(mostRecentEventTime, committedExpirationTime, suspenseConfig) {
  var busyMinDurationMs = suspenseConfig.busyMinDurationMs | 0;

  if (busyMinDurationMs <= 0) {
    return 0;
  }

  var busyDelayMs = suspenseConfig.busyDelayMs | 0; // Compute the time until this render pass would expire.

  var currentTimeMs = now();
  var eventTimeMs = inferTimeFromExpirationTimeWithSuspenseConfig(mostRecentEventTime, suspenseConfig);
  var timeElapsed = currentTimeMs - eventTimeMs;

  if (timeElapsed <= busyDelayMs) {
    // If we haven't yet waited longer than the initial delay, we don't
    // have to wait any additional time.
    return 0;
  }

  var msUntilTimeout = busyDelayMs + busyMinDurationMs - timeElapsed; // This is the value that is passed to `setTimeout`.

  return msUntilTimeout;
}

function checkForNestedUpdates() {
  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
    nestedUpdateCount = 0;
    rootWithNestedUpdates = null;

    {
      {
        throw Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
      }
    }
  }

  {
    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
      nestedPassiveUpdateCount = 0;
      warning$1(false, 'Maximum update depth exceeded. This can happen when a component ' + "calls setState inside useEffect, but useEffect either doesn't " + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');
    }
  }
}

function flushRenderPhaseStrictModeWarningsInDEV() {
  {
    ReactStrictModeWarnings.flushLegacyContextWarning();

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
  }
}

function stopFinishedWorkLoopTimer() {
  var didCompleteRoot = true;
  stopWorkLoopTimer(interruptedBy, didCompleteRoot);
  interruptedBy = null;
}

function stopInterruptedWorkLoopTimer() {
  // TODO: Track which fiber caused the interruption.
  var didCompleteRoot = false;
  stopWorkLoopTimer(interruptedBy, didCompleteRoot);
  interruptedBy = null;
}

function checkForInterruption(fiberThatReceivedUpdate, updateExpirationTime) {
  if (enableUserTimingAPI && workInProgressRoot !== null && updateExpirationTime > renderExpirationTime) {
    interruptedBy = fiberThatReceivedUpdate;
  }
}

var didWarnStateUpdateForUnmountedComponent = null;

function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
  {
    var tag = fiber.tag;

    if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {
      // Only warn for user-defined components, not internal ones like Suspense.
      return;
    } // We show the whole stack but dedupe on the top component's name because
    // the problematic code almost always lies inside that component.


    var componentName = getComponentName(fiber.type) || 'ReactComponent';

    if (didWarnStateUpdateForUnmountedComponent !== null) {
      if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {
        return;
      }

      didWarnStateUpdateForUnmountedComponent.add(componentName);
    } else {
      didWarnStateUpdateForUnmountedComponent = new Set([componentName]);
    }

    warningWithoutStack$1(false, "Can't perform a React state update on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.%s', tag === ClassComponent ? 'the componentWillUnmount method' : 'a useEffect cleanup function', getStackByFiberInDevAndProd(fiber));
  }
}

var beginWork$$1;

if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
  var dummyFiber = null;

  beginWork$$1 = function (current$$1, unitOfWork, expirationTime) {
    // If a component throws an error, we replay it again in a synchronously
    // dispatched event, so that the debugger will treat it as an uncaught
    // error See ReactErrorUtils for more information.
    // Before entering the begin phase, copy the work-in-progress onto a dummy
    // fiber. If beginWork throws, we'll use this to reset the state.
    var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);

    try {
      return beginWork$1(current$$1, unitOfWork, expirationTime);
    } catch (originalError) {
      if (originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') {
        // Don't replay promises. Treat everything else like an error.
        throw originalError;
      } // Keep this code in sync with handleError; any changes here must have
      // corresponding changes there.


      resetContextDependencies();
      resetHooks(); // Don't reset current debug fiber, since we're about to work on the
      // same fiber again.
      // Unwind the failed stack frame

      unwindInterruptedWork(unitOfWork); // Restore the original properties of the fiber.

      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);

      if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {
        // Reset the profiler timer.
        startProfilerTimer(unitOfWork);
      } // Run beginWork again.


      invokeGuardedCallback(null, beginWork$1, null, current$$1, unitOfWork, expirationTime);

      if (hasCaughtError()) {
        var replayError = clearCaughtError(); // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.
        // Rethrow this error instead of the original one.

        throw replayError;
      } else {
        // This branch is reachable if the render phase is impure.
        throw originalError;
      }
    }
  };
} else {
  beginWork$$1 = beginWork$1;
}

var didWarnAboutUpdateInRender = false;
var didWarnAboutUpdateInGetChildContext = false;

function warnAboutInvalidUpdatesOnClassComponentsInDEV(fiber) {
  {
    if (fiber.tag === ClassComponent) {
      switch (phase) {
        case 'getChildContext':
          if (didWarnAboutUpdateInGetChildContext) {
            return;
          }

          warningWithoutStack$1(false, 'setState(...): Cannot call setState() inside getChildContext()');
          didWarnAboutUpdateInGetChildContext = true;
          break;

        case 'render':
          if (didWarnAboutUpdateInRender) {
            return;
          }

          warningWithoutStack$1(false, 'Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure function of ' + 'props and state.');
          didWarnAboutUpdateInRender = true;
          break;
      }
    }
  }
} // a 'shared' variable that changes when act() opens/closes in tests.


var IsThisRendererActing = {
  current: false
};
function warnIfNotScopedWithMatchingAct(fiber) {
  {
    if (warnsIfNotActing === true && IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
      warningWithoutStack$1(false, "It looks like you're using the wrong act() around your test interactions.\n" + 'Be sure to use the matching version of act() corresponding to your renderer:\n\n' + '// for react-dom:\n' + "import {act} from 'react-dom/test-utils';\n" + '// ...\n' + 'act(() => ...);\n\n' + '// for react-test-renderer:\n' + "import TestRenderer from 'react-test-renderer';\n" + 'const {act} = TestRenderer;\n' + '// ...\n' + 'act(() => ...);' + '%s', getStackByFiberInDevAndProd(fiber));
    }
  }
}
function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
  {
    if (warnsIfNotActing === true && (fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
      warningWithoutStack$1(false, 'An update to %s ran an effect, but was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
    }
  }
}

function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
  {
    if (warnsIfNotActing === true && executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
      warningWithoutStack$1(false, 'An update to %s inside a test was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
    }
  }
}

var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV; // In tests, we want to enforce a mocked scheduler.

var didWarnAboutUnmockedScheduler = false; // TODO Before we release concurrent mode, revisit this and decide whether a mocked
// scheduler is the actual recommendation. The alternative could be a testing build,
// a new lib, or whatever; we dunno just yet. This message is for early adopters
// to get their tests right.

function warnIfUnmockedScheduler(fiber) {
  {
    if (didWarnAboutUnmockedScheduler === false && unstable_flushAllWithoutAsserting === undefined) {
      if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {
        didWarnAboutUnmockedScheduler = true;
        warningWithoutStack$1(false, 'In Concurrent or Sync modes, the "scheduler" module needs to be mocked ' + 'to guarantee consistent behaviour across tests and browsers. ' + 'For example, with jest: \n' + "jest.mock('scheduler', () => require('scheduler/unstable_mock'));\n\n" + 'For more info, visit https://fb.me/react-mock-scheduler');
      } else if (warnAboutUnmockedScheduler === true) {
        didWarnAboutUnmockedScheduler = true;
        warningWithoutStack$1(false, 'Starting from React v17, the "scheduler" module will need to be mocked ' + 'to guarantee consistent behaviour across tests and browsers. ' + 'For example, with jest: \n' + "jest.mock('scheduler', () => require('scheduler/unstable_mock'));\n\n" + 'For more info, visit https://fb.me/react-mock-scheduler');
      }
    }
  }
}
var componentsThatTriggeredHighPriSuspend = null;
function checkForWrongSuspensePriorityInDEV(sourceFiber) {
  {
    var currentPriorityLevel = getCurrentPriorityLevel();

    if ((sourceFiber.mode & ConcurrentMode) !== NoEffect && (currentPriorityLevel === UserBlockingPriority$2 || currentPriorityLevel === ImmediatePriority)) {
      var workInProgressNode = sourceFiber;

      while (workInProgressNode !== null) {
        // Add the component that triggered the suspense
        var current$$1 = workInProgressNode.alternate;

        if (current$$1 !== null) {
          // TODO: warn component that triggers the high priority
          // suspend is the HostRoot
          switch (workInProgressNode.tag) {
            case ClassComponent:
              // Loop through the component's update queue and see whether the component
              // has triggered any high priority updates
              var updateQueue = current$$1.updateQueue;

              if (updateQueue !== null) {
                var update = updateQueue.firstUpdate;

                while (update !== null) {
                  var priorityLevel = update.priority;

                  if (priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority) {
                    if (componentsThatTriggeredHighPriSuspend === null) {
                      componentsThatTriggeredHighPriSuspend = new Set([getComponentName(workInProgressNode.type)]);
                    } else {
                      componentsThatTriggeredHighPriSuspend.add(getComponentName(workInProgressNode.type));
                    }

                    break;
                  }

                  update = update.next;
                }
              }

              break;

            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
              if (workInProgressNode.memoizedState !== null && workInProgressNode.memoizedState.baseUpdate !== null) {
                var _update = workInProgressNode.memoizedState.baseUpdate; // Loop through the functional component's memoized state to see whether
                // the component has triggered any high pri updates

                while (_update !== null) {
                  var priority = _update.priority;

                  if (priority === UserBlockingPriority$2 || priority === ImmediatePriority) {
                    if (componentsThatTriggeredHighPriSuspend === null) {
                      componentsThatTriggeredHighPriSuspend = new Set([getComponentName(workInProgressNode.type)]);
                    } else {
                      componentsThatTriggeredHighPriSuspend.add(getComponentName(workInProgressNode.type));
                    }

                    break;
                  }

                  if (_update.next === workInProgressNode.memoizedState.baseUpdate) {
                    break;
                  }

                  _update = _update.next;
                }
              }

              break;

            default:
              break;
          }
        }

        workInProgressNode = workInProgressNode.return;
      }
    }
  }
}

function flushSuspensePriorityWarningInDEV() {
  {
    if (componentsThatTriggeredHighPriSuspend !== null) {
      var componentNames = [];
      componentsThatTriggeredHighPriSuspend.forEach(function (name) {
        return componentNames.push(name);
      });
      componentsThatTriggeredHighPriSuspend = null;

      if (componentNames.length > 0) {
        warningWithoutStack$1(false, '%s triggered a user-blocking update that suspended.' + '\n\n' + 'The fix is to split the update into multiple parts: a user-blocking ' + 'update to provide immediate feedback, and another update that ' + 'triggers the bulk of the changes.' + '\n\n' + 'Refer to the documentation for useTransition to learn how ' + 'to implement this pattern.', // TODO: Add link to React docs with more information, once it exists
        componentNames.sort().join(', '));
      }
    }
  }
}

function computeThreadID(root, expirationTime) {
  // Interaction threads are unique per root and expiration time.
  return expirationTime * 1000 + root.interactionThreadID;
}

function markSpawnedWork(expirationTime) {
  if (!enableSchedulerTracing) {
    return;
  }

  if (spawnedWorkDuringRender === null) {
    spawnedWorkDuringRender = [expirationTime];
  } else {
    spawnedWorkDuringRender.push(expirationTime);
  }
}

function scheduleInteractions(root, expirationTime, interactions) {
  if (!enableSchedulerTracing) {
    return;
  }

  if (interactions.size > 0) {
    var pendingInteractionMap = root.pendingInteractionMap;
    var pendingInteractions = pendingInteractionMap.get(expirationTime);

    if (pendingInteractions != null) {
      interactions.forEach(function (interaction) {
        if (!pendingInteractions.has(interaction)) {
          // Update the pending async work count for previously unscheduled interaction.
          interaction.__count++;
        }

        pendingInteractions.add(interaction);
      });
    } else {
      pendingInteractionMap.set(expirationTime, new Set(interactions)); // Update the pending async work count for the current interactions.

      interactions.forEach(function (interaction) {
        interaction.__count++;
      });
    }

    var subscriber = __subscriberRef.current;

    if (subscriber !== null) {
      var threadID = computeThreadID(root, expirationTime);
      subscriber.onWorkScheduled(interactions, threadID);
    }
  }
}

function schedulePendingInteractions(root, expirationTime) {
  // This is called when work is scheduled on a root.
  // It associates the current interactions with the newly-scheduled expiration.
  // They will be restored when that expiration is later committed.
  if (!enableSchedulerTracing) {
    return;
  }

  scheduleInteractions(root, expirationTime, __interactionsRef.current);
}

function startWorkOnPendingInteractions(root, expirationTime) {
  // This is called when new work is started on a root.
  if (!enableSchedulerTracing) {
    return;
  } // Determine which interactions this batch of work currently includes, So that
  // we can accurately attribute time spent working on it, And so that cascading
  // work triggered during the render phase will be associated with it.


  var interactions = new Set();
  root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
    if (scheduledExpirationTime >= expirationTime) {
      scheduledInteractions.forEach(function (interaction) {
        return interactions.add(interaction);
      });
    }
  }); // Store the current set of interactions on the FiberRoot for a few reasons:
  // We can re-use it in hot functions like performConcurrentWorkOnRoot()
  // without having to recalculate it. We will also use it in commitWork() to
  // pass to any Profiler onRender() hooks. This also provides DevTools with a
  // way to access it when the onCommitRoot() hook is called.

  root.memoizedInteractions = interactions;

  if (interactions.size > 0) {
    var subscriber = __subscriberRef.current;

    if (subscriber !== null) {
      var threadID = computeThreadID(root, expirationTime);

      try {
        subscriber.onWorkStarted(interactions, threadID);
      } catch (error) {
        // If the subscriber throws, rethrow it in a separate task
        scheduleCallback(ImmediatePriority, function () {
          throw error;
        });
      }
    }
  }
}

function finishPendingInteractions(root, committedExpirationTime) {
  if (!enableSchedulerTracing) {
    return;
  }

  var earliestRemainingTimeAfterCommit = root.firstPendingTime;
  var subscriber;

  try {
    subscriber = __subscriberRef.current;

    if (subscriber !== null && root.memoizedInteractions.size > 0) {
      var threadID = computeThreadID(root, committedExpirationTime);
      subscriber.onWorkStopped(root.memoizedInteractions, threadID);
    }
  } catch (error) {
    // If the subscriber throws, rethrow it in a separate task
    scheduleCallback(ImmediatePriority, function () {
      throw error;
    });
  } finally {
    // Clear completed interactions from the pending Map.
    // Unless the render was suspended or cascading work was scheduled,
    // In which case– leave pending interactions until the subsequent render.
    var pendingInteractionMap = root.pendingInteractionMap;
    pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
      // Only decrement the pending interaction count if we're done.
      // If there's still work at the current priority,
      // That indicates that we are waiting for suspense data.
      if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {
        pendingInteractionMap.delete(scheduledExpirationTime);
        scheduledInteractions.forEach(function (interaction) {
          interaction.__count--;

          if (subscriber !== null && interaction.__count === 0) {
            try {
              subscriber.onInteractionScheduledWorkCompleted(interaction);
            } catch (error) {
              // If the subscriber throws, rethrow it in a separate task
              scheduleCallback(ImmediatePriority, function () {
                throw error;
              });
            }
          }
        });
      }
    });
  }
}

var onCommitFiberRoot = null;
var onCommitFiberUnmount = null;
var hasLoggedError = false;
var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';
function injectInternals(internals) {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
    // No DevTools
    return false;
  }

  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;

  if (hook.isDisabled) {
    // This isn't a real property on the hook, but it can be set to opt out
    // of DevTools integration and associated warnings and logs.
    // https://github.com/facebook/react/issues/3877
    return true;
  }

  if (!hook.supportsFiber) {
    {
      warningWithoutStack$1(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
    } // DevTools exists, even though it doesn't support Fiber.


    return true;
  }

  try {
    var rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.

    onCommitFiberRoot = function (root, expirationTime) {
      try {
        var didError = (root.current.effectTag & DidCapture) === DidCapture;

        if (enableProfilerTimer) {
          var currentTime = getCurrentTime();
          var priorityLevel = inferPriorityFromExpirationTime(currentTime, expirationTime);
          hook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);
        } else {
          hook.onCommitFiberRoot(rendererID, root, undefined, didError);
        }
      } catch (err) {
        if (true && !hasLoggedError) {
          hasLoggedError = true;
          warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
        }
      }
    };

    onCommitFiberUnmount = function (fiber) {
      try {
        hook.onCommitFiberUnmount(rendererID, fiber);
      } catch (err) {
        if (true && !hasLoggedError) {
          hasLoggedError = true;
          warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
        }
      }
    };
  } catch (err) {
    // Catch all errors because it is unsafe to throw during initialization.
    {
      warningWithoutStack$1(false, 'React DevTools encountered an error: %s.', err);
    }
  } // DevTools exists


  return true;
}
function onCommitRoot(root, expirationTime) {
  if (typeof onCommitFiberRoot === 'function') {
    onCommitFiberRoot(root, expirationTime);
  }
}
function onCommitUnmount(fiber) {
  if (typeof onCommitFiberUnmount === 'function') {
    onCommitFiberUnmount(fiber);
  }
}

var hasBadMapPolyfill;

{
  hasBadMapPolyfill = false;

  try {
    var nonExtensibleObject = Object.preventExtensions({});
    var testMap = new Map([[nonExtensibleObject, null]]);
    var testSet = new Set([nonExtensibleObject]); // This is necessary for Rollup to not consider these unused.
    // https://github.com/rollup/rollup/issues/1771
    // TODO: we can remove these if Rollup fixes the bug.

    testMap.set(0, 0);
    testSet.add(0);
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

var debugCounter = 1;

function FiberNode(tag, pendingProps, key, mode) {
  // Instance
  this.tag = tag;
  this.key = key;
  this.elementType = null;
  this.type = null;
  this.stateNode = null; // Fiber

  this.return = null;
  this.child = null;
  this.sibling = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = pendingProps;
  this.memoizedProps = null;
  this.updateQueue = null;
  this.memoizedState = null;
  this.dependencies = null;
  this.mode = mode; // Effects

  this.effectTag = NoEffect;
  this.nextEffect = null;
  this.firstEffect = null;
  this.lastEffect = null;
  this.expirationTime = NoWork;
  this.childExpirationTime = NoWork;
  this.alternate = null;

  if (enableProfilerTimer) {
    // Note: The following is done to avoid a v8 performance cliff.
    //
    // Initializing the fields below to smis and later updating them with
    // double values will cause Fibers to end up having separate shapes.
    // This behavior/bug has something to do with Object.preventExtension().
    // Fortunately this only impacts DEV builds.
    // Unfortunately it makes React unusably slow for some applications.
    // To work around this, initialize the fields below with doubles.
    //
    // Learn more about this here:
    // https://github.com/facebook/react/issues/14365
    // https://bugs.chromium.org/p/v8/issues/detail?id=8538
    this.actualDuration = Number.NaN;
    this.actualStartTime = Number.NaN;
    this.selfBaseDuration = Number.NaN;
    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
    // This won't trigger the performance cliff mentioned above,
    // and it simplifies other profiler code (including DevTools).

    this.actualDuration = 0;
    this.actualStartTime = -1;
    this.selfBaseDuration = 0;
    this.treeBaseDuration = 0;
  } // This is normally DEV-only except www when it adds listeners.
  // TODO: remove the User Timing integration in favor of Root Events.


  if (enableUserTimingAPI) {
    this._debugID = debugCounter++;
    this._debugIsCurrentlyTiming = false;
  }

  {
    this._debugSource = null;
    this._debugOwner = null;
    this._debugNeedsRemount = false;
    this._debugHookTypes = null;

    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(this);
    }
  }
} // This is a constructor function, rather than a POJO constructor, still
// please ensure we do the following:
// 1) Nobody should add any instance methods on this. Instance methods can be
//    more difficult to predict when they get optimized and they are almost
//    never inlined properly in static compilers.
// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//    always know when it is a fiber.
// 3) We might want to experiment with using numeric keys since they are easier
//    to optimize in a non-JIT environment.
// 4) We can easily go from a constructor to a createFiber object literal if that
//    is faster.
// 5) It should be easy to port this to a C struct and keep a C implementation
//    compatible.


var createFiber = function (tag, pendingProps, key, mode) {
  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
  return new FiberNode(tag, pendingProps, key, mode);
};

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function isSimpleFunctionComponent(type) {
  return typeof type === 'function' && !shouldConstruct(type) && type.defaultProps === undefined;
}
function resolveLazyComponentTag(Component) {
  if (typeof Component === 'function') {
    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;
  } else if (Component !== undefined && Component !== null) {
    var $$typeof = Component.$$typeof;

    if ($$typeof === REACT_FORWARD_REF_TYPE) {
      return ForwardRef;
    }

    if ($$typeof === REACT_MEMO_TYPE) {
      return MemoComponent;
    }
  }

  return IndeterminateComponent;
} // This is used to create an alternate fiber to do work on.

function createWorkInProgress(current, pendingProps, expirationTime) {
  var workInProgress = current.alternate;

  if (workInProgress === null) {
    // We use a double buffering pooling technique because we know that we'll
    // only ever need at most two versions of a tree. We pool the "other" unused
    // node that we're free to reuse. This is lazily created to avoid allocating
    // extra objects for things that are never updated. It also allow us to
    // reclaim the extra memory if needed.
    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
    workInProgress.elementType = current.elementType;
    workInProgress.type = current.type;
    workInProgress.stateNode = current.stateNode;

    {
      // DEV-only fields
      workInProgress._debugID = current._debugID;
      workInProgress._debugSource = current._debugSource;
      workInProgress._debugOwner = current._debugOwner;
      workInProgress._debugHookTypes = current._debugHookTypes;
    }

    workInProgress.alternate = current;
    current.alternate = workInProgress;
  } else {
    workInProgress.pendingProps = pendingProps; // We already have an alternate.
    // Reset the effect tag.

    workInProgress.effectTag = NoEffect; // The effect list is no longer valid.

    workInProgress.nextEffect = null;
    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;

    if (enableProfilerTimer) {
      // We intentionally reset, rather than copy, actualDuration & actualStartTime.
      // This prevents time from endlessly accumulating in new commits.
      // This has the downside of resetting values for different priority renders,
      // But works for yielding (the common case) and should support resuming.
      workInProgress.actualDuration = 0;
      workInProgress.actualStartTime = -1;
    }
  }

  workInProgress.childExpirationTime = current.childExpirationTime;
  workInProgress.expirationTime = current.expirationTime;
  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
  // it cannot be shared with the current fiber.

  var currentDependencies = current.dependencies;
  workInProgress.dependencies = currentDependencies === null ? null : {
    expirationTime: currentDependencies.expirationTime,
    firstContext: currentDependencies.firstContext,
    responders: currentDependencies.responders
  }; // These will be overridden during the parent's reconciliation

  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;

  if (enableProfilerTimer) {
    workInProgress.selfBaseDuration = current.selfBaseDuration;
    workInProgress.treeBaseDuration = current.treeBaseDuration;
  }

  {
    workInProgress._debugNeedsRemount = current._debugNeedsRemount;

    switch (workInProgress.tag) {
      case IndeterminateComponent:
      case FunctionComponent:
      case SimpleMemoComponent:
        workInProgress.type = resolveFunctionForHotReloading(current.type);
        break;

      case ClassComponent:
        workInProgress.type = resolveClassForHotReloading(current.type);
        break;

      case ForwardRef:
        workInProgress.type = resolveForwardRefForHotReloading(current.type);
        break;

      default:
        break;
    }
  }

  return workInProgress;
} // Used to reuse a Fiber for a second pass.

function resetWorkInProgress(workInProgress, renderExpirationTime) {
  // This resets the Fiber to what createFiber or createWorkInProgress would
  // have set the values to before during the first pass. Ideally this wouldn't
  // be necessary but unfortunately many code paths reads from the workInProgress
  // when they should be reading from current and writing to workInProgress.
  // We assume pendingProps, index, key, ref, return are still untouched to
  // avoid doing another reconciliation.
  // Reset the effect tag but keep any Placement tags, since that's something
  // that child fiber is setting, not the reconciliation.
  workInProgress.effectTag &= Placement; // The effect list is no longer valid.

  workInProgress.nextEffect = null;
  workInProgress.firstEffect = null;
  workInProgress.lastEffect = null;
  var current = workInProgress.alternate;

  if (current === null) {
    // Reset to createFiber's initial values.
    workInProgress.childExpirationTime = NoWork;
    workInProgress.expirationTime = renderExpirationTime;
    workInProgress.child = null;
    workInProgress.memoizedProps = null;
    workInProgress.memoizedState = null;
    workInProgress.updateQueue = null;
    workInProgress.dependencies = null;

    if (enableProfilerTimer) {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = 0;
      workInProgress.treeBaseDuration = 0;
    }
  } else {
    // Reset to the cloned values that createWorkInProgress would've.
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
    // it cannot be shared with the current fiber.

    var currentDependencies = current.dependencies;
    workInProgress.dependencies = currentDependencies === null ? null : {
      expirationTime: currentDependencies.expirationTime,
      firstContext: currentDependencies.firstContext,
      responders: currentDependencies.responders
    };

    if (enableProfilerTimer) {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = current.selfBaseDuration;
      workInProgress.treeBaseDuration = current.treeBaseDuration;
    }
  }

  return workInProgress;
}
function createHostRootFiber(tag) {
  var mode;

  if (tag === ConcurrentRoot) {
    mode = ConcurrentMode | BlockingMode | StrictMode;
  } else if (tag === BlockingRoot) {
    mode = BlockingMode | StrictMode;
  } else {
    mode = NoMode;
  }

  if (enableProfilerTimer && isDevToolsPresent) {
    // Always collect profile timings when DevTools are present.
    // This enables DevTools to start capturing timing at any point–
    // Without some nodes in the tree having empty base times.
    mode |= ProfileMode;
  }

  return createFiber(HostRoot, null, null, mode);
}
function createFiberFromTypeAndProps(type, // React$ElementType
key, pendingProps, owner, mode, expirationTime) {
  var fiber;
  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.

  var resolvedType = type;

  if (typeof type === 'function') {
    if (shouldConstruct(type)) {
      fiberTag = ClassComponent;

      {
        resolvedType = resolveClassForHotReloading(resolvedType);
      }
    } else {
      {
        resolvedType = resolveFunctionForHotReloading(resolvedType);
      }
    }
  } else if (typeof type === 'string') {
    fiberTag = HostComponent;
  } else {
    getTag: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = Mode;
        mode |= ConcurrentMode | BlockingMode | StrictMode;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = Mode;
        mode |= StrictMode;
        break;

      case REACT_PROFILER_TYPE:
        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);

      case REACT_SUSPENSE_TYPE:
        return createFiberFromSuspense(pendingProps, mode, expirationTime, key);

      case REACT_SUSPENSE_LIST_TYPE:
        return createFiberFromSuspenseList(pendingProps, mode, expirationTime, key);

      default:
        {
          if (typeof type === 'object' && type !== null) {
            switch (type.$$typeof) {
              case REACT_PROVIDER_TYPE:
                fiberTag = ContextProvider;
                break getTag;

              case REACT_CONTEXT_TYPE:
                // This is a consumer
                fiberTag = ContextConsumer;
                break getTag;

              case REACT_FORWARD_REF_TYPE:
                fiberTag = ForwardRef;

                {
                  resolvedType = resolveForwardRefForHotReloading(resolvedType);
                }

                break getTag;

              case REACT_MEMO_TYPE:
                fiberTag = MemoComponent;
                break getTag;

              case REACT_LAZY_TYPE:
                fiberTag = LazyComponent;
                resolvedType = null;
                break getTag;

              case REACT_FUNDAMENTAL_TYPE:
                if (enableFundamentalAPI) {
                  return createFiberFromFundamental(type, pendingProps, mode, expirationTime, key);
                }

                break;

              case REACT_SCOPE_TYPE:
                if (enableScopeAPI) {
                  return createFiberFromScope(type, pendingProps, mode, expirationTime, key);
                }

            }
          }

          var info = '';

          {
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
            }

            var ownerName = owner ? getComponentName(owner.type) : null;

            if (ownerName) {
              info += '\n\nCheck the render method of `' + ownerName + '`.';
            }
          }

          {
            {
              throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (type == null ? type : typeof type) + "." + info);
            }
          }
        }
    }
  }

  fiber = createFiber(fiberTag, pendingProps, key, mode);
  fiber.elementType = type;
  fiber.type = resolvedType;
  fiber.expirationTime = expirationTime;
  return fiber;
}
function createFiberFromElement(element, mode, expirationTime) {
  var owner = null;

  {
    owner = element._owner;
  }

  var type = element.type;
  var key = element.key;
  var pendingProps = element.props;
  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime);

  {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }

  return fiber;
}
function createFiberFromFragment(elements, mode, expirationTime, key) {
  var fiber = createFiber(Fragment, elements, key, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}
function createFiberFromFundamental(fundamentalComponent, pendingProps, mode, expirationTime, key) {
  var fiber = createFiber(FundamentalComponent, pendingProps, key, mode);
  fiber.elementType = fundamentalComponent;
  fiber.type = fundamentalComponent;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromScope(scope, pendingProps, mode, expirationTime, key) {
  var fiber = createFiber(ScopeComponent, pendingProps, key, mode);
  fiber.type = scope;
  fiber.elementType = scope;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
  {
    if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
      warningWithoutStack$1(false, 'Profiler must specify an "id" string and "onRender" function as props');
    }
  }

  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode); // TODO: The Profiler fiber shouldn't have a type. It has a tag.

  fiber.elementType = REACT_PROFILER_TYPE;
  fiber.type = REACT_PROFILER_TYPE;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromSuspense(pendingProps, mode, expirationTime, key) {
  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode); // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.
  // This needs to be fixed in getComponentName so that it relies on the tag
  // instead.

  fiber.type = REACT_SUSPENSE_TYPE;
  fiber.elementType = REACT_SUSPENSE_TYPE;
  fiber.expirationTime = expirationTime;
  return fiber;
}
function createFiberFromSuspenseList(pendingProps, mode, expirationTime, key) {
  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);

  {
    // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.
    // This needs to be fixed in getComponentName so that it relies on the tag
    // instead.
    fiber.type = REACT_SUSPENSE_LIST_TYPE;
  }

  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
  fiber.expirationTime = expirationTime;
  return fiber;
}
function createFiberFromText(content, mode, expirationTime) {
  var fiber = createFiber(HostText, content, null, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}
function createFiberFromHostInstanceForDeletion() {
  var fiber = createFiber(HostComponent, null, null, NoMode); // TODO: These should not need a type.

  fiber.elementType = 'DELETED';
  fiber.type = 'DELETED';
  return fiber;
}
function createFiberFromDehydratedFragment(dehydratedNode) {
  var fiber = createFiber(DehydratedFragment, null, null, NoMode);
  fiber.stateNode = dehydratedNode;
  return fiber;
}
function createFiberFromPortal(portal, mode, expirationTime) {
  var pendingProps = portal.children !== null ? portal.children : [];
  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
  fiber.expirationTime = expirationTime;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null,
    // Used by persistent updates
    implementation: portal.implementation
  };
  return fiber;
} // Used for stashing WIP properties to replay failed work in DEV.

function assignFiberPropertiesInDEV(target, source) {
  if (target === null) {
    // This Fiber's initial properties will always be overwritten.
    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
    target = createFiber(IndeterminateComponent, null, null, NoMode);
  } // This is intentionally written as a list of all properties.
  // We tried to use Object.assign() instead but this is called in
  // the hottest path, and Object.assign() was too slow:
  // https://github.com/facebook/react/issues/12502
  // This code is DEV-only so size is not a concern.


  target.tag = source.tag;
  target.key = source.key;
  target.elementType = source.elementType;
  target.type = source.type;
  target.stateNode = source.stateNode;
  target.return = source.return;
  target.child = source.child;
  target.sibling = source.sibling;
  target.index = source.index;
  target.ref = source.ref;
  target.pendingProps = source.pendingProps;
  target.memoizedProps = source.memoizedProps;
  target.updateQueue = source.updateQueue;
  target.memoizedState = source.memoizedState;
  target.dependencies = source.dependencies;
  target.mode = source.mode;
  target.effectTag = source.effectTag;
  target.nextEffect = source.nextEffect;
  target.firstEffect = source.firstEffect;
  target.lastEffect = source.lastEffect;
  target.expirationTime = source.expirationTime;
  target.childExpirationTime = source.childExpirationTime;
  target.alternate = source.alternate;

  if (enableProfilerTimer) {
    target.actualDuration = source.actualDuration;
    target.actualStartTime = source.actualStartTime;
    target.selfBaseDuration = source.selfBaseDuration;
    target.treeBaseDuration = source.treeBaseDuration;
  }

  target._debugID = source._debugID;
  target._debugSource = source._debugSource;
  target._debugOwner = source._debugOwner;
  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
  target._debugNeedsRemount = source._debugNeedsRemount;
  target._debugHookTypes = source._debugHookTypes;
  return target;
}

function FiberRootNode(containerInfo, tag, hydrate) {
  this.tag = tag;
  this.current = null;
  this.containerInfo = containerInfo;
  this.pendingChildren = null;
  this.pingCache = null;
  this.finishedExpirationTime = NoWork;
  this.finishedWork = null;
  this.timeoutHandle = noTimeout;
  this.context = null;
  this.pendingContext = null;
  this.hydrate = hydrate;
  this.callbackNode = null;
  this.callbackPriority = NoPriority;
  this.firstPendingTime = NoWork;
  this.firstSuspendedTime = NoWork;
  this.lastSuspendedTime = NoWork;
  this.nextKnownPendingLevel = NoWork;
  this.lastPingedTime = NoWork;
  this.lastExpiredTime = NoWork;

  if (enableSchedulerTracing) {
    this.interactionThreadID = unstable_getThreadID();
    this.memoizedInteractions = new Set();
    this.pendingInteractionMap = new Map();
  }

  if (enableSuspenseCallback) {
    this.hydrationCallbacks = null;
  }
}

function createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks) {
  var root = new FiberRootNode(containerInfo, tag, hydrate);

  if (enableSuspenseCallback) {
    root.hydrationCallbacks = hydrationCallbacks;
  } // Cyclic construction. This cheats the type system right now because
  // stateNode is any.


  var uninitializedFiber = createHostRootFiber(tag);
  root.current = uninitializedFiber;
  uninitializedFiber.stateNode = root;
  return root;
}
function isRootSuspendedAtTime(root, expirationTime) {
  var firstSuspendedTime = root.firstSuspendedTime;
  var lastSuspendedTime = root.lastSuspendedTime;
  return firstSuspendedTime !== NoWork && firstSuspendedTime >= expirationTime && lastSuspendedTime <= expirationTime;
}
function markRootSuspendedAtTime(root, expirationTime) {
  var firstSuspendedTime = root.firstSuspendedTime;
  var lastSuspendedTime = root.lastSuspendedTime;

  if (firstSuspendedTime < expirationTime) {
    root.firstSuspendedTime = expirationTime;
  }

  if (lastSuspendedTime > expirationTime || firstSuspendedTime === NoWork) {
    root.lastSuspendedTime = expirationTime;
  }

  if (expirationTime <= root.lastPingedTime) {
    root.lastPingedTime = NoWork;
  }

  if (expirationTime <= root.lastExpiredTime) {
    root.lastExpiredTime = NoWork;
  }
}
function markRootUpdatedAtTime(root, expirationTime) {
  // Update the range of pending times
  var firstPendingTime = root.firstPendingTime;

  if (expirationTime > firstPendingTime) {
    root.firstPendingTime = expirationTime;
  } // Update the range of suspended times. Treat everything lower priority or
  // equal to this update as unsuspended.


  var firstSuspendedTime = root.firstSuspendedTime;

  if (firstSuspendedTime !== NoWork) {
    if (expirationTime >= firstSuspendedTime) {
      // The entire suspended range is now unsuspended.
      root.firstSuspendedTime = root.lastSuspendedTime = root.nextKnownPendingLevel = NoWork;
    } else if (expirationTime >= root.lastSuspendedTime) {
      root.lastSuspendedTime = expirationTime + 1;
    } // This is a pending level. Check if it's higher priority than the next
    // known pending level.


    if (expirationTime > root.nextKnownPendingLevel) {
      root.nextKnownPendingLevel = expirationTime;
    }
  }
}
function markRootFinishedAtTime(root, finishedExpirationTime, remainingExpirationTime) {
  // Update the range of pending times
  root.firstPendingTime = remainingExpirationTime; // Update the range of suspended times. Treat everything higher priority or
  // equal to this update as unsuspended.

  if (finishedExpirationTime <= root.lastSuspendedTime) {
    // The entire suspended range is now unsuspended.
    root.firstSuspendedTime = root.lastSuspendedTime = root.nextKnownPendingLevel = NoWork;
  } else if (finishedExpirationTime <= root.firstSuspendedTime) {
    // Part of the suspended range is now unsuspended. Narrow the range to
    // include everything between the unsuspended time (non-inclusive) and the
    // last suspended time.
    root.firstSuspendedTime = finishedExpirationTime - 1;
  }

  if (finishedExpirationTime <= root.lastPingedTime) {
    // Clear the pinged time
    root.lastPingedTime = NoWork;
  }

  if (finishedExpirationTime <= root.lastExpiredTime) {
    // Clear the expired time
    root.lastExpiredTime = NoWork;
  }
}
function markRootExpiredAtTime(root, expirationTime) {
  var lastExpiredTime = root.lastExpiredTime;

  if (lastExpiredTime === NoWork || lastExpiredTime > expirationTime) {
    root.lastExpiredTime = expirationTime;
  }
}

// This lets us hook into Fiber to debug what it's doing.
// See https://github.com/facebook/react/pull/8033.
// This is not part of the public API, not even for React DevTools.
// You may only inject a debugTool if you work on React Fiber itself.
var ReactFiberInstrumentation = {
  debugTool: null
};
var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

var didWarnAboutNestedUpdates;
var didWarnAboutFindNodeInStrictMode;

{
  didWarnAboutNestedUpdates = false;
  didWarnAboutFindNodeInStrictMode = {};
}

function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyContextObject;
  }

  var fiber = get(parentComponent);
  var parentContext = findCurrentUnmaskedContext(fiber);

  if (fiber.tag === ClassComponent) {
    var Component = fiber.type;

    if (isContextProvider(Component)) {
      return processChildContext(fiber, Component, parentContext);
    }
  }

  return parentContext;
}

function findHostInstance(component) {
  var fiber = get(component);

  if (fiber === undefined) {
    if (typeof component.render === 'function') {
      {
        {
          throw Error("Unable to find node on an unmounted component.");
        }
      }
    } else {
      {
        {
          throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
        }
      }
    }
  }

  var hostFiber = findCurrentHostFiber(fiber);

  if (hostFiber === null) {
    return null;
  }

  return hostFiber.stateNode;
}

function findHostInstanceWithWarning(component, methodName) {
  {
    var fiber = get(component);

    if (fiber === undefined) {
      if (typeof component.render === 'function') {
        {
          {
            throw Error("Unable to find node on an unmounted component.");
          }
        }
      } else {
        {
          {
            throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
          }
        }
      }
    }

    var hostFiber = findCurrentHostFiber(fiber);

    if (hostFiber === null) {
      return null;
    }

    if (hostFiber.mode & StrictMode) {
      var componentName = getComponentName(fiber.type) || 'Component';

      if (!didWarnAboutFindNodeInStrictMode[componentName]) {
        didWarnAboutFindNodeInStrictMode[componentName] = true;

        if (fiber.mode & StrictMode) {
          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-find-node%s', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
        } else {
          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-find-node%s', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
        }
      }
    }

    return hostFiber.stateNode;
  }

  return findHostInstance(component);
}

function createContainer(containerInfo, tag, hydrate, hydrationCallbacks) {
  return createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks);
}
function updateContainer(element, container, parentComponent, callback) {
  var current$$1 = container.current;
  var currentTime = requestCurrentTimeForUpdate();

  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfUnmockedScheduler(current$$1);
      warnIfNotScopedWithMatchingAct(current$$1);
    }
  }

  var suspenseConfig = requestCurrentSuspenseConfig();
  var expirationTime = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);

  {
    if (ReactFiberInstrumentation_1.debugTool) {
      if (current$$1.alternate === null) {
        ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
      } else if (element === null) {
        ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
      } else {
        ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
      }
    }
  }

  var context = getContextForSubtree(parentComponent);

  if (container.context === null) {
    container.context = context;
  } else {
    container.pendingContext = context;
  }

  {
    if (phase === 'render' && current !== null && !didWarnAboutNestedUpdates) {
      didWarnAboutNestedUpdates = true;
      warningWithoutStack$1(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');
    }
  }

  var update = createUpdate(expirationTime, suspenseConfig); // Caution: React DevTools currently depends on this property
  // being called "element".

  update.payload = {
    element: element
  };
  callback = callback === undefined ? null : callback;

  if (callback !== null) {
    !(typeof callback === 'function') ? warningWithoutStack$1(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
    update.callback = callback;
  }

  enqueueUpdate(current$$1, update);
  scheduleWork(current$$1, expirationTime);
  return expirationTime;
}
function getPublicRootInstance(container) {
  var containerFiber = container.current;

  if (!containerFiber.child) {
    return null;
  }

  switch (containerFiber.child.tag) {
    case HostComponent:
      return getPublicInstance(containerFiber.child.stateNode);

    default:
      return containerFiber.child.stateNode;
  }
}
function attemptSynchronousHydration$1(fiber) {
  switch (fiber.tag) {
    case HostRoot:
      var root = fiber.stateNode;

      if (root.hydrate) {
        // Flush the first scheduled "update".
        flushRoot(root, root.firstPendingTime);
      }

      break;

    case SuspenseComponent:
      flushSync(function () {
        return scheduleWork(fiber, Sync);
      }); // If we're still blocked after this, we need to increase
      // the priority of any promises resolving within this
      // boundary so that they next attempt also has higher pri.

      var retryExpTime = computeInteractiveExpiration(requestCurrentTimeForUpdate());
      markRetryTimeIfNotHydrated(fiber, retryExpTime);
      break;
  }
}

function markRetryTimeImpl(fiber, retryTime) {
  var suspenseState = fiber.memoizedState;

  if (suspenseState !== null && suspenseState.dehydrated !== null) {
    if (suspenseState.retryTime < retryTime) {
      suspenseState.retryTime = retryTime;
    }
  }
} // Increases the priority of thennables when they resolve within this boundary.


function markRetryTimeIfNotHydrated(fiber, retryTime) {
  markRetryTimeImpl(fiber, retryTime);
  var alternate = fiber.alternate;

  if (alternate) {
    markRetryTimeImpl(alternate, retryTime);
  }
}

function attemptUserBlockingHydration$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority and they should not suspend on I/O,
    // since you have to wrap anything that might suspend in
    // Suspense.
    return;
  }

  var expTime = computeInteractiveExpiration(requestCurrentTimeForUpdate());
  scheduleWork(fiber, expTime);
  markRetryTimeIfNotHydrated(fiber, expTime);
}
function attemptContinuousHydration$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority and they should not suspend on I/O,
    // since you have to wrap anything that might suspend in
    // Suspense.
    return;
  }

  var expTime = computeContinuousHydrationExpiration(requestCurrentTimeForUpdate());
  scheduleWork(fiber, expTime);
  markRetryTimeIfNotHydrated(fiber, expTime);
}
function attemptHydrationAtCurrentPriority$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority other than synchronously flush it.
    return;
  }

  var currentTime = requestCurrentTimeForUpdate();
  var expTime = computeExpirationForFiber(currentTime, fiber, null);
  scheduleWork(fiber, expTime);
  markRetryTimeIfNotHydrated(fiber, expTime);
}
function findHostInstanceWithNoPortals(fiber) {
  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);

  if (hostFiber === null) {
    return null;
  }

  if (hostFiber.tag === FundamentalComponent) {
    return hostFiber.stateNode.instance;
  }

  return hostFiber.stateNode;
}

var shouldSuspendImpl = function (fiber) {
  return false;
};

function shouldSuspend(fiber) {
  return shouldSuspendImpl(fiber);
}
var overrideHookState = null;
var overrideProps = null;
var scheduleUpdate = null;
var setSuspenseHandler = null;

{
  var copyWithSetImpl = function (obj, path, idx, value) {
    if (idx >= path.length) {
      return value;
    }

    var key = path[idx];
    var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj); // $FlowFixMe number or string is fine here

    updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);
    return updated;
  };

  var copyWithSet = function (obj, path, value) {
    return copyWithSetImpl(obj, path, 0, value);
  }; // Support DevTools editable values for useState and useReducer.


  overrideHookState = function (fiber, id, path, value) {
    // For now, the "id" of stateful hooks is just the stateful hook index.
    // This may change in the future with e.g. nested hooks.
    var currentHook = fiber.memoizedState;

    while (currentHook !== null && id > 0) {
      currentHook = currentHook.next;
      id--;
    }

    if (currentHook !== null) {
      var newState = copyWithSet(currentHook.memoizedState, path, value);
      currentHook.memoizedState = newState;
      currentHook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = _assign({}, fiber.memoizedProps);
      scheduleWork(fiber, Sync);
    }
  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.


  overrideProps = function (fiber, path, value) {
    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    scheduleWork(fiber, Sync);
  };

  scheduleUpdate = function (fiber) {
    scheduleWork(fiber, Sync);
  };

  setSuspenseHandler = function (newShouldSuspendImpl) {
    shouldSuspendImpl = newShouldSuspendImpl;
  };
}

function injectIntoDevTools(devToolsConfig) {
  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
  return injectInternals(_assign({}, devToolsConfig, {
    overrideHookState: overrideHookState,
    overrideProps: overrideProps,
    setSuspenseHandler: setSuspenseHandler,
    scheduleUpdate: scheduleUpdate,
    currentDispatcherRef: ReactCurrentDispatcher,
    findHostInstanceByFiber: function (fiber) {
      var hostFiber = findCurrentHostFiber(fiber);

      if (hostFiber === null) {
        return null;
      }

      return hostFiber.stateNode;
    },
    findFiberByHostInstance: function (instance) {
      if (!findFiberByHostInstance) {
        // Might not be implemented by the renderer.
        return null;
      }

      return findFiberByHostInstance(instance);
    },
    // React Refresh
    findHostInstancesForRefresh: findHostInstancesForRefresh,
    scheduleRefresh: scheduleRefresh,
    scheduleRoot: scheduleRoot,
    setRefreshHandler: setRefreshHandler,
    // Enables DevTools to append owner stacks to error messages in DEV mode.
    getCurrentFiber: function () {
      return current;
    }
  }));
}

// This file intentionally does *not* have the Flow annotation.
// Don't add it. See `./inline-typed.js` for an explanation.

// TODO: This type is shared between the reconciler and ReactDOM, but will
// eventually be lifted out to the renderer.
function ReactDOMRoot(container, options) {
  this._internalRoot = createRootImpl(container, ConcurrentRoot, options);
}

function ReactDOMBlockingRoot(container, tag, options) {
  this._internalRoot = createRootImpl(container, tag, options);
}

ReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function (children, callback) {
  var root = this._internalRoot;
  var cb = callback === undefined ? null : callback;

  {
    warnOnInvalidCallback(cb, 'render');
  }

  updateContainer(children, root, null, cb);
};

ReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function (callback) {
  var root = this._internalRoot;
  var cb = callback === undefined ? null : callback;

  {
    warnOnInvalidCallback(cb, 'render');
  }

  var container = root.containerInfo;
  updateContainer(null, root, null, function () {
    unmarkContainerAsRoot(container);

    if (cb !== null) {
      cb();
    }
  });
};

function createRootImpl(container, tag, options) {
  // Tag is either LegacyRoot or Concurrent Root
  var hydrate = options != null && options.hydrate === true;
  var hydrationCallbacks = options != null && options.hydrationOptions || null;
  var root = createContainer(container, tag, hydrate, hydrationCallbacks);
  markContainerAsRoot(root.current, container);

  if (hydrate && tag !== LegacyRoot) {
    var doc = container.nodeType === DOCUMENT_NODE ? container : container.ownerDocument;
    eagerlyTrapReplayableEvents(doc);
  }

  return root;
}

function createRoot(container, options) {
  if (!isValidContainer(container)) {
    {
      throw Error("createRoot(...): Target container is not a DOM element.");
    }
  }

  warnIfReactDOMContainerInDEV(container);
  return new ReactDOMRoot(container, options);
}
function createBlockingRoot(container, options) {
  if (!isValidContainer(container)) {
    {
      throw Error("createRoot(...): Target container is not a DOM element.");
    }
  }

  warnIfReactDOMContainerInDEV(container);
  return new ReactDOMBlockingRoot(container, BlockingRoot, options);
}
function createLegacyRoot(container, options) {
  return new ReactDOMBlockingRoot(container, LegacyRoot, options);
}
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
}
function warnOnInvalidCallback(callback, callerName) {
  {
    !(callback === null || typeof callback === 'function') ? warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
  }
}

function warnIfReactDOMContainerInDEV(container) {
  {
    if (isContainerMarkedAsRoot(container)) {
      if (container._reactRootContainer) {
        warningWithoutStack$1(false, 'You are calling ReactDOM.createRoot() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.');
      } else {
        warningWithoutStack$1(false, 'You are calling ReactDOM.createRoot() on a container that ' + 'has already been passed to createRoot() before. Instead, call ' + 'root.render() on the existing root instead if you want to update it.');
      }
    }
  }
}

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
var topLevelUpdateWarnings;
var warnedAboutHydrateAPI = false;

{
  topLevelUpdateWarnings = function (container) {
    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);

      if (hostInstance) {
        !(hostInstance.parentNode === container) ? warningWithoutStack$1(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
      }
    }

    var isRootRenderedBySomeReact = !!container._reactRootContainer;
    var rootEl = getReactRootElementInContainer(container);
    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));
    !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warningWithoutStack$1(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
    !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warningWithoutStack$1(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
  };
}

function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOCUMENT_NODE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function shouldHydrateDueToLegacyHeuristic(container) {
  var rootElement = getReactRootElementInContainer(container);
  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
}

function legacyCreateRootFromDOMContainer(container, forceHydrate) {
  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container); // First clear any existing content.

  if (!shouldHydrate) {
    var warned = false;
    var rootSibling;

    while (rootSibling = container.lastChild) {
      {
        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
          warned = true;
          warningWithoutStack$1(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
        }
      }

      container.removeChild(rootSibling);
    }
  }

  {
    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
      warnedAboutHydrateAPI = true;
      lowPriorityWarningWithoutStack$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
    }
  }

  return createLegacyRoot(container, shouldHydrate ? {
    hydrate: true
  } : undefined);
}

function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
  {
    topLevelUpdateWarnings(container);
    warnOnInvalidCallback(callback === undefined ? null : callback, 'render');
  } // TODO: Without `any` type, Flow says "Property cannot be accessed on any
  // member of intersection type." Whyyyyyy.


  var root = container._reactRootContainer;
  var fiberRoot;

  if (!root) {
    // Initial mount
    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
    fiberRoot = root._internalRoot;

    if (typeof callback === 'function') {
      var originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(fiberRoot);
        originalCallback.call(instance);
      };
    } // Initial mount should not be batched.


    unbatchedUpdates(function () {
      updateContainer(children, fiberRoot, parentComponent, callback);
    });
  } else {
    fiberRoot = root._internalRoot;

    if (typeof callback === 'function') {
      var _originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(fiberRoot);

        _originalCallback.call(instance);
      };
    } // Update


    updateContainer(children, fiberRoot, parentComponent, callback);
  }

  return getPublicRootInstance(fiberRoot);
}

function findDOMNode(componentOrElement) {
  {
    var owner = ReactCurrentOwner$1.current;

    if (owner !== null && owner.stateNode !== null) {
      var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
      !warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component') : void 0;
      owner.stateNode._warnedAboutRefsInRender = true;
    }
  }

  if (componentOrElement == null) {
    return null;
  }

  if (componentOrElement.nodeType === ELEMENT_NODE) {
    return componentOrElement;
  }

  {
    return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
  }

  return findHostInstance(componentOrElement);
}
function hydrate(element, container, callback) {
  if (!isValidContainer(container)) {
    {
      throw Error("Target container is not a DOM element.");
    }
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      warningWithoutStack$1(false, 'You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?');
    }
  } // TODO: throw or warn if we couldn't hydrate?


  return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
}
function render(element, container, callback) {
  if (!isValidContainer(container)) {
    {
      throw Error("Target container is not a DOM element.");
    }
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      warningWithoutStack$1(false, 'You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. ' + 'Did you mean to call root.render(element)?');
    }
  }

  return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
}
function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
  if (!isValidContainer(containerNode)) {
    {
      throw Error("Target container is not a DOM element.");
    }
  }

  if (!(parentComponent != null && has$1(parentComponent))) {
    {
      throw Error("parentComponent must be a valid React Component");
    }
  }

  return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
}
function unmountComponentAtNode(container) {
  if (!isValidContainer(container)) {
    {
      throw Error("unmountComponentAtNode(...): Target container is not a DOM element.");
    }
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      warningWithoutStack$1(false, 'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.unmount()?');
    }
  }

  if (container._reactRootContainer) {
    {
      var rootEl = getReactRootElementInContainer(container);
      var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
      !!renderedByDifferentReact ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
    } // Unmount should not be batched.


    unbatchedUpdates(function () {
      legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
        container._reactRootContainer = null;
        unmarkContainerAsRoot(container);
      });
    }); // If you call unmountComponentAtNode twice in quick succession, you'll
    // get `true` twice. That's probably fine?

    return true;
  } else {
    {
      var _rootEl = getReactRootElementInContainer(container);

      var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl)); // Check if the container itself is a React root node.

      var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;
      !!hasNonRootReactChild ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
    }

    return false;
  }
}

function createPortal$1(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.
implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  return {
    // This tag allow us to uniquely identify this as a React Portal
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.12.0';

setAttemptSynchronousHydration(attemptSynchronousHydration$1);
setAttemptUserBlockingHydration(attemptUserBlockingHydration$1);
setAttemptContinuousHydration(attemptContinuousHydration$1);
setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
var didWarnAboutUnstableCreatePortal = false;

{
  if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype
  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype
  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
    warningWithoutStack$1(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
  }
}

setRestoreImplementation(restoreControlledState$$1);
setBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);

function createPortal$$1(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  if (!isValidContainer(container)) {
    {
      throw Error("Target container is not a DOM element.");
    }
  } // TODO: pass ReactDOM portal implementation as third argument


  return createPortal$1(children, container, null, key);
}

var ReactDOM = {
  createPortal: createPortal$$1,
  // Legacy
  findDOMNode: findDOMNode,
  hydrate: hydrate,
  render: render,
  unstable_renderSubtreeIntoContainer: unstable_renderSubtreeIntoContainer,
  unmountComponentAtNode: unmountComponentAtNode,
  // Temporary alias since we already shipped React 16 RC with it.
  // TODO: remove in React 17.
  unstable_createPortal: function () {
    if (!didWarnAboutUnstableCreatePortal) {
      didWarnAboutUnstableCreatePortal = true;
      lowPriorityWarningWithoutStack$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
    }

    return createPortal$$1.apply(void 0, arguments);
  },
  unstable_batchedUpdates: batchedUpdates$1,
  flushSync: flushSync,
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    // Keep in sync with ReactDOMUnstableNativeDependencies.js
    // ReactTestUtils.js, and ReactTestUtilsAct.js. This is an array for better minification.
    Events: [getInstanceFromNode$1, getNodeFromInstance$1, getFiberCurrentPropsFromNode$1, injection.injectEventPluginsByName, eventNameDispatchConfigs, accumulateTwoPhaseDispatches, accumulateDirectDispatches, enqueueStateRestore, restoreStateIfNeeded, dispatchEvent, runEventsInBatch, flushPassiveEffects, IsThisRendererActing]
  }
};

if (exposeConcurrentModeAPIs) {
  ReactDOM.createRoot = createRoot;
  ReactDOM.createBlockingRoot = createBlockingRoot;
  ReactDOM.unstable_discreteUpdates = discreteUpdates$1;
  ReactDOM.unstable_flushDiscreteUpdates = flushDiscreteUpdates;
  ReactDOM.unstable_flushControlled = flushControlled;

  ReactDOM.unstable_scheduleHydration = function (target) {
    if (target) {
      queueExplicitHydrationTarget(target);
    }
  };
}

var foundDevTools = injectIntoDevTools({
  findFiberByHostInstance: getClosestInstanceFromNode,
  bundleType: 1,
  version: ReactVersion,
  rendererPackageName: 'react-dom'
});

{
  if (!foundDevTools && canUseDOM && window.top === window.self) {
    // If we're in Chrome or Firefox, provide a download link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
      var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.

      if (/^(https?|file):$/.test(protocol)) {
        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
      }
    }
  }
}



var ReactDOM$2 = Object.freeze({
	default: ReactDOM
});

var ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.


var reactDom = ReactDOM$3.default || ReactDOM$3;

return reactDom;

})));

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).Babel={})}(this,(function(e){"use strict";var t=Object.freeze({__proto__:null,get types(){return Sf},get DEFAULT_EXTENSIONS(){return sF},get OptionManager(){return uF},get Plugin(){return lF},get File(){return Tx},get buildExternalHelpers(){return Ox},get resolvePlugin(){return Mx},get resolvePreset(){return Rx},get version(){return Ux},get getEnv(){return Vx},get tokTypes(){return iE},get traverse(){return JD},get template(){return nD},get createConfigItem(){return vT},get loadPartialConfig(){return KC},get loadOptions(){return nw},get transform(){return JP},get transformSync(){return YP},get transformAsync(){return $P},get transformFile(){return QP},get transformFileSync(){return ZP},get transformFileAsync(){return eF},get transformFromAst(){return tF},get transformFromAstSync(){return nF},get transformFromAstAsync(){return rF},get parse(){return iF},get parseSync(){return aF},get parseAsync(){return oF}});function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}function i(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function a(e,t){return t||(t=e.slice(0)),e.raw=t,e}function o(e,t){for(var n=0,r=Object.keys(t);n<r.length;n++){var i=r[n];if(e[i]!==t[i])return!1}return!0}function s(e,t){return!!e&&("ArrayExpression"===e.type&&(void 0===t||o(e,t)))}function u(e,t){return!!e&&("AssignmentExpression"===e.type&&(void 0===t||o(e,t)))}function l(e,t){return!!e&&("BinaryExpression"===e.type&&(void 0===t||o(e,t)))}function c(e,t){return!!e&&("BlockStatement"===e.type&&(void 0===t||o(e,t)))}function p(e,t){return!!e&&("BreakStatement"===e.type&&(void 0===t||o(e,t)))}function h(e,t){return!!e&&("CallExpression"===e.type&&(void 0===t||o(e,t)))}function f(e,t){return!!e&&("CatchClause"===e.type&&(void 0===t||o(e,t)))}function d(e,t){return!!e&&("ConditionalExpression"===e.type&&(void 0===t||o(e,t)))}function m(e,t){return!!e&&("ContinueStatement"===e.type&&(void 0===t||o(e,t)))}function y(e,t){return!!e&&("EmptyStatement"===e.type&&(void 0===t||o(e,t)))}function v(e,t){return!!e&&("ExpressionStatement"===e.type&&(void 0===t||o(e,t)))}function g(e,t){return!!e&&("File"===e.type&&(void 0===t||o(e,t)))}function b(e,t){return!!e&&("ForInStatement"===e.type&&(void 0===t||o(e,t)))}function E(e,t){return!!e&&("ForStatement"===e.type&&(void 0===t||o(e,t)))}function A(e,t){return!!e&&("FunctionDeclaration"===e.type&&(void 0===t||o(e,t)))}function D(e,t){return!!e&&("FunctionExpression"===e.type&&(void 0===t||o(e,t)))}function S(e,t){return!!e&&("Identifier"===e.type&&(void 0===t||o(e,t)))}function x(e,t){return!!e&&("IfStatement"===e.type&&(void 0===t||o(e,t)))}function T(e,t){return!!e&&("LabeledStatement"===e.type&&(void 0===t||o(e,t)))}function C(e,t){return!!e&&("StringLiteral"===e.type&&(void 0===t||o(e,t)))}function w(e,t){return!!e&&("NumericLiteral"===e.type&&(void 0===t||o(e,t)))}function P(e,t){return!!e&&("NullLiteral"===e.type&&(void 0===t||o(e,t)))}function F(e,t){return!!e&&("RegExpLiteral"===e.type&&(void 0===t||o(e,t)))}function k(e,t){return!!e&&("LogicalExpression"===e.type&&(void 0===t||o(e,t)))}function _(e,t){return!!e&&("MemberExpression"===e.type&&(void 0===t||o(e,t)))}function I(e,t){return!!e&&("NewExpression"===e.type&&(void 0===t||o(e,t)))}function O(e,t){return!!e&&("Program"===e.type&&(void 0===t||o(e,t)))}function B(e,t){return!!e&&("ObjectExpression"===e.type&&(void 0===t||o(e,t)))}function N(e,t){return!!e&&("ObjectMethod"===e.type&&(void 0===t||o(e,t)))}function M(e,t){return!!e&&("ObjectProperty"===e.type&&(void 0===t||o(e,t)))}function R(e,t){return!!e&&("RestElement"===e.type&&(void 0===t||o(e,t)))}function L(e,t){return!!e&&("ReturnStatement"===e.type&&(void 0===t||o(e,t)))}function j(e,t){return!!e&&("SequenceExpression"===e.type&&(void 0===t||o(e,t)))}function U(e,t){return!!e&&("SwitchStatement"===e.type&&(void 0===t||o(e,t)))}function V(e,t){return!!e&&("ThisExpression"===e.type&&(void 0===t||o(e,t)))}function W(e,t){return!!e&&("ThrowStatement"===e.type&&(void 0===t||o(e,t)))}function G(e,t){return!!e&&("UnaryExpression"===e.type&&(void 0===t||o(e,t)))}function H(e,t){return!!e&&("VariableDeclaration"===e.type&&(void 0===t||o(e,t)))}function q(e,t){return!!e&&("VariableDeclarator"===e.type&&(void 0===t||o(e,t)))}function K(e,t){return!!e&&("WhileStatement"===e.type&&(void 0===t||o(e,t)))}function X(e,t){return!!e&&("AssignmentPattern"===e.type&&(void 0===t||o(e,t)))}function z(e,t){return!!e&&("ArrayPattern"===e.type&&(void 0===t||o(e,t)))}function J(e,t){return!!e&&("ArrowFunctionExpression"===e.type&&(void 0===t||o(e,t)))}function Y(e,t){return!!e&&("ClassBody"===e.type&&(void 0===t||o(e,t)))}function $(e,t){return!!e&&("ClassDeclaration"===e.type&&(void 0===t||o(e,t)))}function Q(e,t){return!!e&&("ClassExpression"===e.type&&(void 0===t||o(e,t)))}function Z(e,t){return!!e&&("ExportAllDeclaration"===e.type&&(void 0===t||o(e,t)))}function ee(e,t){return!!e&&("ExportDefaultDeclaration"===e.type&&(void 0===t||o(e,t)))}function te(e,t){return!!e&&("ExportNamedDeclaration"===e.type&&(void 0===t||o(e,t)))}function ne(e,t){return!!e&&("ExportSpecifier"===e.type&&(void 0===t||o(e,t)))}function re(e,t){return!!e&&("ImportDeclaration"===e.type&&(void 0===t||o(e,t)))}function ie(e,t){return!!e&&("ImportDefaultSpecifier"===e.type&&(void 0===t||o(e,t)))}function ae(e,t){return!!e&&("ImportNamespaceSpecifier"===e.type&&(void 0===t||o(e,t)))}function oe(e,t){return!!e&&("ImportSpecifier"===e.type&&(void 0===t||o(e,t)))}function se(e,t){return!!e&&("ClassMethod"===e.type&&(void 0===t||o(e,t)))}function ue(e,t){return!!e&&("ObjectPattern"===e.type&&(void 0===t||o(e,t)))}function le(e,t){return!!e&&("SpreadElement"===e.type&&(void 0===t||o(e,t)))}function ce(e,t){return!!e&&("Super"===e.type&&(void 0===t||o(e,t)))}function pe(e,t){return!!e&&("TaggedTemplateExpression"===e.type&&(void 0===t||o(e,t)))}function he(e,t){return!!e&&("TemplateLiteral"===e.type&&(void 0===t||o(e,t)))}function fe(e,t){return!!e&&("YieldExpression"===e.type&&(void 0===t||o(e,t)))}function de(e,t){return!!e&&("AnyTypeAnnotation"===e.type&&(void 0===t||o(e,t)))}function me(e,t){return!!e&&("ArrayTypeAnnotation"===e.type&&(void 0===t||o(e,t)))}function ye(e,t){return!!e&&("BooleanTypeAnnotation"===e.type&&(void 0===t||o(e,t)))}function ve(e,t){return!!e&&("DeclareExportDeclaration"===e.type&&(void 0===t||o(e,t)))}function ge(e,t){return!!e&&("GenericTypeAnnotation"===e.type&&(void 0===t||o(e,t)))}function be(e,t){return!!e&&("IntersectionTypeAnnotation"===e.type&&(void 0===t||o(e,t)))}function Ee(e,t){return!!e&&("MixedTypeAnnotation"===e.type&&(void 0===t||o(e,t)))}function Ae(e,t){return!!e&&("EmptyTypeAnnotation"===e.type&&(void 0===t||o(e,t)))}function De(e,t){return!!e&&("NullableTypeAnnotation"===e.type&&(void 0===t||o(e,t)))}function Se(e,t){return!!e&&("NumberTypeAnnotation"===e.type&&(void 0===t||o(e,t)))}function xe(e,t){return!!e&&("StringTypeAnnotation"===e.type&&(void 0===t||o(e,t)))}function Te(e,t){return!!e&&("TypeAnnotation"===e.type&&(void 0===t||o(e,t)))}function Ce(e,t){return!!e&&("TypeCastExpression"===e.type&&(void 0===t||o(e,t)))}function we(e,t){return!!e&&("UnionTypeAnnotation"===e.type&&(void 0===t||o(e,t)))}function Pe(e,t){return!!e&&("VoidTypeAnnotation"===e.type&&(void 0===t||o(e,t)))}function Fe(e,t){return!!e&&("JSXAttribute"===e.type&&(void 0===t||o(e,t)))}function ke(e,t){return!!e&&("JSXElement"===e.type&&(void 0===t||o(e,t)))}function _e(e,t){return!!e&&("JSXEmptyExpression"===e.type&&(void 0===t||o(e,t)))}function Ie(e,t){return!!e&&("JSXExpressionContainer"===e.type&&(void 0===t||o(e,t)))}function Oe(e,t){return!!e&&("JSXIdentifier"===e.type&&(void 0===t||o(e,t)))}function Be(e,t){return!!e&&("JSXMemberExpression"===e.type&&(void 0===t||o(e,t)))}function Ne(e,t){return!!e&&("JSXNamespacedName"===e.type&&(void 0===t||o(e,t)))}function Me(e,t){return!!e&&("JSXSpreadAttribute"===e.type&&(void 0===t||o(e,t)))}function Re(e,t){return!!e&&("JSXText"===e.type&&(void 0===t||o(e,t)))}function Le(e,t){return!!e&&("Placeholder"===e.type&&(void 0===t||o(e,t)))}function je(e,t){return!!e&&("AwaitExpression"===e.type&&(void 0===t||o(e,t)))}function Ue(e,t){return!!e&&("BindExpression"===e.type&&(void 0===t||o(e,t)))}function Ve(e,t){return!!e&&("ClassProperty"===e.type&&(void 0===t||o(e,t)))}function We(e,t){return!!e&&("OptionalMemberExpression"===e.type&&(void 0===t||o(e,t)))}function Ge(e,t){return!!e&&("PipelineTopicExpression"===e.type&&(void 0===t||o(e,t)))}function He(e,t){return!!e&&("Import"===e.type&&(void 0===t||o(e,t)))}function qe(e,t){return!!e&&("ExportDefaultSpecifier"===e.type&&(void 0===t||o(e,t)))}function Ke(e,t){return!!e&&("ExportNamespaceSpecifier"===e.type&&(void 0===t||o(e,t)))}function Xe(e,t){return!!e&&("PrivateName"===e.type&&(void 0===t||o(e,t)))}function ze(e,t){return!!e&&("TSArrayType"===e.type&&(void 0===t||o(e,t)))}function Je(e,t){return!!e&&("TSOptionalType"===e.type&&(void 0===t||o(e,t)))}function Ye(e,t){return!!e&&("TSRestType"===e.type&&(void 0===t||o(e,t)))}function $e(e,t){return!!e&&("TSUnionType"===e.type&&(void 0===t||o(e,t)))}function Qe(e,t){return!!e&&("TSIntersectionType"===e.type&&(void 0===t||o(e,t)))}function Ze(e,t){return!!e&&("TSAsExpression"===e.type&&(void 0===t||o(e,t)))}function et(e,t){return!!e&&("TSTypeAssertion"===e.type&&(void 0===t||o(e,t)))}function tt(e,t){if(!e)return!1;var n=e.type;return("Expression"===n||"ArrayExpression"===n||"AssignmentExpression"===n||"BinaryExpression"===n||"CallExpression"===n||"ConditionalExpression"===n||"FunctionExpression"===n||"Identifier"===n||"StringLiteral"===n||"NumericLiteral"===n||"NullLiteral"===n||"BooleanLiteral"===n||"RegExpLiteral"===n||"LogicalExpression"===n||"MemberExpression"===n||"NewExpression"===n||"ObjectExpression"===n||"SequenceExpression"===n||"ParenthesizedExpression"===n||"ThisExpression"===n||"UnaryExpression"===n||"UpdateExpression"===n||"ArrowFunctionExpression"===n||"ClassExpression"===n||"MetaProperty"===n||"Super"===n||"TaggedTemplateExpression"===n||"TemplateLiteral"===n||"YieldExpression"===n||"TypeCastExpression"===n||"JSXElement"===n||"JSXFragment"===n||"AwaitExpression"===n||"BindExpression"===n||"OptionalMemberExpression"===n||"PipelinePrimaryTopicReference"===n||"OptionalCallExpression"===n||"Import"===n||"DoExpression"===n||"BigIntLiteral"===n||"TSAsExpression"===n||"TSTypeAssertion"===n||"TSNonNullExpression"===n||"Placeholder"===n&&("Expression"===e.expectedNode||"Identifier"===e.expectedNode||"StringLiteral"===e.expectedNode))&&(void 0===t||o(e,t))}function nt(e,t){if(!e)return!1;var n=e.type;return("Binary"===n||"BinaryExpression"===n||"LogicalExpression"===n)&&(void 0===t||o(e,t))}function rt(e,t){if(!e)return!1;var n=e.type;return("Scopable"===n||"BlockStatement"===n||"CatchClause"===n||"DoWhileStatement"===n||"ForInStatement"===n||"ForStatement"===n||"FunctionDeclaration"===n||"FunctionExpression"===n||"Program"===n||"ObjectMethod"===n||"SwitchStatement"===n||"WhileStatement"===n||"ArrowFunctionExpression"===n||"ClassDeclaration"===n||"ClassExpression"===n||"ForOfStatement"===n||"ClassMethod"===n||"ClassPrivateMethod"===n||"TSModuleBlock"===n||"Placeholder"===n&&"BlockStatement"===e.expectedNode)&&(void 0===t||o(e,t))}function it(e,t){if(!e)return!1;var n=e.type;return("Statement"===n||"BlockStatement"===n||"BreakStatement"===n||"ContinueStatement"===n||"DebuggerStatement"===n||"DoWhileStatement"===n||"EmptyStatement"===n||"ExpressionStatement"===n||"ForInStatement"===n||"ForStatement"===n||"FunctionDeclaration"===n||"IfStatement"===n||"LabeledStatement"===n||"ReturnStatement"===n||"SwitchStatement"===n||"ThrowStatement"===n||"TryStatement"===n||"VariableDeclaration"===n||"WhileStatement"===n||"WithStatement"===n||"ClassDeclaration"===n||"ExportAllDeclaration"===n||"ExportDefaultDeclaration"===n||"ExportNamedDeclaration"===n||"ForOfStatement"===n||"ImportDeclaration"===n||"DeclareClass"===n||"DeclareFunction"===n||"DeclareInterface"===n||"DeclareModule"===n||"DeclareModuleExports"===n||"DeclareTypeAlias"===n||"DeclareOpaqueType"===n||"DeclareVariable"===n||"DeclareExportDeclaration"===n||"DeclareExportAllDeclaration"===n||"InterfaceDeclaration"===n||"OpaqueType"===n||"TypeAlias"===n||"TSDeclareFunction"===n||"TSInterfaceDeclaration"===n||"TSTypeAliasDeclaration"===n||"TSEnumDeclaration"===n||"TSModuleDeclaration"===n||"TSImportEqualsDeclaration"===n||"TSExportAssignment"===n||"TSNamespaceExportDeclaration"===n||"Placeholder"===n&&("Statement"===e.expectedNode||"Declaration"===e.expectedNode||"BlockStatement"===e.expectedNode))&&(void 0===t||o(e,t))}function at(e,t){if(!e)return!1;var n=e.type;return("Conditional"===n||"ConditionalExpression"===n||"IfStatement"===n)&&(void 0===t||o(e,t))}function ot(e,t){if(!e)return!1;var n=e.type;return("Loop"===n||"DoWhileStatement"===n||"ForInStatement"===n||"ForStatement"===n||"WhileStatement"===n||"ForOfStatement"===n)&&(void 0===t||o(e,t))}function st(e,t){if(!e)return!1;var n=e.type;return("For"===n||"ForInStatement"===n||"ForStatement"===n||"ForOfStatement"===n)&&(void 0===t||o(e,t))}function ut(e,t){if(!e)return!1;var n=e.type;return("ForXStatement"===n||"ForInStatement"===n||"ForOfStatement"===n)&&(void 0===t||o(e,t))}function lt(e,t){if(!e)return!1;var n=e.type;return("Function"===n||"FunctionDeclaration"===n||"FunctionExpression"===n||"ObjectMethod"===n||"ArrowFunctionExpression"===n||"ClassMethod"===n||"ClassPrivateMethod"===n)&&(void 0===t||o(e,t))}function ct(e,t){if(!e)return!1;var n=e.type;return("Pureish"===n||"FunctionDeclaration"===n||"FunctionExpression"===n||"StringLiteral"===n||"NumericLiteral"===n||"NullLiteral"===n||"BooleanLiteral"===n||"ArrowFunctionExpression"===n||"ClassDeclaration"===n||"ClassExpression"===n||"BigIntLiteral"===n||"Placeholder"===n&&"StringLiteral"===e.expectedNode)&&(void 0===t||o(e,t))}function pt(e,t){if(!e)return!1;var n=e.type;return("Declaration"===n||"FunctionDeclaration"===n||"VariableDeclaration"===n||"ClassDeclaration"===n||"ExportAllDeclaration"===n||"ExportDefaultDeclaration"===n||"ExportNamedDeclaration"===n||"ImportDeclaration"===n||"DeclareClass"===n||"DeclareFunction"===n||"DeclareInterface"===n||"DeclareModule"===n||"DeclareModuleExports"===n||"DeclareTypeAlias"===n||"DeclareOpaqueType"===n||"DeclareVariable"===n||"DeclareExportDeclaration"===n||"DeclareExportAllDeclaration"===n||"InterfaceDeclaration"===n||"OpaqueType"===n||"TypeAlias"===n||"TSDeclareFunction"===n||"TSInterfaceDeclaration"===n||"TSTypeAliasDeclaration"===n||"TSEnumDeclaration"===n||"TSModuleDeclaration"===n||"Placeholder"===n&&"Declaration"===e.expectedNode)&&(void 0===t||o(e,t))}function ht(e,t){if(!e)return!1;var n=e.type;return("Literal"===n||"StringLiteral"===n||"NumericLiteral"===n||"NullLiteral"===n||"BooleanLiteral"===n||"RegExpLiteral"===n||"TemplateLiteral"===n||"BigIntLiteral"===n||"Placeholder"===n&&"StringLiteral"===e.expectedNode)&&(void 0===t||o(e,t))}function ft(e,t){if(!e)return!1;var n=e.type;return("Property"===n||"ObjectProperty"===n||"ClassProperty"===n||"ClassPrivateProperty"===n)&&(void 0===t||o(e,t))}function dt(e,t){if(!e)return!1;var n=e.type;return("UnaryLike"===n||"UnaryExpression"===n||"SpreadElement"===n)&&(void 0===t||o(e,t))}function mt(e,t){if(!e)return!1;var n=e.type;return("Pattern"===n||"AssignmentPattern"===n||"ArrayPattern"===n||"ObjectPattern"===n||"Placeholder"===n&&"Pattern"===e.expectedNode)&&(void 0===t||o(e,t))}function yt(e,t){if(!e)return!1;var n=e.type;return("Class"===n||"ClassDeclaration"===n||"ClassExpression"===n)&&(void 0===t||o(e,t))}function vt(e,t){if(!e)return!1;var n=e.type;return("ModuleDeclaration"===n||"ExportAllDeclaration"===n||"ExportDefaultDeclaration"===n||"ExportNamedDeclaration"===n||"ImportDeclaration"===n)&&(void 0===t||o(e,t))}function gt(e,t){if(!e)return!1;var n=e.type;return("ExportDeclaration"===n||"ExportAllDeclaration"===n||"ExportDefaultDeclaration"===n||"ExportNamedDeclaration"===n)&&(void 0===t||o(e,t))}function bt(e,t){if(!e)return!1;var n=e.type;return("ModuleSpecifier"===n||"ExportSpecifier"===n||"ImportDefaultSpecifier"===n||"ImportNamespaceSpecifier"===n||"ImportSpecifier"===n||"ExportDefaultSpecifier"===n||"ExportNamespaceSpecifier"===n)&&(void 0===t||o(e,t))}function Et(e,t){if(!e)return!1;var n=e.type;return("Flow"===n||"AnyTypeAnnotation"===n||"ArrayTypeAnnotation"===n||"BooleanTypeAnnotation"===n||"BooleanLiteralTypeAnnotation"===n||"NullLiteralTypeAnnotation"===n||"ClassImplements"===n||"DeclareClass"===n||"DeclareFunction"===n||"DeclareInterface"===n||"DeclareModule"===n||"DeclareModuleExports"===n||"DeclareTypeAlias"===n||"DeclareOpaqueType"===n||"DeclareVariable"===n||"DeclareExportDeclaration"===n||"DeclareExportAllDeclaration"===n||"DeclaredPredicate"===n||"ExistsTypeAnnotation"===n||"FunctionTypeAnnotation"===n||"FunctionTypeParam"===n||"GenericTypeAnnotation"===n||"InferredPredicate"===n||"InterfaceExtends"===n||"InterfaceDeclaration"===n||"InterfaceTypeAnnotation"===n||"IntersectionTypeAnnotation"===n||"MixedTypeAnnotation"===n||"EmptyTypeAnnotation"===n||"NullableTypeAnnotation"===n||"NumberLiteralTypeAnnotation"===n||"NumberTypeAnnotation"===n||"ObjectTypeAnnotation"===n||"ObjectTypeInternalSlot"===n||"ObjectTypeCallProperty"===n||"ObjectTypeIndexer"===n||"ObjectTypeProperty"===n||"ObjectTypeSpreadProperty"===n||"OpaqueType"===n||"QualifiedTypeIdentifier"===n||"StringLiteralTypeAnnotation"===n||"StringTypeAnnotation"===n||"ThisTypeAnnotation"===n||"TupleTypeAnnotation"===n||"TypeofTypeAnnotation"===n||"TypeAlias"===n||"TypeAnnotation"===n||"TypeCastExpression"===n||"TypeParameter"===n||"TypeParameterDeclaration"===n||"TypeParameterInstantiation"===n||"UnionTypeAnnotation"===n||"Variance"===n||"VoidTypeAnnotation"===n)&&(void 0===t||o(e,t))}function At(e,t){if(!e)return!1;var n=e.type;return("FlowBaseAnnotation"===n||"AnyTypeAnnotation"===n||"BooleanTypeAnnotation"===n||"NullLiteralTypeAnnotation"===n||"MixedTypeAnnotation"===n||"EmptyTypeAnnotation"===n||"NumberTypeAnnotation"===n||"StringTypeAnnotation"===n||"ThisTypeAnnotation"===n||"VoidTypeAnnotation"===n)&&(void 0===t||o(e,t))}function Dt(e,t,n){if(!_(e))return!1;var r,i=Array.isArray(t)?t:t.split("."),a=[];for(r=e;_(r);r=r.object)a.push(r.property);if(a.push(r),a.length<i.length)return!1;if(!n&&a.length>i.length)return!1;for(var o=0,s=a.length-1;o<i.length;o++,s--){var u=a[s],l=void 0;if(S(u))l=u.name;else{if(!C(u))return!1;l=u.value}if(i[o]!==l)return!1}return!0}function St(e,t){var n=e.split(".");return function(e){return Dt(e,n,t)}}var xt=St("React.Component");var Tt=function(){this.__data__=[],this.size=0};var Ct=function(e,t){return e===t||e!=e&&t!=t};var wt=function(e,t){for(var n=e.length;n--;)if(Ct(e[n][0],t))return n;return-1},Pt=Array.prototype.splice;var Ft=function(e){var t=this.__data__,n=wt(t,e);return!(n<0)&&(n==t.length-1?t.pop():Pt.call(t,n,1),--this.size,!0)};var kt=function(e){var t=this.__data__,n=wt(t,e);return n<0?void 0:t[n][1]};var _t=function(e){return wt(this.__data__,e)>-1};var It=function(e,t){var n=this.__data__,r=wt(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this};function Ot(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}Ot.prototype.clear=Tt,Ot.prototype.delete=Ft,Ot.prototype.get=kt,Ot.prototype.has=_t,Ot.prototype.set=It;var Bt=Ot;var Nt=function(){this.__data__=new Bt,this.size=0};var Mt=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n};var Rt=function(e){return this.__data__.get(e)};var Lt=function(e){return this.__data__.has(e)},jt="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function Ut(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function Vt(e,t){return e(t={exports:{}},t.exports),t.exports}function Wt(e){return e&&e.default||e}var Gt="object"==typeof jt&&jt&&jt.Object===Object&&jt,Ht="object"==typeof self&&self&&self.Object===Object&&self,qt=Gt||Ht||Function("return this")(),Kt=qt.Symbol,Xt=Object.prototype,zt=Xt.hasOwnProperty,Jt=Xt.toString,Yt=Kt?Kt.toStringTag:void 0;var $t=function(e){var t=zt.call(e,Yt),n=e[Yt];try{e[Yt]=void 0;var r=!0}catch(e){}var i=Jt.call(e);return r&&(t?e[Yt]=n:delete e[Yt]),i},Qt=Object.prototype.toString;var Zt=function(e){return Qt.call(e)},en="[object Null]",tn="[object Undefined]",nn=Kt?Kt.toStringTag:void 0;var rn=function(e){return null==e?void 0===e?tn:en:nn&&nn in Object(e)?$t(e):Zt(e)};var an=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)},on="[object AsyncFunction]",sn="[object Function]",un="[object GeneratorFunction]",ln="[object Proxy]";var cn=function(e){if(!an(e))return!1;var t=rn(e);return t==sn||t==un||t==on||t==ln},pn=qt["__core-js_shared__"],hn=function(){var e=/[^.]+$/.exec(pn&&pn.keys&&pn.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();var fn=function(e){return!!hn&&hn in e},dn=Function.prototype.toString;var mn=function(e){if(null!=e){try{return dn.call(e)}catch(e){}try{return e+""}catch(e){}}return""},yn=/^\[object .+?Constructor\]$/,vn=Function.prototype,gn=Object.prototype,bn=vn.toString,En=gn.hasOwnProperty,An=RegExp("^"+bn.call(En).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");var Dn=function(e){return!(!an(e)||fn(e))&&(cn(e)?An:yn).test(mn(e))};var Sn=function(e,t){return null==e?void 0:e[t]};var xn=function(e,t){var n=Sn(e,t);return Dn(n)?n:void 0},Tn=xn(qt,"Map"),Cn=xn(Object,"create");var wn=function(){this.__data__=Cn?Cn(null):{},this.size=0};var Pn=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},Fn="__lodash_hash_undefined__",kn=Object.prototype.hasOwnProperty;var _n=function(e){var t=this.__data__;if(Cn){var n=t[e];return n===Fn?void 0:n}return kn.call(t,e)?t[e]:void 0},In=Object.prototype.hasOwnProperty;var On=function(e){var t=this.__data__;return Cn?void 0!==t[e]:In.call(t,e)},Bn="__lodash_hash_undefined__";var Nn=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=Cn&&void 0===t?Bn:t,this};function Mn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}Mn.prototype.clear=wn,Mn.prototype.delete=Pn,Mn.prototype.get=_n,Mn.prototype.has=On,Mn.prototype.set=Nn;var Rn=Mn;var Ln=function(){this.size=0,this.__data__={hash:new Rn,map:new(Tn||Bt),string:new Rn}};var jn=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e};var Un=function(e,t){var n=e.__data__;return jn(t)?n["string"==typeof t?"string":"hash"]:n.map};var Vn=function(e){var t=Un(this,e).delete(e);return this.size-=t?1:0,t};var Wn=function(e){return Un(this,e).get(e)};var Gn=function(e){return Un(this,e).has(e)};var Hn=function(e,t){var n=Un(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this};function qn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}qn.prototype.clear=Ln,qn.prototype.delete=Vn,qn.prototype.get=Wn,qn.prototype.has=Gn,qn.prototype.set=Hn;var Kn=qn,Xn=200;var zn=function(e,t){var n=this.__data__;if(n instanceof Bt){var r=n.__data__;if(!Tn||r.length<Xn-1)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new Kn(r)}return n.set(e,t),this.size=n.size,this};function Jn(e){var t=this.__data__=new Bt(e);this.size=t.size}Jn.prototype.clear=Nt,Jn.prototype.delete=Mt,Jn.prototype.get=Rt,Jn.prototype.has=Lt,Jn.prototype.set=zn;var Yn=Jn;var $n=function(e,t){for(var n=-1,r=null==e?0:e.length;++n<r&&!1!==t(e[n],n,e););return e},Qn=function(){try{var e=xn(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();var Zn=function(e,t,n){"__proto__"==t&&Qn?Qn(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n},er=Object.prototype.hasOwnProperty;var tr=function(e,t,n){var r=e[t];er.call(e,t)&&Ct(r,n)&&(void 0!==n||t in e)||Zn(e,t,n)};var nr=function(e,t,n,r){var i=!n;n||(n={});for(var a=-1,o=t.length;++a<o;){var s=t[a],u=r?r(n[s],e[s],s,n,e):void 0;void 0===u&&(u=e[s]),i?Zn(n,s,u):tr(n,s,u)}return n};var rr=function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r};var ir=function(e){return null!=e&&"object"==typeof e},ar="[object Arguments]";var or=function(e){return ir(e)&&rn(e)==ar},sr=Object.prototype,ur=sr.hasOwnProperty,lr=sr.propertyIsEnumerable,cr=or(function(){return arguments}())?or:function(e){return ir(e)&&ur.call(e,"callee")&&!lr.call(e,"callee")},pr=Array.isArray;var hr=function(){return!1},fr=Vt((function(e,t){var n=t&&!t.nodeType&&t,r=n&&e&&!e.nodeType&&e,i=r&&r.exports===n?qt.Buffer:void 0,a=(i?i.isBuffer:void 0)||hr;e.exports=a})),dr=9007199254740991,mr=/^(?:0|[1-9]\d*)$/;var yr=function(e,t){var n=typeof e;return!!(t=null==t?dr:t)&&("number"==n||"symbol"!=n&&mr.test(e))&&e>-1&&e%1==0&&e<t},vr=9007199254740991;var gr=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=vr},br={};br["[object Float32Array]"]=br["[object Float64Array]"]=br["[object Int8Array]"]=br["[object Int16Array]"]=br["[object Int32Array]"]=br["[object Uint8Array]"]=br["[object Uint8ClampedArray]"]=br["[object Uint16Array]"]=br["[object Uint32Array]"]=!0,br["[object Arguments]"]=br["[object Array]"]=br["[object ArrayBuffer]"]=br["[object Boolean]"]=br["[object DataView]"]=br["[object Date]"]=br["[object Error]"]=br["[object Function]"]=br["[object Map]"]=br["[object Number]"]=br["[object Object]"]=br["[object RegExp]"]=br["[object Set]"]=br["[object String]"]=br["[object WeakMap]"]=!1;var Er=function(e){return ir(e)&&gr(e.length)&&!!br[rn(e)]};var Ar=function(e){return function(t){return e(t)}},Dr=Vt((function(e,t){var n=t&&!t.nodeType&&t,r=n&&e&&!e.nodeType&&e,i=r&&r.exports===n&&Gt.process,a=function(){try{var e=r&&r.require&&r.require("util").types;return e||i&&i.binding&&i.binding("util")}catch(e){}}();e.exports=a})),Sr=Dr&&Dr.isTypedArray,xr=Sr?Ar(Sr):Er,Tr=Object.prototype.hasOwnProperty;var Cr=function(e,t){var n=pr(e),r=!n&&cr(e),i=!n&&!r&&fr(e),a=!n&&!r&&!i&&xr(e),o=n||r||i||a,s=o?rr(e.length,String):[],u=s.length;for(var l in e)!t&&!Tr.call(e,l)||o&&("length"==l||i&&("offset"==l||"parent"==l)||a&&("buffer"==l||"byteLength"==l||"byteOffset"==l)||yr(l,u))||s.push(l);return s},wr=Object.prototype;var Pr=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||wr)};var Fr=function(e,t){return function(n){return e(t(n))}},kr=Fr(Object.keys,Object),_r=Object.prototype.hasOwnProperty;var Ir=function(e){if(!Pr(e))return kr(e);var t=[];for(var n in Object(e))_r.call(e,n)&&"constructor"!=n&&t.push(n);return t};var Or=function(e){return null!=e&&gr(e.length)&&!cn(e)};var Br=function(e){return Or(e)?Cr(e):Ir(e)};var Nr=function(e,t){return e&&nr(t,Br(t),e)};var Mr=function(e){var t=[];if(null!=e)for(var n in Object(e))t.push(n);return t},Rr=Object.prototype.hasOwnProperty;var Lr=function(e){if(!an(e))return Mr(e);var t=Pr(e),n=[];for(var r in e)("constructor"!=r||!t&&Rr.call(e,r))&&n.push(r);return n};var jr=function(e){return Or(e)?Cr(e,!0):Lr(e)};var Ur=function(e,t){return e&&nr(t,jr(t),e)},Vr=Vt((function(e,t){var n=t&&!t.nodeType&&t,r=n&&e&&!e.nodeType&&e,i=r&&r.exports===n?qt.Buffer:void 0,a=i?i.allocUnsafe:void 0;e.exports=function(e,t){if(t)return e.slice();var n=e.length,r=a?a(n):new e.constructor(n);return e.copy(r),r}}));var Wr=function(e,t){var n=-1,r=e.length;for(t||(t=Array(r));++n<r;)t[n]=e[n];return t};var Gr=function(e,t){for(var n=-1,r=null==e?0:e.length,i=0,a=[];++n<r;){var o=e[n];t(o,n,e)&&(a[i++]=o)}return a};var Hr=function(){return[]},qr=Object.prototype.propertyIsEnumerable,Kr=Object.getOwnPropertySymbols,Xr=Kr?function(e){return null==e?[]:(e=Object(e),Gr(Kr(e),(function(t){return qr.call(e,t)})))}:Hr;var zr=function(e,t){return nr(e,Xr(e),t)};var Jr=function(e,t){for(var n=-1,r=t.length,i=e.length;++n<r;)e[i+n]=t[n];return e},Yr=Fr(Object.getPrototypeOf,Object),$r=Object.getOwnPropertySymbols?function(e){for(var t=[];e;)Jr(t,Xr(e)),e=Yr(e);return t}:Hr;var Qr=function(e,t){return nr(e,$r(e),t)};var Zr=function(e,t,n){var r=t(e);return pr(e)?r:Jr(r,n(e))};var ei=function(e){return Zr(e,Br,Xr)};var ti=function(e){return Zr(e,jr,$r)},ni=xn(qt,"DataView"),ri=xn(qt,"Promise"),ii=xn(qt,"Set"),ai=xn(qt,"WeakMap"),oi=mn(ni),si=mn(Tn),ui=mn(ri),li=mn(ii),ci=mn(ai),pi=rn;(ni&&"[object DataView]"!=pi(new ni(new ArrayBuffer(1)))||Tn&&"[object Map]"!=pi(new Tn)||ri&&"[object Promise]"!=pi(ri.resolve())||ii&&"[object Set]"!=pi(new ii)||ai&&"[object WeakMap]"!=pi(new ai))&&(pi=function(e){var t=rn(e),n="[object Object]"==t?e.constructor:void 0,r=n?mn(n):"";if(r)switch(r){case oi:return"[object DataView]";case si:return"[object Map]";case ui:return"[object Promise]";case li:return"[object Set]";case ci:return"[object WeakMap]"}return t});var hi=pi,fi=Object.prototype.hasOwnProperty;var di=function(e){var t=e.length,n=new e.constructor(t);return t&&"string"==typeof e[0]&&fi.call(e,"index")&&(n.index=e.index,n.input=e.input),n},mi=qt.Uint8Array;var yi=function(e){var t=new e.constructor(e.byteLength);return new mi(t).set(new mi(e)),t};var vi=function(e,t){var n=t?yi(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)},gi=/\w*$/;var bi=function(e){var t=new e.constructor(e.source,gi.exec(e));return t.lastIndex=e.lastIndex,t},Ei=Kt?Kt.prototype:void 0,Ai=Ei?Ei.valueOf:void 0;var Di=function(e){return Ai?Object(Ai.call(e)):{}};var Si=function(e,t){var n=t?yi(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)},xi="[object Boolean]",Ti="[object Date]",Ci="[object Map]",wi="[object Number]",Pi="[object RegExp]",Fi="[object Set]",ki="[object String]",_i="[object Symbol]",Ii="[object ArrayBuffer]",Oi="[object DataView]",Bi="[object Float32Array]",Ni="[object Float64Array]",Mi="[object Int8Array]",Ri="[object Int16Array]",Li="[object Int32Array]",ji="[object Uint8Array]",Ui="[object Uint8ClampedArray]",Vi="[object Uint16Array]",Wi="[object Uint32Array]";var Gi=function(e,t,n){var r=e.constructor;switch(t){case Ii:return yi(e);case xi:case Ti:return new r(+e);case Oi:return vi(e,n);case Bi:case Ni:case Mi:case Ri:case Li:case ji:case Ui:case Vi:case Wi:return Si(e,n);case Ci:return new r;case wi:case ki:return new r(e);case Pi:return bi(e);case Fi:return new r;case _i:return Di(e)}},Hi=Object.create,qi=function(){function e(){}return function(t){if(!an(t))return{};if(Hi)return Hi(t);e.prototype=t;var n=new e;return e.prototype=void 0,n}}();var Ki=function(e){return"function"!=typeof e.constructor||Pr(e)?{}:qi(Yr(e))},Xi="[object Map]";var zi=function(e){return ir(e)&&hi(e)==Xi},Ji=Dr&&Dr.isMap,Yi=Ji?Ar(Ji):zi,$i="[object Set]";var Qi=function(e){return ir(e)&&hi(e)==$i},Zi=Dr&&Dr.isSet,ea=Zi?Ar(Zi):Qi,ta=1,na=2,ra=4,ia="[object Arguments]",aa="[object Function]",oa="[object GeneratorFunction]",sa="[object Object]",ua={};ua[ia]=ua["[object Array]"]=ua["[object ArrayBuffer]"]=ua["[object DataView]"]=ua["[object Boolean]"]=ua["[object Date]"]=ua["[object Float32Array]"]=ua["[object Float64Array]"]=ua["[object Int8Array]"]=ua["[object Int16Array]"]=ua["[object Int32Array]"]=ua["[object Map]"]=ua["[object Number]"]=ua[sa]=ua["[object RegExp]"]=ua["[object Set]"]=ua["[object String]"]=ua["[object Symbol]"]=ua["[object Uint8Array]"]=ua["[object Uint8ClampedArray]"]=ua["[object Uint16Array]"]=ua["[object Uint32Array]"]=!0,ua["[object Error]"]=ua[aa]=ua["[object WeakMap]"]=!1;var la=function e(t,n,r,i,a,o){var s,u=n&ta,l=n&na,c=n&ra;if(r&&(s=a?r(t,i,a,o):r(t)),void 0!==s)return s;if(!an(t))return t;var p=pr(t);if(p){if(s=di(t),!u)return Wr(t,s)}else{var h=hi(t),f=h==aa||h==oa;if(fr(t))return Vr(t,u);if(h==sa||h==ia||f&&!a){if(s=l||f?{}:Ki(t),!u)return l?Qr(t,Ur(s,t)):zr(t,Nr(s,t))}else{if(!ua[h])return a?t:{};s=Gi(t,h,u)}}o||(o=new Yn);var d=o.get(t);if(d)return d;o.set(t,s),ea(t)?t.forEach((function(i){s.add(e(i,n,r,i,t,o))})):Yi(t)&&t.forEach((function(i,a){s.set(a,e(i,n,r,a,t,o))}));var m=c?l?ti:ei:l?keysIn:Br,y=p?void 0:m(t);return $n(y||t,(function(i,a){y&&(i=t[a=i]),tr(s,a,e(i,n,r,a,t,o))})),s},ca=4;var pa=function(e){return la(e,ca)},ha=null;function fa(e){if(null!==ha&&(ha.property,1)){var t=ha;return ha=fa.prototype=null,t}return ha=fa.prototype=null==e?Object.create(null):e,new fa}fa();var da=function(e){return fa(e)},ma=Vt((function(e){!function(){function t(e){if(null==e)return!1;switch(e.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return!0}return!1}function n(e){switch(e.type){case"IfStatement":return null!=e.alternate?e.alternate:e.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return e.body}return null}e.exports={isExpression:function(e){if(null==e)return!1;switch(e.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return!0}return!1},isStatement:t,isIterationStatement:function(e){if(null==e)return!1;switch(e.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return!0}return!1},isSourceElement:function(e){return t(e)||null!=e&&"FunctionDeclaration"===e.type},isProblematicIfStatement:function(e){var t;if("IfStatement"!==e.type)return!1;if(null==e.alternate)return!1;t=e.consequent;do{if("IfStatement"===t.type&&null==t.alternate)return!0;t=n(t)}while(t);return!1},trailingStatement:n}}()})),ya=(ma.isExpression,ma.isStatement,ma.isIterationStatement,ma.isSourceElement,ma.isProblematicIfStatement,ma.trailingStatement,Vt((function(e){!function(){var t,n,r,i,a,o;function s(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(Math.floor((e-65536)/1024)+55296)+String.fromCharCode((e-65536)%1024+56320)}for(n={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,NonAsciiIdentifierPart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/},t={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/},r=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],i=new Array(128),o=0;o<128;++o)i[o]=o>=97&&o<=122||o>=65&&o<=90||36===o||95===o;for(a=new Array(128),o=0;o<128;++o)a[o]=o>=97&&o<=122||o>=65&&o<=90||o>=48&&o<=57||36===o||95===o;e.exports={isDecimalDigit:function(e){return 48<=e&&e<=57},isHexDigit:function(e){return 48<=e&&e<=57||97<=e&&e<=102||65<=e&&e<=70},isOctalDigit:function(e){return e>=48&&e<=55},isWhiteSpace:function(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&r.indexOf(e)>=0},isLineTerminator:function(e){return 10===e||13===e||8232===e||8233===e},isIdentifierStartES5:function(e){return e<128?i[e]:n.NonAsciiIdentifierStart.test(s(e))},isIdentifierPartES5:function(e){return e<128?a[e]:n.NonAsciiIdentifierPart.test(s(e))},isIdentifierStartES6:function(e){return e<128?i[e]:t.NonAsciiIdentifierStart.test(s(e))},isIdentifierPartES6:function(e){return e<128?a[e]:t.NonAsciiIdentifierPart.test(s(e))}}}()}))),va=(ya.isDecimalDigit,ya.isHexDigit,ya.isOctalDigit,ya.isWhiteSpace,ya.isLineTerminator,ya.isIdentifierStartES5,ya.isIdentifierPartES5,ya.isIdentifierStartES6,ya.isIdentifierPartES6,Vt((function(e){!function(){var t=ya;function n(e,t){return!(!t&&"yield"===e)&&r(e,t)}function r(e,t){if(t&&function(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return!0;default:return!1}}(e))return!0;switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}}function i(e,t){return"null"===e||"true"===e||"false"===e||n(e,t)}function a(e,t){return"null"===e||"true"===e||"false"===e||r(e,t)}function o(e){var n,r,i;if(0===e.length)return!1;if(i=e.charCodeAt(0),!t.isIdentifierStartES5(i))return!1;for(n=1,r=e.length;n<r;++n)if(i=e.charCodeAt(n),!t.isIdentifierPartES5(i))return!1;return!0}function s(e){var n,r,i,a,o;if(0===e.length)return!1;for(o=t.isIdentifierStartES6,n=0,r=e.length;n<r;++n){if(55296<=(i=e.charCodeAt(n))&&i<=56319){if(++n>=r)return!1;if(!(56320<=(a=e.charCodeAt(n))&&a<=57343))return!1;i=1024*(i-55296)+(a-56320)+65536}if(!o(i))return!1;o=t.isIdentifierPartES6}return!0}e.exports={isKeywordES5:n,isKeywordES6:r,isReservedWordES5:i,isReservedWordES6:a,isRestrictedWord:function(e){return"eval"===e||"arguments"===e},isIdentifierNameES5:o,isIdentifierNameES6:s,isIdentifierES5:function(e,t){return o(e)&&!i(e,t)},isIdentifierES6:function(e,t){return s(e)&&!a(e,t)}}}()}))),ga=(va.isKeywordES5,va.isKeywordES6,va.isReservedWordES5,va.isReservedWordES6,va.isRestrictedWord,va.isIdentifierNameES5,va.isIdentifierNameES6,va.isIdentifierES5,va.isIdentifierES6,Vt((function(e,t){t.ast=ma,t.code=ya,t.keyword=va})));ga.ast,ga.code,ga.keyword;function ba(e){return"string"==typeof e&&!ga.keyword.isReservedWordES6(e,!0)&&("await"!==e&&ga.keyword.isIdentifierNameES6(e))}var Ea=["consequent","body","alternate"],Aa=["left","init"],Da=["leadingComments","trailingComments","innerComments"],Sa=["||","&&","??"],xa=["++","--"],Ta=[">","<",">=","<="],Ca=["==","===","!=","!=="],wa=[].concat(Ca,["in","instanceof"]),Pa=[].concat(wa,Ta),Fa=["-","/","%","*","**","&","|",">>",">>>","<<","^"],ka=["+"].concat(Fa,Pa),_a=["delete","!"],Ia=["+","-","~"],Oa=["typeof"],Ba=["void","throw"].concat(_a,Ia,Oa),Na={optional:["typeAnnotation","typeParameters","returnType"],force:["start","loc","end"]},Ma=Symbol.for("var used to be block scoped"),Ra=Symbol.for("should not be considered a local binding");function La(e,t){if(e===t)return!0;if(Ha[t])return!1;var n=qa[t];if(n){if(n[0]===e)return!0;var r=n,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}if(e===o)return!0}}return!1}function ja(e,t){if(e===t)return!0;var n=Do[e];if(n){var r=n,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}if(t===o)return!0}}return!1}function Ua(e,t,n){return!!t&&(La(t.type,e)?void 0===n||o(t,n):!n&&"Placeholder"===t.type&&e in qa&&ja(t.expectedNode,e))}function Va(e,t,n){if(e){var r=Ka[e.type];if(r)Wa(e,t,n,r[t])}}function Wa(e,t,n,r){r&&r.validate&&(r.optional&&null==n||r.validate(e,t,n))}var Ga={},Ha={},qa={},Ka={},Xa={},za={};function Ja(e){return Array.isArray(e)?"array":null===e?"null":void 0===e?"undefined":typeof e}function Ya(e){return{validate:e}}function $a(e){return"string"==typeof e?ao(e):ao.apply(void 0,e)}function Qa(e){return Ya($a(e))}function Za(e){return{validate:e,optional:!0}}function eo(e){return{validate:$a(e),optional:!0}}function to(e){return t=$a(e),so(oo("array"),ro(t));var t}function no(e){return Ya(to(e))}function ro(e){function t(t,n,r){if(Array.isArray(r))for(var i=0;i<r.length;i++)e(t,n+"["+i+"]",r[i])}return t.each=e,t}function io(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];function r(e,n,r){if(t.indexOf(r)<0)throw new TypeError("Property "+n+" expected value to be one of "+JSON.stringify(t)+" but got "+JSON.stringify(r))}return r.oneOf=t,r}function ao(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];function r(e,n,r){var i=!1,a=t,o=Array.isArray(a),s=0;for(a=o?a:a[Symbol.iterator]();;){var u;if(o){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}if(Ua(u,r)){i=!0;break}}if(!i)throw new TypeError("Property "+n+" of "+e.type+" expected node to be of a type "+JSON.stringify(t)+" but instead got "+JSON.stringify(r&&r.type))}return r.oneOfNodeTypes=t,r}function oo(e){function t(t,n,r){if(!(Ja(r)===e))throw new TypeError("Property "+n+" expected type of "+e+" but got "+Ja(r))}return t.type=e,t}function so(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];function r(){var e=t,n=Array.isArray(e),r=0;for(e=n?e:e[Symbol.iterator]();;){var i;if(n){if(r>=e.length)break;i=e[r++]}else{if((r=e.next()).done)break;i=r.value}i.apply(void 0,arguments)}}return r.chainOf=t,r}function uo(e,t){void 0===t&&(t={});var n=t.inherits&&lo[t.inherits]||{},r=t.fields||n.fields||{},i=t.visitor||n.visitor||[],a=t.aliases||n.aliases||[],o=t.builder||n.builder||t.visitor||[];t.deprecatedAlias&&(za[t.deprecatedAlias]=e);for(var s=0,u=i.concat(o);s<u.length;s++){var l=u[s];r[l]=r[l]||{}}for(var c=0,p=Object.keys(r);c<p.length;c++){var h=p[c],f=r[h];-1===o.indexOf(h)&&(f.optional=!0),void 0===f.default?f.default=null:f.validate||(f.validate=oo(Ja(f.default)))}Ga[e]=t.visitor=i,Xa[e]=t.builder=o,Ka[e]=t.fields=r,Ha[e]=t.aliases=a,a.forEach((function(t){qa[t]=qa[t]||[],qa[t].push(e)})),lo[e]=t}var lo={};uo("ArrayExpression",{fields:{elements:{validate:so(oo("array"),ro(function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];function r(e,n,r){var i=!1,a=t,o=Array.isArray(a),s=0;for(a=o?a:a[Symbol.iterator]();;){var u;if(o){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}var l=u;if(Ja(r)===l||Ua(l,r)){i=!0;break}}if(!i)throw new TypeError("Property "+n+" of "+e.type+" expected node to be of a type "+JSON.stringify(t)+" but instead got "+JSON.stringify(r&&r.type))}return r.oneOfNodeOrValueTypes=t,r}("null","Expression","SpreadElement"))),default:[]}},visitor:["elements"],aliases:["Expression"]}),uo("AssignmentExpression",{fields:{operator:{validate:oo("string")},left:{validate:ao("LVal")},right:{validate:ao("Expression")}},builder:["operator","left","right"],visitor:["left","right"],aliases:["Expression"]}),uo("BinaryExpression",{builder:["operator","left","right"],fields:{operator:{validate:io.apply(void 0,ka)},left:{validate:ao("Expression")},right:{validate:ao("Expression")}},visitor:["left","right"],aliases:["Binary","Expression"]}),uo("InterpreterDirective",{builder:["value"],fields:{value:{validate:oo("string")}}}),uo("Directive",{visitor:["value"],fields:{value:{validate:ao("DirectiveLiteral")}}}),uo("DirectiveLiteral",{builder:["value"],fields:{value:{validate:oo("string")}}}),uo("BlockStatement",{builder:["body","directives"],visitor:["directives","body"],fields:{directives:{validate:so(oo("array"),ro(ao("Directive"))),default:[]},body:{validate:so(oo("array"),ro(ao("Statement")))}},aliases:["Scopable","BlockParent","Block","Statement"]}),uo("BreakStatement",{visitor:["label"],fields:{label:{validate:ao("Identifier"),optional:!0}},aliases:["Statement","Terminatorless","CompletionStatement"]}),uo("CallExpression",{visitor:["callee","arguments","typeParameters","typeArguments"],builder:["callee","arguments"],aliases:["Expression"],fields:{callee:{validate:ao("Expression","V8IntrinsicIdentifier")},arguments:{validate:so(oo("array"),ro(ao("Expression","SpreadElement","JSXNamespacedName","ArgumentPlaceholder")))},optional:{validate:io(!0,!1),optional:!0},typeArguments:{validate:ao("TypeParameterInstantiation"),optional:!0},typeParameters:{validate:ao("TSTypeParameterInstantiation"),optional:!0}}}),uo("CatchClause",{visitor:["param","body"],fields:{param:{validate:ao("Identifier"),optional:!0},body:{validate:ao("BlockStatement")}},aliases:["Scopable","BlockParent"]}),uo("ConditionalExpression",{visitor:["test","consequent","alternate"],fields:{test:{validate:ao("Expression")},consequent:{validate:ao("Expression")},alternate:{validate:ao("Expression")}},aliases:["Expression","Conditional"]}),uo("ContinueStatement",{visitor:["label"],fields:{label:{validate:ao("Identifier"),optional:!0}},aliases:["Statement","Terminatorless","CompletionStatement"]}),uo("DebuggerStatement",{aliases:["Statement"]}),uo("DoWhileStatement",{visitor:["test","body"],fields:{test:{validate:ao("Expression")},body:{validate:ao("Statement")}},aliases:["Statement","BlockParent","Loop","While","Scopable"]}),uo("EmptyStatement",{aliases:["Statement"]}),uo("ExpressionStatement",{visitor:["expression"],fields:{expression:{validate:ao("Expression")}},aliases:["Statement","ExpressionWrapper"]}),uo("File",{builder:["program","comments","tokens"],visitor:["program"],fields:{program:{validate:ao("Program")}}}),uo("ForInStatement",{visitor:["left","right","body"],aliases:["Scopable","Statement","For","BlockParent","Loop","ForXStatement"],fields:{left:{validate:ao("VariableDeclaration","LVal")},right:{validate:ao("Expression")},body:{validate:ao("Statement")}}}),uo("ForStatement",{visitor:["init","test","update","body"],aliases:["Scopable","Statement","For","BlockParent","Loop"],fields:{init:{validate:ao("VariableDeclaration","Expression"),optional:!0},test:{validate:ao("Expression"),optional:!0},update:{validate:ao("Expression"),optional:!0},body:{validate:ao("Statement")}}});var co={params:{validate:so(oo("array"),ro(ao("Identifier","Pattern","RestElement","TSParameterProperty")))},generator:{default:!1,validate:oo("boolean")},async:{validate:oo("boolean"),default:!1}},po={returnType:{validate:ao("TypeAnnotation","TSTypeAnnotation","Noop"),optional:!0},typeParameters:{validate:ao("TypeParameterDeclaration","TSTypeParameterDeclaration","Noop"),optional:!0}},ho=Object.assign({},co,{declare:{validate:oo("boolean"),optional:!0},id:{validate:ao("Identifier"),optional:!0}});uo("FunctionDeclaration",{builder:["id","params","body","generator","async"],visitor:["id","params","body","returnType","typeParameters"],fields:Object.assign({},ho,{},po,{body:{validate:ao("BlockStatement")}}),aliases:["Scopable","Function","BlockParent","FunctionParent","Statement","Pureish","Declaration"]}),uo("FunctionExpression",{inherits:"FunctionDeclaration",aliases:["Scopable","Function","BlockParent","FunctionParent","Expression","Pureish"],fields:Object.assign({},co,{},po,{id:{validate:ao("Identifier"),optional:!0},body:{validate:ao("BlockStatement")}})});var fo,mo,yo={typeAnnotation:{validate:ao("TypeAnnotation","TSTypeAnnotation","Noop"),optional:!0},decorators:{validate:so(oo("array"),ro(ao("Decorator")))}};uo("Identifier",{builder:["name"],visitor:["typeAnnotation","decorators"],aliases:["Expression","PatternLike","LVal","TSEntityName"],fields:Object.assign({},yo,{name:{validate:so((function(e,t,n){ba(n)}),oo("string"))},optional:{validate:oo("boolean"),optional:!0}})}),uo("IfStatement",{visitor:["test","consequent","alternate"],aliases:["Statement","Conditional"],fields:{test:{validate:ao("Expression")},consequent:{validate:ao("Statement")},alternate:{optional:!0,validate:ao("Statement")}}}),uo("LabeledStatement",{visitor:["label","body"],aliases:["Statement"],fields:{label:{validate:ao("Identifier")},body:{validate:ao("Statement")}}}),uo("StringLiteral",{builder:["value"],fields:{value:{validate:oo("string")}},aliases:["Expression","Pureish","Literal","Immutable"]}),uo("NumericLiteral",{builder:["value"],deprecatedAlias:"NumberLiteral",fields:{value:{validate:oo("number")}},aliases:["Expression","Pureish","Literal","Immutable"]}),uo("NullLiteral",{aliases:["Expression","Pureish","Literal","Immutable"]}),uo("BooleanLiteral",{builder:["value"],fields:{value:{validate:oo("boolean")}},aliases:["Expression","Pureish","Literal","Immutable"]}),uo("RegExpLiteral",{builder:["pattern","flags"],deprecatedAlias:"RegexLiteral",aliases:["Expression","Literal"],fields:{pattern:{validate:oo("string")},flags:{validate:oo("string"),default:""}}}),uo("LogicalExpression",{builder:["operator","left","right"],visitor:["left","right"],aliases:["Binary","Expression"],fields:{operator:{validate:io.apply(void 0,Sa)},left:{validate:ao("Expression")},right:{validate:ao("Expression")}}}),uo("MemberExpression",{builder:["object","property","computed","optional"],visitor:["object","property"],aliases:["Expression","LVal"],fields:{object:{validate:ao("Expression")},property:{validate:(fo=ao("Identifier","PrivateName"),mo=ao("Expression"),function(e,t,n){(e.computed?mo:fo)(e,t,n)})},computed:{default:!1},optional:{validate:io(!0,!1),optional:!0}}}),uo("NewExpression",{inherits:"CallExpression"}),uo("Program",{visitor:["directives","body"],builder:["body","directives","sourceType","interpreter"],fields:{sourceFile:{validate:oo("string")},sourceType:{validate:io("script","module"),default:"script"},interpreter:{validate:ao("InterpreterDirective"),default:null,optional:!0},directives:{validate:so(oo("array"),ro(ao("Directive"))),default:[]},body:{validate:so(oo("array"),ro(ao("Statement")))}},aliases:["Scopable","BlockParent","Block"]}),uo("ObjectExpression",{visitor:["properties"],aliases:["Expression"],fields:{properties:{validate:so(oo("array"),ro(ao("ObjectMethod","ObjectProperty","SpreadElement")))}}}),uo("ObjectMethod",{builder:["kind","key","params","body","computed"],fields:Object.assign({},co,{},po,{kind:{validate:so(oo("string"),io("method","get","set")),default:"method"},computed:{validate:oo("boolean"),default:!1},key:{validate:function(){var e=ao("Identifier","StringLiteral","NumericLiteral"),t=ao("Expression");return function(n,r,i){(n.computed?t:e)(n,r,i)}}()},decorators:{validate:so(oo("array"),ro(ao("Decorator")))},body:{validate:ao("BlockStatement")}}),visitor:["key","params","body","decorators","returnType","typeParameters"],aliases:["UserWhitespacable","Function","Scopable","BlockParent","FunctionParent","Method","ObjectMember"]}),uo("ObjectProperty",{builder:["key","value","computed","shorthand","decorators"],fields:{computed:{validate:oo("boolean"),default:!1},key:{validate:function(){var e=ao("Identifier","StringLiteral","NumericLiteral"),t=ao("Expression");return function(n,r,i){(n.computed?t:e)(n,r,i)}}()},value:{validate:ao("Expression","PatternLike")},shorthand:{validate:oo("boolean"),default:!1},decorators:{validate:so(oo("array"),ro(ao("Decorator"))),optional:!0}},visitor:["key","value","decorators"],aliases:["UserWhitespacable","Property","ObjectMember"]}),uo("RestElement",{visitor:["argument","typeAnnotation"],builder:["argument"],aliases:["LVal","PatternLike"],deprecatedAlias:"RestProperty",fields:Object.assign({},yo,{argument:{validate:ao("LVal")}})}),uo("ReturnStatement",{visitor:["argument"],aliases:["Statement","Terminatorless","CompletionStatement"],fields:{argument:{validate:ao("Expression"),optional:!0}}}),uo("SequenceExpression",{visitor:["expressions"],fields:{expressions:{validate:so(oo("array"),ro(ao("Expression")))}},aliases:["Expression"]}),uo("ParenthesizedExpression",{visitor:["expression"],aliases:["Expression","ExpressionWrapper"],fields:{expression:{validate:ao("Expression")}}}),uo("SwitchCase",{visitor:["test","consequent"],fields:{test:{validate:ao("Expression"),optional:!0},consequent:{validate:so(oo("array"),ro(ao("Statement")))}}}),uo("SwitchStatement",{visitor:["discriminant","cases"],aliases:["Statement","BlockParent","Scopable"],fields:{discriminant:{validate:ao("Expression")},cases:{validate:so(oo("array"),ro(ao("SwitchCase")))}}}),uo("ThisExpression",{aliases:["Expression"]}),uo("ThrowStatement",{visitor:["argument"],aliases:["Statement","Terminatorless","CompletionStatement"],fields:{argument:{validate:ao("Expression")}}}),uo("TryStatement",{visitor:["block","handler","finalizer"],aliases:["Statement"],fields:{block:{validate:ao("BlockStatement")},handler:{optional:!0,validate:ao("CatchClause")},finalizer:{optional:!0,validate:ao("BlockStatement")}}}),uo("UnaryExpression",{builder:["operator","argument","prefix"],fields:{prefix:{default:!0},argument:{validate:ao("Expression")},operator:{validate:io.apply(void 0,Ba)}},visitor:["argument"],aliases:["UnaryLike","Expression"]}),uo("UpdateExpression",{builder:["operator","argument","prefix"],fields:{prefix:{default:!1},argument:{validate:ao("Expression")},operator:{validate:io.apply(void 0,xa)}},visitor:["argument"],aliases:["Expression"]}),uo("VariableDeclaration",{builder:["kind","declarations"],visitor:["declarations"],aliases:["Statement","Declaration"],fields:{declare:{validate:oo("boolean"),optional:!0},kind:{validate:so(oo("string"),io("var","let","const"))},declarations:{validate:so(oo("array"),ro(ao("VariableDeclarator")))}}}),uo("VariableDeclarator",{visitor:["id","init"],fields:{id:{validate:ao("LVal")},definite:{optional:!0,validate:oo("boolean")},init:{optional:!0,validate:ao("Expression")}}}),uo("WhileStatement",{visitor:["test","body"],aliases:["Statement","BlockParent","Loop","While","Scopable"],fields:{test:{validate:ao("Expression")},body:{validate:ao("BlockStatement","Statement")}}}),uo("WithStatement",{visitor:["object","body"],aliases:["Statement"],fields:{object:{validate:ao("Expression")},body:{validate:ao("BlockStatement","Statement")}}}),uo("AssignmentPattern",{visitor:["left","right","decorators"],builder:["left","right"],aliases:["Pattern","PatternLike","LVal"],fields:Object.assign({},yo,{left:{validate:ao("Identifier","ObjectPattern","ArrayPattern","MemberExpression")},right:{validate:ao("Expression")},decorators:{validate:so(oo("array"),ro(ao("Decorator")))}})}),uo("ArrayPattern",{visitor:["elements","typeAnnotation"],builder:["elements"],aliases:["Pattern","PatternLike","LVal"],fields:Object.assign({},yo,{elements:{validate:so(oo("array"),ro(ao("PatternLike")))},decorators:{validate:so(oo("array"),ro(ao("Decorator")))}})}),uo("ArrowFunctionExpression",{builder:["params","body","async"],visitor:["params","body","returnType","typeParameters"],aliases:["Scopable","Function","BlockParent","FunctionParent","Expression","Pureish"],fields:Object.assign({},co,{},po,{expression:{validate:oo("boolean")},body:{validate:ao("BlockStatement","Expression")}})}),uo("ClassBody",{visitor:["body"],fields:{body:{validate:so(oo("array"),ro(ao("ClassMethod","ClassPrivateMethod","ClassProperty","ClassPrivateProperty","TSDeclareMethod","TSIndexSignature")))}}});var vo={typeParameters:{validate:ao("TypeParameterDeclaration","TSTypeParameterDeclaration","Noop"),optional:!0},body:{validate:ao("ClassBody")},superClass:{optional:!0,validate:ao("Expression")},superTypeParameters:{validate:ao("TypeParameterInstantiation","TSTypeParameterInstantiation"),optional:!0},implements:{validate:so(oo("array"),ro(ao("TSExpressionWithTypeArguments","ClassImplements"))),optional:!0}};uo("ClassDeclaration",{builder:["id","superClass","body","decorators"],visitor:["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],aliases:["Scopable","Class","Statement","Declaration","Pureish"],fields:Object.assign({},vo,{declare:{validate:oo("boolean"),optional:!0},abstract:{validate:oo("boolean"),optional:!0},id:{validate:ao("Identifier"),optional:!0},decorators:{validate:so(oo("array"),ro(ao("Decorator"))),optional:!0}})}),uo("ClassExpression",{inherits:"ClassDeclaration",aliases:["Scopable","Class","Expression","Pureish"],fields:Object.assign({},vo,{id:{optional:!0,validate:ao("Identifier")},body:{validate:ao("ClassBody")},superClass:{optional:!0,validate:ao("Expression")},decorators:{validate:so(oo("array"),ro(ao("Decorator"))),optional:!0}})}),uo("ExportAllDeclaration",{visitor:["source"],aliases:["Statement","Declaration","ModuleDeclaration","ExportDeclaration"],fields:{source:{validate:ao("StringLiteral")}}}),uo("ExportDefaultDeclaration",{visitor:["declaration"],aliases:["Statement","Declaration","ModuleDeclaration","ExportDeclaration"],fields:{declaration:{validate:ao("FunctionDeclaration","TSDeclareFunction","ClassDeclaration","Expression")}}}),uo("ExportNamedDeclaration",{visitor:["declaration","specifiers","source"],aliases:["Statement","Declaration","ModuleDeclaration","ExportDeclaration"],fields:{declaration:{validate:ao("Declaration"),optional:!0},specifiers:{validate:so(oo("array"),ro(ao("ExportSpecifier","ExportDefaultSpecifier","ExportNamespaceSpecifier")))},source:{validate:ao("StringLiteral"),optional:!0},exportKind:Za(io("type","value"))}}),uo("ExportSpecifier",{visitor:["local","exported"],aliases:["ModuleSpecifier"],fields:{local:{validate:ao("Identifier")},exported:{validate:ao("Identifier")}}}),uo("ForOfStatement",{visitor:["left","right","body"],aliases:["Scopable","Statement","For","BlockParent","Loop","ForXStatement"],fields:{left:{validate:ao("VariableDeclaration","LVal")},right:{validate:ao("Expression")},body:{validate:ao("Statement")},await:{default:!1,validate:oo("boolean")}}}),uo("ImportDeclaration",{visitor:["specifiers","source"],aliases:["Statement","Declaration","ModuleDeclaration"],fields:{specifiers:{validate:so(oo("array"),ro(ao("ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier")))},source:{validate:ao("StringLiteral")},importKind:{validate:io("type","typeof","value"),optional:!0}}}),uo("ImportDefaultSpecifier",{visitor:["local"],aliases:["ModuleSpecifier"],fields:{local:{validate:ao("Identifier")}}}),uo("ImportNamespaceSpecifier",{visitor:["local"],aliases:["ModuleSpecifier"],fields:{local:{validate:ao("Identifier")}}}),uo("ImportSpecifier",{visitor:["local","imported"],aliases:["ModuleSpecifier"],fields:{local:{validate:ao("Identifier")},imported:{validate:ao("Identifier")},importKind:{validate:io("type","typeof"),optional:!0}}}),uo("MetaProperty",{visitor:["meta","property"],aliases:["Expression"],fields:{meta:{validate:ao("Identifier")},property:{validate:ao("Identifier")}}});var go={abstract:{validate:oo("boolean"),optional:!0},accessibility:{validate:so(oo("string"),io("public","private","protected")),optional:!0},static:{default:!1,validate:oo("boolean")},computed:{default:!1,validate:oo("boolean")},optional:{validate:oo("boolean"),optional:!0},key:{validate:so(function(){var e=ao("Identifier","StringLiteral","NumericLiteral"),t=ao("Expression");return function(n,r,i){(n.computed?t:e)(n,r,i)}}(),ao("Identifier","StringLiteral","NumericLiteral","Expression"))}},bo=Object.assign({},co,{},go,{kind:{validate:so(oo("string"),io("get","set","method","constructor")),default:"method"},access:{validate:so(oo("string"),io("public","private","protected")),optional:!0},decorators:{validate:so(oo("array"),ro(ao("Decorator"))),optional:!0}});uo("ClassMethod",{aliases:["Function","Scopable","BlockParent","FunctionParent","Method"],builder:["kind","key","params","body","computed","static"],visitor:["key","params","body","decorators","returnType","typeParameters"],fields:Object.assign({},bo,{},po,{body:{validate:ao("BlockStatement")}})}),uo("ObjectPattern",{visitor:["properties","typeAnnotation","decorators"],builder:["properties"],aliases:["Pattern","PatternLike","LVal"],fields:Object.assign({},yo,{properties:{validate:so(oo("array"),ro(ao("RestElement","ObjectProperty")))}})}),uo("SpreadElement",{visitor:["argument"],aliases:["UnaryLike"],deprecatedAlias:"SpreadProperty",fields:{argument:{validate:ao("Expression")}}}),uo("Super",{aliases:["Expression"]}),uo("TaggedTemplateExpression",{visitor:["tag","quasi"],aliases:["Expression"],fields:{tag:{validate:ao("Expression")},quasi:{validate:ao("TemplateLiteral")},typeParameters:{validate:ao("TypeParameterInstantiation","TSTypeParameterInstantiation"),optional:!0}}}),uo("TemplateElement",{builder:["value","tail"],fields:{value:{validate:function(e){function t(t,n,r){for(var i=[],a=0,o=Object.keys(e);a<o.length;a++){var s=o[a];try{Wa(t,s,r[s],e[s])}catch(e){if(e instanceof TypeError){i.push(e.message);continue}throw e}}if(i.length)throw new TypeError("Property "+n+" of "+t.type+" expected to have the following:\n"+i.join("\n"))}return t.shapeOf=e,t}({raw:{validate:oo("string")},cooked:{validate:oo("string"),optional:!0}})},tail:{validate:oo("boolean"),default:!1}}}),uo("TemplateLiteral",{visitor:["quasis","expressions"],aliases:["Expression","Literal"],fields:{quasis:{validate:so(oo("array"),ro(ao("TemplateElement")))},expressions:{validate:so(oo("array"),ro(ao("Expression")),(function(e,t,n){if(e.quasis.length!==n.length+1)throw new TypeError("Number of "+e.type+" quasis should be exactly one more than the number of expressions.\nExpected "+(n.length+1)+" quasis but got "+e.quasis.length)}))}}}),uo("YieldExpression",{builder:["argument","delegate"],visitor:["argument"],aliases:["Expression","Terminatorless"],fields:{delegate:{validate:oo("boolean"),default:!1},argument:{optional:!0,validate:ao("Expression")}}});var Eo=function(e,t){void 0===t&&(t="TypeParameterDeclaration"),uo(e,{builder:["id","typeParameters","extends","body"],visitor:["id","typeParameters","extends","mixins","implements","body"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:Qa("Identifier"),typeParameters:eo(t),extends:Za(to("InterfaceExtends")),mixins:Za(to("InterfaceExtends")),implements:Za(to("ClassImplements")),body:Qa("ObjectTypeAnnotation")}})};uo("AnyTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]}),uo("ArrayTypeAnnotation",{visitor:["elementType"],aliases:["Flow","FlowType"],fields:{elementType:Qa("FlowType")}}),uo("BooleanTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]}),uo("BooleanLiteralTypeAnnotation",{builder:["value"],aliases:["Flow","FlowType"],fields:{value:Ya(oo("boolean"))}}),uo("NullLiteralTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]}),uo("ClassImplements",{visitor:["id","typeParameters"],aliases:["Flow"],fields:{id:Qa("Identifier"),typeParameters:eo("TypeParameterInstantiation")}}),Eo("DeclareClass"),uo("DeclareFunction",{visitor:["id"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:Qa("Identifier"),predicate:eo("DeclaredPredicate")}}),Eo("DeclareInterface"),uo("DeclareModule",{builder:["id","body","kind"],visitor:["id","body"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:Qa(["Identifier","StringLiteral"]),body:Qa("BlockStatement"),kind:Za(io("CommonJS","ES"))}}),uo("DeclareModuleExports",{visitor:["typeAnnotation"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{typeAnnotation:Qa("TypeAnnotation")}}),uo("DeclareTypeAlias",{visitor:["id","typeParameters","right"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:Qa("Identifier"),typeParameters:eo("TypeParameterDeclaration"),right:Qa("FlowType")}}),uo("DeclareOpaqueType",{visitor:["id","typeParameters","supertype"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:Qa("Identifier"),typeParameters:eo("TypeParameterDeclaration"),supertype:eo("FlowType")}}),uo("DeclareVariable",{visitor:["id"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:Qa("Identifier")}}),uo("DeclareExportDeclaration",{visitor:["declaration","specifiers","source"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{declaration:eo("Flow"),specifiers:Za(to(["ExportSpecifier","ExportNamespaceSpecifier"])),source:eo("StringLiteral"),default:Za(oo("boolean"))}}),uo("DeclareExportAllDeclaration",{visitor:["source"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{source:Qa("StringLiteral"),exportKind:Za(io("type","value"))}}),uo("DeclaredPredicate",{visitor:["value"],aliases:["Flow","FlowPredicate"],fields:{value:Qa("Flow")}}),uo("ExistsTypeAnnotation",{aliases:["Flow","FlowType"]}),uo("FunctionTypeAnnotation",{visitor:["typeParameters","params","rest","returnType"],aliases:["Flow","FlowType"],fields:{typeParameters:eo("TypeParameterDeclaration"),params:Ya(to("FunctionTypeParam")),rest:eo("FunctionTypeParam"),returnType:Qa("FlowType")}}),uo("FunctionTypeParam",{visitor:["name","typeAnnotation"],aliases:["Flow"],fields:{name:eo("Identifier"),typeAnnotation:Qa("FlowType"),optional:Za(oo("boolean"))}}),uo("GenericTypeAnnotation",{visitor:["id","typeParameters"],aliases:["Flow","FlowType"],fields:{id:Qa(["Identifier","QualifiedTypeIdentifier"]),typeParameters:eo("TypeParameterInstantiation")}}),uo("InferredPredicate",{aliases:["Flow","FlowPredicate"]}),uo("InterfaceExtends",{visitor:["id","typeParameters"],aliases:["Flow"],fields:{id:Qa(["Identifier","QualifiedTypeIdentifier"]),typeParameters:eo("TypeParameterInstantiation")}}),Eo("InterfaceDeclaration"),uo("InterfaceTypeAnnotation",{visitor:["extends","body"],aliases:["Flow","FlowType"],fields:{extends:Za(to("InterfaceExtends")),body:Qa("ObjectTypeAnnotation")}}),uo("IntersectionTypeAnnotation",{visitor:["types"],aliases:["Flow","FlowType"],fields:{types:Ya(to("FlowType"))}}),uo("MixedTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]}),uo("EmptyTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]}),uo("NullableTypeAnnotation",{visitor:["typeAnnotation"],aliases:["Flow","FlowType"],fields:{typeAnnotation:Qa("FlowType")}}),uo("NumberLiteralTypeAnnotation",{builder:["value"],aliases:["Flow","FlowType"],fields:{value:Ya(oo("number"))}}),uo("NumberTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]}),uo("ObjectTypeAnnotation",{visitor:["properties","indexers","callProperties","internalSlots"],aliases:["Flow","FlowType"],builder:["properties","indexers","callProperties","internalSlots","exact"],fields:{properties:Ya(to(["ObjectTypeProperty","ObjectTypeSpreadProperty"])),indexers:Za(to("ObjectTypeIndexer")),callProperties:Za(to("ObjectTypeCallProperty")),internalSlots:Za(to("ObjectTypeInternalSlot")),exact:{validate:oo("boolean"),default:!1},inexact:Za(oo("boolean"))}}),uo("ObjectTypeInternalSlot",{visitor:["id","value","optional","static","method"],aliases:["Flow","UserWhitespacable"],fields:{id:Qa("Identifier"),value:Qa("FlowType"),optional:Ya(oo("boolean")),static:Ya(oo("boolean")),method:Ya(oo("boolean"))}}),uo("ObjectTypeCallProperty",{visitor:["value"],aliases:["Flow","UserWhitespacable"],fields:{value:Qa("FlowType"),static:Ya(oo("boolean"))}}),uo("ObjectTypeIndexer",{visitor:["id","key","value","variance"],aliases:["Flow","UserWhitespacable"],fields:{id:eo("Identifier"),key:Qa("FlowType"),value:Qa("FlowType"),static:Ya(oo("boolean")),variance:eo("Variance")}}),uo("ObjectTypeProperty",{visitor:["key","value","variance"],aliases:["Flow","UserWhitespacable"],fields:{key:Qa(["Identifier","StringLiteral"]),value:Qa("FlowType"),kind:Ya(io("init","get","set")),static:Ya(oo("boolean")),proto:Ya(oo("boolean")),optional:Ya(oo("boolean")),variance:eo("Variance")}}),uo("ObjectTypeSpreadProperty",{visitor:["argument"],aliases:["Flow","UserWhitespacable"],fields:{argument:Qa("FlowType")}}),uo("OpaqueType",{visitor:["id","typeParameters","supertype","impltype"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:Qa("Identifier"),typeParameters:eo("TypeParameterDeclaration"),supertype:eo("FlowType"),impltype:Qa("FlowType")}}),uo("QualifiedTypeIdentifier",{visitor:["id","qualification"],aliases:["Flow"],fields:{id:Qa("Identifier"),qualification:Qa(["Identifier","QualifiedTypeIdentifier"])}}),uo("StringLiteralTypeAnnotation",{builder:["value"],aliases:["Flow","FlowType"],fields:{value:Ya(oo("string"))}}),uo("StringTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]}),uo("ThisTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]}),uo("TupleTypeAnnotation",{visitor:["types"],aliases:["Flow","FlowType"],fields:{types:Ya(to("FlowType"))}}),uo("TypeofTypeAnnotation",{visitor:["argument"],aliases:["Flow","FlowType"],fields:{argument:Qa("FlowType")}}),uo("TypeAlias",{visitor:["id","typeParameters","right"],aliases:["Flow","FlowDeclaration","Statement","Declaration"],fields:{id:Qa("Identifier"),typeParameters:eo("TypeParameterDeclaration"),right:Qa("FlowType")}}),uo("TypeAnnotation",{aliases:["Flow"],visitor:["typeAnnotation"],fields:{typeAnnotation:Qa("FlowType")}}),uo("TypeCastExpression",{visitor:["expression","typeAnnotation"],aliases:["Flow","ExpressionWrapper","Expression"],fields:{expression:Qa("Expression"),typeAnnotation:Qa("TypeAnnotation")}}),uo("TypeParameter",{aliases:["Flow"],visitor:["bound","default","variance"],fields:{name:Ya(oo("string")),bound:eo("TypeAnnotation"),default:eo("FlowType"),variance:eo("Variance")}}),uo("TypeParameterDeclaration",{aliases:["Flow"],visitor:["params"],fields:{params:Ya(to("TypeParameter"))}}),uo("TypeParameterInstantiation",{aliases:["Flow"],visitor:["params"],fields:{params:Ya(to("FlowType"))}}),uo("UnionTypeAnnotation",{visitor:["types"],aliases:["Flow","FlowType"],fields:{types:Ya(to("FlowType"))}}),uo("Variance",{aliases:["Flow"],builder:["kind"],fields:{kind:Ya(io("minus","plus"))}}),uo("VoidTypeAnnotation",{aliases:["Flow","FlowType","FlowBaseAnnotation"]}),uo("EnumDeclaration",{alises:["Declaration"],visitor:["id","body"],fields:{id:Qa("Identifier"),body:Qa(["EnumBooleanBody","EnumNumberBody","EnumStringBody","EnumSymbolBody"])}}),uo("EnumBooleanBody",{aliases:["EnumBody"],visitor:["members"],fields:{explicit:Ya(oo("boolean")),members:no("EnumBooleanMember")}}),uo("EnumNumberBody",{aliases:["EnumBody"],visitor:["members"],fields:{explicit:Ya(oo("boolean")),members:no("EnumNumberMember")}}),uo("EnumStringBody",{aliases:["EnumBody"],visitor:["members"],fields:{explicit:Ya(oo("boolean")),members:no(["EnumStringMember","EnumDefaultedMember"])}}),uo("EnumSymbolBody",{aliases:["EnumBody"],visitor:["members"],fields:{members:no("EnumDefaultedMember")}}),uo("EnumBooleanMember",{aliases:["EnumMember"],visitor:["id"],fields:{id:Qa("Identifier"),init:Qa("BooleanLiteral")}}),uo("EnumNumberMember",{aliases:["EnumMember"],visitor:["id","init"],fields:{id:Qa("Identifier"),init:Qa("NumericLiteral")}}),uo("EnumStringMember",{aliases:["EnumMember"],visitor:["id","init"],fields:{id:Qa("Identifier"),init:Qa("StringLiteral")}}),uo("EnumDefaultedMember",{aliases:["EnumMember"],visitor:["id"],fields:{id:Qa("Identifier")}}),uo("JSXAttribute",{visitor:["name","value"],aliases:["JSX","Immutable"],fields:{name:{validate:ao("JSXIdentifier","JSXNamespacedName")},value:{optional:!0,validate:ao("JSXElement","JSXFragment","StringLiteral","JSXExpressionContainer")}}}),uo("JSXClosingElement",{visitor:["name"],aliases:["JSX","Immutable"],fields:{name:{validate:ao("JSXIdentifier","JSXMemberExpression","JSXNamespacedName")}}}),uo("JSXElement",{builder:["openingElement","closingElement","children","selfClosing"],visitor:["openingElement","children","closingElement"],aliases:["JSX","Immutable","Expression"],fields:{openingElement:{validate:ao("JSXOpeningElement")},closingElement:{optional:!0,validate:ao("JSXClosingElement")},children:{validate:so(oo("array"),ro(ao("JSXText","JSXExpressionContainer","JSXSpreadChild","JSXElement","JSXFragment")))}}}),uo("JSXEmptyExpression",{aliases:["JSX"]}),uo("JSXExpressionContainer",{visitor:["expression"],aliases:["JSX","Immutable"],fields:{expression:{validate:ao("Expression","JSXEmptyExpression")}}}),uo("JSXSpreadChild",{visitor:["expression"],aliases:["JSX","Immutable"],fields:{expression:{validate:ao("Expression")}}}),uo("JSXIdentifier",{builder:["name"],aliases:["JSX"],fields:{name:{validate:oo("string")}}}),uo("JSXMemberExpression",{visitor:["object","property"],aliases:["JSX"],fields:{object:{validate:ao("JSXMemberExpression","JSXIdentifier")},property:{validate:ao("JSXIdentifier")}}}),uo("JSXNamespacedName",{visitor:["namespace","name"],aliases:["JSX"],fields:{namespace:{validate:ao("JSXIdentifier")},name:{validate:ao("JSXIdentifier")}}}),uo("JSXOpeningElement",{builder:["name","attributes","selfClosing"],visitor:["name","attributes"],aliases:["JSX","Immutable"],fields:{name:{validate:ao("JSXIdentifier","JSXMemberExpression","JSXNamespacedName")},selfClosing:{default:!1,validate:oo("boolean")},attributes:{validate:so(oo("array"),ro(ao("JSXAttribute","JSXSpreadAttribute")))},typeParameters:{validate:ao("TypeParameterInstantiation","TSTypeParameterInstantiation"),optional:!0}}}),uo("JSXSpreadAttribute",{visitor:["argument"],aliases:["JSX"],fields:{argument:{validate:ao("Expression")}}}),uo("JSXText",{aliases:["JSX","Immutable"],builder:["value"],fields:{value:{validate:oo("string")}}}),uo("JSXFragment",{builder:["openingFragment","closingFragment","children"],visitor:["openingFragment","children","closingFragment"],aliases:["JSX","Immutable","Expression"],fields:{openingFragment:{validate:ao("JSXOpeningFragment")},closingFragment:{validate:ao("JSXClosingFragment")},children:{validate:so(oo("array"),ro(ao("JSXText","JSXExpressionContainer","JSXSpreadChild","JSXElement","JSXFragment")))}}}),uo("JSXOpeningFragment",{aliases:["JSX","Immutable"]}),uo("JSXClosingFragment",{aliases:["JSX","Immutable"]});for(var Ao=["Identifier","StringLiteral","Expression","Statement","Declaration","BlockStatement","ClassBody","Pattern"],Do={Declaration:["Statement"],Pattern:["PatternLike","LVal"]},So=0,xo=Ao;So<xo.length;So++){var To=xo[So],Co=Ha[To];Co&&Co.length&&(Do[To]=Co)}var wo={};Object.keys(Do).forEach((function(e){Do[e].forEach((function(t){Object.hasOwnProperty.call(wo,t)||(wo[t]=[]),wo[t].push(e)}))})),uo("Noop",{visitor:[]}),uo("Placeholder",{visitor:[],builder:["expectedNode","name"],fields:{name:{validate:ao("Identifier")},expectedNode:{validate:io.apply(void 0,Ao)}}}),uo("V8IntrinsicIdentifier",{builder:["name"],fields:{name:{validate:oo("string")}}}),uo("ArgumentPlaceholder",{}),uo("AwaitExpression",{builder:["argument"],visitor:["argument"],aliases:["Expression","Terminatorless"],fields:{argument:{validate:ao("Expression")}}}),uo("BindExpression",{visitor:["object","callee"],aliases:["Expression"],fields:{}}),uo("ClassProperty",{visitor:["key","value","typeAnnotation","decorators"],builder:["key","value","typeAnnotation","decorators","computed","static"],aliases:["Property"],fields:Object.assign({},go,{value:{validate:ao("Expression"),optional:!0},definite:{validate:oo("boolean"),optional:!0},typeAnnotation:{validate:ao("TypeAnnotation","TSTypeAnnotation","Noop"),optional:!0},decorators:{validate:so(oo("array"),ro(ao("Decorator"))),optional:!0},readonly:{validate:oo("boolean"),optional:!0},declare:{validate:oo("boolean"),optional:!0}})}),uo("OptionalMemberExpression",{builder:["object","property","computed","optional"],visitor:["object","property"],aliases:["Expression"],fields:{object:{validate:ao("Expression")},property:{validate:function(){var e=ao("Identifier"),t=ao("Expression");return function(n,r,i){(n.computed?t:e)(n,r,i)}}()},computed:{default:!1},optional:{validate:oo("boolean")}}}),uo("PipelineTopicExpression",{builder:["expression"],visitor:["expression"],fields:{expression:{validate:ao("Expression")}}}),uo("PipelineBareFunction",{builder:["callee"],visitor:["callee"],fields:{callee:{validate:ao("Expression")}}}),uo("PipelinePrimaryTopicReference",{aliases:["Expression"]}),uo("OptionalCallExpression",{visitor:["callee","arguments","typeParameters","typeArguments"],builder:["callee","arguments","optional"],aliases:["Expression"],fields:{callee:{validate:ao("Expression")},arguments:{validate:so(oo("array"),ro(ao("Expression","SpreadElement","JSXNamespacedName")))},optional:{validate:oo("boolean")},typeArguments:{validate:ao("TypeParameterInstantiation"),optional:!0},typeParameters:{validate:ao("TSTypeParameterInstantiation"),optional:!0}}}),uo("ClassPrivateProperty",{visitor:["key","value","decorators"],builder:["key","value","decorators"],aliases:["Property","Private"],fields:{key:{validate:ao("PrivateName")},value:{validate:ao("Expression"),optional:!0},decorators:{validate:so(oo("array"),ro(ao("Decorator"))),optional:!0}}}),uo("ClassPrivateMethod",{builder:["kind","key","params","body","static"],visitor:["key","params","body","decorators","returnType","typeParameters"],aliases:["Function","Scopable","BlockParent","FunctionParent","Method","Private"],fields:Object.assign({},bo,{key:{validate:ao("PrivateName")},body:{validate:ao("BlockStatement")}})}),uo("Import",{aliases:["Expression"]}),uo("Decorator",{visitor:["expression"],fields:{expression:{validate:ao("Expression")}}}),uo("DoExpression",{visitor:["body"],aliases:["Expression"],fields:{body:{validate:ao("BlockStatement")}}}),uo("ExportDefaultSpecifier",{visitor:["exported"],aliases:["ModuleSpecifier"],fields:{exported:{validate:ao("Identifier")}}}),uo("ExportNamespaceSpecifier",{visitor:["exported"],aliases:["ModuleSpecifier"],fields:{exported:{validate:ao("Identifier")}}}),uo("PrivateName",{visitor:["id"],aliases:["Private"],fields:{id:{validate:ao("Identifier")}}}),uo("BigIntLiteral",{builder:["value"],fields:{value:{validate:oo("string")}},aliases:["Expression","Pureish","Literal","Immutable"]});var Po=oo("boolean"),Fo={returnType:{validate:ao("TSTypeAnnotation","Noop"),optional:!0},typeParameters:{validate:ao("TSTypeParameterDeclaration","Noop"),optional:!0}};uo("TSParameterProperty",{aliases:["LVal"],visitor:["parameter"],fields:{accessibility:{validate:io("public","private","protected"),optional:!0},readonly:{validate:oo("boolean"),optional:!0},parameter:{validate:ao("Identifier","AssignmentPattern")}}}),uo("TSDeclareFunction",{aliases:["Statement","Declaration"],visitor:["id","typeParameters","params","returnType"],fields:Object.assign({},ho,{},Fo)}),uo("TSDeclareMethod",{visitor:["decorators","key","typeParameters","params","returnType"],fields:Object.assign({},bo,{},Fo)}),uo("TSQualifiedName",{aliases:["TSEntityName"],visitor:["left","right"],fields:{left:Qa("TSEntityName"),right:Qa("Identifier")}});var ko={typeParameters:eo("TSTypeParameterDeclaration"),parameters:no(["Identifier","RestElement"]),typeAnnotation:eo("TSTypeAnnotation")},_o={aliases:["TSTypeElement"],visitor:["typeParameters","parameters","typeAnnotation"],fields:ko};uo("TSCallSignatureDeclaration",_o),uo("TSConstructSignatureDeclaration",_o);var Io={key:Qa("Expression"),computed:Ya(Po),optional:Za(Po)};uo("TSPropertySignature",{aliases:["TSTypeElement"],visitor:["key","typeAnnotation","initializer"],fields:Object.assign({},Io,{readonly:Za(Po),typeAnnotation:eo("TSTypeAnnotation"),initializer:eo("Expression")})}),uo("TSMethodSignature",{aliases:["TSTypeElement"],visitor:["key","typeParameters","parameters","typeAnnotation"],fields:Object.assign({},ko,{},Io)}),uo("TSIndexSignature",{aliases:["TSTypeElement"],visitor:["parameters","typeAnnotation"],fields:{readonly:Za(Po),parameters:no("Identifier"),typeAnnotation:eo("TSTypeAnnotation")}});for(var Oo=0,Bo=["TSAnyKeyword","TSBooleanKeyword","TSBigIntKeyword","TSNeverKeyword","TSNullKeyword","TSNumberKeyword","TSObjectKeyword","TSStringKeyword","TSSymbolKeyword","TSUndefinedKeyword","TSUnknownKeyword","TSVoidKeyword"];Oo<Bo.length;Oo++){uo(Bo[Oo],{aliases:["TSType"],visitor:[],fields:{}})}uo("TSThisType",{aliases:["TSType"],visitor:[],fields:{}});var No={aliases:["TSType"],visitor:["typeParameters","parameters","typeAnnotation"],fields:ko};uo("TSFunctionType",No),uo("TSConstructorType",No),uo("TSTypeReference",{aliases:["TSType"],visitor:["typeName","typeParameters"],fields:{typeName:Qa("TSEntityName"),typeParameters:eo("TSTypeParameterInstantiation")}}),uo("TSTypePredicate",{aliases:["TSType"],visitor:["parameterName","typeAnnotation"],builder:["parameterName","typeAnnotation","asserts"],fields:{parameterName:Qa(["Identifier","TSThisType"]),typeAnnotation:eo("TSTypeAnnotation"),asserts:Za(Po)}}),uo("TSTypeQuery",{aliases:["TSType"],visitor:["exprName"],fields:{exprName:Qa(["TSEntityName","TSImportType"])}}),uo("TSTypeLiteral",{aliases:["TSType"],visitor:["members"],fields:{members:no("TSTypeElement")}}),uo("TSArrayType",{aliases:["TSType"],visitor:["elementType"],fields:{elementType:Qa("TSType")}}),uo("TSTupleType",{aliases:["TSType"],visitor:["elementTypes"],fields:{elementTypes:no("TSType")}}),uo("TSOptionalType",{aliases:["TSType"],visitor:["typeAnnotation"],fields:{typeAnnotation:Qa("TSType")}}),uo("TSRestType",{aliases:["TSType"],visitor:["typeAnnotation"],fields:{typeAnnotation:Qa("TSType")}});var Mo={aliases:["TSType"],visitor:["types"],fields:{types:no("TSType")}};uo("TSUnionType",Mo),uo("TSIntersectionType",Mo),uo("TSConditionalType",{aliases:["TSType"],visitor:["checkType","extendsType","trueType","falseType"],fields:{checkType:Qa("TSType"),extendsType:Qa("TSType"),trueType:Qa("TSType"),falseType:Qa("TSType")}}),uo("TSInferType",{aliases:["TSType"],visitor:["typeParameter"],fields:{typeParameter:Qa("TSTypeParameter")}}),uo("TSParenthesizedType",{aliases:["TSType"],visitor:["typeAnnotation"],fields:{typeAnnotation:Qa("TSType")}}),uo("TSTypeOperator",{aliases:["TSType"],visitor:["typeAnnotation"],fields:{operator:Ya(oo("string")),typeAnnotation:Qa("TSType")}}),uo("TSIndexedAccessType",{aliases:["TSType"],visitor:["objectType","indexType"],fields:{objectType:Qa("TSType"),indexType:Qa("TSType")}}),uo("TSMappedType",{aliases:["TSType"],visitor:["typeParameter","typeAnnotation"],fields:{readonly:Za(Po),typeParameter:Qa("TSTypeParameter"),optional:Za(Po),typeAnnotation:eo("TSType")}}),uo("TSLiteralType",{aliases:["TSType"],visitor:["literal"],fields:{literal:Qa(["NumericLiteral","StringLiteral","BooleanLiteral"])}}),uo("TSExpressionWithTypeArguments",{aliases:["TSType"],visitor:["expression","typeParameters"],fields:{expression:Qa("TSEntityName"),typeParameters:eo("TSTypeParameterInstantiation")}}),uo("TSInterfaceDeclaration",{aliases:["Statement","Declaration"],visitor:["id","typeParameters","extends","body"],fields:{declare:Za(Po),id:Qa("Identifier"),typeParameters:eo("TSTypeParameterDeclaration"),extends:Za(to("TSExpressionWithTypeArguments")),body:Qa("TSInterfaceBody")}}),uo("TSInterfaceBody",{visitor:["body"],fields:{body:no("TSTypeElement")}}),uo("TSTypeAliasDeclaration",{aliases:["Statement","Declaration"],visitor:["id","typeParameters","typeAnnotation"],fields:{declare:Za(Po),id:Qa("Identifier"),typeParameters:eo("TSTypeParameterDeclaration"),typeAnnotation:Qa("TSType")}}),uo("TSAsExpression",{aliases:["Expression"],visitor:["expression","typeAnnotation"],fields:{expression:Qa("Expression"),typeAnnotation:Qa("TSType")}}),uo("TSTypeAssertion",{aliases:["Expression"],visitor:["typeAnnotation","expression"],fields:{typeAnnotation:Qa("TSType"),expression:Qa("Expression")}}),uo("TSEnumDeclaration",{aliases:["Statement","Declaration"],visitor:["id","members"],fields:{declare:Za(Po),const:Za(Po),id:Qa("Identifier"),members:no("TSEnumMember"),initializer:eo("Expression")}}),uo("TSEnumMember",{visitor:["id","initializer"],fields:{id:Qa(["Identifier","StringLiteral"]),initializer:eo("Expression")}}),uo("TSModuleDeclaration",{aliases:["Statement","Declaration"],visitor:["id","body"],fields:{declare:Za(Po),global:Za(Po),id:Qa(["Identifier","StringLiteral"]),body:Qa(["TSModuleBlock","TSModuleDeclaration"])}}),uo("TSModuleBlock",{aliases:["Scopable","Block","BlockParent"],visitor:["body"],fields:{body:no("Statement")}}),uo("TSImportType",{aliases:["TSType"],visitor:["argument","qualifier","typeParameters"],fields:{argument:Qa("StringLiteral"),qualifier:eo("TSEntityName"),typeParameters:eo("TSTypeParameterInstantiation")}}),uo("TSImportEqualsDeclaration",{aliases:["Statement"],visitor:["id","moduleReference"],fields:{isExport:Ya(Po),id:Qa("Identifier"),moduleReference:Qa(["TSEntityName","TSExternalModuleReference"])}}),uo("TSExternalModuleReference",{visitor:["expression"],fields:{expression:Qa("StringLiteral")}}),uo("TSNonNullExpression",{aliases:["Expression"],visitor:["expression"],fields:{expression:Qa("Expression")}}),uo("TSExportAssignment",{aliases:["Statement"],visitor:["expression"],fields:{expression:Qa("Expression")}}),uo("TSNamespaceExportDeclaration",{aliases:["Statement"],visitor:["id"],fields:{id:Qa("Identifier")}}),uo("TSTypeAnnotation",{visitor:["typeAnnotation"],fields:{typeAnnotation:{validate:ao("TSType")}}}),uo("TSTypeParameterInstantiation",{visitor:["params"],fields:{params:{validate:so(oo("array"),ro(ao("TSType")))}}}),uo("TSTypeParameterDeclaration",{visitor:["params"],fields:{params:{validate:so(oo("array"),ro(ao("TSTypeParameter")))}}}),uo("TSTypeParameter",{builder:["constraint","default","name"],visitor:["constraint","default"],fields:{name:{validate:oo("string")},constraint:{validate:ao("TSType"),optional:!0},default:{validate:ao("TSType"),optional:!0}}}),da(Ga),da(Ha),da(qa),da(Ka),da(Xa),da(za),da(Do),da(wo);var Ro=Object.keys(Ga).concat(Object.keys(qa)).concat(Object.keys(za));function Lo(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var i=Xa[e],a=n.length;if(a>i.length)throw new Error(e+": Too many arguments passed. Received "+a+" but can receive no more than "+i.length);var o={type:e},s=0;i.forEach((function(t){var r,i=Ka[e][t];s<a&&(r=n[s]),void 0===r&&(r=pa(i.default)),o[t]=r,s++}));for(var u=0,l=Object.keys(o);u<l.length;u++){var c=l[u];Va(o,c,o[c])}return o}function jo(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ArrayExpression"].concat(t))}function Uo(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["AssignmentExpression"].concat(t))}function Vo(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["BinaryExpression"].concat(t))}function Wo(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["InterpreterDirective"].concat(t))}function Go(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["Directive"].concat(t))}function Ho(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DirectiveLiteral"].concat(t))}function qo(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["BlockStatement"].concat(t))}function Ko(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["BreakStatement"].concat(t))}function Xo(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["CallExpression"].concat(t))}function zo(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["CatchClause"].concat(t))}function Jo(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ConditionalExpression"].concat(t))}function Yo(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ContinueStatement"].concat(t))}function $o(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DebuggerStatement"].concat(t))}function Qo(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DoWhileStatement"].concat(t))}function Zo(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["EmptyStatement"].concat(t))}function es(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ExpressionStatement"].concat(t))}function ts(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["File"].concat(t))}function ns(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ForInStatement"].concat(t))}function rs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ForStatement"].concat(t))}function is(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["FunctionDeclaration"].concat(t))}function as(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["FunctionExpression"].concat(t))}function os(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["Identifier"].concat(t))}function ss(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["IfStatement"].concat(t))}function us(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["LabeledStatement"].concat(t))}function ls(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["StringLiteral"].concat(t))}function cs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["NumericLiteral"].concat(t))}function ps(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["NullLiteral"].concat(t))}function hs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["BooleanLiteral"].concat(t))}function fs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["RegExpLiteral"].concat(t))}function ds(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["LogicalExpression"].concat(t))}function ms(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["MemberExpression"].concat(t))}function ys(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["NewExpression"].concat(t))}function vs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["Program"].concat(t))}function gs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ObjectExpression"].concat(t))}function bs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ObjectMethod"].concat(t))}function Es(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ObjectProperty"].concat(t))}function As(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["RestElement"].concat(t))}function Ds(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ReturnStatement"].concat(t))}function Ss(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["SequenceExpression"].concat(t))}function xs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ParenthesizedExpression"].concat(t))}function Ts(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["SwitchCase"].concat(t))}function Cs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["SwitchStatement"].concat(t))}function ws(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ThisExpression"].concat(t))}function Ps(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ThrowStatement"].concat(t))}function Fs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TryStatement"].concat(t))}function ks(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["UnaryExpression"].concat(t))}function _s(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["UpdateExpression"].concat(t))}function Is(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["VariableDeclaration"].concat(t))}function Os(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["VariableDeclarator"].concat(t))}function Bs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["WhileStatement"].concat(t))}function Ns(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["WithStatement"].concat(t))}function Ms(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["AssignmentPattern"].concat(t))}function Rs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ArrayPattern"].concat(t))}function Ls(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ArrowFunctionExpression"].concat(t))}function js(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ClassBody"].concat(t))}function Us(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ClassDeclaration"].concat(t))}function Vs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ClassExpression"].concat(t))}function Ws(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ExportAllDeclaration"].concat(t))}function Gs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ExportDefaultDeclaration"].concat(t))}function Hs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ExportNamedDeclaration"].concat(t))}function qs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ExportSpecifier"].concat(t))}function Ks(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ForOfStatement"].concat(t))}function Xs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ImportDeclaration"].concat(t))}function zs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ImportDefaultSpecifier"].concat(t))}function Js(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ImportNamespaceSpecifier"].concat(t))}function Ys(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ImportSpecifier"].concat(t))}function $s(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["MetaProperty"].concat(t))}function Qs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ClassMethod"].concat(t))}function Zs(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ObjectPattern"].concat(t))}function eu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["SpreadElement"].concat(t))}function tu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["Super"].concat(t))}function nu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TaggedTemplateExpression"].concat(t))}function ru(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TemplateElement"].concat(t))}function iu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TemplateLiteral"].concat(t))}function au(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["YieldExpression"].concat(t))}function ou(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["AnyTypeAnnotation"].concat(t))}function su(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ArrayTypeAnnotation"].concat(t))}function uu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["BooleanTypeAnnotation"].concat(t))}function lu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["BooleanLiteralTypeAnnotation"].concat(t))}function cu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["NullLiteralTypeAnnotation"].concat(t))}function pu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ClassImplements"].concat(t))}function hu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DeclareClass"].concat(t))}function fu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DeclareFunction"].concat(t))}function du(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DeclareInterface"].concat(t))}function mu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DeclareModule"].concat(t))}function yu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DeclareModuleExports"].concat(t))}function vu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DeclareTypeAlias"].concat(t))}function gu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DeclareOpaqueType"].concat(t))}function bu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DeclareVariable"].concat(t))}function Eu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DeclareExportDeclaration"].concat(t))}function Au(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DeclareExportAllDeclaration"].concat(t))}function Du(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DeclaredPredicate"].concat(t))}function Su(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ExistsTypeAnnotation"].concat(t))}function xu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["FunctionTypeAnnotation"].concat(t))}function Tu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["FunctionTypeParam"].concat(t))}function Cu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["GenericTypeAnnotation"].concat(t))}function wu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["InferredPredicate"].concat(t))}function Pu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["InterfaceExtends"].concat(t))}function Fu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["InterfaceDeclaration"].concat(t))}function ku(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["InterfaceTypeAnnotation"].concat(t))}function _u(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["IntersectionTypeAnnotation"].concat(t))}function Iu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["MixedTypeAnnotation"].concat(t))}function Ou(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["EmptyTypeAnnotation"].concat(t))}function Bu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["NullableTypeAnnotation"].concat(t))}function Nu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["NumberLiteralTypeAnnotation"].concat(t))}function Mu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["NumberTypeAnnotation"].concat(t))}function Ru(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ObjectTypeAnnotation"].concat(t))}function Lu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ObjectTypeInternalSlot"].concat(t))}function ju(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ObjectTypeCallProperty"].concat(t))}function Uu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ObjectTypeIndexer"].concat(t))}function Vu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ObjectTypeProperty"].concat(t))}function Wu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ObjectTypeSpreadProperty"].concat(t))}function Gu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["OpaqueType"].concat(t))}function Hu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["QualifiedTypeIdentifier"].concat(t))}function qu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["StringLiteralTypeAnnotation"].concat(t))}function Ku(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["StringTypeAnnotation"].concat(t))}function Xu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ThisTypeAnnotation"].concat(t))}function zu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TupleTypeAnnotation"].concat(t))}function Ju(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TypeofTypeAnnotation"].concat(t))}function Yu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TypeAlias"].concat(t))}function $u(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TypeAnnotation"].concat(t))}function Qu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TypeCastExpression"].concat(t))}function Zu(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TypeParameter"].concat(t))}function el(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TypeParameterDeclaration"].concat(t))}function tl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TypeParameterInstantiation"].concat(t))}function nl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["UnionTypeAnnotation"].concat(t))}function rl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["Variance"].concat(t))}function il(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["VoidTypeAnnotation"].concat(t))}function al(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["EnumDeclaration"].concat(t))}function ol(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["EnumBooleanBody"].concat(t))}function sl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["EnumNumberBody"].concat(t))}function ul(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["EnumStringBody"].concat(t))}function ll(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["EnumSymbolBody"].concat(t))}function cl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["EnumBooleanMember"].concat(t))}function pl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["EnumNumberMember"].concat(t))}function hl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["EnumStringMember"].concat(t))}function fl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["EnumDefaultedMember"].concat(t))}function dl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXAttribute"].concat(t))}function ml(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXClosingElement"].concat(t))}function yl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXElement"].concat(t))}function vl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXEmptyExpression"].concat(t))}function gl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXExpressionContainer"].concat(t))}function bl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXSpreadChild"].concat(t))}function El(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXIdentifier"].concat(t))}function Al(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXMemberExpression"].concat(t))}function Dl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXNamespacedName"].concat(t))}function Sl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXOpeningElement"].concat(t))}function xl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXSpreadAttribute"].concat(t))}function Tl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXText"].concat(t))}function Cl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXFragment"].concat(t))}function wl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXOpeningFragment"].concat(t))}function Pl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["JSXClosingFragment"].concat(t))}function Fl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["Noop"].concat(t))}function kl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["Placeholder"].concat(t))}function _l(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["V8IntrinsicIdentifier"].concat(t))}function Il(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ArgumentPlaceholder"].concat(t))}function Ol(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["AwaitExpression"].concat(t))}function Bl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["BindExpression"].concat(t))}function Nl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ClassProperty"].concat(t))}function Ml(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["OptionalMemberExpression"].concat(t))}function Rl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["PipelineTopicExpression"].concat(t))}function Ll(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["PipelineBareFunction"].concat(t))}function jl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["PipelinePrimaryTopicReference"].concat(t))}function Ul(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["OptionalCallExpression"].concat(t))}function Vl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ClassPrivateProperty"].concat(t))}function Wl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ClassPrivateMethod"].concat(t))}function Gl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["Import"].concat(t))}function Hl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["Decorator"].concat(t))}function ql(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["DoExpression"].concat(t))}function Kl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ExportDefaultSpecifier"].concat(t))}function Xl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["ExportNamespaceSpecifier"].concat(t))}function zl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["PrivateName"].concat(t))}function Jl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["BigIntLiteral"].concat(t))}function Yl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSParameterProperty"].concat(t))}function $l(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSDeclareFunction"].concat(t))}function Ql(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSDeclareMethod"].concat(t))}function Zl(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSQualifiedName"].concat(t))}function ec(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSCallSignatureDeclaration"].concat(t))}function tc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSConstructSignatureDeclaration"].concat(t))}function nc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSPropertySignature"].concat(t))}function rc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSMethodSignature"].concat(t))}function ic(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSIndexSignature"].concat(t))}function ac(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSAnyKeyword"].concat(t))}function oc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSBooleanKeyword"].concat(t))}function sc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSBigIntKeyword"].concat(t))}function uc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSNeverKeyword"].concat(t))}function lc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSNullKeyword"].concat(t))}function cc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSNumberKeyword"].concat(t))}function pc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSObjectKeyword"].concat(t))}function hc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSStringKeyword"].concat(t))}function fc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSSymbolKeyword"].concat(t))}function dc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSUndefinedKeyword"].concat(t))}function mc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSUnknownKeyword"].concat(t))}function yc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSVoidKeyword"].concat(t))}function vc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSThisType"].concat(t))}function gc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSFunctionType"].concat(t))}function bc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSConstructorType"].concat(t))}function Ec(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSTypeReference"].concat(t))}function Ac(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSTypePredicate"].concat(t))}function Dc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSTypeQuery"].concat(t))}function Sc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSTypeLiteral"].concat(t))}function xc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSArrayType"].concat(t))}function Tc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSTupleType"].concat(t))}function Cc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSOptionalType"].concat(t))}function wc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSRestType"].concat(t))}function Pc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSUnionType"].concat(t))}function Fc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSIntersectionType"].concat(t))}function kc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSConditionalType"].concat(t))}function _c(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSInferType"].concat(t))}function Ic(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSParenthesizedType"].concat(t))}function Oc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSTypeOperator"].concat(t))}function Bc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSIndexedAccessType"].concat(t))}function Nc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSMappedType"].concat(t))}function Mc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSLiteralType"].concat(t))}function Rc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSExpressionWithTypeArguments"].concat(t))}function Lc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSInterfaceDeclaration"].concat(t))}function jc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSInterfaceBody"].concat(t))}function Uc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSTypeAliasDeclaration"].concat(t))}function Vc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSAsExpression"].concat(t))}function Wc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSTypeAssertion"].concat(t))}function Gc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSEnumDeclaration"].concat(t))}function Hc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSEnumMember"].concat(t))}function qc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSModuleDeclaration"].concat(t))}function Kc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSModuleBlock"].concat(t))}function Xc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSImportType"].concat(t))}function zc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSImportEqualsDeclaration"].concat(t))}function Jc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSExternalModuleReference"].concat(t))}function Yc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSNonNullExpression"].concat(t))}function $c(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSExportAssignment"].concat(t))}function Qc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSNamespaceExportDeclaration"].concat(t))}function Zc(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSTypeAnnotation"].concat(t))}function ep(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSTypeParameterInstantiation"].concat(t))}function tp(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSTypeParameterDeclaration"].concat(t))}function np(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Lo.apply(void 0,["TSTypeParameter"].concat(t))}function rp(){console.trace("The node type NumberLiteral has been renamed to NumericLiteral");for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return rp.apply(void 0,["NumberLiteral"].concat(t))}function ip(){console.trace("The node type RegexLiteral has been renamed to RegExpLiteral");for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return ip.apply(void 0,["RegexLiteral"].concat(t))}function ap(){console.trace("The node type RestProperty has been renamed to RestElement");for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return ap.apply(void 0,["RestProperty"].concat(t))}function op(){console.trace("The node type SpreadProperty has been renamed to SpreadElement");for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return op.apply(void 0,["SpreadProperty"].concat(t))}function sp(e,t){for(var n=e.value.split(/\r\n|\n|\r/),r=0,i=0;i<n.length;i++)n[i].match(/[^ \t]/)&&(r=i);for(var a="",o=0;o<n.length;o++){var s=n[o],u=0===o,l=o===n.length-1,c=o===r,p=s.replace(/\t/g," ");u||(p=p.replace(/^[ ]+/,"")),l||(p=p.replace(/[ ]+$/,"")),p&&(c||(p+=" "),a+=p)}a&&t.push(ls(a))}function up(e){return!(!e||!Ga[e.type])}function lp(e,t,n){if(!Ua(e,t,n))throw new Error('Expected type "'+e+'" with option '+JSON.stringify(n)+', but instead got "'+t.type+'".')}function cp(e,t){void 0===t&&(t={}),lp("Identifier",e,t)}function pp(e,t){void 0===t&&(t={}),lp("RestElement",e,t)}function hp(e){if("string"===e)return Ku();if("number"===e)return Mu();if("undefined"===e)return il();if("boolean"===e)return uu();if("function"===e)return Cu(os("Function"));if("object"===e)return Cu(os("Object"));if("symbol"===e)return Cu(os("Symbol"));throw new Error("Invalid typeof value")}function fp(e){for(var t={},n={},r=[],i=[],a=0;a<e.length;a++){var o=e[a];if(o&&!(i.indexOf(o)>=0)){if(de(o))return[o];if(At(o))n[o.type]=o;else if(we(o))r.indexOf(o.types)<0&&(e=e.concat(o.types),r.push(o.types));else if(ge(o)){var s=o.id.name;if(t[s]){var u=t[s];u.typeParameters?o.typeParameters&&(u.typeParameters.params=fp(u.typeParameters.params.concat(o.typeParameters.params))):u=o.typeParameters}else t[s]=o}else i.push(o)}}for(var l=0,c=Object.keys(n);l<c.length;l++){var p=c[l];i.push(n[p])}for(var h=0,f=Object.keys(t);h<f.length;h++){var d=f[h];i.push(t[d])}return i}function dp(e){var t=fp(e);return 1===t.length?t[0]:nl(t)}var mp=Function.call.bind(Object.prototype.hasOwnProperty);function yp(e,t){return e&&"string"==typeof e.type&&"CommentLine"!==e.type&&"CommentBlock"!==e.type?gp(e,t):e}function vp(e,t){return Array.isArray(e)?e.map((function(e){return yp(e,t)})):yp(e,t)}function gp(e,t){if(void 0===t&&(t=!0),!e)return e;var n=e.type,r={type:n};if("Identifier"===n)r.name=e.name,mp(e,"optional")&&"boolean"==typeof e.optional&&(r.optional=e.optional),mp(e,"typeAnnotation")&&(r.typeAnnotation=t?vp(e.typeAnnotation,!0):e.typeAnnotation);else{if(!mp(Ka,n))throw new Error('Unknown node type: "'+n+'"');for(var i=0,a=Object.keys(Ka[n]);i<a.length;i++){var o=a[i];mp(e,o)&&(r[o]=t?vp(e[o],!0):e[o])}}return mp(e,"loc")&&(r.loc=e.loc),mp(e,"leadingComments")&&(r.leadingComments=e.leadingComments),mp(e,"innerComments")&&(r.innerComments=e.innerComments),mp(e,"trailingComments")&&(r.trailingComments=e.trailingComments),mp(e,"extra")&&(r.extra=Object.assign({},e.extra)),r}function bp(e){return gp(e,!1)}function Ep(e,t,n){if(!n||!e)return e;var r=t+"Comments";return e[r]?e[r]="leading"===t?n.concat(e[r]):e[r].concat(n):e[r]=n,e}function Ap(e,t,n,r){return Ep(e,t,[{type:r?"CommentLine":"CommentBlock",value:n}])}var Dp="__lodash_hash_undefined__";var Sp=function(e){return this.__data__.set(e,Dp),this};var xp=function(e){return this.__data__.has(e)};function Tp(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new Kn;++t<n;)this.add(e[t])}Tp.prototype.add=Tp.prototype.push=Sp,Tp.prototype.has=xp;var Cp=Tp;var wp=function(e,t,n,r){for(var i=e.length,a=n+(r?1:-1);r?a--:++a<i;)if(t(e[a],a,e))return a;return-1};var Pp=function(e){return e!=e};var Fp=function(e,t,n){for(var r=n-1,i=e.length;++r<i;)if(e[r]===t)return r;return-1};var kp=function(e,t,n){return t==t?Fp(e,t,n):wp(e,Pp,n)};var _p=function(e,t){return!!(null==e?0:e.length)&&kp(e,t,0)>-1};var Ip=function(e,t,n){for(var r=-1,i=null==e?0:e.length;++r<i;)if(n(t,e[r]))return!0;return!1};var Op=function(e,t){return e.has(t)};var Bp=function(){};var Np=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n},Mp=ii&&1/Np(new ii([,-0]))[1]==1/0?function(e){return new ii(e)}:Bp,Rp=200;var Lp=function(e,t,n){var r=-1,i=_p,a=e.length,o=!0,s=[],u=s;if(n)o=!1,i=Ip;else if(a>=Rp){var l=t?null:Mp(e);if(l)return Np(l);o=!1,i=Op,u=new Cp}else u=t?[]:s;e:for(;++r<a;){var c=e[r],p=t?t(c):c;if(c=n||0!==c?c:0,o&&p==p){for(var h=u.length;h--;)if(u[h]===p)continue e;t&&u.push(p),s.push(c)}else i(u,p,n)||(u!==s&&u.push(p),s.push(c))}return s};var jp=function(e){return e&&e.length?Lp(e):[]};function Up(e,t,n){t&&n&&(t[e]=jp([].concat(t[e],n[e]).filter(Boolean)))}function Vp(e,t){Up("innerComments",e,t)}function Wp(e,t){Up("leadingComments",e,t)}function Gp(e,t){Up("trailingComments",e,t)}function Hp(e,t){return Gp(e,t),Wp(e,t),Vp(e,t),e}function qp(e){return Da.forEach((function(t){e[t]=null})),e}var Kp=qa.Expression,Xp=qa.Binary,zp=qa.Scopable,Jp=qa.BlockParent,Yp=qa.Block,$p=qa.Statement,Qp=qa.Terminatorless,Zp=qa.CompletionStatement,eh=qa.Conditional,th=qa.Loop,nh=qa.While,rh=qa.ExpressionWrapper,ih=qa.For,ah=qa.ForXStatement,oh=qa.Function,sh=qa.FunctionParent,uh=qa.Pureish,lh=qa.Declaration,ch=qa.PatternLike,ph=qa.LVal,hh=qa.TSEntityName,fh=qa.Literal,dh=qa.Immutable,mh=qa.UserWhitespacable,yh=qa.Method,vh=qa.ObjectMember,gh=qa.Property,bh=qa.UnaryLike,Eh=qa.Pattern,Ah=qa.Class,Dh=qa.ModuleDeclaration,Sh=qa.ExportDeclaration,xh=qa.ModuleSpecifier,Th=qa.Flow,Ch=qa.FlowType,wh=qa.FlowBaseAnnotation,Ph=qa.FlowDeclaration,Fh=qa.FlowPredicate,kh=qa.EnumBody,_h=qa.EnumMember,Ih=qa.JSX,Oh=qa.Private,Bh=qa.TSTypeElement,Nh=qa.TSType;function Mh(e,t){if(c(e))return e;var n=[];return y(e)?n=[]:(it(e)||(e=lt(t)?Ds(e):es(e)),n=[e]),qo(n)}function Rh(e,t){return void 0===t&&(t="body"),e[t]=Mh(e[t],e)}function Lh(e){return ba(e=(e=(e=(e+="").replace(/[^a-zA-Z0-9$_]/g,"-")).replace(/^[-0-9]+/,"")).replace(/[-\s]+(.)?/g,(function(e,t){return t?t.toUpperCase():""})))||(e="_"+e),e||"_"}function jh(e){return"eval"!==(e=Lh(e))&&"arguments"!==e||(e="_"+e),e}function Uh(e,t){return void 0===t&&(t=e.key||e.property),!e.computed&&S(t)&&(t=ls(t.name)),t}function Vh(e){if(v(e)&&(e=e.expression),tt(e))return e;if(yt(e)?e.type="ClassExpression":lt(e)&&(e.type="FunctionExpression"),!tt(e))throw new Error("cannot turn "+e.type+" to an expression");return e}function Wh(e,t,n){if(e){var r=Ga[e.type];if(r){t(e,n=n||{});var i=r,a=Array.isArray(i),o=0;for(i=a?i:i[Symbol.iterator]();;){var s;if(a){if(o>=i.length)break;s=i[o++]}else{if((o=i.next()).done)break;s=o.value}var u=e[s];if(Array.isArray(u)){var l=u,c=Array.isArray(l),p=0;for(l=c?l:l[Symbol.iterator]();;){var h;if(c){if(p>=l.length)break;h=l[p++]}else{if((p=l.next()).done)break;h=p.value}Wh(h,t,n)}}else Wh(u,t,n)}}}}var Gh=["tokens","start","end","loc","raw","rawValue"],Hh=Da.concat(["comments"]).concat(Gh);function qh(e,t){void 0===t&&(t={});var n=t.preserveComments?Gh:Hh,r=Array.isArray(n),i=0;for(n=r?n:n[Symbol.iterator]();;){var a;if(r){if(i>=n.length)break;a=n[i++]}else{if((i=n.next()).done)break;a=i.value}var o=a;null!=e[o]&&(e[o]=void 0)}for(var s=0,u=Object.keys(e);s<u.length;s++){var l=u[s];"_"===l[0]&&null!=e[l]&&(e[l]=void 0)}var c=Object.getOwnPropertySymbols(e),p=Array.isArray(c),h=0;for(c=p?c:c[Symbol.iterator]();;){var f;if(p){if(h>=c.length)break;f=c[h++]}else{if((h=c.next()).done)break;f=h.value}e[f]=null}}function Kh(e,t){return Wh(e,qh,t),e}function Xh(e,t){var n;return void 0===t&&(t=e.key),"method"===e.kind?Xh.increment()+"":(n=S(t)?t.name:C(t)?JSON.stringify(t.value):JSON.stringify(Kh(gp(t))),e.computed&&(n="["+n+"]"),e.static&&(n="static:"+n),n)}function zh(e,t,n){for(var r=[].concat(e),i=Object.create(null);r.length;){var a=r.shift();if(a){var o=zh.keys[a.type];if(S(a))t?(i[a.name]=i[a.name]||[]).push(a):i[a.name]=a;else if(gt(a))pt(a.declaration)&&r.push(a.declaration);else{if(n){if(A(a)){r.push(a.id);continue}if(D(a))continue}if(o)for(var s=0;s<o.length;s++){var u=o[s];a[u]&&(r=r.concat(a[u]))}}}}return i}function Jh(e,t){if(e&&e.length){var n=[],r=function e(t,n,r){var i=[],a=!0,o=t,s=Array.isArray(o),u=0;for(o=s?o:o[Symbol.iterator]();;){var l;if(s){if(u>=o.length)break;l=o[u++]}else{if((u=o.next()).done)break;l=u.value}var p=l;if(a=!1,tt(p))i.push(p);else if(v(p))i.push(p.expression);else if(H(p)){if("var"!==p.kind)return;for(var h=0,f=p.declarations;h<f.length;h++){for(var d=f[h],m=zh(d),g=0,b=Object.keys(m);g<b.length;g++){var E=b[g];r.push({kind:p.kind,id:gp(m[E])})}d.init&&i.push(Uo("=",d.id,d.init))}a=!0}else if(x(p)){var A=p.consequent?e([p.consequent],n,r):n.buildUndefinedNode(),D=p.alternate?e([p.alternate],n,r):n.buildUndefinedNode();if(!A||!D)return;i.push(Jo(p.test,A,D))}else if(c(p)){var S=e(p.body,n,r);if(!S)return;i.push(S)}else{if(!y(p))return;a=!0}}return a&&i.push(n.buildUndefinedNode()),1===i.length?i[0]:Ss(i)}(e,t,n);if(r){for(var i=0,a=n;i<a.length;i++){var o=a[i];t.push(o)}return r}}}function Yh(e,t){if(it(e))return e;var n,r=!1;if(yt(e))r=!0,n="ClassDeclaration";else if(lt(e))r=!0,n="FunctionDeclaration";else if(u(e))return es(e);if(r&&!e.id&&(n=!1),!n){if(t)return!1;throw new Error("cannot turn "+e.type+" to a statement")}return e.type=n,e}Xh.uid=0,Xh.increment=function(){return Xh.uid>=Number.MAX_SAFE_INTEGER?Xh.uid=0:Xh.uid++},zh.keys={DeclareClass:["id"],DeclareFunction:["id"],DeclareModule:["id"],DeclareVariable:["id"],DeclareInterface:["id"],DeclareTypeAlias:["id"],DeclareOpaqueType:["id"],InterfaceDeclaration:["id"],TypeAlias:["id"],OpaqueType:["id"],CatchClause:["param"],LabeledStatement:["label"],UnaryExpression:["argument"],AssignmentExpression:["left"],ImportSpecifier:["local"],ImportNamespaceSpecifier:["local"],ImportDefaultSpecifier:["local"],ImportDeclaration:["specifiers"],ExportSpecifier:["exported"],ExportNamespaceSpecifier:["exported"],ExportDefaultSpecifier:["exported"],FunctionDeclaration:["id","params"],FunctionExpression:["id","params"],ArrowFunctionExpression:["params"],ObjectMethod:["params"],ClassMethod:["params"],ForInStatement:["left"],ForOfStatement:["left"],ClassDeclaration:["id"],ClassExpression:["id"],RestElement:["argument"],UpdateExpression:["argument"],ObjectProperty:["value"],AssignmentPattern:["left"],ArrayPattern:["elements"],ObjectPattern:["properties"],VariableDeclaration:["declarations"],VariableDeclarator:["id"]};var $h="[object Object]",Qh=Function.prototype,Zh=Object.prototype,ef=Qh.toString,tf=Zh.hasOwnProperty,nf=ef.call(Object);var rf=function(e){if(!ir(e)||rn(e)!=$h)return!1;var t=Yr(e);if(null===t)return!0;var n=tf.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&ef.call(n)==nf},af="[object RegExp]";var of=function(e){return ir(e)&&rn(e)==af},sf=Dr&&Dr.isRegExp,uf=sf?Ar(sf):of;function lf(e){if(void 0===e)return os("undefined");if(!0===e||!1===e)return hs(e);if(null===e)return ps();if("string"==typeof e)return ls(e);if("number"==typeof e){var t;if(Number.isFinite(e))t=cs(Math.abs(e));else t=Vo("/",Number.isNaN(e)?cs(0):cs(1),cs(0));return(e<0||Object.is(e,-0))&&(t=ks("-",t)),t}if(uf(e))return fs(e.source,e.toString().match(/\/([a-z]+|)$/)[1]);if(Array.isArray(e))return jo(e.map(lf));if(rf(e)){for(var n=[],r=0,i=Object.keys(e);r<i.length;r++){var a=i[r],o=void 0;o=ba(a)?os(a):ls(a),n.push(Es(o,lf(e[a])))}return gs(n)}throw new Error("don't know how to turn this value into a node")}function cf(e,t,n){return void 0===n&&(n=!1),e.object=ms(e.object,e.property,e.computed),e.property=t,e.computed=!!n,e}function pf(e,t){if(!e||!t)return e;for(var n=0,r=Na.optional;n<r.length;n++){var i=r[n];null==e[i]&&(e[i]=t[i])}for(var a=0,o=Object.keys(t);a<o.length;a++){var s=o[a];"_"===s[0]&&"__clone"!==s&&(e[s]=t[s])}for(var u=0,l=Na.force;u<l.length;u++){var c=l[u];e[c]=t[c]}return Hp(e,t),e}function hf(e,t){return zh(e,t,!0)}function ff(e,t,n){"function"==typeof t&&(t={enter:t});var r=t;!function e(t,n,r,i,a){var o=Ga[t.type];if(!o)return;n&&n(t,a,i);var s=o,u=Array.isArray(s),l=0;for(s=u?s:s[Symbol.iterator]();;){var c;if(u){if(l>=s.length)break;c=s[l++]}else{if((l=s.next()).done)break;c=l.value}var p=c,h=t[p];if(Array.isArray(h))for(var f=0;f<h.length;f++){var d=h[f];d&&(a.push({node:t,key:p,index:f}),e(d,n,r,i,a),a.pop())}else h&&(a.push({node:t,key:p}),e(h,n,r,i,a),a.pop())}r&&r(t,a,i)}(e,r.enter,r.exit,n,[])}function df(e,t,n){if(n&&"Identifier"===e.type&&"ObjectProperty"===t.type&&"ObjectExpression"===n.type)return!1;var r=zh.keys[t.type];if(r)for(var i=0;i<r.length;i++){var a=t[r[i]];if(Array.isArray(a)){if(a.indexOf(e)>=0)return!0}else if(a===e)return!0}return!1}function mf(e){return H(e)&&("var"!==e.kind||e[Ma])}function yf(e){return A(e)||$(e)||mf(e)}function vf(e,t,n){switch(t.type){case"MemberExpression":case"JSXMemberExpression":case"OptionalMemberExpression":return t.property===e?!!t.computed:t.object===e;case"VariableDeclarator":return t.init===e;case"ArrowFunctionExpression":return t.body===e;case"ExportSpecifier":return!t.source&&t.local===e;case"PrivateName":return!1;case"ObjectProperty":case"ClassProperty":case"ClassPrivateProperty":case"ClassMethod":case"ClassPrivateMethod":case"ObjectMethod":return t.key===e?!!t.computed:t.value!==e||(!n||"ObjectPattern"!==n.type);case"ClassDeclaration":case"ClassExpression":return t.superClass===e;case"AssignmentExpression":case"AssignmentPattern":return t.right===e;case"LabeledStatement":case"CatchClause":case"RestElement":return!1;case"BreakStatement":case"ContinueStatement":return!1;case"FunctionDeclaration":case"FunctionExpression":return!1;case"ExportNamespaceSpecifier":case"ExportDefaultSpecifier":return!1;case"ImportDefaultSpecifier":case"ImportNamespaceSpecifier":case"ImportSpecifier":case"JSXAttribute":return!1;case"ObjectPattern":case"ArrayPattern":case"MetaProperty":return!1;case"ObjectTypeProperty":return t.key!==e;case"TSEnumMember":return t.id!==e;case"TSPropertySignature":return t.key!==e||!!t.computed}return!0}function gf(e,t){return(!c(e)||!lt(t,{body:e}))&&((!c(e)||!f(t,{body:e}))&&rt(e))}var bf=new Set(["abstract","boolean","byte","char","double","enum","final","float","goto","implements","int","interface","long","native","package","private","protected","public","short","static","synchronized","throws","transient","volatile"]);function Ef(e){return ba(e)&&!bf.has(e)}function Af(e){return H(e,{kind:"var"})&&!e[Ma]}var Df={isReactComponent:xt,isCompatTag:function(e){return!!e&&/^[a-z]/.test(e)},buildChildren:function(e){for(var t=[],n=0;n<e.children.length;n++){var r=e.children[n];Re(r)?sp(r,t):(Ie(r)&&(r=r.expression),_e(r)||t.push(r))}return t}},Sf=Object.freeze({__proto__:null,react:Df,assertNode:function(e){if(!up(e)){var t=e&&e.type||JSON.stringify(e);throw new TypeError('Not a valid node of type "'+t+'"')}},createTypeAnnotationBasedOnTypeof:hp,createUnionTypeAnnotation:dp,cloneNode:gp,clone:bp,cloneDeep:function(e){return gp(e)},cloneWithoutLoc:function(e){var t=bp(e);return t.loc=null,t},addComment:Ap,addComments:Ep,inheritInnerComments:Vp,inheritLeadingComments:Wp,inheritsComments:Hp,inheritTrailingComments:Gp,removeComments:qp,ensureBlock:Rh,toBindingIdentifierName:jh,toBlock:Mh,toComputedKey:Uh,toExpression:Vh,toIdentifier:Lh,toKeyAlias:Xh,toSequenceExpression:Jh,toStatement:Yh,valueToNode:lf,appendToMemberExpression:cf,inherits:pf,prependToMemberExpression:function(e,t){return e.object=ms(t,e.object),e},removeProperties:qh,removePropertiesDeep:Kh,removeTypeDuplicates:fp,getBindingIdentifiers:zh,getOuterBindingIdentifiers:hf,traverse:ff,traverseFast:Wh,shallowEqual:o,is:Ua,isBinding:df,isBlockScoped:yf,isImmutable:function(e){return!!La(e.type,"Immutable")||!!S(e)&&"undefined"===e.name},isLet:mf,isNode:up,isNodesEquivalent:function e(t,n){if("object"!=typeof t||"object"!=typeof n||null==t||null==n)return t===n;if(t.type!==n.type)return!1;for(var r=Object.keys(Ka[t.type]||t.type),i=Ga[t.type],a=0,o=r;a<o.length;a++){var s=o[a];if(typeof t[s]!=typeof n[s])return!1;if(null!=t[s]||null!=n[s]){if(null==t[s]||null==n[s])return!1;if(Array.isArray(t[s])){if(!Array.isArray(n[s]))return!1;if(t[s].length!==n[s].length)return!1;for(var u=0;u<t[s].length;u++)if(!e(t[s][u],n[s][u]))return!1}else if("object"!=typeof t[s]||i&&i.includes(s)){if(!e(t[s],n[s]))return!1}else for(var l=0,c=Object.keys(t[s]);l<c.length;l++){var p=c[l];if(t[s][p]!==n[s][p])return!1}}}return!0},isPlaceholderType:ja,isReferenced:vf,isScope:gf,isSpecifierDefault:function(e){return ie(e)||S(e.imported||e.exported,{name:"default"})},isType:La,isValidES3Identifier:Ef,isValidIdentifier:ba,isVar:Af,matchesPattern:Dt,validate:Va,buildMatchMemberExpression:St,assertArrayExpression:function(e,t){void 0===t&&(t={}),lp("ArrayExpression",e,t)},assertAssignmentExpression:function(e,t){void 0===t&&(t={}),lp("AssignmentExpression",e,t)},assertBinaryExpression:function(e,t){void 0===t&&(t={}),lp("BinaryExpression",e,t)},assertInterpreterDirective:function(e,t){void 0===t&&(t={}),lp("InterpreterDirective",e,t)},assertDirective:function(e,t){void 0===t&&(t={}),lp("Directive",e,t)},assertDirectiveLiteral:function(e,t){void 0===t&&(t={}),lp("DirectiveLiteral",e,t)},assertBlockStatement:function(e,t){void 0===t&&(t={}),lp("BlockStatement",e,t)},assertBreakStatement:function(e,t){void 0===t&&(t={}),lp("BreakStatement",e,t)},assertCallExpression:function(e,t){void 0===t&&(t={}),lp("CallExpression",e,t)},assertCatchClause:function(e,t){void 0===t&&(t={}),lp("CatchClause",e,t)},assertConditionalExpression:function(e,t){void 0===t&&(t={}),lp("ConditionalExpression",e,t)},assertContinueStatement:function(e,t){void 0===t&&(t={}),lp("ContinueStatement",e,t)},assertDebuggerStatement:function(e,t){void 0===t&&(t={}),lp("DebuggerStatement",e,t)},assertDoWhileStatement:function(e,t){void 0===t&&(t={}),lp("DoWhileStatement",e,t)},assertEmptyStatement:function(e,t){void 0===t&&(t={}),lp("EmptyStatement",e,t)},assertExpressionStatement:function(e,t){void 0===t&&(t={}),lp("ExpressionStatement",e,t)},assertFile:function(e,t){void 0===t&&(t={}),lp("File",e,t)},assertForInStatement:function(e,t){void 0===t&&(t={}),lp("ForInStatement",e,t)},assertForStatement:function(e,t){void 0===t&&(t={}),lp("ForStatement",e,t)},assertFunctionDeclaration:function(e,t){void 0===t&&(t={}),lp("FunctionDeclaration",e,t)},assertFunctionExpression:function(e,t){void 0===t&&(t={}),lp("FunctionExpression",e,t)},assertIdentifier:cp,assertIfStatement:function(e,t){void 0===t&&(t={}),lp("IfStatement",e,t)},assertLabeledStatement:function(e,t){void 0===t&&(t={}),lp("LabeledStatement",e,t)},assertStringLiteral:function(e,t){void 0===t&&(t={}),lp("StringLiteral",e,t)},assertNumericLiteral:function(e,t){void 0===t&&(t={}),lp("NumericLiteral",e,t)},assertNullLiteral:function(e,t){void 0===t&&(t={}),lp("NullLiteral",e,t)},assertBooleanLiteral:function(e,t){void 0===t&&(t={}),lp("BooleanLiteral",e,t)},assertRegExpLiteral:function(e,t){void 0===t&&(t={}),lp("RegExpLiteral",e,t)},assertLogicalExpression:function(e,t){void 0===t&&(t={}),lp("LogicalExpression",e,t)},assertMemberExpression:function(e,t){void 0===t&&(t={}),lp("MemberExpression",e,t)},assertNewExpression:function(e,t){void 0===t&&(t={}),lp("NewExpression",e,t)},assertProgram:function(e,t){void 0===t&&(t={}),lp("Program",e,t)},assertObjectExpression:function(e,t){void 0===t&&(t={}),lp("ObjectExpression",e,t)},assertObjectMethod:function(e,t){void 0===t&&(t={}),lp("ObjectMethod",e,t)},assertObjectProperty:function(e,t){void 0===t&&(t={}),lp("ObjectProperty",e,t)},assertRestElement:pp,assertReturnStatement:function(e,t){void 0===t&&(t={}),lp("ReturnStatement",e,t)},assertSequenceExpression:function(e,t){void 0===t&&(t={}),lp("SequenceExpression",e,t)},assertParenthesizedExpression:function(e,t){void 0===t&&(t={}),lp("ParenthesizedExpression",e,t)},assertSwitchCase:function(e,t){void 0===t&&(t={}),lp("SwitchCase",e,t)},assertSwitchStatement:function(e,t){void 0===t&&(t={}),lp("SwitchStatement",e,t)},assertThisExpression:function(e,t){void 0===t&&(t={}),lp("ThisExpression",e,t)},assertThrowStatement:function(e,t){void 0===t&&(t={}),lp("ThrowStatement",e,t)},assertTryStatement:function(e,t){void 0===t&&(t={}),lp("TryStatement",e,t)},assertUnaryExpression:function(e,t){void 0===t&&(t={}),lp("UnaryExpression",e,t)},assertUpdateExpression:function(e,t){void 0===t&&(t={}),lp("UpdateExpression",e,t)},assertVariableDeclaration:function(e,t){void 0===t&&(t={}),lp("VariableDeclaration",e,t)},assertVariableDeclarator:function(e,t){void 0===t&&(t={}),lp("VariableDeclarator",e,t)},assertWhileStatement:function(e,t){void 0===t&&(t={}),lp("WhileStatement",e,t)},assertWithStatement:function(e,t){void 0===t&&(t={}),lp("WithStatement",e,t)},assertAssignmentPattern:function(e,t){void 0===t&&(t={}),lp("AssignmentPattern",e,t)},assertArrayPattern:function(e,t){void 0===t&&(t={}),lp("ArrayPattern",e,t)},assertArrowFunctionExpression:function(e,t){void 0===t&&(t={}),lp("ArrowFunctionExpression",e,t)},assertClassBody:function(e,t){void 0===t&&(t={}),lp("ClassBody",e,t)},assertClassDeclaration:function(e,t){void 0===t&&(t={}),lp("ClassDeclaration",e,t)},assertClassExpression:function(e,t){void 0===t&&(t={}),lp("ClassExpression",e,t)},assertExportAllDeclaration:function(e,t){void 0===t&&(t={}),lp("ExportAllDeclaration",e,t)},assertExportDefaultDeclaration:function(e,t){void 0===t&&(t={}),lp("ExportDefaultDeclaration",e,t)},assertExportNamedDeclaration:function(e,t){void 0===t&&(t={}),lp("ExportNamedDeclaration",e,t)},assertExportSpecifier:function(e,t){void 0===t&&(t={}),lp("ExportSpecifier",e,t)},assertForOfStatement:function(e,t){void 0===t&&(t={}),lp("ForOfStatement",e,t)},assertImportDeclaration:function(e,t){void 0===t&&(t={}),lp("ImportDeclaration",e,t)},assertImportDefaultSpecifier:function(e,t){void 0===t&&(t={}),lp("ImportDefaultSpecifier",e,t)},assertImportNamespaceSpecifier:function(e,t){void 0===t&&(t={}),lp("ImportNamespaceSpecifier",e,t)},assertImportSpecifier:function(e,t){void 0===t&&(t={}),lp("ImportSpecifier",e,t)},assertMetaProperty:function(e,t){void 0===t&&(t={}),lp("MetaProperty",e,t)},assertClassMethod:function(e,t){void 0===t&&(t={}),lp("ClassMethod",e,t)},assertObjectPattern:function(e,t){void 0===t&&(t={}),lp("ObjectPattern",e,t)},assertSpreadElement:function(e,t){void 0===t&&(t={}),lp("SpreadElement",e,t)},assertSuper:function(e,t){void 0===t&&(t={}),lp("Super",e,t)},assertTaggedTemplateExpression:function(e,t){void 0===t&&(t={}),lp("TaggedTemplateExpression",e,t)},assertTemplateElement:function(e,t){void 0===t&&(t={}),lp("TemplateElement",e,t)},assertTemplateLiteral:function(e,t){void 0===t&&(t={}),lp("TemplateLiteral",e,t)},assertYieldExpression:function(e,t){void 0===t&&(t={}),lp("YieldExpression",e,t)},assertAnyTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("AnyTypeAnnotation",e,t)},assertArrayTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("ArrayTypeAnnotation",e,t)},assertBooleanTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("BooleanTypeAnnotation",e,t)},assertBooleanLiteralTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("BooleanLiteralTypeAnnotation",e,t)},assertNullLiteralTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("NullLiteralTypeAnnotation",e,t)},assertClassImplements:function(e,t){void 0===t&&(t={}),lp("ClassImplements",e,t)},assertDeclareClass:function(e,t){void 0===t&&(t={}),lp("DeclareClass",e,t)},assertDeclareFunction:function(e,t){void 0===t&&(t={}),lp("DeclareFunction",e,t)},assertDeclareInterface:function(e,t){void 0===t&&(t={}),lp("DeclareInterface",e,t)},assertDeclareModule:function(e,t){void 0===t&&(t={}),lp("DeclareModule",e,t)},assertDeclareModuleExports:function(e,t){void 0===t&&(t={}),lp("DeclareModuleExports",e,t)},assertDeclareTypeAlias:function(e,t){void 0===t&&(t={}),lp("DeclareTypeAlias",e,t)},assertDeclareOpaqueType:function(e,t){void 0===t&&(t={}),lp("DeclareOpaqueType",e,t)},assertDeclareVariable:function(e,t){void 0===t&&(t={}),lp("DeclareVariable",e,t)},assertDeclareExportDeclaration:function(e,t){void 0===t&&(t={}),lp("DeclareExportDeclaration",e,t)},assertDeclareExportAllDeclaration:function(e,t){void 0===t&&(t={}),lp("DeclareExportAllDeclaration",e,t)},assertDeclaredPredicate:function(e,t){void 0===t&&(t={}),lp("DeclaredPredicate",e,t)},assertExistsTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("ExistsTypeAnnotation",e,t)},assertFunctionTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("FunctionTypeAnnotation",e,t)},assertFunctionTypeParam:function(e,t){void 0===t&&(t={}),lp("FunctionTypeParam",e,t)},assertGenericTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("GenericTypeAnnotation",e,t)},assertInferredPredicate:function(e,t){void 0===t&&(t={}),lp("InferredPredicate",e,t)},assertInterfaceExtends:function(e,t){void 0===t&&(t={}),lp("InterfaceExtends",e,t)},assertInterfaceDeclaration:function(e,t){void 0===t&&(t={}),lp("InterfaceDeclaration",e,t)},assertInterfaceTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("InterfaceTypeAnnotation",e,t)},assertIntersectionTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("IntersectionTypeAnnotation",e,t)},assertMixedTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("MixedTypeAnnotation",e,t)},assertEmptyTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("EmptyTypeAnnotation",e,t)},assertNullableTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("NullableTypeAnnotation",e,t)},assertNumberLiteralTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("NumberLiteralTypeAnnotation",e,t)},assertNumberTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("NumberTypeAnnotation",e,t)},assertObjectTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("ObjectTypeAnnotation",e,t)},assertObjectTypeInternalSlot:function(e,t){void 0===t&&(t={}),lp("ObjectTypeInternalSlot",e,t)},assertObjectTypeCallProperty:function(e,t){void 0===t&&(t={}),lp("ObjectTypeCallProperty",e,t)},assertObjectTypeIndexer:function(e,t){void 0===t&&(t={}),lp("ObjectTypeIndexer",e,t)},assertObjectTypeProperty:function(e,t){void 0===t&&(t={}),lp("ObjectTypeProperty",e,t)},assertObjectTypeSpreadProperty:function(e,t){void 0===t&&(t={}),lp("ObjectTypeSpreadProperty",e,t)},assertOpaqueType:function(e,t){void 0===t&&(t={}),lp("OpaqueType",e,t)},assertQualifiedTypeIdentifier:function(e,t){void 0===t&&(t={}),lp("QualifiedTypeIdentifier",e,t)},assertStringLiteralTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("StringLiteralTypeAnnotation",e,t)},assertStringTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("StringTypeAnnotation",e,t)},assertThisTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("ThisTypeAnnotation",e,t)},assertTupleTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("TupleTypeAnnotation",e,t)},assertTypeofTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("TypeofTypeAnnotation",e,t)},assertTypeAlias:function(e,t){void 0===t&&(t={}),lp("TypeAlias",e,t)},assertTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("TypeAnnotation",e,t)},assertTypeCastExpression:function(e,t){void 0===t&&(t={}),lp("TypeCastExpression",e,t)},assertTypeParameter:function(e,t){void 0===t&&(t={}),lp("TypeParameter",e,t)},assertTypeParameterDeclaration:function(e,t){void 0===t&&(t={}),lp("TypeParameterDeclaration",e,t)},assertTypeParameterInstantiation:function(e,t){void 0===t&&(t={}),lp("TypeParameterInstantiation",e,t)},assertUnionTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("UnionTypeAnnotation",e,t)},assertVariance:function(e,t){void 0===t&&(t={}),lp("Variance",e,t)},assertVoidTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("VoidTypeAnnotation",e,t)},assertEnumDeclaration:function(e,t){void 0===t&&(t={}),lp("EnumDeclaration",e,t)},assertEnumBooleanBody:function(e,t){void 0===t&&(t={}),lp("EnumBooleanBody",e,t)},assertEnumNumberBody:function(e,t){void 0===t&&(t={}),lp("EnumNumberBody",e,t)},assertEnumStringBody:function(e,t){void 0===t&&(t={}),lp("EnumStringBody",e,t)},assertEnumSymbolBody:function(e,t){void 0===t&&(t={}),lp("EnumSymbolBody",e,t)},assertEnumBooleanMember:function(e,t){void 0===t&&(t={}),lp("EnumBooleanMember",e,t)},assertEnumNumberMember:function(e,t){void 0===t&&(t={}),lp("EnumNumberMember",e,t)},assertEnumStringMember:function(e,t){void 0===t&&(t={}),lp("EnumStringMember",e,t)},assertEnumDefaultedMember:function(e,t){void 0===t&&(t={}),lp("EnumDefaultedMember",e,t)},assertJSXAttribute:function(e,t){void 0===t&&(t={}),lp("JSXAttribute",e,t)},assertJSXClosingElement:function(e,t){void 0===t&&(t={}),lp("JSXClosingElement",e,t)},assertJSXElement:function(e,t){void 0===t&&(t={}),lp("JSXElement",e,t)},assertJSXEmptyExpression:function(e,t){void 0===t&&(t={}),lp("JSXEmptyExpression",e,t)},assertJSXExpressionContainer:function(e,t){void 0===t&&(t={}),lp("JSXExpressionContainer",e,t)},assertJSXSpreadChild:function(e,t){void 0===t&&(t={}),lp("JSXSpreadChild",e,t)},assertJSXIdentifier:function(e,t){void 0===t&&(t={}),lp("JSXIdentifier",e,t)},assertJSXMemberExpression:function(e,t){void 0===t&&(t={}),lp("JSXMemberExpression",e,t)},assertJSXNamespacedName:function(e,t){void 0===t&&(t={}),lp("JSXNamespacedName",e,t)},assertJSXOpeningElement:function(e,t){void 0===t&&(t={}),lp("JSXOpeningElement",e,t)},assertJSXSpreadAttribute:function(e,t){void 0===t&&(t={}),lp("JSXSpreadAttribute",e,t)},assertJSXText:function(e,t){void 0===t&&(t={}),lp("JSXText",e,t)},assertJSXFragment:function(e,t){void 0===t&&(t={}),lp("JSXFragment",e,t)},assertJSXOpeningFragment:function(e,t){void 0===t&&(t={}),lp("JSXOpeningFragment",e,t)},assertJSXClosingFragment:function(e,t){void 0===t&&(t={}),lp("JSXClosingFragment",e,t)},assertNoop:function(e,t){void 0===t&&(t={}),lp("Noop",e,t)},assertPlaceholder:function(e,t){void 0===t&&(t={}),lp("Placeholder",e,t)},assertV8IntrinsicIdentifier:function(e,t){void 0===t&&(t={}),lp("V8IntrinsicIdentifier",e,t)},assertArgumentPlaceholder:function(e,t){void 0===t&&(t={}),lp("ArgumentPlaceholder",e,t)},assertAwaitExpression:function(e,t){void 0===t&&(t={}),lp("AwaitExpression",e,t)},assertBindExpression:function(e,t){void 0===t&&(t={}),lp("BindExpression",e,t)},assertClassProperty:function(e,t){void 0===t&&(t={}),lp("ClassProperty",e,t)},assertOptionalMemberExpression:function(e,t){void 0===t&&(t={}),lp("OptionalMemberExpression",e,t)},assertPipelineTopicExpression:function(e,t){void 0===t&&(t={}),lp("PipelineTopicExpression",e,t)},assertPipelineBareFunction:function(e,t){void 0===t&&(t={}),lp("PipelineBareFunction",e,t)},assertPipelinePrimaryTopicReference:function(e,t){void 0===t&&(t={}),lp("PipelinePrimaryTopicReference",e,t)},assertOptionalCallExpression:function(e,t){void 0===t&&(t={}),lp("OptionalCallExpression",e,t)},assertClassPrivateProperty:function(e,t){void 0===t&&(t={}),lp("ClassPrivateProperty",e,t)},assertClassPrivateMethod:function(e,t){void 0===t&&(t={}),lp("ClassPrivateMethod",e,t)},assertImport:function(e,t){void 0===t&&(t={}),lp("Import",e,t)},assertDecorator:function(e,t){void 0===t&&(t={}),lp("Decorator",e,t)},assertDoExpression:function(e,t){void 0===t&&(t={}),lp("DoExpression",e,t)},assertExportDefaultSpecifier:function(e,t){void 0===t&&(t={}),lp("ExportDefaultSpecifier",e,t)},assertExportNamespaceSpecifier:function(e,t){void 0===t&&(t={}),lp("ExportNamespaceSpecifier",e,t)},assertPrivateName:function(e,t){void 0===t&&(t={}),lp("PrivateName",e,t)},assertBigIntLiteral:function(e,t){void 0===t&&(t={}),lp("BigIntLiteral",e,t)},assertTSParameterProperty:function(e,t){void 0===t&&(t={}),lp("TSParameterProperty",e,t)},assertTSDeclareFunction:function(e,t){void 0===t&&(t={}),lp("TSDeclareFunction",e,t)},assertTSDeclareMethod:function(e,t){void 0===t&&(t={}),lp("TSDeclareMethod",e,t)},assertTSQualifiedName:function(e,t){void 0===t&&(t={}),lp("TSQualifiedName",e,t)},assertTSCallSignatureDeclaration:function(e,t){void 0===t&&(t={}),lp("TSCallSignatureDeclaration",e,t)},assertTSConstructSignatureDeclaration:function(e,t){void 0===t&&(t={}),lp("TSConstructSignatureDeclaration",e,t)},assertTSPropertySignature:function(e,t){void 0===t&&(t={}),lp("TSPropertySignature",e,t)},assertTSMethodSignature:function(e,t){void 0===t&&(t={}),lp("TSMethodSignature",e,t)},assertTSIndexSignature:function(e,t){void 0===t&&(t={}),lp("TSIndexSignature",e,t)},assertTSAnyKeyword:function(e,t){void 0===t&&(t={}),lp("TSAnyKeyword",e,t)},assertTSBooleanKeyword:function(e,t){void 0===t&&(t={}),lp("TSBooleanKeyword",e,t)},assertTSBigIntKeyword:function(e,t){void 0===t&&(t={}),lp("TSBigIntKeyword",e,t)},assertTSNeverKeyword:function(e,t){void 0===t&&(t={}),lp("TSNeverKeyword",e,t)},assertTSNullKeyword:function(e,t){void 0===t&&(t={}),lp("TSNullKeyword",e,t)},assertTSNumberKeyword:function(e,t){void 0===t&&(t={}),lp("TSNumberKeyword",e,t)},assertTSObjectKeyword:function(e,t){void 0===t&&(t={}),lp("TSObjectKeyword",e,t)},assertTSStringKeyword:function(e,t){void 0===t&&(t={}),lp("TSStringKeyword",e,t)},assertTSSymbolKeyword:function(e,t){void 0===t&&(t={}),lp("TSSymbolKeyword",e,t)},assertTSUndefinedKeyword:function(e,t){void 0===t&&(t={}),lp("TSUndefinedKeyword",e,t)},assertTSUnknownKeyword:function(e,t){void 0===t&&(t={}),lp("TSUnknownKeyword",e,t)},assertTSVoidKeyword:function(e,t){void 0===t&&(t={}),lp("TSVoidKeyword",e,t)},assertTSThisType:function(e,t){void 0===t&&(t={}),lp("TSThisType",e,t)},assertTSFunctionType:function(e,t){void 0===t&&(t={}),lp("TSFunctionType",e,t)},assertTSConstructorType:function(e,t){void 0===t&&(t={}),lp("TSConstructorType",e,t)},assertTSTypeReference:function(e,t){void 0===t&&(t={}),lp("TSTypeReference",e,t)},assertTSTypePredicate:function(e,t){void 0===t&&(t={}),lp("TSTypePredicate",e,t)},assertTSTypeQuery:function(e,t){void 0===t&&(t={}),lp("TSTypeQuery",e,t)},assertTSTypeLiteral:function(e,t){void 0===t&&(t={}),lp("TSTypeLiteral",e,t)},assertTSArrayType:function(e,t){void 0===t&&(t={}),lp("TSArrayType",e,t)},assertTSTupleType:function(e,t){void 0===t&&(t={}),lp("TSTupleType",e,t)},assertTSOptionalType:function(e,t){void 0===t&&(t={}),lp("TSOptionalType",e,t)},assertTSRestType:function(e,t){void 0===t&&(t={}),lp("TSRestType",e,t)},assertTSUnionType:function(e,t){void 0===t&&(t={}),lp("TSUnionType",e,t)},assertTSIntersectionType:function(e,t){void 0===t&&(t={}),lp("TSIntersectionType",e,t)},assertTSConditionalType:function(e,t){void 0===t&&(t={}),lp("TSConditionalType",e,t)},assertTSInferType:function(e,t){void 0===t&&(t={}),lp("TSInferType",e,t)},assertTSParenthesizedType:function(e,t){void 0===t&&(t={}),lp("TSParenthesizedType",e,t)},assertTSTypeOperator:function(e,t){void 0===t&&(t={}),lp("TSTypeOperator",e,t)},assertTSIndexedAccessType:function(e,t){void 0===t&&(t={}),lp("TSIndexedAccessType",e,t)},assertTSMappedType:function(e,t){void 0===t&&(t={}),lp("TSMappedType",e,t)},assertTSLiteralType:function(e,t){void 0===t&&(t={}),lp("TSLiteralType",e,t)},assertTSExpressionWithTypeArguments:function(e,t){void 0===t&&(t={}),lp("TSExpressionWithTypeArguments",e,t)},assertTSInterfaceDeclaration:function(e,t){void 0===t&&(t={}),lp("TSInterfaceDeclaration",e,t)},assertTSInterfaceBody:function(e,t){void 0===t&&(t={}),lp("TSInterfaceBody",e,t)},assertTSTypeAliasDeclaration:function(e,t){void 0===t&&(t={}),lp("TSTypeAliasDeclaration",e,t)},assertTSAsExpression:function(e,t){void 0===t&&(t={}),lp("TSAsExpression",e,t)},assertTSTypeAssertion:function(e,t){void 0===t&&(t={}),lp("TSTypeAssertion",e,t)},assertTSEnumDeclaration:function(e,t){void 0===t&&(t={}),lp("TSEnumDeclaration",e,t)},assertTSEnumMember:function(e,t){void 0===t&&(t={}),lp("TSEnumMember",e,t)},assertTSModuleDeclaration:function(e,t){void 0===t&&(t={}),lp("TSModuleDeclaration",e,t)},assertTSModuleBlock:function(e,t){void 0===t&&(t={}),lp("TSModuleBlock",e,t)},assertTSImportType:function(e,t){void 0===t&&(t={}),lp("TSImportType",e,t)},assertTSImportEqualsDeclaration:function(e,t){void 0===t&&(t={}),lp("TSImportEqualsDeclaration",e,t)},assertTSExternalModuleReference:function(e,t){void 0===t&&(t={}),lp("TSExternalModuleReference",e,t)},assertTSNonNullExpression:function(e,t){void 0===t&&(t={}),lp("TSNonNullExpression",e,t)},assertTSExportAssignment:function(e,t){void 0===t&&(t={}),lp("TSExportAssignment",e,t)},assertTSNamespaceExportDeclaration:function(e,t){void 0===t&&(t={}),lp("TSNamespaceExportDeclaration",e,t)},assertTSTypeAnnotation:function(e,t){void 0===t&&(t={}),lp("TSTypeAnnotation",e,t)},assertTSTypeParameterInstantiation:function(e,t){void 0===t&&(t={}),lp("TSTypeParameterInstantiation",e,t)},assertTSTypeParameterDeclaration:function(e,t){void 0===t&&(t={}),lp("TSTypeParameterDeclaration",e,t)},assertTSTypeParameter:function(e,t){void 0===t&&(t={}),lp("TSTypeParameter",e,t)},assertExpression:function(e,t){void 0===t&&(t={}),lp("Expression",e,t)},assertBinary:function(e,t){void 0===t&&(t={}),lp("Binary",e,t)},assertScopable:function(e,t){void 0===t&&(t={}),lp("Scopable",e,t)},assertBlockParent:function(e,t){void 0===t&&(t={}),lp("BlockParent",e,t)},assertBlock:function(e,t){void 0===t&&(t={}),lp("Block",e,t)},assertStatement:function(e,t){void 0===t&&(t={}),lp("Statement",e,t)},assertTerminatorless:function(e,t){void 0===t&&(t={}),lp("Terminatorless",e,t)},assertCompletionStatement:function(e,t){void 0===t&&(t={}),lp("CompletionStatement",e,t)},assertConditional:function(e,t){void 0===t&&(t={}),lp("Conditional",e,t)},assertLoop:function(e,t){void 0===t&&(t={}),lp("Loop",e,t)},assertWhile:function(e,t){void 0===t&&(t={}),lp("While",e,t)},assertExpressionWrapper:function(e,t){void 0===t&&(t={}),lp("ExpressionWrapper",e,t)},assertFor:function(e,t){void 0===t&&(t={}),lp("For",e,t)},assertForXStatement:function(e,t){void 0===t&&(t={}),lp("ForXStatement",e,t)},assertFunction:function(e,t){void 0===t&&(t={}),lp("Function",e,t)},assertFunctionParent:function(e,t){void 0===t&&(t={}),lp("FunctionParent",e,t)},assertPureish:function(e,t){void 0===t&&(t={}),lp("Pureish",e,t)},assertDeclaration:function(e,t){void 0===t&&(t={}),lp("Declaration",e,t)},assertPatternLike:function(e,t){void 0===t&&(t={}),lp("PatternLike",e,t)},assertLVal:function(e,t){void 0===t&&(t={}),lp("LVal",e,t)},assertTSEntityName:function(e,t){void 0===t&&(t={}),lp("TSEntityName",e,t)},assertLiteral:function(e,t){void 0===t&&(t={}),lp("Literal",e,t)},assertImmutable:function(e,t){void 0===t&&(t={}),lp("Immutable",e,t)},assertUserWhitespacable:function(e,t){void 0===t&&(t={}),lp("UserWhitespacable",e,t)},assertMethod:function(e,t){void 0===t&&(t={}),lp("Method",e,t)},assertObjectMember:function(e,t){void 0===t&&(t={}),lp("ObjectMember",e,t)},assertProperty:function(e,t){void 0===t&&(t={}),lp("Property",e,t)},assertUnaryLike:function(e,t){void 0===t&&(t={}),lp("UnaryLike",e,t)},assertPattern:function(e,t){void 0===t&&(t={}),lp("Pattern",e,t)},assertClass:function(e,t){void 0===t&&(t={}),lp("Class",e,t)},assertModuleDeclaration:function(e,t){void 0===t&&(t={}),lp("ModuleDeclaration",e,t)},assertExportDeclaration:function(e,t){void 0===t&&(t={}),lp("ExportDeclaration",e,t)},assertModuleSpecifier:function(e,t){void 0===t&&(t={}),lp("ModuleSpecifier",e,t)},assertFlow:function(e,t){void 0===t&&(t={}),lp("Flow",e,t)},assertFlowType:function(e,t){void 0===t&&(t={}),lp("FlowType",e,t)},assertFlowBaseAnnotation:function(e,t){void 0===t&&(t={}),lp("FlowBaseAnnotation",e,t)},assertFlowDeclaration:function(e,t){void 0===t&&(t={}),lp("FlowDeclaration",e,t)},assertFlowPredicate:function(e,t){void 0===t&&(t={}),lp("FlowPredicate",e,t)},assertEnumBody:function(e,t){void 0===t&&(t={}),lp("EnumBody",e,t)},assertEnumMember:function(e,t){void 0===t&&(t={}),lp("EnumMember",e,t)},assertJSX:function(e,t){void 0===t&&(t={}),lp("JSX",e,t)},assertPrivate:function(e,t){void 0===t&&(t={}),lp("Private",e,t)},assertTSTypeElement:function(e,t){void 0===t&&(t={}),lp("TSTypeElement",e,t)},assertTSType:function(e,t){void 0===t&&(t={}),lp("TSType",e,t)},assertNumberLiteral:function(e,t){console.trace("The node type NumberLiteral has been renamed to NumericLiteral"),lp("NumberLiteral",e,t)},assertRegexLiteral:function(e,t){console.trace("The node type RegexLiteral has been renamed to RegExpLiteral"),lp("RegexLiteral",e,t)},assertRestProperty:function(e,t){console.trace("The node type RestProperty has been renamed to RestElement"),lp("RestProperty",e,t)},assertSpreadProperty:function(e,t){console.trace("The node type SpreadProperty has been renamed to SpreadElement"),lp("SpreadProperty",e,t)},ArrayExpression:jo,arrayExpression:jo,AssignmentExpression:Uo,assignmentExpression:Uo,BinaryExpression:Vo,binaryExpression:Vo,InterpreterDirective:Wo,interpreterDirective:Wo,Directive:Go,directive:Go,DirectiveLiteral:Ho,directiveLiteral:Ho,BlockStatement:qo,blockStatement:qo,BreakStatement:Ko,breakStatement:Ko,CallExpression:Xo,callExpression:Xo,CatchClause:zo,catchClause:zo,ConditionalExpression:Jo,conditionalExpression:Jo,ContinueStatement:Yo,continueStatement:Yo,DebuggerStatement:$o,debuggerStatement:$o,DoWhileStatement:Qo,doWhileStatement:Qo,EmptyStatement:Zo,emptyStatement:Zo,ExpressionStatement:es,expressionStatement:es,File:ts,file:ts,ForInStatement:ns,forInStatement:ns,ForStatement:rs,forStatement:rs,FunctionDeclaration:is,functionDeclaration:is,FunctionExpression:as,functionExpression:as,Identifier:os,identifier:os,IfStatement:ss,ifStatement:ss,LabeledStatement:us,labeledStatement:us,StringLiteral:ls,stringLiteral:ls,NumericLiteral:cs,numericLiteral:cs,NullLiteral:ps,nullLiteral:ps,BooleanLiteral:hs,booleanLiteral:hs,RegExpLiteral:fs,regExpLiteral:fs,LogicalExpression:ds,logicalExpression:ds,MemberExpression:ms,memberExpression:ms,NewExpression:ys,newExpression:ys,Program:vs,program:vs,ObjectExpression:gs,objectExpression:gs,ObjectMethod:bs,objectMethod:bs,ObjectProperty:Es,objectProperty:Es,RestElement:As,restElement:As,ReturnStatement:Ds,returnStatement:Ds,SequenceExpression:Ss,sequenceExpression:Ss,ParenthesizedExpression:xs,parenthesizedExpression:xs,SwitchCase:Ts,switchCase:Ts,SwitchStatement:Cs,switchStatement:Cs,ThisExpression:ws,thisExpression:ws,ThrowStatement:Ps,throwStatement:Ps,TryStatement:Fs,tryStatement:Fs,UnaryExpression:ks,unaryExpression:ks,UpdateExpression:_s,updateExpression:_s,VariableDeclaration:Is,variableDeclaration:Is,VariableDeclarator:Os,variableDeclarator:Os,WhileStatement:Bs,whileStatement:Bs,WithStatement:Ns,withStatement:Ns,AssignmentPattern:Ms,assignmentPattern:Ms,ArrayPattern:Rs,arrayPattern:Rs,ArrowFunctionExpression:Ls,arrowFunctionExpression:Ls,ClassBody:js,classBody:js,ClassDeclaration:Us,classDeclaration:Us,ClassExpression:Vs,classExpression:Vs,ExportAllDeclaration:Ws,exportAllDeclaration:Ws,ExportDefaultDeclaration:Gs,exportDefaultDeclaration:Gs,ExportNamedDeclaration:Hs,exportNamedDeclaration:Hs,ExportSpecifier:qs,exportSpecifier:qs,ForOfStatement:Ks,forOfStatement:Ks,ImportDeclaration:Xs,importDeclaration:Xs,ImportDefaultSpecifier:zs,importDefaultSpecifier:zs,ImportNamespaceSpecifier:Js,importNamespaceSpecifier:Js,ImportSpecifier:Ys,importSpecifier:Ys,MetaProperty:$s,metaProperty:$s,ClassMethod:Qs,classMethod:Qs,ObjectPattern:Zs,objectPattern:Zs,SpreadElement:eu,spreadElement:eu,Super:tu,super:tu,TaggedTemplateExpression:nu,taggedTemplateExpression:nu,TemplateElement:ru,templateElement:ru,TemplateLiteral:iu,templateLiteral:iu,YieldExpression:au,yieldExpression:au,AnyTypeAnnotation:ou,anyTypeAnnotation:ou,ArrayTypeAnnotation:su,arrayTypeAnnotation:su,BooleanTypeAnnotation:uu,booleanTypeAnnotation:uu,BooleanLiteralTypeAnnotation:lu,booleanLiteralTypeAnnotation:lu,NullLiteralTypeAnnotation:cu,nullLiteralTypeAnnotation:cu,ClassImplements:pu,classImplements:pu,DeclareClass:hu,declareClass:hu,DeclareFunction:fu,declareFunction:fu,DeclareInterface:du,declareInterface:du,DeclareModule:mu,declareModule:mu,DeclareModuleExports:yu,declareModuleExports:yu,DeclareTypeAlias:vu,declareTypeAlias:vu,DeclareOpaqueType:gu,declareOpaqueType:gu,DeclareVariable:bu,declareVariable:bu,DeclareExportDeclaration:Eu,declareExportDeclaration:Eu,DeclareExportAllDeclaration:Au,declareExportAllDeclaration:Au,DeclaredPredicate:Du,declaredPredicate:Du,ExistsTypeAnnotation:Su,existsTypeAnnotation:Su,FunctionTypeAnnotation:xu,functionTypeAnnotation:xu,FunctionTypeParam:Tu,functionTypeParam:Tu,GenericTypeAnnotation:Cu,genericTypeAnnotation:Cu,InferredPredicate:wu,inferredPredicate:wu,InterfaceExtends:Pu,interfaceExtends:Pu,InterfaceDeclaration:Fu,interfaceDeclaration:Fu,InterfaceTypeAnnotation:ku,interfaceTypeAnnotation:ku,IntersectionTypeAnnotation:_u,intersectionTypeAnnotation:_u,MixedTypeAnnotation:Iu,mixedTypeAnnotation:Iu,EmptyTypeAnnotation:Ou,emptyTypeAnnotation:Ou,NullableTypeAnnotation:Bu,nullableTypeAnnotation:Bu,NumberLiteralTypeAnnotation:Nu,numberLiteralTypeAnnotation:Nu,NumberTypeAnnotation:Mu,numberTypeAnnotation:Mu,ObjectTypeAnnotation:Ru,objectTypeAnnotation:Ru,ObjectTypeInternalSlot:Lu,objectTypeInternalSlot:Lu,ObjectTypeCallProperty:ju,objectTypeCallProperty:ju,ObjectTypeIndexer:Uu,objectTypeIndexer:Uu,ObjectTypeProperty:Vu,objectTypeProperty:Vu,ObjectTypeSpreadProperty:Wu,objectTypeSpreadProperty:Wu,OpaqueType:Gu,opaqueType:Gu,QualifiedTypeIdentifier:Hu,qualifiedTypeIdentifier:Hu,StringLiteralTypeAnnotation:qu,stringLiteralTypeAnnotation:qu,StringTypeAnnotation:Ku,stringTypeAnnotation:Ku,ThisTypeAnnotation:Xu,thisTypeAnnotation:Xu,TupleTypeAnnotation:zu,tupleTypeAnnotation:zu,TypeofTypeAnnotation:Ju,typeofTypeAnnotation:Ju,TypeAlias:Yu,typeAlias:Yu,TypeAnnotation:$u,typeAnnotation:$u,TypeCastExpression:Qu,typeCastExpression:Qu,TypeParameter:Zu,typeParameter:Zu,TypeParameterDeclaration:el,typeParameterDeclaration:el,TypeParameterInstantiation:tl,typeParameterInstantiation:tl,UnionTypeAnnotation:nl,unionTypeAnnotation:nl,Variance:rl,variance:rl,VoidTypeAnnotation:il,voidTypeAnnotation:il,EnumDeclaration:al,enumDeclaration:al,EnumBooleanBody:ol,enumBooleanBody:ol,EnumNumberBody:sl,enumNumberBody:sl,EnumStringBody:ul,enumStringBody:ul,EnumSymbolBody:ll,enumSymbolBody:ll,EnumBooleanMember:cl,enumBooleanMember:cl,EnumNumberMember:pl,enumNumberMember:pl,EnumStringMember:hl,enumStringMember:hl,EnumDefaultedMember:fl,enumDefaultedMember:fl,JSXAttribute:dl,jsxAttribute:dl,jSXAttribute:dl,JSXClosingElement:ml,jsxClosingElement:ml,jSXClosingElement:ml,JSXElement:yl,jsxElement:yl,jSXElement:yl,JSXEmptyExpression:vl,jsxEmptyExpression:vl,jSXEmptyExpression:vl,JSXExpressionContainer:gl,jsxExpressionContainer:gl,jSXExpressionContainer:gl,JSXSpreadChild:bl,jsxSpreadChild:bl,jSXSpreadChild:bl,JSXIdentifier:El,jsxIdentifier:El,jSXIdentifier:El,JSXMemberExpression:Al,jsxMemberExpression:Al,jSXMemberExpression:Al,JSXNamespacedName:Dl,jsxNamespacedName:Dl,jSXNamespacedName:Dl,JSXOpeningElement:Sl,jsxOpeningElement:Sl,jSXOpeningElement:Sl,JSXSpreadAttribute:xl,jsxSpreadAttribute:xl,jSXSpreadAttribute:xl,JSXText:Tl,jsxText:Tl,jSXText:Tl,JSXFragment:Cl,jsxFragment:Cl,jSXFragment:Cl,JSXOpeningFragment:wl,jsxOpeningFragment:wl,jSXOpeningFragment:wl,JSXClosingFragment:Pl,jsxClosingFragment:Pl,jSXClosingFragment:Pl,Noop:Fl,noop:Fl,Placeholder:kl,placeholder:kl,V8IntrinsicIdentifier:_l,v8IntrinsicIdentifier:_l,ArgumentPlaceholder:Il,argumentPlaceholder:Il,AwaitExpression:Ol,awaitExpression:Ol,BindExpression:Bl,bindExpression:Bl,ClassProperty:Nl,classProperty:Nl,OptionalMemberExpression:Ml,optionalMemberExpression:Ml,PipelineTopicExpression:Rl,pipelineTopicExpression:Rl,PipelineBareFunction:Ll,pipelineBareFunction:Ll,PipelinePrimaryTopicReference:jl,pipelinePrimaryTopicReference:jl,OptionalCallExpression:Ul,optionalCallExpression:Ul,ClassPrivateProperty:Vl,classPrivateProperty:Vl,ClassPrivateMethod:Wl,classPrivateMethod:Wl,Import:Gl,import:Gl,Decorator:Hl,decorator:Hl,DoExpression:ql,doExpression:ql,ExportDefaultSpecifier:Kl,exportDefaultSpecifier:Kl,ExportNamespaceSpecifier:Xl,exportNamespaceSpecifier:Xl,PrivateName:zl,privateName:zl,BigIntLiteral:Jl,bigIntLiteral:Jl,TSParameterProperty:Yl,tsParameterProperty:Yl,tSParameterProperty:Yl,TSDeclareFunction:$l,tsDeclareFunction:$l,tSDeclareFunction:$l,TSDeclareMethod:Ql,tsDeclareMethod:Ql,tSDeclareMethod:Ql,TSQualifiedName:Zl,tsQualifiedName:Zl,tSQualifiedName:Zl,TSCallSignatureDeclaration:ec,tsCallSignatureDeclaration:ec,tSCallSignatureDeclaration:ec,TSConstructSignatureDeclaration:tc,tsConstructSignatureDeclaration:tc,tSConstructSignatureDeclaration:tc,TSPropertySignature:nc,tsPropertySignature:nc,tSPropertySignature:nc,TSMethodSignature:rc,tsMethodSignature:rc,tSMethodSignature:rc,TSIndexSignature:ic,tsIndexSignature:ic,tSIndexSignature:ic,TSAnyKeyword:ac,tsAnyKeyword:ac,tSAnyKeyword:ac,TSBooleanKeyword:oc,tsBooleanKeyword:oc,tSBooleanKeyword:oc,TSBigIntKeyword:sc,tsBigIntKeyword:sc,tSBigIntKeyword:sc,TSNeverKeyword:uc,tsNeverKeyword:uc,tSNeverKeyword:uc,TSNullKeyword:lc,tsNullKeyword:lc,tSNullKeyword:lc,TSNumberKeyword:cc,tsNumberKeyword:cc,tSNumberKeyword:cc,TSObjectKeyword:pc,tsObjectKeyword:pc,tSObjectKeyword:pc,TSStringKeyword:hc,tsStringKeyword:hc,tSStringKeyword:hc,TSSymbolKeyword:fc,tsSymbolKeyword:fc,tSSymbolKeyword:fc,TSUndefinedKeyword:dc,tsUndefinedKeyword:dc,tSUndefinedKeyword:dc,TSUnknownKeyword:mc,tsUnknownKeyword:mc,tSUnknownKeyword:mc,TSVoidKeyword:yc,tsVoidKeyword:yc,tSVoidKeyword:yc,TSThisType:vc,tsThisType:vc,tSThisType:vc,TSFunctionType:gc,tsFunctionType:gc,tSFunctionType:gc,TSConstructorType:bc,tsConstructorType:bc,tSConstructorType:bc,TSTypeReference:Ec,tsTypeReference:Ec,tSTypeReference:Ec,TSTypePredicate:Ac,tsTypePredicate:Ac,tSTypePredicate:Ac,TSTypeQuery:Dc,tsTypeQuery:Dc,tSTypeQuery:Dc,TSTypeLiteral:Sc,tsTypeLiteral:Sc,tSTypeLiteral:Sc,TSArrayType:xc,tsArrayType:xc,tSArrayType:xc,TSTupleType:Tc,tsTupleType:Tc,tSTupleType:Tc,TSOptionalType:Cc,tsOptionalType:Cc,tSOptionalType:Cc,TSRestType:wc,tsRestType:wc,tSRestType:wc,TSUnionType:Pc,tsUnionType:Pc,tSUnionType:Pc,TSIntersectionType:Fc,tsIntersectionType:Fc,tSIntersectionType:Fc,TSConditionalType:kc,tsConditionalType:kc,tSConditionalType:kc,TSInferType:_c,tsInferType:_c,tSInferType:_c,TSParenthesizedType:Ic,tsParenthesizedType:Ic,tSParenthesizedType:Ic,TSTypeOperator:Oc,tsTypeOperator:Oc,tSTypeOperator:Oc,TSIndexedAccessType:Bc,tsIndexedAccessType:Bc,tSIndexedAccessType:Bc,TSMappedType:Nc,tsMappedType:Nc,tSMappedType:Nc,TSLiteralType:Mc,tsLiteralType:Mc,tSLiteralType:Mc,TSExpressionWithTypeArguments:Rc,tsExpressionWithTypeArguments:Rc,tSExpressionWithTypeArguments:Rc,TSInterfaceDeclaration:Lc,tsInterfaceDeclaration:Lc,tSInterfaceDeclaration:Lc,TSInterfaceBody:jc,tsInterfaceBody:jc,tSInterfaceBody:jc,TSTypeAliasDeclaration:Uc,tsTypeAliasDeclaration:Uc,tSTypeAliasDeclaration:Uc,TSAsExpression:Vc,tsAsExpression:Vc,tSAsExpression:Vc,TSTypeAssertion:Wc,tsTypeAssertion:Wc,tSTypeAssertion:Wc,TSEnumDeclaration:Gc,tsEnumDeclaration:Gc,tSEnumDeclaration:Gc,TSEnumMember:Hc,tsEnumMember:Hc,tSEnumMember:Hc,TSModuleDeclaration:qc,tsModuleDeclaration:qc,tSModuleDeclaration:qc,TSModuleBlock:Kc,tsModuleBlock:Kc,tSModuleBlock:Kc,TSImportType:Xc,tsImportType:Xc,tSImportType:Xc,TSImportEqualsDeclaration:zc,tsImportEqualsDeclaration:zc,tSImportEqualsDeclaration:zc,TSExternalModuleReference:Jc,tsExternalModuleReference:Jc,tSExternalModuleReference:Jc,TSNonNullExpression:Yc,tsNonNullExpression:Yc,tSNonNullExpression:Yc,TSExportAssignment:$c,tsExportAssignment:$c,tSExportAssignment:$c,TSNamespaceExportDeclaration:Qc,tsNamespaceExportDeclaration:Qc,tSNamespaceExportDeclaration:Qc,TSTypeAnnotation:Zc,tsTypeAnnotation:Zc,tSTypeAnnotation:Zc,TSTypeParameterInstantiation:ep,tsTypeParameterInstantiation:ep,tSTypeParameterInstantiation:ep,TSTypeParameterDeclaration:tp,tsTypeParameterDeclaration:tp,tSTypeParameterDeclaration:tp,TSTypeParameter:np,tsTypeParameter:np,tSTypeParameter:np,NumberLiteral:rp,numberLiteral:rp,RegexLiteral:ip,regexLiteral:ip,RestProperty:ap,restProperty:ap,SpreadProperty:op,spreadProperty:op,EXPRESSION_TYPES:Kp,BINARY_TYPES:Xp,SCOPABLE_TYPES:zp,BLOCKPARENT_TYPES:Jp,BLOCK_TYPES:Yp,STATEMENT_TYPES:$p,TERMINATORLESS_TYPES:Qp,COMPLETIONSTATEMENT_TYPES:Zp,CONDITIONAL_TYPES:eh,LOOP_TYPES:th,WHILE_TYPES:nh,EXPRESSIONWRAPPER_TYPES:rh,FOR_TYPES:ih,FORXSTATEMENT_TYPES:ah,FUNCTION_TYPES:oh,FUNCTIONPARENT_TYPES:sh,PUREISH_TYPES:uh,DECLARATION_TYPES:lh,PATTERNLIKE_TYPES:ch,LVAL_TYPES:ph,TSENTITYNAME_TYPES:hh,LITERAL_TYPES:fh,IMMUTABLE_TYPES:dh,USERWHITESPACABLE_TYPES:mh,METHOD_TYPES:yh,OBJECTMEMBER_TYPES:vh,PROPERTY_TYPES:gh,UNARYLIKE_TYPES:bh,PATTERN_TYPES:Eh,CLASS_TYPES:Ah,MODULEDECLARATION_TYPES:Dh,EXPORTDECLARATION_TYPES:Sh,MODULESPECIFIER_TYPES:xh,FLOW_TYPES:Th,FLOWTYPE_TYPES:Ch,FLOWBASEANNOTATION_TYPES:wh,FLOWDECLARATION_TYPES:Ph,FLOWPREDICATE_TYPES:Fh,ENUMBODY_TYPES:kh,ENUMMEMBER_TYPES:_h,JSX_TYPES:Ih,PRIVATE_TYPES:Oh,TSTYPEELEMENT_TYPES:Bh,TSTYPE_TYPES:Nh,STATEMENT_OR_BLOCK_KEYS:Ea,FLATTENABLE_KEYS:["body","expressions"],FOR_INIT_KEYS:Aa,COMMENT_KEYS:Da,LOGICAL_OPERATORS:Sa,UPDATE_OPERATORS:xa,BOOLEAN_NUMBER_BINARY_OPERATORS:Ta,EQUALITY_BINARY_OPERATORS:Ca,COMPARISON_BINARY_OPERATORS:wa,BOOLEAN_BINARY_OPERATORS:Pa,NUMBER_BINARY_OPERATORS:Fa,BINARY_OPERATORS:ka,BOOLEAN_UNARY_OPERATORS:_a,NUMBER_UNARY_OPERATORS:Ia,STRING_UNARY_OPERATORS:Oa,UNARY_OPERATORS:Ba,INHERIT_KEYS:Na,BLOCK_SCOPED_SYMBOL:Ma,NOT_LOCAL_BINDING:Ra,VISITOR_KEYS:Ga,ALIAS_KEYS:Ha,FLIPPED_ALIAS_KEYS:qa,NODE_FIELDS:Ka,BUILDER_KEYS:Xa,DEPRECATED_KEYS:za,PLACEHOLDERS:Ao,PLACEHOLDERS_ALIAS:Do,PLACEHOLDERS_FLIPPED_ALIAS:wo,TYPES:Ro,isArrayExpression:s,isAssignmentExpression:u,isBinaryExpression:l,isInterpreterDirective:function(e,t){return!!e&&("InterpreterDirective"===e.type&&(void 0===t||o(e,t)))},isDirective:function(e,t){return!!e&&("Directive"===e.type&&(void 0===t||o(e,t)))},isDirectiveLiteral:function(e,t){return!!e&&("DirectiveLiteral"===e.type&&(void 0===t||o(e,t)))},isBlockStatement:c,isBreakStatement:p,isCallExpression:h,isCatchClause:f,isConditionalExpression:d,isContinueStatement:m,isDebuggerStatement:function(e,t){return!!e&&("DebuggerStatement"===e.type&&(void 0===t||o(e,t)))},isDoWhileStatement:function(e,t){return!!e&&("DoWhileStatement"===e.type&&(void 0===t||o(e,t)))},isEmptyStatement:y,isExpressionStatement:v,isFile:g,isForInStatement:b,isForStatement:E,isFunctionDeclaration:A,isFunctionExpression:D,isIdentifier:S,isIfStatement:x,isLabeledStatement:T,isStringLiteral:C,isNumericLiteral:w,isNullLiteral:P,isBooleanLiteral:function(e,t){return!!e&&("BooleanLiteral"===e.type&&(void 0===t||o(e,t)))},isRegExpLiteral:F,isLogicalExpression:k,isMemberExpression:_,isNewExpression:I,isProgram:O,isObjectExpression:B,isObjectMethod:N,isObjectProperty:M,isRestElement:R,isReturnStatement:L,isSequenceExpression:j,isParenthesizedExpression:function(e,t){return!!e&&("ParenthesizedExpression"===e.type&&(void 0===t||o(e,t)))},isSwitchCase:function(e,t){return!!e&&("SwitchCase"===e.type&&(void 0===t||o(e,t)))},isSwitchStatement:U,isThisExpression:V,isThrowStatement:W,isTryStatement:function(e,t){return!!e&&("TryStatement"===e.type&&(void 0===t||o(e,t)))},isUnaryExpression:G,isUpdateExpression:function(e,t){return!!e&&("UpdateExpression"===e.type&&(void 0===t||o(e,t)))},isVariableDeclaration:H,isVariableDeclarator:q,isWhileStatement:K,isWithStatement:function(e,t){return!!e&&("WithStatement"===e.type&&(void 0===t||o(e,t)))},isAssignmentPattern:X,isArrayPattern:z,isArrowFunctionExpression:J,isClassBody:Y,isClassDeclaration:$,isClassExpression:Q,isExportAllDeclaration:Z,isExportDefaultDeclaration:ee,isExportNamedDeclaration:te,isExportSpecifier:ne,isForOfStatement:function(e,t){return!!e&&("ForOfStatement"===e.type&&(void 0===t||o(e,t)))},isImportDeclaration:re,isImportDefaultSpecifier:ie,isImportNamespaceSpecifier:ae,isImportSpecifier:oe,isMetaProperty:function(e,t){return!!e&&("MetaProperty"===e.type&&(void 0===t||o(e,t)))},isClassMethod:se,isObjectPattern:ue,isSpreadElement:le,isSuper:ce,isTaggedTemplateExpression:pe,isTemplateElement:function(e,t){return!!e&&("TemplateElement"===e.type&&(void 0===t||o(e,t)))},isTemplateLiteral:he,isYieldExpression:fe,isAnyTypeAnnotation:de,isArrayTypeAnnotation:me,isBooleanTypeAnnotation:ye,isBooleanLiteralTypeAnnotation:function(e,t){return!!e&&("BooleanLiteralTypeAnnotation"===e.type&&(void 0===t||o(e,t)))},isNullLiteralTypeAnnotation:function(e,t){return!!e&&("NullLiteralTypeAnnotation"===e.type&&(void 0===t||o(e,t)))},isClassImplements:function(e,t){return!!e&&("ClassImplements"===e.type&&(void 0===t||o(e,t)))},isDeclareClass:function(e,t){return!!e&&("DeclareClass"===e.type&&(void 0===t||o(e,t)))},isDeclareFunction:function(e,t){return!!e&&("DeclareFunction"===e.type&&(void 0===t||o(e,t)))},isDeclareInterface:function(e,t){return!!e&&("DeclareInterface"===e.type&&(void 0===t||o(e,t)))},isDeclareModule:function(e,t){return!!e&&("DeclareModule"===e.type&&(void 0===t||o(e,t)))},isDeclareModuleExports:function(e,t){return!!e&&("DeclareModuleExports"===e.type&&(void 0===t||o(e,t)))},isDeclareTypeAlias:function(e,t){return!!e&&("DeclareTypeAlias"===e.type&&(void 0===t||o(e,t)))},isDeclareOpaqueType:function(e,t){return!!e&&("DeclareOpaqueType"===e.type&&(void 0===t||o(e,t)))},isDeclareVariable:function(e,t){return!!e&&("DeclareVariable"===e.type&&(void 0===t||o(e,t)))},isDeclareExportDeclaration:ve,isDeclareExportAllDeclaration:function(e,t){return!!e&&("DeclareExportAllDeclaration"===e.type&&(void 0===t||o(e,t)))},isDeclaredPredicate:function(e,t){return!!e&&("DeclaredPredicate"===e.type&&(void 0===t||o(e,t)))},isExistsTypeAnnotation:function(e,t){return!!e&&("ExistsTypeAnnotation"===e.type&&(void 0===t||o(e,t)))},isFunctionTypeAnnotation:function(e,t){return!!e&&("FunctionTypeAnnotation"===e.type&&(void 0===t||o(e,t)))},isFunctionTypeParam:function(e,t){return!!e&&("FunctionTypeParam"===e.type&&(void 0===t||o(e,t)))},isGenericTypeAnnotation:ge,isInferredPredicate:function(e,t){return!!e&&("InferredPredicate"===e.type&&(void 0===t||o(e,t)))},isInterfaceExtends:function(e,t){return!!e&&("InterfaceExtends"===e.type&&(void 0===t||o(e,t)))},isInterfaceDeclaration:function(e,t){return!!e&&("InterfaceDeclaration"===e.type&&(void 0===t||o(e,t)))},isInterfaceTypeAnnotation:function(e,t){return!!e&&("InterfaceTypeAnnotation"===e.type&&(void 0===t||o(e,t)))},isIntersectionTypeAnnotation:be,isMixedTypeAnnotation:Ee,isEmptyTypeAnnotation:Ae,isNullableTypeAnnotation:De,isNumberLiteralTypeAnnotation:function(e,t){return!!e&&("NumberLiteralTypeAnnotation"===e.type&&(void 0===t||o(e,t)))},isNumberTypeAnnotation:Se,isObjectTypeAnnotation:function(e,t){return!!e&&("ObjectTypeAnnotation"===e.type&&(void 0===t||o(e,t)))},isObjectTypeInternalSlot:function(e,t){return!!e&&("ObjectTypeInternalSlot"===e.type&&(void 0===t||o(e,t)))},isObjectTypeCallProperty:function(e,t){return!!e&&("ObjectTypeCallProperty"===e.type&&(void 0===t||o(e,t)))},isObjectTypeIndexer:function(e,t){return!!e&&("ObjectTypeIndexer"===e.type&&(void 0===t||o(e,t)))},isObjectTypeProperty:function(e,t){return!!e&&("ObjectTypeProperty"===e.type&&(void 0===t||o(e,t)))},isObjectTypeSpreadProperty:function(e,t){return!!e&&("ObjectTypeSpreadProperty"===e.type&&(void 0===t||o(e,t)))},isOpaqueType:function(e,t){return!!e&&("OpaqueType"===e.type&&(void 0===t||o(e,t)))},isQualifiedTypeIdentifier:function(e,t){return!!e&&("QualifiedTypeIdentifier"===e.type&&(void 0===t||o(e,t)))},isStringLiteralTypeAnnotation:function(e,t){return!!e&&("StringLiteralTypeAnnotation"===e.type&&(void 0===t||o(e,t)))},isStringTypeAnnotation:xe,isThisTypeAnnotation:function(e,t){return!!e&&("ThisTypeAnnotation"===e.type&&(void 0===t||o(e,t)))},isTupleTypeAnnotation:function(e,t){return!!e&&("TupleTypeAnnotation"===e.type&&(void 0===t||o(e,t)))},isTypeofTypeAnnotation:function(e,t){return!!e&&("TypeofTypeAnnotation"===e.type&&(void 0===t||o(e,t)))},isTypeAlias:function(e,t){return!!e&&("TypeAlias"===e.type&&(void 0===t||o(e,t)))},isTypeAnnotation:Te,isTypeCastExpression:Ce,isTypeParameter:function(e,t){return!!e&&("TypeParameter"===e.type&&(void 0===t||o(e,t)))},isTypeParameterDeclaration:function(e,t){return!!e&&("TypeParameterDeclaration"===e.type&&(void 0===t||o(e,t)))},isTypeParameterInstantiation:function(e,t){return!!e&&("TypeParameterInstantiation"===e.type&&(void 0===t||o(e,t)))},isUnionTypeAnnotation:we,isVariance:function(e,t){return!!e&&("Variance"===e.type&&(void 0===t||o(e,t)))},isVoidTypeAnnotation:Pe,isEnumDeclaration:function(e,t){return!!e&&("EnumDeclaration"===e.type&&(void 0===t||o(e,t)))},isEnumBooleanBody:function(e,t){return!!e&&("EnumBooleanBody"===e.type&&(void 0===t||o(e,t)))},isEnumNumberBody:function(e,t){return!!e&&("EnumNumberBody"===e.type&&(void 0===t||o(e,t)))},isEnumStringBody:function(e,t){return!!e&&("EnumStringBody"===e.type&&(void 0===t||o(e,t)))},isEnumSymbolBody:function(e,t){return!!e&&("EnumSymbolBody"===e.type&&(void 0===t||o(e,t)))},isEnumBooleanMember:function(e,t){return!!e&&("EnumBooleanMember"===e.type&&(void 0===t||o(e,t)))},isEnumNumberMember:function(e,t){return!!e&&("EnumNumberMember"===e.type&&(void 0===t||o(e,t)))},isEnumStringMember:function(e,t){return!!e&&("EnumStringMember"===e.type&&(void 0===t||o(e,t)))},isEnumDefaultedMember:function(e,t){return!!e&&("EnumDefaultedMember"===e.type&&(void 0===t||o(e,t)))},isJSXAttribute:Fe,isJSXClosingElement:function(e,t){return!!e&&("JSXClosingElement"===e.type&&(void 0===t||o(e,t)))},isJSXElement:ke,isJSXEmptyExpression:_e,isJSXExpressionContainer:Ie,isJSXSpreadChild:function(e,t){return!!e&&("JSXSpreadChild"===e.type&&(void 0===t||o(e,t)))},isJSXIdentifier:Oe,isJSXMemberExpression:Be,isJSXNamespacedName:Ne,isJSXOpeningElement:function(e,t){return!!e&&("JSXOpeningElement"===e.type&&(void 0===t||o(e,t)))},isJSXSpreadAttribute:Me,isJSXText:Re,isJSXFragment:function(e,t){return!!e&&("JSXFragment"===e.type&&(void 0===t||o(e,t)))},isJSXOpeningFragment:function(e,t){return!!e&&("JSXOpeningFragment"===e.type&&(void 0===t||o(e,t)))},isJSXClosingFragment:function(e,t){return!!e&&("JSXClosingFragment"===e.type&&(void 0===t||o(e,t)))},isNoop:function(e,t){return!!e&&("Noop"===e.type&&(void 0===t||o(e,t)))},isPlaceholder:Le,isV8IntrinsicIdentifier:function(e,t){return!!e&&("V8IntrinsicIdentifier"===e.type&&(void 0===t||o(e,t)))},isArgumentPlaceholder:function(e,t){return!!e&&("ArgumentPlaceholder"===e.type&&(void 0===t||o(e,t)))},isAwaitExpression:je,isBindExpression:Ue,isClassProperty:Ve,isOptionalMemberExpression:We,isPipelineTopicExpression:Ge,isPipelineBareFunction:function(e,t){return!!e&&("PipelineBareFunction"===e.type&&(void 0===t||o(e,t)))},isPipelinePrimaryTopicReference:function(e,t){return!!e&&("PipelinePrimaryTopicReference"===e.type&&(void 0===t||o(e,t)))},isOptionalCallExpression:function(e,t){return!!e&&("OptionalCallExpression"===e.type&&(void 0===t||o(e,t)))},isClassPrivateProperty:function(e,t){return!!e&&("ClassPrivateProperty"===e.type&&(void 0===t||o(e,t)))},isClassPrivateMethod:function(e,t){return!!e&&("ClassPrivateMethod"===e.type&&(void 0===t||o(e,t)))},isImport:He,isDecorator:function(e,t){return!!e&&("Decorator"===e.type&&(void 0===t||o(e,t)))},isDoExpression:function(e,t){return!!e&&("DoExpression"===e.type&&(void 0===t||o(e,t)))},isExportDefaultSpecifier:qe,isExportNamespaceSpecifier:Ke,isPrivateName:Xe,isBigIntLiteral:function(e,t){return!!e&&("BigIntLiteral"===e.type&&(void 0===t||o(e,t)))},isTSParameterProperty:function(e,t){return!!e&&("TSParameterProperty"===e.type&&(void 0===t||o(e,t)))},isTSDeclareFunction:function(e,t){return!!e&&("TSDeclareFunction"===e.type&&(void 0===t||o(e,t)))},isTSDeclareMethod:function(e,t){return!!e&&("TSDeclareMethod"===e.type&&(void 0===t||o(e,t)))},isTSQualifiedName:function(e,t){return!!e&&("TSQualifiedName"===e.type&&(void 0===t||o(e,t)))},isTSCallSignatureDeclaration:function(e,t){return!!e&&("TSCallSignatureDeclaration"===e.type&&(void 0===t||o(e,t)))},isTSConstructSignatureDeclaration:function(e,t){return!!e&&("TSConstructSignatureDeclaration"===e.type&&(void 0===t||o(e,t)))},isTSPropertySignature:function(e,t){return!!e&&("TSPropertySignature"===e.type&&(void 0===t||o(e,t)))},isTSMethodSignature:function(e,t){return!!e&&("TSMethodSignature"===e.type&&(void 0===t||o(e,t)))},isTSIndexSignature:function(e,t){return!!e&&("TSIndexSignature"===e.type&&(void 0===t||o(e,t)))},isTSAnyKeyword:function(e,t){return!!e&&("TSAnyKeyword"===e.type&&(void 0===t||o(e,t)))},isTSBooleanKeyword:function(e,t){return!!e&&("TSBooleanKeyword"===e.type&&(void 0===t||o(e,t)))},isTSBigIntKeyword:function(e,t){return!!e&&("TSBigIntKeyword"===e.type&&(void 0===t||o(e,t)))},isTSNeverKeyword:function(e,t){return!!e&&("TSNeverKeyword"===e.type&&(void 0===t||o(e,t)))},isTSNullKeyword:function(e,t){return!!e&&("TSNullKeyword"===e.type&&(void 0===t||o(e,t)))},isTSNumberKeyword:function(e,t){return!!e&&("TSNumberKeyword"===e.type&&(void 0===t||o(e,t)))},isTSObjectKeyword:function(e,t){return!!e&&("TSObjectKeyword"===e.type&&(void 0===t||o(e,t)))},isTSStringKeyword:function(e,t){return!!e&&("TSStringKeyword"===e.type&&(void 0===t||o(e,t)))},isTSSymbolKeyword:function(e,t){return!!e&&("TSSymbolKeyword"===e.type&&(void 0===t||o(e,t)))},isTSUndefinedKeyword:function(e,t){return!!e&&("TSUndefinedKeyword"===e.type&&(void 0===t||o(e,t)))},isTSUnknownKeyword:function(e,t){return!!e&&("TSUnknownKeyword"===e.type&&(void 0===t||o(e,t)))},isTSVoidKeyword:function(e,t){return!!e&&("TSVoidKeyword"===e.type&&(void 0===t||o(e,t)))},isTSThisType:function(e,t){return!!e&&("TSThisType"===e.type&&(void 0===t||o(e,t)))},isTSFunctionType:function(e,t){return!!e&&("TSFunctionType"===e.type&&(void 0===t||o(e,t)))},isTSConstructorType:function(e,t){return!!e&&("TSConstructorType"===e.type&&(void 0===t||o(e,t)))},isTSTypeReference:function(e,t){return!!e&&("TSTypeReference"===e.type&&(void 0===t||o(e,t)))},isTSTypePredicate:function(e,t){return!!e&&("TSTypePredicate"===e.type&&(void 0===t||o(e,t)))},isTSTypeQuery:function(e,t){return!!e&&("TSTypeQuery"===e.type&&(void 0===t||o(e,t)))},isTSTypeLiteral:function(e,t){return!!e&&("TSTypeLiteral"===e.type&&(void 0===t||o(e,t)))},isTSArrayType:ze,isTSTupleType:function(e,t){return!!e&&("TSTupleType"===e.type&&(void 0===t||o(e,t)))},isTSOptionalType:Je,isTSRestType:Ye,isTSUnionType:$e,isTSIntersectionType:Qe,isTSConditionalType:function(e,t){return!!e&&("TSConditionalType"===e.type&&(void 0===t||o(e,t)))},isTSInferType:function(e,t){return!!e&&("TSInferType"===e.type&&(void 0===t||o(e,t)))},isTSParenthesizedType:function(e,t){return!!e&&("TSParenthesizedType"===e.type&&(void 0===t||o(e,t)))},isTSTypeOperator:function(e,t){return!!e&&("TSTypeOperator"===e.type&&(void 0===t||o(e,t)))},isTSIndexedAccessType:function(e,t){return!!e&&("TSIndexedAccessType"===e.type&&(void 0===t||o(e,t)))},isTSMappedType:function(e,t){return!!e&&("TSMappedType"===e.type&&(void 0===t||o(e,t)))},isTSLiteralType:function(e,t){return!!e&&("TSLiteralType"===e.type&&(void 0===t||o(e,t)))},isTSExpressionWithTypeArguments:function(e,t){return!!e&&("TSExpressionWithTypeArguments"===e.type&&(void 0===t||o(e,t)))},isTSInterfaceDeclaration:function(e,t){return!!e&&("TSInterfaceDeclaration"===e.type&&(void 0===t||o(e,t)))},isTSInterfaceBody:function(e,t){return!!e&&("TSInterfaceBody"===e.type&&(void 0===t||o(e,t)))},isTSTypeAliasDeclaration:function(e,t){return!!e&&("TSTypeAliasDeclaration"===e.type&&(void 0===t||o(e,t)))},isTSAsExpression:Ze,isTSTypeAssertion:et,isTSEnumDeclaration:function(e,t){return!!e&&("TSEnumDeclaration"===e.type&&(void 0===t||o(e,t)))},isTSEnumMember:function(e,t){return!!e&&("TSEnumMember"===e.type&&(void 0===t||o(e,t)))},isTSModuleDeclaration:function(e,t){return!!e&&("TSModuleDeclaration"===e.type&&(void 0===t||o(e,t)))},isTSModuleBlock:function(e,t){return!!e&&("TSModuleBlock"===e.type&&(void 0===t||o(e,t)))},isTSImportType:function(e,t){return!!e&&("TSImportType"===e.type&&(void 0===t||o(e,t)))},isTSImportEqualsDeclaration:function(e,t){return!!e&&("TSImportEqualsDeclaration"===e.type&&(void 0===t||o(e,t)))},isTSExternalModuleReference:function(e,t){return!!e&&("TSExternalModuleReference"===e.type&&(void 0===t||o(e,t)))},isTSNonNullExpression:function(e,t){return!!e&&("TSNonNullExpression"===e.type&&(void 0===t||o(e,t)))},isTSExportAssignment:function(e,t){return!!e&&("TSExportAssignment"===e.type&&(void 0===t||o(e,t)))},isTSNamespaceExportDeclaration:function(e,t){return!!e&&("TSNamespaceExportDeclaration"===e.type&&(void 0===t||o(e,t)))},isTSTypeAnnotation:function(e,t){return!!e&&("TSTypeAnnotation"===e.type&&(void 0===t||o(e,t)))},isTSTypeParameterInstantiation:function(e,t){return!!e&&("TSTypeParameterInstantiation"===e.type&&(void 0===t||o(e,t)))},isTSTypeParameterDeclaration:function(e,t){return!!e&&("TSTypeParameterDeclaration"===e.type&&(void 0===t||o(e,t)))},isTSTypeParameter:function(e,t){return!!e&&("TSTypeParameter"===e.type&&(void 0===t||o(e,t)))},isExpression:tt,isBinary:nt,isScopable:rt,isBlockParent:function(e,t){if(!e)return!1;var n=e.type;return("BlockParent"===n||"BlockStatement"===n||"CatchClause"===n||"DoWhileStatement"===n||"ForInStatement"===n||"ForStatement"===n||"FunctionDeclaration"===n||"FunctionExpression"===n||"Program"===n||"ObjectMethod"===n||"SwitchStatement"===n||"WhileStatement"===n||"ArrowFunctionExpression"===n||"ForOfStatement"===n||"ClassMethod"===n||"ClassPrivateMethod"===n||"TSModuleBlock"===n||"Placeholder"===n&&"BlockStatement"===e.expectedNode)&&(void 0===t||o(e,t))},isBlock:function(e,t){if(!e)return!1;var n=e.type;return("Block"===n||"BlockStatement"===n||"Program"===n||"TSModuleBlock"===n||"Placeholder"===n&&"BlockStatement"===e.expectedNode)&&(void 0===t||o(e,t))},isStatement:it,isTerminatorless:function(e,t){if(!e)return!1;var n=e.type;return("Terminatorless"===n||"BreakStatement"===n||"ContinueStatement"===n||"ReturnStatement"===n||"ThrowStatement"===n||"YieldExpression"===n||"AwaitExpression"===n)&&(void 0===t||o(e,t))},isCompletionStatement:function(e,t){if(!e)return!1;var n=e.type;return("CompletionStatement"===n||"BreakStatement"===n||"ContinueStatement"===n||"ReturnStatement"===n||"ThrowStatement"===n)&&(void 0===t||o(e,t))},isConditional:at,isLoop:ot,isWhile:function(e,t){if(!e)return!1;var n=e.type;return("While"===n||"DoWhileStatement"===n||"WhileStatement"===n)&&(void 0===t||o(e,t))},isExpressionWrapper:function(e,t){if(!e)return!1;var n=e.type;return("ExpressionWrapper"===n||"ExpressionStatement"===n||"ParenthesizedExpression"===n||"TypeCastExpression"===n)&&(void 0===t||o(e,t))},isFor:st,isForXStatement:ut,isFunction:lt,isFunctionParent:function(e,t){if(!e)return!1;var n=e.type;return("FunctionParent"===n||"FunctionDeclaration"===n||"FunctionExpression"===n||"ObjectMethod"===n||"ArrowFunctionExpression"===n||"ClassMethod"===n||"ClassPrivateMethod"===n)&&(void 0===t||o(e,t))},isPureish:ct,isDeclaration:pt,isPatternLike:function(e,t){if(!e)return!1;var n=e.type;return("PatternLike"===n||"Identifier"===n||"RestElement"===n||"AssignmentPattern"===n||"ArrayPattern"===n||"ObjectPattern"===n||"Placeholder"===n&&("Pattern"===e.expectedNode||"Identifier"===e.expectedNode))&&(void 0===t||o(e,t))},isLVal:function(e,t){if(!e)return!1;var n=e.type;return("LVal"===n||"Identifier"===n||"MemberExpression"===n||"RestElement"===n||"AssignmentPattern"===n||"ArrayPattern"===n||"ObjectPattern"===n||"TSParameterProperty"===n||"Placeholder"===n&&("Pattern"===e.expectedNode||"Identifier"===e.expectedNode))&&(void 0===t||o(e,t))},isTSEntityName:function(e,t){if(!e)return!1;var n=e.type;return("TSEntityName"===n||"Identifier"===n||"TSQualifiedName"===n||"Placeholder"===n&&"Identifier"===e.expectedNode)&&(void 0===t||o(e,t))},isLiteral:ht,isUserWhitespacable:function(e,t){if(!e)return!1;var n=e.type;return("UserWhitespacable"===n||"ObjectMethod"===n||"ObjectProperty"===n||"ObjectTypeInternalSlot"===n||"ObjectTypeCallProperty"===n||"ObjectTypeIndexer"===n||"ObjectTypeProperty"===n||"ObjectTypeSpreadProperty"===n)&&(void 0===t||o(e,t))},isMethod:function(e,t){if(!e)return!1;var n=e.type;return("Method"===n||"ObjectMethod"===n||"ClassMethod"===n||"ClassPrivateMethod"===n)&&(void 0===t||o(e,t))},isObjectMember:function(e,t){if(!e)return!1;var n=e.type;return("ObjectMember"===n||"ObjectMethod"===n||"ObjectProperty"===n)&&(void 0===t||o(e,t))},isProperty:ft,isUnaryLike:dt,isPattern:mt,isClass:yt,isModuleDeclaration:vt,isExportDeclaration:gt,isModuleSpecifier:bt,isFlow:Et,isFlowType:function(e,t){if(!e)return!1;var n=e.type;return("FlowType"===n||"AnyTypeAnnotation"===n||"ArrayTypeAnnotation"===n||"BooleanTypeAnnotation"===n||"BooleanLiteralTypeAnnotation"===n||"NullLiteralTypeAnnotation"===n||"ExistsTypeAnnotation"===n||"FunctionTypeAnnotation"===n||"GenericTypeAnnotation"===n||"InterfaceTypeAnnotation"===n||"IntersectionTypeAnnotation"===n||"MixedTypeAnnotation"===n||"EmptyTypeAnnotation"===n||"NullableTypeAnnotation"===n||"NumberLiteralTypeAnnotation"===n||"NumberTypeAnnotation"===n||"ObjectTypeAnnotation"===n||"StringLiteralTypeAnnotation"===n||"StringTypeAnnotation"===n||"ThisTypeAnnotation"===n||"TupleTypeAnnotation"===n||"TypeofTypeAnnotation"===n||"UnionTypeAnnotation"===n||"VoidTypeAnnotation"===n)&&(void 0===t||o(e,t))},isFlowBaseAnnotation:At,isFlowDeclaration:function(e,t){if(!e)return!1;var n=e.type;return("FlowDeclaration"===n||"DeclareClass"===n||"DeclareFunction"===n||"DeclareInterface"===n||"DeclareModule"===n||"DeclareModuleExports"===n||"DeclareTypeAlias"===n||"DeclareOpaqueType"===n||"DeclareVariable"===n||"DeclareExportDeclaration"===n||"DeclareExportAllDeclaration"===n||"InterfaceDeclaration"===n||"OpaqueType"===n||"TypeAlias"===n)&&(void 0===t||o(e,t))},isFlowPredicate:function(e,t){if(!e)return!1;var n=e.type;return("FlowPredicate"===n||"DeclaredPredicate"===n||"InferredPredicate"===n)&&(void 0===t||o(e,t))},isEnumBody:function(e,t){if(!e)return!1;var n=e.type;return("EnumBody"===n||"EnumBooleanBody"===n||"EnumNumberBody"===n||"EnumStringBody"===n||"EnumSymbolBody"===n)&&(void 0===t||o(e,t))},isEnumMember:function(e,t){if(!e)return!1;var n=e.type;return("EnumMember"===n||"EnumBooleanMember"===n||"EnumNumberMember"===n||"EnumStringMember"===n||"EnumDefaultedMember"===n)&&(void 0===t||o(e,t))},isJSX:function(e,t){if(!e)return!1;var n=e.type;return("JSX"===n||"JSXAttribute"===n||"JSXClosingElement"===n||"JSXElement"===n||"JSXEmptyExpression"===n||"JSXExpressionContainer"===n||"JSXSpreadChild"===n||"JSXIdentifier"===n||"JSXMemberExpression"===n||"JSXNamespacedName"===n||"JSXOpeningElement"===n||"JSXSpreadAttribute"===n||"JSXText"===n||"JSXFragment"===n||"JSXOpeningFragment"===n||"JSXClosingFragment"===n)&&(void 0===t||o(e,t))},isPrivate:function(e,t){if(!e)return!1;var n=e.type;return("Private"===n||"ClassPrivateProperty"===n||"ClassPrivateMethod"===n||"PrivateName"===n)&&(void 0===t||o(e,t))},isTSTypeElement:function(e,t){if(!e)return!1;var n=e.type;return("TSTypeElement"===n||"TSCallSignatureDeclaration"===n||"TSConstructSignatureDeclaration"===n||"TSPropertySignature"===n||"TSMethodSignature"===n||"TSIndexSignature"===n)&&(void 0===t||o(e,t))},isTSType:function(e,t){if(!e)return!1;var n=e.type;return("TSType"===n||"TSAnyKeyword"===n||"TSBooleanKeyword"===n||"TSBigIntKeyword"===n||"TSNeverKeyword"===n||"TSNullKeyword"===n||"TSNumberKeyword"===n||"TSObjectKeyword"===n||"TSStringKeyword"===n||"TSSymbolKeyword"===n||"TSUndefinedKeyword"===n||"TSUnknownKeyword"===n||"TSVoidKeyword"===n||"TSThisType"===n||"TSFunctionType"===n||"TSConstructorType"===n||"TSTypeReference"===n||"TSTypePredicate"===n||"TSTypeQuery"===n||"TSTypeLiteral"===n||"TSArrayType"===n||"TSTupleType"===n||"TSOptionalType"===n||"TSRestType"===n||"TSUnionType"===n||"TSIntersectionType"===n||"TSConditionalType"===n||"TSInferType"===n||"TSParenthesizedType"===n||"TSTypeOperator"===n||"TSIndexedAccessType"===n||"TSMappedType"===n||"TSLiteralType"===n||"TSExpressionWithTypeArguments"===n||"TSImportType"===n)&&(void 0===t||o(e,t))},isNumberLiteral:function(e,t){return console.trace("The node type NumberLiteral has been renamed to NumericLiteral"),!!e&&("NumberLiteral"===e.type&&(void 0===t||o(e,t)))},isRegexLiteral:function(e,t){return console.trace("The node type RegexLiteral has been renamed to RegExpLiteral"),!!e&&("RegexLiteral"===e.type&&(void 0===t||o(e,t)))},isRestProperty:function(e,t){return console.trace("The node type RestProperty has been renamed to RestElement"),!!e&&("RestProperty"===e.type&&(void 0===t||o(e,t)))},isSpreadProperty:function(e,t){return console.trace("The node type SpreadProperty has been renamed to SpreadElement"),!!e&&("SpreadProperty"===e.type&&(void 0===t||o(e,t)))}}),xf={types:["Identifier","JSXIdentifier"],checkPath:function(e,t){var n=e.node,r=e.parent;if(!S(n,t)&&!Be(r,t)){if(!Oe(n,t))return!1;if(Df.isCompatTag(n.name))return!1}return vf(n,r,e.parentPath.parent)}},Tf={types:["MemberExpression"],checkPath:function(e){var t=e.node,n=e.parent;return _(t)&&vf(t,n)}},Cf={types:["Identifier"],checkPath:function(e){var t=e.node,n=e.parent,r=e.parentPath.parent;return S(t)&&df(t,n,r)}},wf={types:["Statement"],checkPath:function(e){var t=e.node,n=e.parent;if(it(t)){if(H(t)){if(ut(n,{left:t}))return!1;if(E(n,{init:t}))return!1}return!0}return!1}},Pf={types:["Expression"],checkPath:function(e){return e.isIdentifier()?e.isReferencedIdentifier():tt(e.node)}},Ff={types:["Scopable"],checkPath:function(e){return gf(e.node,e.parent)}},kf={checkPath:function(e){return vf(e.node,e.parent)}},_f={checkPath:function(e){return yf(e.node)}},If={types:["VariableDeclaration"],checkPath:function(e){return Af(e.node)}},Of={types:["Flow","ImportDeclaration","ExportDeclaration","ImportSpecifier"],checkPath:function(e){var t=e.node;return!!Et(t)||(re(t)?"type"===t.importKind||"typeof"===t.importKind:gt(t)?"type"===t.exportKind:!!oe(t)&&("type"===t.importKind||"typeof"===t.importKind))}},Bf=Object.freeze({__proto__:null,ReferencedIdentifier:xf,ReferencedMemberExpression:Tf,BindingIdentifier:Cf,Statement:wf,Expression:Pf,Scope:Ff,Referenced:kf,BlockScoped:_f,Var:If,User:{checkPath:function(e){return e.node&&!!e.node.loc}},Generated:{checkPath:function(e){return!e.isUser()}},Pure:{checkPath:function(e,t){return e.scope.isPure(e.node,t)}},Flow:Of,RestProperty:{types:["RestElement"],checkPath:function(e){return e.parentPath&&e.parentPath.isObjectPattern()}},SpreadProperty:{types:["RestElement"],checkPath:function(e){return e.parentPath&&e.parentPath.isObjectExpression()}},ExistentialTypeParam:{types:["ExistsTypeAnnotation"]},NumericLiteralTypeAnnotation:{types:["NumberLiteralTypeAnnotation"]},ForAwaitStatement:{types:["ForOfStatement"],checkPath:function(e){return!0===e.node.await}}}),Nf="undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};function Mf(){throw new Error("setTimeout has not been defined")}function Rf(){throw new Error("clearTimeout has not been defined")}var Lf=Mf,jf=Rf;function Uf(e){if(Lf===setTimeout)return setTimeout(e,0);if((Lf===Mf||!Lf)&&setTimeout)return Lf=setTimeout,setTimeout(e,0);try{return Lf(e,0)}catch(t){try{return Lf.call(null,e,0)}catch(t){return Lf.call(this,e,0)}}}"function"==typeof Nf.setTimeout&&(Lf=setTimeout),"function"==typeof Nf.clearTimeout&&(jf=clearTimeout);var Vf,Wf=[],Gf=!1,Hf=-1;function qf(){Gf&&Vf&&(Gf=!1,Vf.length?Wf=Vf.concat(Wf):Hf=-1,Wf.length&&Kf())}function Kf(){if(!Gf){var e=Uf(qf);Gf=!0;for(var t=Wf.length;t;){for(Vf=Wf,Wf=[];++Hf<t;)Vf&&Vf[Hf].run();Hf=-1,t=Wf.length}Vf=null,Gf=!1,function(e){if(jf===clearTimeout)return clearTimeout(e);if((jf===Rf||!jf)&&clearTimeout)return jf=clearTimeout,clearTimeout(e);try{jf(e)}catch(t){try{return jf.call(null,e)}catch(t){return jf.call(this,e)}}}(e)}}function Xf(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];Wf.push(new zf(e,t)),1!==Wf.length||Gf||Uf(Kf)}function zf(e,t){this.fun=e,this.array=t}zf.prototype.run=function(){this.fun.apply(null,this.array)};function Jf(){}var Yf=Jf,$f=Jf,Qf=Jf,Zf=Jf,ed=Jf,td=Jf,nd=Jf;var rd=Nf.performance||{},id=rd.now||rd.mozNow||rd.msNow||rd.oNow||rd.webkitNow||function(){return(new Date).getTime()};var ad=new Date;var od={nextTick:Xf,title:"browser",browser:!0,env:{},argv:[],version:"",versions:{},on:Yf,addListener:$f,once:Qf,off:Zf,removeListener:ed,removeAllListeners:td,emit:nd,binding:function(e){throw new Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(e){throw new Error("process.chdir is not supported")},umask:function(){return 0},hrtime:function(e){var t=.001*id.call(rd),n=Math.floor(t),r=Math.floor(t%1*1e9);return e&&(n-=e[0],(r-=e[1])<0&&(n--,r+=1e9)),[n,r]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-ad)/1e3}},sd=1e3,ud=60*sd,ld=60*ud,cd=24*ld,pd=7*cd,hd=365.25*cd,fd=function(e,t){t=t||{};var n=typeof e;if("string"===n&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!t)return;var n=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return n*hd;case"weeks":case"week":case"w":return n*pd;case"days":case"day":case"d":return n*cd;case"hours":case"hour":case"hrs":case"hr":case"h":return n*ld;case"minutes":case"minute":case"mins":case"min":case"m":return n*ud;case"seconds":case"second":case"secs":case"sec":case"s":return n*sd;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return n;default:return}}(e);if("number"===n&&isFinite(e))return t.long?function(e){var t=Math.abs(e);if(t>=cd)return dd(e,t,cd,"day");if(t>=ld)return dd(e,t,ld,"hour");if(t>=ud)return dd(e,t,ud,"minute");if(t>=sd)return dd(e,t,sd,"second");return e+" ms"}(e):function(e){var t=Math.abs(e);if(t>=cd)return Math.round(e/cd)+"d";if(t>=ld)return Math.round(e/ld)+"h";if(t>=ud)return Math.round(e/ud)+"m";if(t>=sd)return Math.round(e/sd)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function dd(e,t,n,r){var i=t>=1.5*n;return Math.round(e/n)+" "+r+(i?"s":"")}var md=function(e){function t(e){for(var t=0,r=0;r<e.length;r++)t=(t<<5)-t+e.charCodeAt(r),t|=0;return n.colors[Math.abs(t)%n.colors.length]}function n(e){var a;function o(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(o.enabled){var i=o,s=Number(new Date),u=s-(a||s);i.diff=u,i.prev=a,i.curr=s,a=s,t[0]=n.coerce(t[0]),"string"!=typeof t[0]&&t.unshift("%O");var l=0;t[0]=t[0].replace(/%([a-zA-Z%])/g,(function(e,r){if("%%"===e)return e;l++;var a=n.formatters[r];if("function"==typeof a){var o=t[l];e=a.call(i,o),t.splice(l,1),l--}return e})),n.formatArgs.call(i,t),(i.log||n.log).apply(i,t)}}return o.namespace=e,o.enabled=n.enabled(e),o.useColors=n.useColors(),o.color=t(e),o.destroy=r,o.extend=i,"function"==typeof n.init&&n.init(o),n.instances.push(o),o}function r(){var e=n.instances.indexOf(this);return-1!==e&&(n.instances.splice(e,1),!0)}function i(e,t){var r=n(this.namespace+(void 0===t?":":t)+e);return r.log=this.log,r}function a(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return n.debug=n,n.default=n,n.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},n.disable=function(){var e=[].concat(n.names.map(a),n.skips.map(a).map((function(e){return"-"+e}))).join(",");return n.enable(""),e},n.enable=function(e){var t;n.save(e),n.names=[],n.skips=[];var r=("string"==typeof e?e:"").split(/[\s,]+/),i=r.length;for(t=0;t<i;t++)r[t]&&("-"===(e=r[t].replace(/\*/g,".*?"))[0]?n.skips.push(new RegExp("^"+e.substr(1)+"$")):n.names.push(new RegExp("^"+e+"$")));for(t=0;t<n.instances.length;t++){var a=n.instances[t];a.enabled=n.enabled(a.namespace)}},n.enabled=function(e){if("*"===e[e.length-1])return!0;var t,r;for(t=0,r=n.skips.length;t<r;t++)if(n.skips[t].test(e))return!1;for(t=0,r=n.names.length;t<r;t++)if(n.names[t].test(e))return!0;return!1},n.humanize=fd,Object.keys(e).forEach((function(t){n[t]=e[t]})),n.instances=[],n.names=[],n.skips=[],n.formatters={},n.selectColor=t,n.enable(n.load()),n},yd=Vt((function(e,t){t.log=function(){var e;return"object"==typeof console&&console.log&&(e=console).log.apply(e,arguments)},t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;var n="color: "+this.color;t.splice(1,0,n,"color: inherit");var r=0,i=0;t[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(r++,"%c"===e&&(i=r))})),t.splice(i,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){var e;try{e=t.storage.getItem("debug")}catch(e){}!e&&void 0!==od&&"env"in od&&(e=od.env.DEBUG);return e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.exports=md(t),e.exports.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}})),vd=(yd.log,yd.formatArgs,yd.save,yd.load,yd.useColors,yd.storage,yd.colors,"[object String]");var gd=function(e){return"string"==typeof e||!pr(e)&&ir(e)&&rn(e)==vd},bd="[object Symbol]";var Ed=function(e){return"symbol"==typeof e||ir(e)&&rn(e)==bd},Ad=NaN,Dd=/^\s+|\s+$/g,Sd=/^[-+]0x[0-9a-f]+$/i,xd=/^0b[01]+$/i,Td=/^0o[0-7]+$/i,Cd=parseInt;var wd=function(e){if("number"==typeof e)return e;if(Ed(e))return Ad;if(an(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=an(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(Dd,"");var n=xd.test(e);return n||Td.test(e)?Cd(e.slice(2),n?2:8):Sd.test(e)?Ad:+e},Pd=1/0,Fd=17976931348623157e292;var kd=function(e){return e?(e=wd(e))===Pd||e===-Pd?(e<0?-1:1)*Fd:e==e?e:0:0===e?e:0};var _d=function(e){var t=kd(e),n=t%1;return t==t?n?t-n:t:0};var Id=function(e,t){for(var n=-1,r=null==e?0:e.length,i=Array(r);++n<r;)i[n]=t(e[n],n,e);return i};var Od=function(e,t){return Id(t,(function(t){return e[t]}))};var Bd=function(e){return null==e?[]:Od(e,Br(e))},Nd=Math.max;var Md=function(e,t,n,r){e=Or(e)?e:Bd(e),n=n&&!r?_d(n):0;var i=e.length;return n<0&&(n=Nd(i+n,0)),gd(e)?n<=i&&e.indexOf(t,n)>-1:!!i&&kp(e,t,n)>-1},Rd=9007199254740991,Ld=Math.floor;var jd=function(e,t){var n="";if(!e||t<1||t>Rd)return n;do{t%2&&(n+=e),(t=Ld(t/2))&&(e+=e)}while(t);return n};var Ud=function(e,t,n){if(!an(n))return!1;var r=typeof t;return!!("number"==r?Or(n)&&yr(t,n.length):"string"==r&&t in n)&&Ct(n[t],e)},Vd=1/0,Wd=Kt?Kt.prototype:void 0,Gd=Wd?Wd.toString:void 0;var Hd=function e(t){if("string"==typeof t)return t;if(pr(t))return Id(t,e)+"";if(Ed(t))return Gd?Gd.call(t):"";var n=t+"";return"0"==n&&1/t==-Vd?"-0":n};var qd=function(e){return null==e?"":Hd(e)};var Kd=function(e,t,n){return t=(n?Ud(e,t,n):void 0===t)?1:_d(t),jd(qd(e),t)},Xd=function(){function e(e){var t=e.identifier,n=e.scope,r=e.path,i=e.kind;this.identifier=t,this.scope=n,this.path=r,this.kind=i,this.constantViolations=[],this.constant=!0,this.referencePaths=[],this.referenced=!1,this.references=0,this.clearValue()}var t=e.prototype;return t.deoptValue=function(){this.clearValue(),this.hasDeoptedValue=!0},t.setValue=function(e){this.hasDeoptedValue||(this.hasValue=!0,this.value=e)},t.clearValue=function(){this.hasDeoptedValue=!1,this.hasValue=!1,this.value=null},t.reassign=function(e){this.constant=!1,-1===this.constantViolations.indexOf(e)&&this.constantViolations.push(e)},t.reference=function(e){-1===this.referencePaths.indexOf(e)&&(this.referenced=!0,this.references++,this.referencePaths.push(e))},t.dereference=function(){this.references--,this.referenced=!!this.references},e}();function zd(e){if(!e.isExportDeclaration())throw new Error("Only export declarations can be splitted.");var t=e.isExportDefaultDeclaration(),n=e.get("declaration"),r=n.isClassDeclaration();if(t){var i=n.isFunctionDeclaration()||r,a=n.isScope()?n.scope.parent:n.scope,o=n.node.id,s=!1;o||(s=!0,o=a.generateUidIdentifier("default"),(i||n.isFunctionExpression()||n.isClassExpression())&&(n.node.id=gp(o)));var u=i?n:Is("var",[Os(gp(o),n.node)]),l=Hs(null,[qs(gp(o),os("default"))]);return e.insertAfter(l),e.replaceWith(u),s&&a.registerDeclaration(e),e}if(e.get("specifiers").length>0)throw new Error("It doesn't make sense to split exported specifiers.");var c=n.getOuterBindingIdentifiers(),p=Hs(null,Object.keys(c).map((function(e){return qs(os(e),os(e))})));return e.insertAfter(p),e.replaceWith(n.node),e}var Jd={ReferencedIdentifier:function(e,t){var n=e.node;n.name===t.oldName&&(n.name=t.newName)},Scope:function(e,t){e.scope.bindingIdentifierEquals(t.oldName,t.binding.identifier)||e.skip()},"AssignmentExpression|Declaration":function(e,t){var n=e.getOuterBindingIdentifiers();for(var r in n)r===t.oldName&&(n[r].name=t.newName)}},Yd=function(){function e(e,t,n){this.newName=n,this.oldName=t,this.binding=e}var t=e.prototype;return t.maybeConvertFromExportDeclaration=function(e){var t=e.parentPath;t.isExportDeclaration()&&(t.isExportDefaultDeclaration()&&!t.get("declaration").node.id||zd(t))},t.maybeConvertFromClassFunctionDeclaration=function(e){},t.maybeConvertFromClassFunctionExpression=function(e){},t.rename=function(e){var t=this.binding,n=this.oldName,r=this.newName,i=t.scope,a=t.path.find((function(e){return e.isDeclaration()||e.isFunctionExpression()||e.isClassExpression()}));a&&(a.getOuterBindingIdentifiers()[n]===t.identifier&&this.maybeConvertFromExportDeclaration(a));i.traverse(e||i.block,Jd,this),e||(i.removeOwnBinding(n),i.bindings[r]=t,this.binding.identifier.name=r),t.type,a&&(this.maybeConvertFromClassFunctionDeclaration(a),this.maybeConvertFromClassFunctionExpression(a))},e}();var $d=function(e){return e};var Qd=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)},Zd=Math.max;var em=function(e,t,n){return t=Zd(void 0===t?e.length-1:t,0),function(){for(var r=arguments,i=-1,a=Zd(r.length-t,0),o=Array(a);++i<a;)o[i]=r[t+i];i=-1;for(var s=Array(t+1);++i<t;)s[i]=r[i];return s[t]=n(o),Qd(e,this,s)}};var tm=function(e){return function(){return e}},nm=Qn?function(e,t){return Qn(e,"toString",{configurable:!0,enumerable:!1,value:tm(t),writable:!0})}:$d,rm=800,im=16,am=Date.now;var om=function(e){var t=0,n=0;return function(){var r=am(),i=im-(r-n);if(n=r,i>0){if(++t>=rm)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}(nm);var sm=function(e,t){return om(em(e,t,$d),e+"")},um=Object.prototype,lm=um.hasOwnProperty,cm=sm((function(e,t){e=Object(e);var n=-1,r=t.length,i=r>2?t[2]:void 0;for(i&&Ud(t[0],t[1],i)&&(r=1);++n<r;)for(var a=t[n],o=jr(a),s=-1,u=o.length;++s<u;){var l=o[s],c=e[l];(void 0===c||Ct(c,um[l])&&!lm.call(e,l))&&(e[l]=a[l])}return e})),pm={Array:!1,ArrayBuffer:!1,Atomics:!1,BigInt:!1,BigInt64Array:!1,BigUint64Array:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,globalThis:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,SharedArrayBuffer:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},hm={Array:!1,Boolean:!1,constructor:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,propertyIsEnumerable:!1,RangeError:!1,ReferenceError:!1,RegExp:!1,String:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1},fm={Array:!1,ArrayBuffer:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},dm={Array:!1,ArrayBuffer:!1,Atomics:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,SharedArrayBuffer:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},mm={AbortController:!1,AbortSignal:!1,addEventListener:!1,alert:!1,AnalyserNode:!1,Animation:!1,AnimationEffectReadOnly:!1,AnimationEffectTiming:!1,AnimationEffectTimingReadOnly:!1,AnimationEvent:!1,AnimationPlaybackEvent:!1,AnimationTimeline:!1,applicationCache:!1,ApplicationCache:!1,ApplicationCacheErrorEvent:!1,atob:!1,Attr:!1,Audio:!1,AudioBuffer:!1,AudioBufferSourceNode:!1,AudioContext:!1,AudioDestinationNode:!1,AudioListener:!1,AudioNode:!1,AudioParam:!1,AudioProcessingEvent:!1,AudioScheduledSourceNode:!1,"AudioWorkletGlobalScope ":!1,AudioWorkletNode:!1,AudioWorkletProcessor:!1,BarProp:!1,BaseAudioContext:!1,BatteryManager:!1,BeforeUnloadEvent:!1,BiquadFilterNode:!1,Blob:!1,BlobEvent:!1,blur:!1,BroadcastChannel:!1,btoa:!1,BudgetService:!1,ByteLengthQueuingStrategy:!1,Cache:!1,caches:!1,CacheStorage:!1,cancelAnimationFrame:!1,cancelIdleCallback:!1,CanvasCaptureMediaStreamTrack:!1,CanvasGradient:!1,CanvasPattern:!1,CanvasRenderingContext2D:!1,ChannelMergerNode:!1,ChannelSplitterNode:!1,CharacterData:!1,clearInterval:!1,clearTimeout:!1,clientInformation:!1,ClipboardEvent:!1,close:!1,closed:!1,CloseEvent:!1,Comment:!1,CompositionEvent:!1,confirm:!1,console:!1,ConstantSourceNode:!1,ConvolverNode:!1,CountQueuingStrategy:!1,createImageBitmap:!1,Credential:!1,CredentialsContainer:!1,crypto:!1,Crypto:!1,CryptoKey:!1,CSS:!1,CSSConditionRule:!1,CSSFontFaceRule:!1,CSSGroupingRule:!1,CSSImportRule:!1,CSSKeyframeRule:!1,CSSKeyframesRule:!1,CSSMediaRule:!1,CSSNamespaceRule:!1,CSSPageRule:!1,CSSRule:!1,CSSRuleList:!1,CSSStyleDeclaration:!1,CSSStyleRule:!1,CSSStyleSheet:!1,CSSSupportsRule:!1,CustomElementRegistry:!1,customElements:!1,CustomEvent:!1,DataTransfer:!1,DataTransferItem:!1,DataTransferItemList:!1,defaultstatus:!1,defaultStatus:!1,DelayNode:!1,DeviceMotionEvent:!1,DeviceOrientationEvent:!1,devicePixelRatio:!1,dispatchEvent:!1,document:!1,Document:!1,DocumentFragment:!1,DocumentType:!1,DOMError:!1,DOMException:!1,DOMImplementation:!1,DOMMatrix:!1,DOMMatrixReadOnly:!1,DOMParser:!1,DOMPoint:!1,DOMPointReadOnly:!1,DOMQuad:!1,DOMRect:!1,DOMRectReadOnly:!1,DOMStringList:!1,DOMStringMap:!1,DOMTokenList:!1,DragEvent:!1,DynamicsCompressorNode:!1,Element:!1,ErrorEvent:!1,event:!1,Event:!1,EventSource:!1,EventTarget:!1,external:!1,fetch:!1,File:!1,FileList:!1,FileReader:!1,find:!1,focus:!1,FocusEvent:!1,FontFace:!1,FontFaceSetLoadEvent:!1,FormData:!1,frameElement:!1,frames:!1,GainNode:!1,Gamepad:!1,GamepadButton:!1,GamepadEvent:!1,getComputedStyle:!1,getSelection:!1,HashChangeEvent:!1,Headers:!1,history:!1,History:!1,HTMLAllCollection:!1,HTMLAnchorElement:!1,HTMLAreaElement:!1,HTMLAudioElement:!1,HTMLBaseElement:!1,HTMLBodyElement:!1,HTMLBRElement:!1,HTMLButtonElement:!1,HTMLCanvasElement:!1,HTMLCollection:!1,HTMLContentElement:!1,HTMLDataElement:!1,HTMLDataListElement:!1,HTMLDetailsElement:!1,HTMLDialogElement:!1,HTMLDirectoryElement:!1,HTMLDivElement:!1,HTMLDListElement:!1,HTMLDocument:!1,HTMLElement:!1,HTMLEmbedElement:!1,HTMLFieldSetElement:!1,HTMLFontElement:!1,HTMLFormControlsCollection:!1,HTMLFormElement:!1,HTMLFrameElement:!1,HTMLFrameSetElement:!1,HTMLHeadElement:!1,HTMLHeadingElement:!1,HTMLHRElement:!1,HTMLHtmlElement:!1,HTMLIFrameElement:!1,HTMLImageElement:!1,HTMLInputElement:!1,HTMLLabelElement:!1,HTMLLegendElement:!1,HTMLLIElement:!1,HTMLLinkElement:!1,HTMLMapElement:!1,HTMLMarqueeElement:!1,HTMLMediaElement:!1,HTMLMenuElement:!1,HTMLMetaElement:!1,HTMLMeterElement:!1,HTMLModElement:!1,HTMLObjectElement:!1,HTMLOListElement:!1,HTMLOptGroupElement:!1,HTMLOptionElement:!1,HTMLOptionsCollection:!1,HTMLOutputElement:!1,HTMLParagraphElement:!1,HTMLParamElement:!1,HTMLPictureElement:!1,HTMLPreElement:!1,HTMLProgressElement:!1,HTMLQuoteElement:!1,HTMLScriptElement:!1,HTMLSelectElement:!1,HTMLShadowElement:!1,HTMLSlotElement:!1,HTMLSourceElement:!1,HTMLSpanElement:!1,HTMLStyleElement:!1,HTMLTableCaptionElement:!1,HTMLTableCellElement:!1,HTMLTableColElement:!1,HTMLTableElement:!1,HTMLTableRowElement:!1,HTMLTableSectionElement:!1,HTMLTemplateElement:!1,HTMLTextAreaElement:!1,HTMLTimeElement:!1,HTMLTitleElement:!1,HTMLTrackElement:!1,HTMLUListElement:!1,HTMLUnknownElement:!1,HTMLVideoElement:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,IdleDeadline:!1,IIRFilterNode:!1,Image:!1,ImageBitmap:!1,ImageBitmapRenderingContext:!1,ImageCapture:!1,ImageData:!1,indexedDB:!1,innerHeight:!1,innerWidth:!1,InputEvent:!1,IntersectionObserver:!1,IntersectionObserverEntry:!1,Intl:!1,isSecureContext:!1,KeyboardEvent:!1,KeyframeEffect:!1,KeyframeEffectReadOnly:!1,length:!1,localStorage:!1,location:!0,Location:!1,locationbar:!1,matchMedia:!1,MediaDeviceInfo:!1,MediaDevices:!1,MediaElementAudioSourceNode:!1,MediaEncryptedEvent:!1,MediaError:!1,MediaKeyMessageEvent:!1,MediaKeySession:!1,MediaKeyStatusMap:!1,MediaKeySystemAccess:!1,MediaList:!1,MediaQueryList:!1,MediaQueryListEvent:!1,MediaRecorder:!1,MediaSettingsRange:!1,MediaSource:!1,MediaStream:!1,MediaStreamAudioDestinationNode:!1,MediaStreamAudioSourceNode:!1,MediaStreamEvent:!1,MediaStreamTrack:!1,MediaStreamTrackEvent:!1,menubar:!1,MessageChannel:!1,MessageEvent:!1,MessagePort:!1,MIDIAccess:!1,MIDIConnectionEvent:!1,MIDIInput:!1,MIDIInputMap:!1,MIDIMessageEvent:!1,MIDIOutput:!1,MIDIOutputMap:!1,MIDIPort:!1,MimeType:!1,MimeTypeArray:!1,MouseEvent:!1,moveBy:!1,moveTo:!1,MutationEvent:!1,MutationObserver:!1,MutationRecord:!1,name:!1,NamedNodeMap:!1,NavigationPreloadManager:!1,navigator:!1,Navigator:!1,NetworkInformation:!1,Node:!1,NodeFilter:!1,NodeIterator:!1,NodeList:!1,Notification:!1,OfflineAudioCompletionEvent:!1,OfflineAudioContext:!1,offscreenBuffering:!1,OffscreenCanvas:!0,onabort:!0,onafterprint:!0,onanimationend:!0,onanimationiteration:!0,onanimationstart:!0,onappinstalled:!0,onauxclick:!0,onbeforeinstallprompt:!0,onbeforeprint:!0,onbeforeunload:!0,onblur:!0,oncancel:!0,oncanplay:!0,oncanplaythrough:!0,onchange:!0,onclick:!0,onclose:!0,oncontextmenu:!0,oncuechange:!0,ondblclick:!0,ondevicemotion:!0,ondeviceorientation:!0,ondeviceorientationabsolute:!0,ondrag:!0,ondragend:!0,ondragenter:!0,ondragleave:!0,ondragover:!0,ondragstart:!0,ondrop:!0,ondurationchange:!0,onemptied:!0,onended:!0,onerror:!0,onfocus:!0,ongotpointercapture:!0,onhashchange:!0,oninput:!0,oninvalid:!0,onkeydown:!0,onkeypress:!0,onkeyup:!0,onlanguagechange:!0,onload:!0,onloadeddata:!0,onloadedmetadata:!0,onloadstart:!0,onlostpointercapture:!0,onmessage:!0,onmessageerror:!0,onmousedown:!0,onmouseenter:!0,onmouseleave:!0,onmousemove:!0,onmouseout:!0,onmouseover:!0,onmouseup:!0,onmousewheel:!0,onoffline:!0,ononline:!0,onpagehide:!0,onpageshow:!0,onpause:!0,onplay:!0,onplaying:!0,onpointercancel:!0,onpointerdown:!0,onpointerenter:!0,onpointerleave:!0,onpointermove:!0,onpointerout:!0,onpointerover:!0,onpointerup:!0,onpopstate:!0,onprogress:!0,onratechange:!0,onrejectionhandled:!0,onreset:!0,onresize:!0,onscroll:!0,onsearch:!0,onseeked:!0,onseeking:!0,onselect:!0,onstalled:!0,onstorage:!0,onsubmit:!0,onsuspend:!0,ontimeupdate:!0,ontoggle:!0,ontransitionend:!0,onunhandledrejection:!0,onunload:!0,onvolumechange:!0,onwaiting:!0,onwheel:!0,open:!1,openDatabase:!1,opener:!1,Option:!1,origin:!1,OscillatorNode:!1,outerHeight:!1,outerWidth:!1,PageTransitionEvent:!1,pageXOffset:!1,pageYOffset:!1,PannerNode:!1,parent:!1,Path2D:!1,PaymentAddress:!1,PaymentRequest:!1,PaymentRequestUpdateEvent:!1,PaymentResponse:!1,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceLongTaskTiming:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceNavigationTiming:!1,PerformanceObserver:!1,PerformanceObserverEntryList:!1,PerformancePaintTiming:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,PeriodicWave:!1,Permissions:!1,PermissionStatus:!1,personalbar:!1,PhotoCapabilities:!1,Plugin:!1,PluginArray:!1,PointerEvent:!1,PopStateEvent:!1,postMessage:!1,Presentation:!1,PresentationAvailability:!1,PresentationConnection:!1,PresentationConnectionAvailableEvent:!1,PresentationConnectionCloseEvent:!1,PresentationConnectionList:!1,PresentationReceiver:!1,PresentationRequest:!1,print:!1,ProcessingInstruction:!1,ProgressEvent:!1,PromiseRejectionEvent:!1,prompt:!1,PushManager:!1,PushSubscription:!1,PushSubscriptionOptions:!1,queueMicrotask:!1,RadioNodeList:!1,Range:!1,ReadableStream:!1,registerProcessor:!1,RemotePlayback:!1,removeEventListener:!1,Request:!1,requestAnimationFrame:!1,requestIdleCallback:!1,resizeBy:!1,ResizeObserver:!1,ResizeObserverEntry:!1,resizeTo:!1,Response:!1,RTCCertificate:!1,RTCDataChannel:!1,RTCDataChannelEvent:!1,RTCDtlsTransport:!1,RTCIceCandidate:!1,RTCIceGatherer:!1,RTCIceTransport:!1,RTCPeerConnection:!1,RTCPeerConnectionIceEvent:!1,RTCRtpContributingSource:!1,RTCRtpReceiver:!1,RTCRtpSender:!1,RTCSctpTransport:!1,RTCSessionDescription:!1,RTCStatsReport:!1,RTCTrackEvent:!1,screen:!1,Screen:!1,screenLeft:!1,ScreenOrientation:!1,screenTop:!1,screenX:!1,screenY:!1,ScriptProcessorNode:!1,scroll:!1,scrollbars:!1,scrollBy:!1,scrollTo:!1,scrollX:!1,scrollY:!1,SecurityPolicyViolationEvent:!1,Selection:!1,self:!1,ServiceWorker:!1,ServiceWorkerContainer:!1,ServiceWorkerRegistration:!1,sessionStorage:!1,setInterval:!1,setTimeout:!1,ShadowRoot:!1,SharedWorker:!1,SourceBuffer:!1,SourceBufferList:!1,speechSynthesis:!1,SpeechSynthesisEvent:!1,SpeechSynthesisUtterance:!1,StaticRange:!1,status:!1,statusbar:!1,StereoPannerNode:!1,stop:!1,Storage:!1,StorageEvent:!1,StorageManager:!1,styleMedia:!1,StyleSheet:!1,StyleSheetList:!1,SubtleCrypto:!1,SVGAElement:!1,SVGAngle:!1,SVGAnimatedAngle:!1,SVGAnimatedBoolean:!1,SVGAnimatedEnumeration:!1,SVGAnimatedInteger:!1,SVGAnimatedLength:!1,SVGAnimatedLengthList:!1,SVGAnimatedNumber:!1,SVGAnimatedNumberList:!1,SVGAnimatedPreserveAspectRatio:!1,SVGAnimatedRect:!1,SVGAnimatedString:!1,SVGAnimatedTransformList:!1,SVGAnimateElement:!1,SVGAnimateMotionElement:!1,SVGAnimateTransformElement:!1,SVGAnimationElement:!1,SVGCircleElement:!1,SVGClipPathElement:!1,SVGComponentTransferFunctionElement:!1,SVGDefsElement:!1,SVGDescElement:!1,SVGDiscardElement:!1,SVGElement:!1,SVGEllipseElement:!1,SVGFEBlendElement:!1,SVGFEColorMatrixElement:!1,SVGFEComponentTransferElement:!1,SVGFECompositeElement:!1,SVGFEConvolveMatrixElement:!1,SVGFEDiffuseLightingElement:!1,SVGFEDisplacementMapElement:!1,SVGFEDistantLightElement:!1,SVGFEDropShadowElement:!1,SVGFEFloodElement:!1,SVGFEFuncAElement:!1,SVGFEFuncBElement:!1,SVGFEFuncGElement:!1,SVGFEFuncRElement:!1,SVGFEGaussianBlurElement:!1,SVGFEImageElement:!1,SVGFEMergeElement:!1,SVGFEMergeNodeElement:!1,SVGFEMorphologyElement:!1,SVGFEOffsetElement:!1,SVGFEPointLightElement:!1,SVGFESpecularLightingElement:!1,SVGFESpotLightElement:!1,SVGFETileElement:!1,SVGFETurbulenceElement:!1,SVGFilterElement:!1,SVGForeignObjectElement:!1,SVGGElement:!1,SVGGeometryElement:!1,SVGGradientElement:!1,SVGGraphicsElement:!1,SVGImageElement:!1,SVGLength:!1,SVGLengthList:!1,SVGLinearGradientElement:!1,SVGLineElement:!1,SVGMarkerElement:!1,SVGMaskElement:!1,SVGMatrix:!1,SVGMetadataElement:!1,SVGMPathElement:!1,SVGNumber:!1,SVGNumberList:!1,SVGPathElement:!1,SVGPatternElement:!1,SVGPoint:!1,SVGPointList:!1,SVGPolygonElement:!1,SVGPolylineElement:!1,SVGPreserveAspectRatio:!1,SVGRadialGradientElement:!1,SVGRect:!1,SVGRectElement:!1,SVGScriptElement:!1,SVGSetElement:!1,SVGStopElement:!1,SVGStringList:!1,SVGStyleElement:!1,SVGSVGElement:!1,SVGSwitchElement:!1,SVGSymbolElement:!1,SVGTextContentElement:!1,SVGTextElement:!1,SVGTextPathElement:!1,SVGTextPositioningElement:!1,SVGTitleElement:!1,SVGTransform:!1,SVGTransformList:!1,SVGTSpanElement:!1,SVGUnitTypes:!1,SVGUseElement:!1,SVGViewElement:!1,TaskAttributionTiming:!1,Text:!1,TextDecoder:!1,TextEncoder:!1,TextEvent:!1,TextMetrics:!1,TextTrack:!1,TextTrackCue:!1,TextTrackCueList:!1,TextTrackList:!1,TimeRanges:!1,toolbar:!1,top:!1,Touch:!1,TouchEvent:!1,TouchList:!1,TrackEvent:!1,TransitionEvent:!1,TreeWalker:!1,UIEvent:!1,URL:!1,URLSearchParams:!1,ValidityState:!1,visualViewport:!1,VisualViewport:!1,VTTCue:!1,WaveShaperNode:!1,WebAssembly:!1,WebGL2RenderingContext:!1,WebGLActiveInfo:!1,WebGLBuffer:!1,WebGLContextEvent:!1,WebGLFramebuffer:!1,WebGLProgram:!1,WebGLQuery:!1,WebGLRenderbuffer:!1,WebGLRenderingContext:!1,WebGLSampler:!1,WebGLShader:!1,WebGLShaderPrecisionFormat:!1,WebGLSync:!1,WebGLTexture:!1,WebGLTransformFeedback:!1,WebGLUniformLocation:!1,WebGLVertexArrayObject:!1,WebSocket:!1,WheelEvent:!1,window:!1,Window:!1,Worker:!1,WritableStream:!1,XMLDocument:!1,XMLHttpRequest:!1,XMLHttpRequestEventTarget:!1,XMLHttpRequestUpload:!1,XMLSerializer:!1,XPathEvaluator:!1,XPathExpression:!1,XPathResult:!1,XSLTProcessor:!1},ym={addEventListener:!1,applicationCache:!1,atob:!1,Blob:!1,BroadcastChannel:!1,btoa:!1,Cache:!1,caches:!1,clearInterval:!1,clearTimeout:!1,close:!0,console:!1,fetch:!1,FileReaderSync:!1,FormData:!1,Headers:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,ImageData:!1,importScripts:!0,indexedDB:!1,location:!1,MessageChannel:!1,MessagePort:!1,name:!1,navigator:!1,Notification:!1,onclose:!0,onconnect:!0,onerror:!0,onlanguagechange:!0,onmessage:!0,onoffline:!0,ononline:!0,onrejectionhandled:!0,onunhandledrejection:!0,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,postMessage:!0,Promise:!1,queueMicrotask:!1,removeEventListener:!1,Request:!1,Response:!1,self:!0,ServiceWorkerRegistration:!1,setInterval:!1,setTimeout:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1,WebSocket:!1,Worker:!1,WorkerGlobalScope:!1,XMLHttpRequest:!1},vm={__dirname:!1,__filename:!1,Buffer:!1,clearImmediate:!1,clearInterval:!1,clearTimeout:!1,console:!1,exports:!0,global:!1,Intl:!1,module:!1,process:!1,queueMicrotask:!1,require:!1,setImmediate:!1,setInterval:!1,setTimeout:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1},gm={exports:!0,global:!1,module:!1,require:!1},bm={define:!1,require:!1},Em={after:!1,afterEach:!1,before:!1,beforeEach:!1,context:!1,describe:!1,it:!1,mocha:!1,run:!1,setup:!1,specify:!1,suite:!1,suiteSetup:!1,suiteTeardown:!1,teardown:!1,test:!1,xcontext:!1,xdescribe:!1,xit:!1,xspecify:!1},Am={afterAll:!1,afterEach:!1,beforeAll:!1,beforeEach:!1,describe:!1,expect:!1,fail:!1,fdescribe:!1,fit:!1,it:!1,jasmine:!1,pending:!1,runs:!1,spyOn:!1,spyOnProperty:!1,waits:!1,waitsFor:!1,xdescribe:!1,xit:!1},Dm={afterAll:!1,afterEach:!1,beforeAll:!1,beforeEach:!1,describe:!1,expect:!1,fdescribe:!1,fit:!1,it:!1,jest:!1,pit:!1,require:!1,test:!1,xdescribe:!1,xit:!1,xtest:!1},Sm={asyncTest:!1,deepEqual:!1,equal:!1,expect:!1,module:!1,notDeepEqual:!1,notEqual:!1,notOk:!1,notPropEqual:!1,notStrictEqual:!1,ok:!1,propEqual:!1,QUnit:!1,raises:!1,start:!1,stop:!1,strictEqual:!1,test:!1,throws:!1},xm={console:!0,exports:!0,phantom:!0,require:!0,WebPage:!0},Tm={emit:!1,exports:!1,getRow:!1,log:!1,module:!1,provides:!1,require:!1,respond:!1,send:!1,start:!1,sum:!1},Cm={defineClass:!1,deserialize:!1,gc:!1,help:!1,importClass:!1,importPackage:!1,java:!1,load:!1,loadClass:!1,Packages:!1,print:!1,quit:!1,readFile:!1,readUrl:!1,runCommand:!1,seal:!1,serialize:!1,spawn:!1,sync:!1,toint32:!1,version:!1},wm={__DIR__:!1,__FILE__:!1,__LINE__:!1,com:!1,edu:!1,exit:!1,java:!1,Java:!1,javafx:!1,JavaImporter:!1,javax:!1,JSAdapter:!1,load:!1,loadWithNewGlobal:!1,org:!1,Packages:!1,print:!1,quit:!1},Pm={ActiveXObject:!0,Enumerator:!0,GetObject:!0,ScriptEngine:!0,ScriptEngineBuildVersion:!0,ScriptEngineMajorVersion:!0,ScriptEngineMinorVersion:!0,VBArray:!0,WScript:!0,WSH:!0,XDomainRequest:!0},Fm={$:!1,jQuery:!1},km={YAHOO:!1,YAHOO_config:!1,YUI:!1,YUI_config:!1},_m={cat:!1,cd:!1,chmod:!1,config:!1,cp:!1,dirs:!1,echo:!1,env:!1,error:!1,exec:!1,exit:!1,find:!1,grep:!1,ln:!1,ls:!1,mkdir:!1,mv:!1,popd:!1,pushd:!1,pwd:!1,rm:!1,sed:!1,set:!1,target:!1,tempdir:!1,test:!1,touch:!1,which:!1},Im={$:!1,$$:!1,$A:!1,$break:!1,$continue:!1,$F:!1,$H:!1,$R:!1,$w:!1,Abstract:!1,Ajax:!1,Autocompleter:!1,Builder:!1,Class:!1,Control:!1,Draggable:!1,Draggables:!1,Droppables:!1,Effect:!1,Element:!1,Enumerable:!1,Event:!1,Field:!1,Form:!1,Hash:!1,Insertion:!1,ObjectRange:!1,PeriodicalExecuter:!1,Position:!1,Prototype:!1,Scriptaculous:!1,Selector:!1,Sortable:!1,SortableObserver:!1,Sound:!1,Template:!1,Toggle:!1,Try:!1},Om={_:!1,$:!1,Accounts:!1,AccountsClient:!1,AccountsCommon:!1,AccountsServer:!1,App:!1,Assets:!1,Blaze:!1,check:!1,Cordova:!1,DDP:!1,DDPRateLimiter:!1,DDPServer:!1,Deps:!1,EJSON:!1,Email:!1,HTTP:!1,Log:!1,Match:!1,Meteor:!1,Mongo:!1,MongoInternals:!1,Npm:!1,Package:!1,Plugin:!1,process:!1,Random:!1,ReactiveDict:!1,ReactiveVar:!1,Router:!1,ServiceConfiguration:!1,Session:!1,share:!1,Spacebars:!1,Template:!1,Tinytest:!1,Tracker:!1,UI:!1,Utils:!1,WebApp:!1,WebAppInternals:!1},Bm={_isWindows:!1,_rand:!1,BulkWriteResult:!1,cat:!1,cd:!1,connect:!1,db:!1,getHostName:!1,getMemInfo:!1,hostname:!1,ISODate:!1,listFiles:!1,load:!1,ls:!1,md5sumFile:!1,mkdir:!1,Mongo:!1,NumberInt:!1,NumberLong:!1,ObjectId:!1,PlanCache:!1,print:!1,printjson:!1,pwd:!1,quit:!1,removeFile:!1,rs:!1,sh:!1,UUID:!1,version:!1,WriteResult:!1},Nm={$:!1,Application:!1,Automation:!1,console:!1,delay:!1,Library:!1,ObjC:!1,ObjectSpecifier:!1,Path:!1,Progress:!1,Ref:!1},Mm={addEventListener:!1,applicationCache:!1,atob:!1,Blob:!1,BroadcastChannel:!1,btoa:!1,Cache:!1,caches:!1,CacheStorage:!1,clearInterval:!1,clearTimeout:!1,Client:!1,clients:!1,Clients:!1,close:!0,console:!1,ExtendableEvent:!1,ExtendableMessageEvent:!1,fetch:!1,FetchEvent:!1,FileReaderSync:!1,FormData:!1,Headers:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,ImageData:!1,importScripts:!1,indexedDB:!1,location:!1,MessageChannel:!1,MessagePort:!1,name:!1,navigator:!1,Notification:!1,onclose:!0,onconnect:!0,onerror:!0,onfetch:!0,oninstall:!0,onlanguagechange:!0,onmessage:!0,onmessageerror:!0,onnotificationclick:!0,onnotificationclose:!0,onoffline:!0,ononline:!0,onpush:!0,onpushsubscriptionchange:!0,onrejectionhandled:!0,onsync:!0,onunhandledrejection:!0,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,postMessage:!0,Promise:!1,queueMicrotask:!1,registration:!1,removeEventListener:!1,Request:!1,Response:!1,self:!1,ServiceWorker:!1,ServiceWorkerContainer:!1,ServiceWorkerGlobalScope:!1,ServiceWorkerMessageEvent:!1,ServiceWorkerRegistration:!1,setInterval:!1,setTimeout:!1,skipWaiting:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1,WebSocket:!1,WindowClient:!1,Worker:!1,WorkerGlobalScope:!1,XMLHttpRequest:!1},Rm={advanceClock:!1,fakeClearInterval:!1,fakeClearTimeout:!1,fakeSetInterval:!1,fakeSetTimeout:!1,resetTimeouts:!1,waitsForPromise:!1},Lm={andThen:!1,click:!1,currentPath:!1,currentRouteName:!1,currentURL:!1,fillIn:!1,find:!1,findAll:!1,findWithAssert:!1,keyEvent:!1,pauseTest:!1,resumeTest:!1,triggerEvent:!1,visit:!1,wait:!1},jm={$:!1,$$:!1,browser:!1,by:!1,By:!1,DartObject:!1,element:!1,protractor:!1},Um={browser:!1,chrome:!1,opr:!1},Vm={cloneInto:!1,createObjectIn:!1,exportFunction:!1,GM:!1,GM_addStyle:!1,GM_deleteValue:!1,GM_getResourceText:!1,GM_getResourceURL:!1,GM_getValue:!1,GM_info:!1,GM_listValues:!1,GM_log:!1,GM_openInTab:!1,GM_registerMenuCommand:!1,GM_setClipboard:!1,GM_setValue:!1,GM_xmlhttpRequest:!1,unsafeWindow:!1},Wm={$:!1,$_:!1,$$:!1,$0:!1,$1:!1,$2:!1,$3:!1,$4:!1,$x:!1,chrome:!1,clear:!1,copy:!1,debug:!1,dir:!1,dirxml:!1,getEventListeners:!1,inspect:!1,keys:!1,monitor:!1,monitorEvents:!1,profile:!1,profileEnd:!1,queryObjects:!1,table:!1,undebug:!1,unmonitor:!1,unmonitorEvents:!1,values:!1},Gm={builtin:pm,es5:hm,es2015:fm,es2017:dm,browser:mm,worker:ym,node:vm,commonjs:gm,amd:bm,mocha:Em,jasmine:Am,jest:Dm,qunit:Sm,phantomjs:xm,couch:Tm,rhino:Cm,nashorn:wm,wsh:Pm,jquery:Fm,yui:km,shelljs:_m,prototypejs:Im,meteor:Om,mongo:Bm,applescript:Nm,serviceworker:Mm,atomtest:Rm,embertest:Lm,protractor:jm,"shared-node-browser":{clearInterval:!1,clearTimeout:!1,console:!1,setInterval:!1,setTimeout:!1,URL:!1,URLSearchParams:!1},webextensions:Um,greasemonkey:Vm,devtools:Wm},Hm=Wt(Object.freeze({__proto__:null,builtin:pm,es5:hm,es2015:fm,es2017:dm,browser:mm,worker:ym,node:vm,commonjs:gm,amd:bm,mocha:Em,jasmine:Am,jest:Dm,qunit:Sm,phantomjs:xm,couch:Tm,rhino:Cm,nashorn:wm,wsh:Pm,jquery:Fm,yui:km,shelljs:_m,prototypejs:Im,meteor:Om,mongo:Bm,applescript:Nm,serviceworker:Mm,atomtest:Rm,embertest:Lm,protractor:jm,webextensions:Um,greasemonkey:Vm,devtools:Wm,default:Gm})),qm=new WeakMap,Km=new WeakMap;function Xm(){qm=new WeakMap}function zm(){Km=new WeakMap}var Jm=Object.freeze({__proto__:null,get path(){return qm},get scope(){return Km},clear:function(){Xm(),zm()},clearPath:Xm,clearScope:zm});var Ym={For:function(e){for(var t=0,n=Aa;t<n.length;t++){var r=n[t],i=e.get(r);if(i.isVar())(e.scope.getFunctionParent()||e.scope.getProgramParent()).registerBinding("var",i)}},Declaration:function(e){e.isBlockScoped()||(e.isExportDeclaration()&&e.get("declaration").isDeclaration()||(e.scope.getFunctionParent()||e.scope.getProgramParent()).registerDeclaration(e))},ReferencedIdentifier:function(e,t){t.references.push(e)},ForXStatement:function(e,t){var n=e.get("left");(n.isPattern()||n.isIdentifier())&&t.constantViolations.push(e)},ExportDeclaration:{exit:function(e){var t=e.node,n=e.scope,r=t.declaration;if($(r)||A(r)){var i=r.id;if(!i)return;var a=n.getBinding(i.name);a&&a.reference(e)}else if(H(r))for(var o=0,s=r.declarations;o<s.length;o++)for(var u=s[o],l=0,c=Object.keys(zh(u));l<c.length;l++){var p=c[l],h=n.getBinding(p);h&&h.reference(e)}}},LabeledStatement:function(e){e.scope.getProgramParent().addGlobal(e.node),e.scope.getBlockParent().registerDeclaration(e)},AssignmentExpression:function(e,t){t.assignments.push(e)},UpdateExpression:function(e,t){t.constantViolations.push(e)},UnaryExpression:function(e,t){"delete"===e.node.operator&&t.constantViolations.push(e)},BlockScoped:function(e){var t=e.scope;t.path===e&&(t=t.parent),t.getBlockParent().registerDeclaration(e)},ClassDeclaration:function(e){var t=e.node.id;if(t){var n=t.name;e.scope.bindings[n]=e.scope.getBinding(n)}},Block:function(e){for(var t=0,n=e.get("body");t<n.length;t++){var r=n[t];r.isFunctionDeclaration()&&e.scope.getBlockParent().registerDeclaration(r)}}},$m=0,Qm=function(){function e(e){var t=e.node,n=Km.get(t);if(n&&n.path===e)return n;Km.set(t,this),this.uid=$m++,this.block=t,this.path=e,this.labels=new Map}var t=e.prototype;return t.traverse=function(e,t,n){JD(e,t,this,n,this.path)},t.generateDeclaredUidIdentifier=function(e){var t=this.generateUidIdentifier(e);return this.push({id:t}),gp(t)},t.generateUidIdentifier=function(e){return os(this.generateUid(e))},t.generateUid=function(e){var t;void 0===e&&(e="temp"),e=Lh(e).replace(/^_+/,"").replace(/[0-9]+$/g,"");var n=0;do{t=this._generateUid(e,n),n++}while(this.hasLabel(t)||this.hasBinding(t)||this.hasGlobal(t)||this.hasReference(t));var r=this.getProgramParent();return r.references[t]=!0,r.uids[t]=!0,t},t._generateUid=function(e,t){var n=e;return t>1&&(n+=t),"_"+n},t.generateUidBasedOnNode=function(e,t){var n=e;u(e)?n=e.left:q(e)?n=e.id:(M(n)||N(n))&&(n=n.key);var r=[];!function e(t,n){if(vt(t))if(t.source)e(t.source,n);else if(t.specifiers&&t.specifiers.length)for(var r=0,i=t.specifiers;r<i.length;r++){e(i[r],n)}else t.declaration&&e(t.declaration,n);else if(bt(t))e(t.local,n);else if(_(t))e(t.object,n),e(t.property,n);else if(S(t))n.push(t.name);else if(ht(t))n.push(t.value);else if(h(t))e(t.callee,n);else if(B(t)||ue(t))for(var a=0,o=t.properties;a<o.length;a++){var s=o[a];e(s.key||s.argument,n)}else Xe(t)?e(t.id,n):V(t)?n.push("this"):ce(t)&&n.push("super")}(n,r);var i=r.join("$");return i=i.replace(/^_/,"")||t||"ref",this.generateUid(i.slice(0,20))},t.generateUidIdentifierBasedOnNode=function(e,t){return os(this.generateUidBasedOnNode(e,t))},t.isStatic=function(e){if(V(e)||ce(e))return!0;if(S(e)){var t=this.getBinding(e.name);return t?t.constant:this.hasBinding(e.name)}return!1},t.maybeGenerateMemoised=function(e,t){if(this.isStatic(e))return null;var n=this.generateUidIdentifierBasedOnNode(e);return t?n:(this.push({id:n}),gp(n))},t.checkBlockScopedCollisions=function(e,t,n,r){if("param"!==t&&("local"!==e.kind&&("let"===t||"let"===e.kind||"const"===e.kind||"module"===e.kind||"param"===e.kind&&("let"===t||"const"===t))))throw this.hub.buildError(r,'Duplicate declaration "'+n+'"',TypeError)},t.rename=function(e,t,n){var r=this.getBinding(e);if(r)return t=t||this.generateUidIdentifier(e).name,new Yd(r,e,t).rename(n)},t._renameFromMap=function(e,t,n,r){e[t]&&(e[n]=r,e[t]=null)},t.dump=function(){var e=Kd("-",60);console.log(e);var t=this;do{console.log("#",t.block.type);for(var n=0,r=Object.keys(t.bindings);n<r.length;n++){var i=r[n],a=t.bindings[i];console.log(" -",i,{constant:a.constant,references:a.references,violations:a.constantViolations.length,kind:a.kind})}}while(t=t.parent);console.log(e)},t.toArray=function(e,t){if(S(e)){var n=this.getBinding(e.name);if(n&&n.constant&&n.path.isGenericType("Array"))return e}if(s(e))return e;if(S(e,{name:"arguments"}))return Xo(ms(ms(ms(os("Array"),os("prototype")),os("slice")),os("call")),[e]);var r,i=[e];return!0===t?r="toConsumableArray":t?(i.push(cs(t)),r="slicedToArray"):r="toArray",Xo(this.hub.addHelper(r),i)},t.hasLabel=function(e){return!!this.getLabel(e)},t.getLabel=function(e){return this.labels.get(e)},t.registerLabel=function(e){this.labels.set(e.node.label.name,e)},t.registerDeclaration=function(e){if(e.isLabeledStatement())this.registerLabel(e);else if(e.isFunctionDeclaration())this.registerBinding("hoisted",e.get("id"),e);else if(e.isVariableDeclaration())for(var t=0,n=e.get("declarations");t<n.length;t++){var r=n[t];this.registerBinding(e.node.kind,r)}else if(e.isClassDeclaration())this.registerBinding("let",e);else if(e.isImportDeclaration())for(var i=0,a=e.get("specifiers");i<a.length;i++){var o=a[i];this.registerBinding("module",o)}else if(e.isExportDeclaration()){var s=e.get("declaration");(s.isClassDeclaration()||s.isFunctionDeclaration()||s.isVariableDeclaration())&&this.registerDeclaration(s)}else this.registerBinding("unknown",e)},t.buildUndefinedNode=function(){return ks("void",cs(0),!0)},t.registerConstantViolation=function(e){for(var t=e.getBindingIdentifiers(),n=0,r=Object.keys(t);n<r.length;n++){var i=r[n],a=this.getBinding(i);a&&a.reassign(e)}},t.registerBinding=function(e,t,n){if(void 0===n&&(n=t),!e)throw new ReferenceError("no `kind`");if(t.isVariableDeclaration()){var r=t.get("declarations"),i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}var s=o;this.registerBinding(e,s)}}else for(var u=this.getProgramParent(),l=t.getOuterBindingIdentifiers(!0),c=0,p=Object.keys(l);c<p.length;c++)for(var h=p[c],f=0,d=l[h];f<d.length;f++){var m=d[f],y=this.getOwnBinding(h);if(y){if(y.identifier===m)continue;this.checkBlockScopedCollisions(y,e,h,m)}u.references[h]=!0,y?this.registerConstantViolation(n):this.bindings[h]=new Xd({identifier:m,scope:this,path:n,kind:e})}},t.addGlobal=function(e){this.globals[e.name]=e},t.hasUid=function(e){var t=this;do{if(t.uids[e])return!0}while(t=t.parent);return!1},t.hasGlobal=function(e){var t=this;do{if(t.globals[e])return!0}while(t=t.parent);return!1},t.hasReference=function(e){var t=this;do{if(t.references[e])return!0}while(t=t.parent);return!1},t.isPure=function(e,t){if(S(e)){var n=this.getBinding(e.name);return!!n&&(!t||n.constant)}if(yt(e))return!(e.superClass&&!this.isPure(e.superClass,t))&&this.isPure(e.body,t);if(Y(e)){var r=e.body,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}var u=o;if(!this.isPure(u,t))return!1}return!0}if(nt(e))return this.isPure(e.left,t)&&this.isPure(e.right,t);if(s(e)){for(var l=0,c=e.elements;l<c.length;l++){var p=c[l];if(!this.isPure(p,t))return!1}return!0}if(B(e)){for(var h=0,f=e.properties;h<f.length;h++){var d=f[h];if(!this.isPure(d,t))return!1}return!0}if(se(e))return!(e.computed&&!this.isPure(e.key,t))&&("get"!==e.kind&&"set"!==e.kind);if(ft(e))return!(e.computed&&!this.isPure(e.key,t))&&this.isPure(e.value,t);if(G(e))return this.isPure(e.argument,t);if(pe(e))return Dt(e.tag,"String.raw")&&!this.hasBinding("String",!0)&&this.isPure(e.quasi,t);if(he(e)){for(var m=0,y=e.expressions;m<y.length;m++){var v=y[m];if(!this.isPure(v,t))return!1}return!0}return ct(e)},t.setData=function(e,t){return this.data[e]=t},t.getData=function(e){var t=this;do{var n=t.data[e];if(null!=n)return n}while(t=t.parent)},t.removeData=function(e){var t=this;do{null!=t.data[e]&&(t.data[e]=null)}while(t=t.parent)},t.init=function(){this.references||this.crawl()},t.crawl=function(){var e=this.path;if(this.references=Object.create(null),this.bindings=Object.create(null),this.globals=Object.create(null),this.uids=Object.create(null),this.data=Object.create(null),e.isLoop())for(var t=0,n=Aa;t<n.length;t++){var r=n[t],i=e.get(r);i.isBlockScoped()&&this.registerBinding(i.node.kind,i)}if(e.isFunctionExpression()&&e.has("id")&&(e.get("id").node[Ra]||this.registerBinding("local",e.get("id"),e)),e.isClassExpression()&&e.has("id")&&(e.get("id").node[Ra]||this.registerBinding("local",e)),e.isFunction()){var a=e.get("params"),o=Array.isArray(a),s=0;for(a=o?a:a[Symbol.iterator]();;){var u;if(o){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}var l=u;this.registerBinding("param",l)}}if(e.isCatchClause()&&this.registerBinding("let",e),!this.getProgramParent().crawling){var c={references:[],constantViolations:[],assignments:[]};this.crawling=!0,e.traverse(Ym,c),this.crawling=!1;var p=c.assignments,h=Array.isArray(p),f=0;for(p=h?p:p[Symbol.iterator]();;){var d;if(h){if(f>=p.length)break;d=p[f++]}else{if((f=p.next()).done)break;d=f.value}for(var m=d,y=m.getBindingIdentifiers(),v=void 0,g=0,b=Object.keys(y);g<b.length;g++){var E=b[g];m.scope.getBinding(E)||(v=v||m.scope.getProgramParent()).addGlobal(y[E])}m.scope.registerConstantViolation(m)}var A=c.references,D=Array.isArray(A),S=0;for(A=D?A:A[Symbol.iterator]();;){var x;if(D){if(S>=A.length)break;x=A[S++]}else{if((S=A.next()).done)break;x=S.value}var T=x,C=T.scope.getBinding(T.node.name);C?C.reference(T):T.scope.getProgramParent().addGlobal(T.node)}var w=c.constantViolations,P=Array.isArray(w),F=0;for(w=P?w:w[Symbol.iterator]();;){var k;if(P){if(F>=w.length)break;k=w[F++]}else{if((F=w.next()).done)break;k=F.value}var _=k;_.scope.registerConstantViolation(_)}}},t.push=function(e){var t=this.path;t.isBlockStatement()||t.isProgram()||(t=this.getBlockParent().path),t.isSwitchStatement()&&(t=(this.getFunctionParent()||this.getProgramParent()).path),(t.isLoop()||t.isCatchClause()||t.isFunction())&&(t.ensureBlock(),t=t.get("body"));var n=e.unique,r=e.kind||"var",i=null==e._blockHoist?2:e._blockHoist,a="declaration:"+r+":"+i,o=!n&&t.getData(a);if(!o){var s=Is(r,[]);s._blockHoist=i,o=t.unshiftContainer("body",[s])[0],n||t.setData(a,o)}var u=Os(e.id,e.init);o.node.declarations.push(u),this.registerBinding(r,o.get("declarations").pop())},t.getProgramParent=function(){var e=this;do{if(e.path.isProgram())return e}while(e=e.parent);throw new Error("Couldn't find a Program")},t.getFunctionParent=function(){var e=this;do{if(e.path.isFunctionParent())return e}while(e=e.parent);return null},t.getBlockParent=function(){var e=this;do{if(e.path.isBlockParent())return e}while(e=e.parent);throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...")},t.getAllBindings=function(){var e=Object.create(null),t=this;do{cm(e,t.bindings),t=t.parent}while(t);return e},t.getAllBindingsOfKind=function(){for(var e=Object.create(null),t=0,n=arguments;t<n.length;t++){var r=n[t],i=this;do{for(var a=0,o=Object.keys(i.bindings);a<o.length;a++){var s=o[a],u=i.bindings[s];u.kind===r&&(e[s]=u)}i=i.parent}while(i)}return e},t.bindingIdentifierEquals=function(e,t){return this.getBindingIdentifier(e)===t},t.getBinding=function(e){var t=this;do{var n=t.getOwnBinding(e);if(n)return n}while(t=t.parent)},t.getOwnBinding=function(e){return this.bindings[e]},t.getBindingIdentifier=function(e){var t=this.getBinding(e);return t&&t.identifier},t.getOwnBindingIdentifier=function(e){var t=this.bindings[e];return t&&t.identifier},t.hasOwnBinding=function(e){return!!this.getOwnBinding(e)},t.hasBinding=function(t,n){return!!t&&(!!this.hasOwnBinding(t)||(!!this.parentHasBinding(t,n)||(!!this.hasUid(t)||(!(n||!Md(e.globals,t))||!(n||!Md(e.contextVariables,t))))))},t.parentHasBinding=function(e,t){return this.parent&&this.parent.hasBinding(e,t)},t.moveBindingTo=function(e,t){var n=this.getBinding(e);n&&(n.scope.removeOwnBinding(e),n.scope=t,t.bindings[e]=n)},t.removeOwnBinding=function(e){delete this.bindings[e]},t.removeBinding=function(e){var t=this.getBinding(e);t&&t.scope.removeOwnBinding(e);var n=this;do{n.uids[e]&&(n.uids[e]=!1)}while(n=n.parent)},r(e,[{key:"parent",get:function(){var e=this.path.findParent((function(e){return e.isScope()}));return e&&e.scope}},{key:"parentBlock",get:function(){return this.path.parent}},{key:"hub",get:function(){return this.path.hub}}]),e}();Qm.globals=Object.keys(Hm.builtin),Qm.contextVariables=["arguments","undefined","Infinity","NaN"];var Zm="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(""),ey=function(e){if(0<=e&&e<Zm.length)return Zm[e];throw new TypeError("Must be between 0 and 63: "+e)},ty=function(e){return 65<=e&&e<=90?e-65:97<=e&&e<=122?e-97+26:48<=e&&e<=57?e-48+52:43==e?62:47==e?63:-1};var ny=function(e){var t,n="",r=function(e){return e<0?1+(-e<<1):0+(e<<1)}(e);do{t=31&r,(r>>>=5)>0&&(t|=32),n+=ey(t)}while(r>0);return n},ry=function(e,t,n){var r,i,a,o,s=e.length,u=0,l=0;do{if(t>=s)throw new Error("Expected more digits in base 64 VLQ value.");if(-1===(i=ty(e.charCodeAt(t++))))throw new Error("Invalid base64 digit: "+e.charAt(t-1));r=!!(32&i),u+=(i&=31)<<l,l+=5}while(r);n.value=(o=(a=u)>>1,1==(1&a)?-o:o),n.rest=t},iy=Vt((function(e,t){t.getArg=function(e,t,n){if(t in e)return e[t];if(3===arguments.length)return n;throw new Error('"'+t+'" is a required argument.')};var n=/^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/,r=/^data:.+\,.+$/;function i(e){var t=e.match(n);return t?{scheme:t[1],auth:t[2],host:t[3],port:t[4],path:t[5]}:null}function a(e){var t="";return e.scheme&&(t+=e.scheme+":"),t+="//",e.auth&&(t+=e.auth+"@"),e.host&&(t+=e.host),e.port&&(t+=":"+e.port),e.path&&(t+=e.path),t}function o(e){var n=e,r=i(e);if(r){if(!r.path)return e;n=r.path}for(var o,s=t.isAbsolute(n),u=n.split(/\/+/),l=0,c=u.length-1;c>=0;c--)"."===(o=u[c])?u.splice(c,1):".."===o?l++:l>0&&(""===o?(u.splice(c+1,l),l=0):(u.splice(c,2),l--));return""===(n=u.join("/"))&&(n=s?"/":"."),r?(r.path=n,a(r)):n}function s(e,t){""===e&&(e="."),""===t&&(t=".");var n=i(t),s=i(e);if(s&&(e=s.path||"/"),n&&!n.scheme)return s&&(n.scheme=s.scheme),a(n);if(n||t.match(r))return t;if(s&&!s.host&&!s.path)return s.host=t,a(s);var u="/"===t.charAt(0)?t:o(e.replace(/\/+$/,"")+"/"+t);return s?(s.path=u,a(s)):u}t.urlParse=i,t.urlGenerate=a,t.normalize=o,t.join=s,t.isAbsolute=function(e){return"/"===e.charAt(0)||n.test(e)},t.relative=function(e,t){""===e&&(e="."),e=e.replace(/\/$/,"");for(var n=0;0!==t.indexOf(e+"/");){var r=e.lastIndexOf("/");if(r<0)return t;if((e=e.slice(0,r)).match(/^([^\/]+:\/)?\/*$/))return t;++n}return Array(n+1).join("../")+t.substr(e.length+1)};var u=!("__proto__"in Object.create(null));function l(e){return e}function c(e){if(!e)return!1;var t=e.length;if(t<9)return!1;if(95!==e.charCodeAt(t-1)||95!==e.charCodeAt(t-2)||111!==e.charCodeAt(t-3)||116!==e.charCodeAt(t-4)||111!==e.charCodeAt(t-5)||114!==e.charCodeAt(t-6)||112!==e.charCodeAt(t-7)||95!==e.charCodeAt(t-8)||95!==e.charCodeAt(t-9))return!1;for(var n=t-10;n>=0;n--)if(36!==e.charCodeAt(n))return!1;return!0}function p(e,t){return e===t?0:null===e?1:null===t?-1:e>t?1:-1}t.toSetString=u?l:function(e){return c(e)?"$"+e:e},t.fromSetString=u?l:function(e){return c(e)?e.slice(1):e},t.compareByOriginalPositions=function(e,t,n){var r=p(e.source,t.source);return 0!==r?r:0!==(r=e.originalLine-t.originalLine)?r:0!==(r=e.originalColumn-t.originalColumn)||n?r:0!==(r=e.generatedColumn-t.generatedColumn)?r:0!==(r=e.generatedLine-t.generatedLine)?r:p(e.name,t.name)},t.compareByGeneratedPositionsDeflated=function(e,t,n){var r=e.generatedLine-t.generatedLine;return 0!==r?r:0!==(r=e.generatedColumn-t.generatedColumn)||n?r:0!==(r=p(e.source,t.source))?r:0!==(r=e.originalLine-t.originalLine)?r:0!==(r=e.originalColumn-t.originalColumn)?r:p(e.name,t.name)},t.compareByGeneratedPositionsInflated=function(e,t){var n=e.generatedLine-t.generatedLine;return 0!==n?n:0!==(n=e.generatedColumn-t.generatedColumn)?n:0!==(n=p(e.source,t.source))?n:0!==(n=e.originalLine-t.originalLine)?n:0!==(n=e.originalColumn-t.originalColumn)?n:p(e.name,t.name)},t.parseSourceMapInput=function(e){return JSON.parse(e.replace(/^\)]}'[^\n]*\n/,""))},t.computeSourceURL=function(e,t,n){if(t=t||"",e&&("/"!==e[e.length-1]&&"/"!==t[0]&&(e+="/"),t=e+t),n){var r=i(n);if(!r)throw new Error("sourceMapURL could not be parsed");if(r.path){var u=r.path.lastIndexOf("/");u>=0&&(r.path=r.path.substring(0,u+1))}t=s(a(r),t)}return o(t)}})),ay=(iy.getArg,iy.urlParse,iy.urlGenerate,iy.normalize,iy.join,iy.isAbsolute,iy.relative,iy.toSetString,iy.fromSetString,iy.compareByOriginalPositions,iy.compareByGeneratedPositionsDeflated,iy.compareByGeneratedPositionsInflated,iy.parseSourceMapInput,iy.computeSourceURL,Object.prototype.hasOwnProperty),oy="undefined"!=typeof Map;function sy(){this._array=[],this._set=oy?new Map:Object.create(null)}sy.fromArray=function(e,t){for(var n=new sy,r=0,i=e.length;r<i;r++)n.add(e[r],t);return n},sy.prototype.size=function(){return oy?this._set.size:Object.getOwnPropertyNames(this._set).length},sy.prototype.add=function(e,t){var n=oy?e:iy.toSetString(e),r=oy?this.has(e):ay.call(this._set,n),i=this._array.length;r&&!t||this._array.push(e),r||(oy?this._set.set(e,i):this._set[n]=i)},sy.prototype.has=function(e){if(oy)return this._set.has(e);var t=iy.toSetString(e);return ay.call(this._set,t)},sy.prototype.indexOf=function(e){if(oy){var t=this._set.get(e);if(t>=0)return t}else{var n=iy.toSetString(e);if(ay.call(this._set,n))return this._set[n]}throw new Error('"'+e+'" is not in the set.')},sy.prototype.at=function(e){if(e>=0&&e<this._array.length)return this._array[e];throw new Error("No element indexed by "+e)},sy.prototype.toArray=function(){return this._array.slice()};var uy={ArraySet:sy};function ly(){this._array=[],this._sorted=!0,this._last={generatedLine:-1,generatedColumn:0}}ly.prototype.unsortedForEach=function(e,t){this._array.forEach(e,t)},ly.prototype.add=function(e){var t,n,r,i,a,o;t=this._last,n=e,r=t.generatedLine,i=n.generatedLine,a=t.generatedColumn,o=n.generatedColumn,i>r||i==r&&o>=a||iy.compareByGeneratedPositionsInflated(t,n)<=0?(this._last=e,this._array.push(e)):(this._sorted=!1,this._array.push(e))},ly.prototype.toArray=function(){return this._sorted||(this._array.sort(iy.compareByGeneratedPositionsInflated),this._sorted=!0),this._array};var cy=uy.ArraySet,py={MappingList:ly}.MappingList;function hy(e){e||(e={}),this._file=iy.getArg(e,"file",null),this._sourceRoot=iy.getArg(e,"sourceRoot",null),this._skipValidation=iy.getArg(e,"skipValidation",!1),this._sources=new cy,this._names=new cy,this._mappings=new py,this._sourcesContents=null}hy.prototype._version=3,hy.fromSourceMap=function(e){var t=e.sourceRoot,n=new hy({file:e.file,sourceRoot:t});return e.eachMapping((function(e){var r={generated:{line:e.generatedLine,column:e.generatedColumn}};null!=e.source&&(r.source=e.source,null!=t&&(r.source=iy.relative(t,r.source)),r.original={line:e.originalLine,column:e.originalColumn},null!=e.name&&(r.name=e.name)),n.addMapping(r)})),e.sources.forEach((function(r){var i=r;null!==t&&(i=iy.relative(t,r)),n._sources.has(i)||n._sources.add(i);var a=e.sourceContentFor(r);null!=a&&n.setSourceContent(r,a)})),n},hy.prototype.addMapping=function(e){var t=iy.getArg(e,"generated"),n=iy.getArg(e,"original",null),r=iy.getArg(e,"source",null),i=iy.getArg(e,"name",null);this._skipValidation||this._validateMapping(t,n,r,i),null!=r&&(r=String(r),this._sources.has(r)||this._sources.add(r)),null!=i&&(i=String(i),this._names.has(i)||this._names.add(i)),this._mappings.add({generatedLine:t.line,generatedColumn:t.column,originalLine:null!=n&&n.line,originalColumn:null!=n&&n.column,source:r,name:i})},hy.prototype.setSourceContent=function(e,t){var n=e;null!=this._sourceRoot&&(n=iy.relative(this._sourceRoot,n)),null!=t?(this._sourcesContents||(this._sourcesContents=Object.create(null)),this._sourcesContents[iy.toSetString(n)]=t):this._sourcesContents&&(delete this._sourcesContents[iy.toSetString(n)],0===Object.keys(this._sourcesContents).length&&(this._sourcesContents=null))},hy.prototype.applySourceMap=function(e,t,n){var r=t;if(null==t){if(null==e.file)throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');r=e.file}var i=this._sourceRoot;null!=i&&(r=iy.relative(i,r));var a=new cy,o=new cy;this._mappings.unsortedForEach((function(t){if(t.source===r&&null!=t.originalLine){var s=e.originalPositionFor({line:t.originalLine,column:t.originalColumn});null!=s.source&&(t.source=s.source,null!=n&&(t.source=iy.join(n,t.source)),null!=i&&(t.source=iy.relative(i,t.source)),t.originalLine=s.line,t.originalColumn=s.column,null!=s.name&&(t.name=s.name))}var u=t.source;null==u||a.has(u)||a.add(u);var l=t.name;null==l||o.has(l)||o.add(l)}),this),this._sources=a,this._names=o,e.sources.forEach((function(t){var r=e.sourceContentFor(t);null!=r&&(null!=n&&(t=iy.join(n,t)),null!=i&&(t=iy.relative(i,t)),this.setSourceContent(t,r))}),this)},hy.prototype._validateMapping=function(e,t,n,r){if(t&&"number"!=typeof t.line&&"number"!=typeof t.column)throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");if((!(e&&"line"in e&&"column"in e&&e.line>0&&e.column>=0)||t||n||r)&&!(e&&"line"in e&&"column"in e&&t&&"line"in t&&"column"in t&&e.line>0&&e.column>=0&&t.line>0&&t.column>=0&&n))throw new Error("Invalid mapping: "+JSON.stringify({generated:e,source:n,original:t,name:r}))},hy.prototype._serializeMappings=function(){for(var e,t,n,r,i=0,a=1,o=0,s=0,u=0,l=0,c="",p=this._mappings.toArray(),h=0,f=p.length;h<f;h++){if(e="",(t=p[h]).generatedLine!==a)for(i=0;t.generatedLine!==a;)e+=";",a++;else if(h>0){if(!iy.compareByGeneratedPositionsInflated(t,p[h-1]))continue;e+=","}e+=ny(t.generatedColumn-i),i=t.generatedColumn,null!=t.source&&(r=this._sources.indexOf(t.source),e+=ny(r-l),l=r,e+=ny(t.originalLine-1-s),s=t.originalLine-1,e+=ny(t.originalColumn-o),o=t.originalColumn,null!=t.name&&(n=this._names.indexOf(t.name),e+=ny(n-u),u=n)),c+=e}return c},hy.prototype._generateSourcesContent=function(e,t){return e.map((function(e){if(!this._sourcesContents)return null;null!=t&&(e=iy.relative(t,e));var n=iy.toSetString(e);return Object.prototype.hasOwnProperty.call(this._sourcesContents,n)?this._sourcesContents[n]:null}),this)},hy.prototype.toJSON=function(){var e={version:this._version,sources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};return null!=this._file&&(e.file=this._file),null!=this._sourceRoot&&(e.sourceRoot=this._sourceRoot),this._sourcesContents&&(e.sourcesContent=this._generateSourcesContent(e.sources,e.sourceRoot)),e},hy.prototype.toString=function(){return JSON.stringify(this.toJSON())};var fy={SourceMapGenerator:hy},dy=Vt((function(e,t){t.GREATEST_LOWER_BOUND=1,t.LEAST_UPPER_BOUND=2,t.search=function(e,n,r,i){if(0===n.length)return-1;var a=function e(n,r,i,a,o,s){var u=Math.floor((r-n)/2)+n,l=o(i,a[u],!0);return 0===l?u:l>0?r-u>1?e(u,r,i,a,o,s):s==t.LEAST_UPPER_BOUND?r<a.length?r:-1:u:u-n>1?e(n,u,i,a,o,s):s==t.LEAST_UPPER_BOUND?u:n<0?-1:n}(-1,n.length,e,n,r,i||t.GREATEST_LOWER_BOUND);if(a<0)return-1;for(;a-1>=0&&0===r(n[a],n[a-1],!0);)--a;return a}}));dy.GREATEST_LOWER_BOUND,dy.LEAST_UPPER_BOUND,dy.search;function my(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function yy(e,t,n,r){if(n<r){var i=n-1;my(e,(u=n,l=r,Math.round(u+Math.random()*(l-u))),r);for(var a=e[r],o=n;o<r;o++)t(e[o],a)<=0&&my(e,i+=1,o);my(e,i+1,o);var s=i+1;yy(e,t,n,s-1),yy(e,t,s+1,r)}var u,l}var vy=uy.ArraySet,gy=function(e,t){yy(e,t,0,e.length-1)};function by(e,t){var n=e;return"string"==typeof e&&(n=iy.parseSourceMapInput(e)),null!=n.sections?new xy(n,t):new Ay(n,t)}by.fromSourceMap=function(e,t){return Ay.fromSourceMap(e,t)},by.prototype._version=3,by.prototype.__generatedMappings=null,Object.defineProperty(by.prototype,"_generatedMappings",{configurable:!0,enumerable:!0,get:function(){return this.__generatedMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__generatedMappings}}),by.prototype.__originalMappings=null,Object.defineProperty(by.prototype,"_originalMappings",{configurable:!0,enumerable:!0,get:function(){return this.__originalMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__originalMappings}}),by.prototype._charIsMappingSeparator=function(e,t){var n=e.charAt(t);return";"===n||","===n},by.prototype._parseMappings=function(e,t){throw new Error("Subclasses must implement _parseMappings")},by.GENERATED_ORDER=1,by.ORIGINAL_ORDER=2,by.GREATEST_LOWER_BOUND=1,by.LEAST_UPPER_BOUND=2,by.prototype.eachMapping=function(e,t,n){var r,i=t||null;switch(n||by.GENERATED_ORDER){case by.GENERATED_ORDER:r=this._generatedMappings;break;case by.ORIGINAL_ORDER:r=this._originalMappings;break;default:throw new Error("Unknown order of iteration.")}var a=this.sourceRoot;r.map((function(e){var t=null===e.source?null:this._sources.at(e.source);return{source:t=iy.computeSourceURL(a,t,this._sourceMapURL),generatedLine:e.generatedLine,generatedColumn:e.generatedColumn,originalLine:e.originalLine,originalColumn:e.originalColumn,name:null===e.name?null:this._names.at(e.name)}}),this).forEach(e,i)},by.prototype.allGeneratedPositionsFor=function(e){var t=iy.getArg(e,"line"),n={source:iy.getArg(e,"source"),originalLine:t,originalColumn:iy.getArg(e,"column",0)};if(n.source=this._findSourceIndex(n.source),n.source<0)return[];var r=[],i=this._findMapping(n,this._originalMappings,"originalLine","originalColumn",iy.compareByOriginalPositions,dy.LEAST_UPPER_BOUND);if(i>=0){var a=this._originalMappings[i];if(void 0===e.column)for(var o=a.originalLine;a&&a.originalLine===o;)r.push({line:iy.getArg(a,"generatedLine",null),column:iy.getArg(a,"generatedColumn",null),lastColumn:iy.getArg(a,"lastGeneratedColumn",null)}),a=this._originalMappings[++i];else for(var s=a.originalColumn;a&&a.originalLine===t&&a.originalColumn==s;)r.push({line:iy.getArg(a,"generatedLine",null),column:iy.getArg(a,"generatedColumn",null),lastColumn:iy.getArg(a,"lastGeneratedColumn",null)}),a=this._originalMappings[++i]}return r};var Ey=by;function Ay(e,t){var n=e;"string"==typeof e&&(n=iy.parseSourceMapInput(e));var r=iy.getArg(n,"version"),i=iy.getArg(n,"sources"),a=iy.getArg(n,"names",[]),o=iy.getArg(n,"sourceRoot",null),s=iy.getArg(n,"sourcesContent",null),u=iy.getArg(n,"mappings"),l=iy.getArg(n,"file",null);if(r!=this._version)throw new Error("Unsupported version: "+r);o&&(o=iy.normalize(o)),i=i.map(String).map(iy.normalize).map((function(e){return o&&iy.isAbsolute(o)&&iy.isAbsolute(e)?iy.relative(o,e):e})),this._names=vy.fromArray(a.map(String),!0),this._sources=vy.fromArray(i,!0),this._absoluteSources=this._sources.toArray().map((function(e){return iy.computeSourceURL(o,e,t)})),this.sourceRoot=o,this.sourcesContent=s,this._mappings=u,this._sourceMapURL=t,this.file=l}function Dy(){this.generatedLine=0,this.generatedColumn=0,this.source=null,this.originalLine=null,this.originalColumn=null,this.name=null}Ay.prototype=Object.create(by.prototype),Ay.prototype.consumer=by,Ay.prototype._findSourceIndex=function(e){var t,n=e;if(null!=this.sourceRoot&&(n=iy.relative(this.sourceRoot,n)),this._sources.has(n))return this._sources.indexOf(n);for(t=0;t<this._absoluteSources.length;++t)if(this._absoluteSources[t]==e)return t;return-1},Ay.fromSourceMap=function(e,t){var n=Object.create(Ay.prototype),r=n._names=vy.fromArray(e._names.toArray(),!0),i=n._sources=vy.fromArray(e._sources.toArray(),!0);n.sourceRoot=e._sourceRoot,n.sourcesContent=e._generateSourcesContent(n._sources.toArray(),n.sourceRoot),n.file=e._file,n._sourceMapURL=t,n._absoluteSources=n._sources.toArray().map((function(e){return iy.computeSourceURL(n.sourceRoot,e,t)}));for(var a=e._mappings.toArray().slice(),o=n.__generatedMappings=[],s=n.__originalMappings=[],u=0,l=a.length;u<l;u++){var c=a[u],p=new Dy;p.generatedLine=c.generatedLine,p.generatedColumn=c.generatedColumn,c.source&&(p.source=i.indexOf(c.source),p.originalLine=c.originalLine,p.originalColumn=c.originalColumn,c.name&&(p.name=r.indexOf(c.name)),s.push(p)),o.push(p)}return gy(n.__originalMappings,iy.compareByOriginalPositions),n},Ay.prototype._version=3,Object.defineProperty(Ay.prototype,"sources",{get:function(){return this._absoluteSources.slice()}}),Ay.prototype._parseMappings=function(e,t){for(var n,r,i,a,o,s=1,u=0,l=0,c=0,p=0,h=0,f=e.length,d=0,m={},y={},v=[],g=[];d<f;)if(";"===e.charAt(d))s++,d++,u=0;else if(","===e.charAt(d))d++;else{for((n=new Dy).generatedLine=s,a=d;a<f&&!this._charIsMappingSeparator(e,a);a++);if(i=m[r=e.slice(d,a)])d+=r.length;else{for(i=[];d<a;)ry(e,d,y),o=y.value,d=y.rest,i.push(o);if(2===i.length)throw new Error("Found a source, but no line and column");if(3===i.length)throw new Error("Found a source and line, but no column");m[r]=i}n.generatedColumn=u+i[0],u=n.generatedColumn,i.length>1&&(n.source=p+i[1],p+=i[1],n.originalLine=l+i[2],l=n.originalLine,n.originalLine+=1,n.originalColumn=c+i[3],c=n.originalColumn,i.length>4&&(n.name=h+i[4],h+=i[4])),g.push(n),"number"==typeof n.originalLine&&v.push(n)}gy(g,iy.compareByGeneratedPositionsDeflated),this.__generatedMappings=g,gy(v,iy.compareByOriginalPositions),this.__originalMappings=v},Ay.prototype._findMapping=function(e,t,n,r,i,a){if(e[n]<=0)throw new TypeError("Line must be greater than or equal to 1, got "+e[n]);if(e[r]<0)throw new TypeError("Column must be greater than or equal to 0, got "+e[r]);return dy.search(e,t,i,a)},Ay.prototype.computeColumnSpans=function(){for(var e=0;e<this._generatedMappings.length;++e){var t=this._generatedMappings[e];if(e+1<this._generatedMappings.length){var n=this._generatedMappings[e+1];if(t.generatedLine===n.generatedLine){t.lastGeneratedColumn=n.generatedColumn-1;continue}}t.lastGeneratedColumn=1/0}},Ay.prototype.originalPositionFor=function(e){var t={generatedLine:iy.getArg(e,"line"),generatedColumn:iy.getArg(e,"column")},n=this._findMapping(t,this._generatedMappings,"generatedLine","generatedColumn",iy.compareByGeneratedPositionsDeflated,iy.getArg(e,"bias",by.GREATEST_LOWER_BOUND));if(n>=0){var r=this._generatedMappings[n];if(r.generatedLine===t.generatedLine){var i=iy.getArg(r,"source",null);null!==i&&(i=this._sources.at(i),i=iy.computeSourceURL(this.sourceRoot,i,this._sourceMapURL));var a=iy.getArg(r,"name",null);return null!==a&&(a=this._names.at(a)),{source:i,line:iy.getArg(r,"originalLine",null),column:iy.getArg(r,"originalColumn",null),name:a}}}return{source:null,line:null,column:null,name:null}},Ay.prototype.hasContentsOfAllSources=function(){return!!this.sourcesContent&&(this.sourcesContent.length>=this._sources.size()&&!this.sourcesContent.some((function(e){return null==e})))},Ay.prototype.sourceContentFor=function(e,t){if(!this.sourcesContent)return null;var n=this._findSourceIndex(e);if(n>=0)return this.sourcesContent[n];var r,i=e;if(null!=this.sourceRoot&&(i=iy.relative(this.sourceRoot,i)),null!=this.sourceRoot&&(r=iy.urlParse(this.sourceRoot))){var a=i.replace(/^file:\/\//,"");if("file"==r.scheme&&this._sources.has(a))return this.sourcesContent[this._sources.indexOf(a)];if((!r.path||"/"==r.path)&&this._sources.has("/"+i))return this.sourcesContent[this._sources.indexOf("/"+i)]}if(t)return null;throw new Error('"'+i+'" is not in the SourceMap.')},Ay.prototype.generatedPositionFor=function(e){var t=iy.getArg(e,"source");if((t=this._findSourceIndex(t))<0)return{line:null,column:null,lastColumn:null};var n={source:t,originalLine:iy.getArg(e,"line"),originalColumn:iy.getArg(e,"column")},r=this._findMapping(n,this._originalMappings,"originalLine","originalColumn",iy.compareByOriginalPositions,iy.getArg(e,"bias",by.GREATEST_LOWER_BOUND));if(r>=0){var i=this._originalMappings[r];if(i.source===n.source)return{line:iy.getArg(i,"generatedLine",null),column:iy.getArg(i,"generatedColumn",null),lastColumn:iy.getArg(i,"lastGeneratedColumn",null)}}return{line:null,column:null,lastColumn:null}};var Sy=Ay;function xy(e,t){var n=e;"string"==typeof e&&(n=iy.parseSourceMapInput(e));var r=iy.getArg(n,"version"),i=iy.getArg(n,"sections");if(r!=this._version)throw new Error("Unsupported version: "+r);this._sources=new vy,this._names=new vy;var a={line:-1,column:0};this._sections=i.map((function(e){if(e.url)throw new Error("Support for url field in sections not implemented.");var n=iy.getArg(e,"offset"),r=iy.getArg(n,"line"),i=iy.getArg(n,"column");if(r<a.line||r===a.line&&i<a.column)throw new Error("Section offsets must be ordered and non-overlapping.");return a=n,{generatedOffset:{generatedLine:r+1,generatedColumn:i+1},consumer:new by(iy.getArg(e,"map"),t)}}))}xy.prototype=Object.create(by.prototype),xy.prototype.constructor=by,xy.prototype._version=3,Object.defineProperty(xy.prototype,"sources",{get:function(){for(var e=[],t=0;t<this._sections.length;t++)for(var n=0;n<this._sections[t].consumer.sources.length;n++)e.push(this._sections[t].consumer.sources[n]);return e}}),xy.prototype.originalPositionFor=function(e){var t={generatedLine:iy.getArg(e,"line"),generatedColumn:iy.getArg(e,"column")},n=dy.search(t,this._sections,(function(e,t){var n=e.generatedLine-t.generatedOffset.generatedLine;return n||e.generatedColumn-t.generatedOffset.generatedColumn})),r=this._sections[n];return r?r.consumer.originalPositionFor({line:t.generatedLine-(r.generatedOffset.generatedLine-1),column:t.generatedColumn-(r.generatedOffset.generatedLine===t.generatedLine?r.generatedOffset.generatedColumn-1:0),bias:e.bias}):{source:null,line:null,column:null,name:null}},xy.prototype.hasContentsOfAllSources=function(){return this._sections.every((function(e){return e.consumer.hasContentsOfAllSources()}))},xy.prototype.sourceContentFor=function(e,t){for(var n=0;n<this._sections.length;n++){var r=this._sections[n].consumer.sourceContentFor(e,!0);if(r)return r}if(t)return null;throw new Error('"'+e+'" is not in the SourceMap.')},xy.prototype.generatedPositionFor=function(e){for(var t=0;t<this._sections.length;t++){var n=this._sections[t];if(-1!==n.consumer._findSourceIndex(iy.getArg(e,"source"))){var r=n.consumer.generatedPositionFor(e);if(r)return{line:r.line+(n.generatedOffset.generatedLine-1),column:r.column+(n.generatedOffset.generatedLine===r.line?n.generatedOffset.generatedColumn-1:0)}}}return{line:null,column:null}},xy.prototype._parseMappings=function(e,t){this.__generatedMappings=[],this.__originalMappings=[];for(var n=0;n<this._sections.length;n++)for(var r=this._sections[n],i=r.consumer._generatedMappings,a=0;a<i.length;a++){var o=i[a],s=r.consumer._sources.at(o.source);s=iy.computeSourceURL(r.consumer.sourceRoot,s,this._sourceMapURL),this._sources.add(s),s=this._sources.indexOf(s);var u=null;o.name&&(u=r.consumer._names.at(o.name),this._names.add(u),u=this._names.indexOf(u));var l={source:s,generatedLine:o.generatedLine+(r.generatedOffset.generatedLine-1),generatedColumn:o.generatedColumn+(r.generatedOffset.generatedLine===o.generatedLine?r.generatedOffset.generatedColumn-1:0),originalLine:o.originalLine,originalColumn:o.originalColumn,name:u};this.__generatedMappings.push(l),"number"==typeof l.originalLine&&this.__originalMappings.push(l)}gy(this.__generatedMappings,iy.compareByGeneratedPositionsDeflated),gy(this.__originalMappings,iy.compareByOriginalPositions)};var Ty={SourceMapConsumer:Ey,BasicSourceMapConsumer:Sy,IndexedSourceMapConsumer:xy},Cy=fy.SourceMapGenerator,wy=/(\r?\n)/,Py="$$$isSourceNode$$$";function Fy(e,t,n,r,i){this.children=[],this.sourceContents={},this.line=null==e?null:e,this.column=null==t?null:t,this.source=null==n?null:n,this.name=null==i?null:i,this[Py]=!0,null!=r&&this.add(r)}Fy.fromStringWithSourceMap=function(e,t,n){var r=new Fy,i=e.split(wy),a=0,o=function(){return e()+(e()||"");function e(){return a<i.length?i[a++]:void 0}},s=1,u=0,l=null;return t.eachMapping((function(e){if(null!==l){if(!(s<e.generatedLine)){var t=(n=i[a]||"").substr(0,e.generatedColumn-u);return i[a]=n.substr(e.generatedColumn-u),u=e.generatedColumn,c(l,t),void(l=e)}c(l,o()),s++,u=0}for(;s<e.generatedLine;)r.add(o()),s++;if(u<e.generatedColumn){var n=i[a]||"";r.add(n.substr(0,e.generatedColumn)),i[a]=n.substr(e.generatedColumn),u=e.generatedColumn}l=e}),this),a<i.length&&(l&&c(l,o()),r.add(i.splice(a).join(""))),t.sources.forEach((function(e){var i=t.sourceContentFor(e);null!=i&&(null!=n&&(e=iy.join(n,e)),r.setSourceContent(e,i))})),r;function c(e,t){if(null===e||void 0===e.source)r.add(t);else{var i=n?iy.join(n,e.source):e.source;r.add(new Fy(e.originalLine,e.originalColumn,i,t,e.name))}}},Fy.prototype.add=function(e){if(Array.isArray(e))e.forEach((function(e){this.add(e)}),this);else{if(!e[Py]&&"string"!=typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);e&&this.children.push(e)}return this},Fy.prototype.prepend=function(e){if(Array.isArray(e))for(var t=e.length-1;t>=0;t--)this.prepend(e[t]);else{if(!e[Py]&&"string"!=typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);this.children.unshift(e)}return this},Fy.prototype.walk=function(e){for(var t,n=0,r=this.children.length;n<r;n++)(t=this.children[n])[Py]?t.walk(e):""!==t&&e(t,{source:this.source,line:this.line,column:this.column,name:this.name})},Fy.prototype.join=function(e){var t,n,r=this.children.length;if(r>0){for(t=[],n=0;n<r-1;n++)t.push(this.children[n]),t.push(e);t.push(this.children[n]),this.children=t}return this},Fy.prototype.replaceRight=function(e,t){var n=this.children[this.children.length-1];return n[Py]?n.replaceRight(e,t):"string"==typeof n?this.children[this.children.length-1]=n.replace(e,t):this.children.push("".replace(e,t)),this},Fy.prototype.setSourceContent=function(e,t){this.sourceContents[iy.toSetString(e)]=t},Fy.prototype.walkSourceContents=function(e){for(var t=0,n=this.children.length;t<n;t++)this.children[t][Py]&&this.children[t].walkSourceContents(e);var r=Object.keys(this.sourceContents);for(t=0,n=r.length;t<n;t++)e(iy.fromSetString(r[t]),this.sourceContents[r[t]])},Fy.prototype.toString=function(){var e="";return this.walk((function(t){e+=t})),e},Fy.prototype.toStringWithSourceMap=function(e){var t={code:"",line:1,column:0},n=new Cy(e),r=!1,i=null,a=null,o=null,s=null;return this.walk((function(e,u){t.code+=e,null!==u.source&&null!==u.line&&null!==u.column?(i===u.source&&a===u.line&&o===u.column&&s===u.name||n.addMapping({source:u.source,original:{line:u.line,column:u.column},generated:{line:t.line,column:t.column},name:u.name}),i=u.source,a=u.line,o=u.column,s=u.name,r=!0):r&&(n.addMapping({generated:{line:t.line,column:t.column}}),i=null,r=!1);for(var l=0,c=e.length;l<c;l++)10===e.charCodeAt(l)?(t.line++,t.column=0,l+1===c?(i=null,r=!1):r&&n.addMapping({source:u.source,original:{line:u.line,column:u.column},generated:{line:t.line,column:t.column},name:u.name})):t.column++})),this.walkSourceContents((function(e,t){n.setSourceContent(e,t)})),{code:t.code,map:n}};var ky={SourceMapGenerator:fy.SourceMapGenerator,SourceMapConsumer:Ty.SourceMapConsumer,SourceNode:{SourceNode:Fy}.SourceNode},_y=function(){function e(e,t){this._cachedMap=null,this._code=t,this._opts=e,this._rawMappings=[]}var t=e.prototype;return t.get=function(){if(!this._cachedMap){var e=this._cachedMap=new ky.SourceMapGenerator({sourceRoot:this._opts.sourceRoot}),t=this._code;"string"==typeof t?e.setSourceContent(this._opts.sourceFileName.replace(/\\/g,"/"),t):"object"==typeof t&&Object.keys(t).forEach((function(n){e.setSourceContent(n.replace(/\\/g,"/"),t[n])})),this._rawMappings.forEach((function(t){return e.addMapping(t)}),e)}return this._cachedMap.toJSON()},t.getRawMappings=function(){return this._rawMappings.slice()},t.mark=function(e,t,n,r,i,a,o){this._lastGenLine!==e&&null===n||(o||this._lastGenLine!==e||this._lastSourceLine!==n||this._lastSourceColumn!==r)&&(this._cachedMap=null,this._lastGenLine=e,this._lastSourceLine=n,this._lastSourceColumn=r,this._rawMappings.push({name:i||void 0,generated:{line:e,column:t},source:null==n?void 0:(a||this._opts.sourceFileName).replace(/\\/g,"/"),original:null==n?void 0:{line:n,column:r}}))},e}();var Iy=function(e){return"number"==typeof e&&e==_d(e)},Oy=/^[ \t]+$/,By=function(){function e(e){this._map=null,this._buf=[],this._last="",this._queue=[],this._position={line:1,column:0},this._sourcePosition={identifierName:null,line:null,column:null,filename:null},this._disallowedPop=null,this._map=e}var t=e.prototype;return t.get=function(){this._flush();var e=this._map,t={code:this._buf.join("").trimRight(),map:null,rawMappings:e&&e.getRawMappings()};return e&&Object.defineProperty(t,"map",{configurable:!0,enumerable:!0,get:function(){return this.map=e.get()},set:function(e){Object.defineProperty(this,"map",{value:e,writable:!0})}}),t},t.append=function(e){this._flush();var t=this._sourcePosition,n=t.line,r=t.column,i=t.filename,a=t.identifierName,o=t.force;this._append(e,n,r,a,i,o)},t.queue=function(e){if("\n"===e)for(;this._queue.length>0&&Oy.test(this._queue[0][0]);)this._queue.shift();var t=this._sourcePosition,n=t.line,r=t.column,i=t.filename,a=t.identifierName,o=t.force;this._queue.unshift([e,n,r,a,i,o])},t._flush=function(){for(var e;e=this._queue.pop();)this._append.apply(this,e)},t._append=function(e,t,n,r,i,a){this._map&&"\n"!==e[0]&&this._map.mark(this._position.line,this._position.column,t,n,r,i,a),this._buf.push(e),this._last=e[e.length-1];for(var o=0;o<e.length;o++)"\n"===e[o]?(this._position.line++,this._position.column=0):this._position.column++},t.removeTrailingNewline=function(){this._queue.length>0&&"\n"===this._queue[0][0]&&this._queue.shift()},t.removeLastSemicolon=function(){this._queue.length>0&&";"===this._queue[0][0]&&this._queue.shift()},t.endsWith=function(e){if(1===e.length){var t;if(this._queue.length>0){var n=this._queue[0][0];t=n[n.length-1]}else t=this._last;return t===e}var r=this._last+this._queue.reduce((function(e,t){return t[0]+e}),"");return e.length<=r.length&&r.slice(-e.length)===e},t.hasContent=function(){return this._queue.length>0||!!this._last},t.exactSource=function(e,t){this.source("start",e,!0),t(),this.source("end",e),this._disallowPop("start",e)},t.source=function(e,t,n){e&&!t||this._normalizePosition(e,t,this._sourcePosition,n)},t.withSource=function(e,t,n){if(!this._map)return n();var r=this._sourcePosition.line,i=this._sourcePosition.column,a=this._sourcePosition.filename,o=this._sourcePosition.identifierName;this.source(e,t),n(),this._sourcePosition.force&&this._sourcePosition.line===r&&this._sourcePosition.column===i&&this._sourcePosition.filename===a||this._disallowedPop&&this._disallowedPop.line===r&&this._disallowedPop.column===i&&this._disallowedPop.filename===a||(this._sourcePosition.line=r,this._sourcePosition.column=i,this._sourcePosition.filename=a,this._sourcePosition.identifierName=o,this._sourcePosition.force=!1,this._disallowedPop=null)},t._disallowPop=function(e,t){e&&!t||(this._disallowedPop=this._normalizePosition(e,t))},t._normalizePosition=function(e,t,n,r){var i=t?t[e]:null;void 0===n&&(n={identifierName:null,line:null,column:null,filename:null,force:!1});var a=n.line,o=n.column,s=n.filename;return n.identifierName="start"===e&&t&&t.identifierName||null,n.line=i?i.line:null,n.column=i?i.column:null,n.filename=t&&t.filename||null,(r||n.line!==a||n.column!==o||n.filename!==s)&&(n.force=r),n},t.getCurrentColumn=function(){var e=this._queue.reduce((function(e,t){return t[0]+e}),""),t=e.lastIndexOf("\n");return-1===t?this._position.column+e.length:e.length-1-t},t.getCurrentLine=function(){for(var e=this._queue.reduce((function(e,t){return t[0]+e}),""),t=0,n=0;n<e.length;n++)"\n"===e[n]&&t++;return this._position.line+t},e}();function Ny(e,t){return void 0===t&&(t={}),_(e)?(Ny(e.object,t),e.computed&&Ny(e.property,t)):nt(e)||u(e)?(Ny(e.left,t),Ny(e.right,t)):h(e)?(t.hasCall=!0,Ny(e.callee,t)):lt(e)?t.hasFunction=!0:S(e)&&(t.hasHelper=t.hasHelper||My(e.callee)),t}function My(e){return _(e)?My(e.object)||My(e.property):S(e)?"require"===e.name||"_"===e.name[0]:h(e)?My(e.callee):!(!nt(e)&&!u(e))&&(S(e.left)&&My(e.left)||My(e.right))}function Ry(e){return ht(e)||B(e)||s(e)||S(e)||_(e)}var Ly={AssignmentExpression:function(e){var t=Ny(e.right);if(t.hasCall&&t.hasHelper||t.hasFunction)return{before:t.hasFunction,after:!0}},SwitchCase:function(e,t){return{before:e.consequent.length||t.cases[0]===e,after:!e.consequent.length&&t.cases[t.cases.length-1]===e}},LogicalExpression:function(e){if(lt(e.left)||lt(e.right))return{after:!0}},Literal:function(e){if("use strict"===e.value)return{after:!0}},CallExpression:function(e){if(lt(e.callee)||My(e))return{before:!0,after:!0}},VariableDeclaration:function(e){for(var t=0;t<e.declarations.length;t++){var n=e.declarations[t],r=My(n.id)&&!Ry(n.init);if(!r){var i=Ny(n.init);r=My(n.init)&&i.hasCall||i.hasFunction}if(r)return{before:!0,after:!0}}},IfStatement:function(e){if(c(e.consequent))return{before:!0,after:!0}}};Ly.ObjectProperty=Ly.ObjectTypeProperty=Ly.ObjectMethod=function(e,t){if(t.properties[0]===e)return{before:!0}},Ly.ObjectTypeCallProperty=function(e,t){if(!(t.callProperties[0]!==e||t.properties&&t.properties.length))return{before:!0}},Ly.ObjectTypeIndexer=function(e,t){if(!(t.indexers[0]!==e||t.properties&&t.properties.length||t.callProperties&&t.callProperties.length))return{before:!0}},Ly.ObjectTypeInternalSlot=function(e,t){if(!(t.internalSlots[0]!==e||t.properties&&t.properties.length||t.callProperties&&t.callProperties.length||t.indexers&&t.indexers.length))return{before:!0}};[["Function",!0],["Class",!0],["Loop",!0],["LabeledStatement",!0],["SwitchStatement",!0],["TryStatement",!0]].forEach((function(e){var t=e[0],n=e[1];"boolean"==typeof n&&(n={after:n,before:n}),[t].concat(qa[t]||[]).forEach((function(e){Ly[e]=function(){return n}}))}));var jy={"||":0,"&&":1,"|":2,"^":3,"&":4,"==":5,"===":5,"!=":5,"!==":5,"<":6,">":6,"<=":6,">=":6,in:6,instanceof:6,">>":7,"<<":7,">>>":7,"+":8,"-":8,"*":9,"/":9,"%":9,"**":10},Uy=function(e,t){return($(t)||Q(t))&&t.superClass===e};function Vy(e,t){return me(t)||De(t)||be(t)||we(t)}function Wy(e,t){return ze(t)||Je(t)||Qe(t)||$e(t)||Ye(t)}function Gy(e,t){return nt(t)||dt(t)||h(t)||_(t)||I(t)||je(t)&&fe(e)||d(t)&&e===t.test||Uy(e,t)}function Hy(e,t){return _(t,{object:e})||h(t,{callee:e})||I(t,{callee:e})||l(t,{operator:"**",left:e})||Uy(e,t)}function qy(e,t){return!!(dt(t)||nt(t)||d(t,{test:e})||je(t)||We(t)||pe(t)||et(t)||Ze(t))||Hy(e,t)}function Ky(e,t){for(var n=void 0===t?{}:t,r=n.considerArrow,i=void 0!==r&&r,a=n.considerDefaultExports,o=void 0!==a&&a,s=e.length-1,l=e[s],c=e[--s];s>0;){if(v(c,{expression:l})||pe(c)||o&&ee(c,{declaration:l})||i&&J(c,{body:l}))return!0;if(!(h(c,{callee:l})||j(c)&&c.expressions[0]===l||_(c,{object:l})||at(c,{test:l})||nt(c,{left:l})||u(c,{left:l})))return!1;l=c,c=e[--s]}return!1}function Xy(e){var t={};function n(e,n){var r=t[e];t[e]=r?function(e,t,i){var a=r(e,t,i);return null==a?n(e,t,i):a}:n}for(var r=0,i=Object.keys(e);r<i.length;r++){var a=i[r],o=qa[a];if(o){var s=o,u=Array.isArray(s),l=0;for(s=u?s:s[Symbol.iterator]();;){var c;if(u){if(l>=s.length)break;c=s[l++]}else{if((l=s.next()).done)break;c=l.value}n(c,e[a])}}else n(a,e[a])}return t}var zy=Xy(Object.freeze({__proto__:null,NullableTypeAnnotation:function(e,t){return me(t)},FunctionTypeAnnotation:function(e,t,n){return we(t)||be(t)||me(t)||Te(t)&&J(n[n.length-3])},UpdateExpression:function(e,t){return _(t,{object:e})||h(t,{callee:e})||I(t,{callee:e})||Uy(e,t)},ObjectExpression:function(e,t,n){return Ky(n,{considerArrow:!0})},DoExpression:function(e,t,n){return Ky(n)},Binary:function(e,t){if("**"===e.operator&&l(t,{operator:"**"}))return t.left===e;if(Uy(e,t))return!0;if((h(t)||I(t))&&t.callee===e||dt(t)||_(t)&&t.object===e||je(t))return!0;if(nt(t)){var n=t.operator,r=jy[n],i=e.operator,a=jy[i];if(r===a&&t.right===e&&!k(t)||r>a)return!0}return!1},UnionTypeAnnotation:Vy,IntersectionTypeAnnotation:Vy,TSAsExpression:function(){return!0},TSTypeAssertion:function(){return!0},TSUnionType:Wy,TSIntersectionType:Wy,BinaryExpression:function(e,t){return"in"===e.operator&&(q(t)||st(t))},SequenceExpression:function(e,t){return!(E(t)||W(t)||L(t)||x(t)&&t.test===e||K(t)&&t.test===e||b(t)&&t.right===e||U(t)&&t.discriminant===e||v(t)&&t.expression===e)},YieldExpression:Gy,AwaitExpression:Gy,ClassExpression:function(e,t,n){return Ky(n,{considerDefaultExports:!0})},UnaryLike:Hy,FunctionExpression:function(e,t,n){return Ky(n,{considerDefaultExports:!0})},ArrowFunctionExpression:function(e,t){return gt(t)||qy(e,t)},ConditionalExpression:qy,OptionalMemberExpression:function(e,t){return h(t)||_(t)},AssignmentExpression:function(e){return!!ue(e.left)||qy.apply(void 0,arguments)},NewExpression:function(e,t){return Uy(e,t)}})),Jy=Xy(Ly),Yy=Xy({VariableDeclaration:function(e){return e.declarations.map((function(e){return e.init}))},ArrayExpression:function(e){return e.elements},ObjectExpression:function(e){return e.properties}});function $y(e,t,n,r){var i=e[t.type];return i?i(t,n,r):null}function Qy(e,t,n){if(!e)return 0;v(e)&&(e=e.expression);var r=$y(Jy,e,t);if(!r){var i=$y(Yy,e,t);if(i)for(var a=0;a<i.length&&!(r=Qy(i[a],e,n));a++);}return"object"==typeof r&&null!==r&&r[n]||0}function Zy(e,t){return Qy(e,t,"before")}function ev(e,t){return Qy(e,t,"after")}function tv(e,t,n){return!!t&&(!(!I(t)||t.callee!==e||!function e(t){return!!h(t)||!!_(t)&&(e(t.object)||!t.computed&&e(t.property))}(e))||(!(!k(e)||"??"!==t.operator)||$y(zy,e,t,n)))}function nv(e){return function(t){if(this.word(e),t.delegate&&this.token("*"),t.argument){this.space();var n=this.startTerminatorless();this.print(t.argument,t),this.endTerminatorless(n)}}}var rv=nv("yield"),iv=nv("await");function av(e,t){var n=this.inForStatementInitCounter&&"in"===e.operator&&!tv(e,t);n&&this.token("("),this.print(e.left,e),this.space(),"in"===e.operator||"instanceof"===e.operator?this.word(e.operator):this.token(e.operator),this.space(),this.print(e.right,e),n&&this.token(")")}var ov=function(e){return function(t){this.word("for"),this.space(),"of"===e&&t.await&&(this.word("await"),this.space()),this.token("("),this.print(t.left,t),this.space(),this.word(e),this.space(),this.print(t.right,t),this.token(")"),this.printBlock(t)}},sv=ov("in"),uv=ov("of");function lv(e,t){return void 0===t&&(t="label"),function(n){this.word(e);var r=n[t];if(r){this.space();var i="label"==t,a=this.startTerminatorless(i);this.print(r,n),this.endTerminatorless(a)}this.semicolon()}}var cv=lv("continue"),pv=lv("return","argument"),hv=lv("break"),fv=lv("throw","argument");function dv(){if(this.token(","),this.newline(),this.endsWith("\n"))for(var e=0;e<4;e++)this.space(!0)}function mv(){if(this.token(","),this.newline(),this.endsWith("\n"))for(var e=0;e<6;e++)this.space(!0)}function yv(e,t){this.format.decoratorsBeforeExport&&(ee(t)||te(t))||this.printJoin(e.decorators,e),e.declare&&(this.word("declare"),this.space()),e.abstract&&(this.word("abstract"),this.space()),this.word("class"),e.id&&(this.space(),this.print(e.id,e)),this.print(e.typeParameters,e),e.superClass&&(this.space(),this.word("extends"),this.space(),this.print(e.superClass,e),this.print(e.superTypeParameters,e)),e.implements&&(this.space(),this.word("implements"),this.space(),this.printList(e.implements,e)),this.space(),this.print(e.body,e)}function vv(e){this._functionHead(e),this.space(),this.print(e.body,e)}function gv(e){this.word("export"),this.space(),"type"===e.exportKind&&(this.word("type"),this.space()),this.token("*"),this.space(),this.word("from"),this.space(),this.print(e.source,e),this.semicolon()}function bv(e){if(e.declaration){var t=e.declaration;this.print(t,e),it(t)||this.semicolon()}else{"type"===e.exportKind&&(this.word("type"),this.space());for(var n=e.specifiers.slice(0),r=!1;;){var i=n[0];if(!qe(i)&&!Ke(i))break;r=!0,this.print(n.shift(),e),n.length&&(this.token(","),this.space())}(n.length||!n.length&&!r)&&(this.token("{"),n.length&&(this.space(),this.printList(n,e),this.space()),this.token("}")),e.source&&(this.space(),this.word("from"),this.space(),this.print(e.source,e)),this.semicolon()}}var Ev=[],Av=[],Dv="undefined"!=typeof Uint8Array?Uint8Array:Array,Sv=!1;function xv(){Sv=!0;for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t=0,n=e.length;t<n;++t)Ev[t]=e[t],Av[e.charCodeAt(t)]=t;Av["-".charCodeAt(0)]=62,Av["_".charCodeAt(0)]=63}function Tv(e,t,n){for(var r,i,a=[],o=t;o<n;o+=3)r=(e[o]<<16)+(e[o+1]<<8)+e[o+2],a.push(Ev[(i=r)>>18&63]+Ev[i>>12&63]+Ev[i>>6&63]+Ev[63&i]);return a.join("")}function Cv(e){var t;Sv||xv();for(var n=e.length,r=n%3,i="",a=[],o=0,s=n-r;o<s;o+=16383)a.push(Tv(e,o,o+16383>s?s:o+16383));return 1===r?(t=e[n-1],i+=Ev[t>>2],i+=Ev[t<<4&63],i+="=="):2===r&&(t=(e[n-2]<<8)+e[n-1],i+=Ev[t>>10],i+=Ev[t>>4&63],i+=Ev[t<<2&63],i+="="),a.push(i),a.join("")}function wv(e,t,n,r,i){var a,o,s=8*i-r-1,u=(1<<s)-1,l=u>>1,c=-7,p=n?i-1:0,h=n?-1:1,f=e[t+p];for(p+=h,a=f&(1<<-c)-1,f>>=-c,c+=s;c>0;a=256*a+e[t+p],p+=h,c-=8);for(o=a&(1<<-c)-1,a>>=-c,c+=r;c>0;o=256*o+e[t+p],p+=h,c-=8);if(0===a)a=1-l;else{if(a===u)return o?NaN:1/0*(f?-1:1);o+=Math.pow(2,r),a-=l}return(f?-1:1)*o*Math.pow(2,a-r)}function Pv(e,t,n,r,i,a){var o,s,u,l=8*a-i-1,c=(1<<l)-1,p=c>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,f=r?0:a-1,d=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,o=c):(o=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-o))<1&&(o--,u*=2),(t+=o+p>=1?h/u:h*Math.pow(2,1-p))*u>=2&&(o++,u/=2),o+p>=c?(s=0,o=c):o+p>=1?(s=(t*u-1)*Math.pow(2,i),o+=p):(s=t*Math.pow(2,p-1)*Math.pow(2,i),o=0));i>=8;e[n+f]=255&s,f+=d,s/=256,i-=8);for(o=o<<i|s,l+=i;l>0;e[n+f]=255&o,f+=d,o/=256,l-=8);e[n+f-d]|=128*m}var Fv={}.toString,kv=Array.isArray||function(e){return"[object Array]"==Fv.call(e)};Bv.TYPED_ARRAY_SUPPORT=void 0===Nf.TYPED_ARRAY_SUPPORT||Nf.TYPED_ARRAY_SUPPORT;var _v=Iv();function Iv(){return Bv.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function Ov(e,t){if(Iv()<t)throw new RangeError("Invalid typed array length");return Bv.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=Bv.prototype:(null===e&&(e=new Bv(t)),e.length=t),e}function Bv(e,t,n){if(!(Bv.TYPED_ARRAY_SUPPORT||this instanceof Bv))return new Bv(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return Rv(this,e)}return Nv(this,e,t,n)}function Nv(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);Bv.TYPED_ARRAY_SUPPORT?(e=t).__proto__=Bv.prototype:e=Lv(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!Bv.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|Vv(t,n),i=(e=Ov(e,r)).write(t,n);i!==r&&(e=e.slice(0,i));return e}(e,t,n):function(e,t){if(Uv(t)){var n=0|jv(t.length);return 0===(e=Ov(e,n)).length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?Ov(e,0):Lv(e,t);if("Buffer"===t.type&&kv(t.data))return Lv(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function Mv(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function Rv(e,t){if(Mv(t),e=Ov(e,t<0?0:0|jv(t)),!Bv.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function Lv(e,t){var n=t.length<0?0:0|jv(t.length);e=Ov(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function jv(e){if(e>=Iv())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Iv().toString(16)+" bytes");return 0|e}function Uv(e){return!(null==e||!e._isBuffer)}function Vv(e,t){if(Uv(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return dg(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return mg(e).length;default:if(r)return dg(e).length;t=(""+t).toLowerCase(),r=!0}}function Wv(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return rg(this,t,n);case"utf8":case"utf-8":return Zv(this,t,n);case"ascii":return tg(this,t,n);case"latin1":case"binary":return ng(this,t,n);case"base64":return Qv(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ig(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function Gv(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function Hv(e,t,n,r,i){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=i?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(i)return-1;n=e.length-1}else if(n<0){if(!i)return-1;n=0}if("string"==typeof t&&(t=Bv.from(t,r)),Uv(t))return 0===t.length?-1:qv(e,t,n,r,i);if("number"==typeof t)return t&=255,Bv.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):qv(e,[t],n,r,i);throw new TypeError("val must be string, number or Buffer")}function qv(e,t,n,r,i){var a,o=1,s=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;o=2,s/=2,u/=2,n/=2}function l(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(i){var c=-1;for(a=n;a<s;a++)if(l(e,a)===l(t,-1===c?0:a-c)){if(-1===c&&(c=a),a-c+1===u)return c*o}else-1!==c&&(a-=a-c),c=-1}else for(n+u>s&&(n=s-u),a=n;a>=0;a--){for(var p=!0,h=0;h<u;h++)if(l(e,a+h)!==l(t,h)){p=!1;break}if(p)return a}return-1}function Kv(e,t,n,r){n=Number(n)||0;var i=e.length-n;r?(r=Number(r))>i&&(r=i):r=i;var a=t.length;if(a%2!=0)throw new TypeError("Invalid hex string");r>a/2&&(r=a/2);for(var o=0;o<r;++o){var s=parseInt(t.substr(2*o,2),16);if(isNaN(s))return o;e[n+o]=s}return o}function Xv(e,t,n,r){return yg(dg(t,e.length-n),e,n,r)}function zv(e,t,n,r){return yg(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function Jv(e,t,n,r){return zv(e,t,n,r)}function Yv(e,t,n,r){return yg(mg(t),e,n,r)}function $v(e,t,n,r){return yg(function(e,t){for(var n,r,i,a=[],o=0;o<e.length&&!((t-=2)<0);++o)n=e.charCodeAt(o),r=n>>8,i=n%256,a.push(i),a.push(r);return a}(t,e.length-n),e,n,r)}function Qv(e,t,n){return 0===t&&n===e.length?Cv(e):Cv(e.slice(t,n))}function Zv(e,t,n){n=Math.min(e.length,n);for(var r=[],i=t;i<n;){var a,o,s,u,l=e[i],c=null,p=l>239?4:l>223?3:l>191?2:1;if(i+p<=n)switch(p){case 1:l<128&&(c=l);break;case 2:128==(192&(a=e[i+1]))&&(u=(31&l)<<6|63&a)>127&&(c=u);break;case 3:a=e[i+1],o=e[i+2],128==(192&a)&&128==(192&o)&&(u=(15&l)<<12|(63&a)<<6|63&o)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:a=e[i+1],o=e[i+2],s=e[i+3],128==(192&a)&&128==(192&o)&&128==(192&s)&&(u=(15&l)<<18|(63&a)<<12|(63&o)<<6|63&s)>65535&&u<1114112&&(c=u)}null===c?(c=65533,p=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),i+=p}return function(e){var t=e.length;if(t<=eg)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=eg));return n}(r)}Bv.poolSize=8192,Bv._augment=function(e){return e.__proto__=Bv.prototype,e},Bv.from=function(e,t,n){return Nv(null,e,t,n)},Bv.TYPED_ARRAY_SUPPORT&&(Bv.prototype.__proto__=Uint8Array.prototype,Bv.__proto__=Uint8Array),Bv.alloc=function(e,t,n){return function(e,t,n,r){return Mv(t),t<=0?Ov(e,t):void 0!==n?"string"==typeof r?Ov(e,t).fill(n,r):Ov(e,t).fill(n):Ov(e,t)}(null,e,t,n)},Bv.allocUnsafe=function(e){return Rv(null,e)},Bv.allocUnsafeSlow=function(e){return Rv(null,e)},Bv.isBuffer=vg,Bv.compare=function(e,t){if(!Uv(e)||!Uv(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,i=0,a=Math.min(n,r);i<a;++i)if(e[i]!==t[i]){n=e[i],r=t[i];break}return n<r?-1:r<n?1:0},Bv.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Bv.concat=function(e,t){if(!kv(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Bv.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=Bv.allocUnsafe(t),i=0;for(n=0;n<e.length;++n){var a=e[n];if(!Uv(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(r,i),i+=a.length}return r},Bv.byteLength=Vv,Bv.prototype._isBuffer=!0,Bv.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)Gv(this,t,t+1);return this},Bv.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)Gv(this,t,t+3),Gv(this,t+1,t+2);return this},Bv.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)Gv(this,t,t+7),Gv(this,t+1,t+6),Gv(this,t+2,t+5),Gv(this,t+3,t+4);return this},Bv.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?Zv(this,0,e):Wv.apply(this,arguments)},Bv.prototype.equals=function(e){if(!Uv(e))throw new TypeError("Argument must be a Buffer");return this===e||0===Bv.compare(this,e)},Bv.prototype.inspect=function(){var e="";return this.length>0&&(e=this.toString("hex",0,50).match(/.{2}/g).join(" "),this.length>50&&(e+=" ... ")),"<Buffer "+e+">"},Bv.prototype.compare=function(e,t,n,r,i){if(!Uv(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===i&&(i=this.length),t<0||n>e.length||r<0||i>this.length)throw new RangeError("out of range index");if(r>=i&&t>=n)return 0;if(r>=i)return-1;if(t>=n)return 1;if(this===e)return 0;for(var a=(i>>>=0)-(r>>>=0),o=(n>>>=0)-(t>>>=0),s=Math.min(a,o),u=this.slice(r,i),l=e.slice(t,n),c=0;c<s;++c)if(u[c]!==l[c]){a=u[c],o=l[c];break}return a<o?-1:o<a?1:0},Bv.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},Bv.prototype.indexOf=function(e,t,n){return Hv(this,e,t,n,!0)},Bv.prototype.lastIndexOf=function(e,t,n){return Hv(this,e,t,n,!1)},Bv.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var i=this.length-t;if((void 0===n||n>i)&&(n=i),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var a=!1;;)switch(r){case"hex":return Kv(this,e,t,n);case"utf8":case"utf-8":return Xv(this,e,t,n);case"ascii":return zv(this,e,t,n);case"latin1":case"binary":return Jv(this,e,t,n);case"base64":return Yv(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return $v(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},Bv.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var eg=4096;function tg(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(127&e[i]);return r}function ng(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(e[i]);return r}function rg(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var i="",a=t;a<n;++a)i+=fg(e[a]);return i}function ig(e,t,n){for(var r=e.slice(t,n),i="",a=0;a<r.length;a+=2)i+=String.fromCharCode(r[a]+256*r[a+1]);return i}function ag(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function og(e,t,n,r,i,a){if(!Uv(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<a)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function sg(e,t,n,r){t<0&&(t=65535+t+1);for(var i=0,a=Math.min(e.length-n,2);i<a;++i)e[n+i]=(t&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function ug(e,t,n,r){t<0&&(t=4294967295+t+1);for(var i=0,a=Math.min(e.length-n,4);i<a;++i)e[n+i]=t>>>8*(r?i:3-i)&255}function lg(e,t,n,r,i,a){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function cg(e,t,n,r,i){return i||lg(e,0,n,4),Pv(e,t,n,r,23,4),n+4}function pg(e,t,n,r,i){return i||lg(e,0,n,8),Pv(e,t,n,r,52,8),n+8}Bv.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),Bv.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=Bv.prototype;else{var i=t-e;n=new Bv(i,void 0);for(var a=0;a<i;++a)n[a]=this[a+e]}return n},Bv.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||ag(e,t,this.length);for(var r=this[e],i=1,a=0;++a<t&&(i*=256);)r+=this[e+a]*i;return r},Bv.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||ag(e,t,this.length);for(var r=this[e+--t],i=1;t>0&&(i*=256);)r+=this[e+--t]*i;return r},Bv.prototype.readUInt8=function(e,t){return t||ag(e,1,this.length),this[e]},Bv.prototype.readUInt16LE=function(e,t){return t||ag(e,2,this.length),this[e]|this[e+1]<<8},Bv.prototype.readUInt16BE=function(e,t){return t||ag(e,2,this.length),this[e]<<8|this[e+1]},Bv.prototype.readUInt32LE=function(e,t){return t||ag(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Bv.prototype.readUInt32BE=function(e,t){return t||ag(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Bv.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||ag(e,t,this.length);for(var r=this[e],i=1,a=0;++a<t&&(i*=256);)r+=this[e+a]*i;return r>=(i*=128)&&(r-=Math.pow(2,8*t)),r},Bv.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||ag(e,t,this.length);for(var r=t,i=1,a=this[e+--r];r>0&&(i*=256);)a+=this[e+--r]*i;return a>=(i*=128)&&(a-=Math.pow(2,8*t)),a},Bv.prototype.readInt8=function(e,t){return t||ag(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Bv.prototype.readInt16LE=function(e,t){t||ag(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},Bv.prototype.readInt16BE=function(e,t){t||ag(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},Bv.prototype.readInt32LE=function(e,t){return t||ag(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Bv.prototype.readInt32BE=function(e,t){return t||ag(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Bv.prototype.readFloatLE=function(e,t){return t||ag(e,4,this.length),wv(this,e,!0,23,4)},Bv.prototype.readFloatBE=function(e,t){return t||ag(e,4,this.length),wv(this,e,!1,23,4)},Bv.prototype.readDoubleLE=function(e,t){return t||ag(e,8,this.length),wv(this,e,!0,52,8)},Bv.prototype.readDoubleBE=function(e,t){return t||ag(e,8,this.length),wv(this,e,!1,52,8)},Bv.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||og(this,e,t,n,Math.pow(2,8*n)-1,0);var i=1,a=0;for(this[t]=255&e;++a<n&&(i*=256);)this[t+a]=e/i&255;return t+n},Bv.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||og(this,e,t,n,Math.pow(2,8*n)-1,0);var i=n-1,a=1;for(this[t+i]=255&e;--i>=0&&(a*=256);)this[t+i]=e/a&255;return t+n},Bv.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||og(this,e,t,1,255,0),Bv.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},Bv.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||og(this,e,t,2,65535,0),Bv.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):sg(this,e,t,!0),t+2},Bv.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||og(this,e,t,2,65535,0),Bv.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):sg(this,e,t,!1),t+2},Bv.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||og(this,e,t,4,4294967295,0),Bv.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):ug(this,e,t,!0),t+4},Bv.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||og(this,e,t,4,4294967295,0),Bv.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):ug(this,e,t,!1),t+4},Bv.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var i=Math.pow(2,8*n-1);og(this,e,t,n,i-1,-i)}var a=0,o=1,s=0;for(this[t]=255&e;++a<n&&(o*=256);)e<0&&0===s&&0!==this[t+a-1]&&(s=1),this[t+a]=(e/o>>0)-s&255;return t+n},Bv.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var i=Math.pow(2,8*n-1);og(this,e,t,n,i-1,-i)}var a=n-1,o=1,s=0;for(this[t+a]=255&e;--a>=0&&(o*=256);)e<0&&0===s&&0!==this[t+a+1]&&(s=1),this[t+a]=(e/o>>0)-s&255;return t+n},Bv.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||og(this,e,t,1,127,-128),Bv.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},Bv.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||og(this,e,t,2,32767,-32768),Bv.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):sg(this,e,t,!0),t+2},Bv.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||og(this,e,t,2,32767,-32768),Bv.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):sg(this,e,t,!1),t+2},Bv.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||og(this,e,t,4,2147483647,-2147483648),Bv.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):ug(this,e,t,!0),t+4},Bv.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||og(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),Bv.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):ug(this,e,t,!1),t+4},Bv.prototype.writeFloatLE=function(e,t,n){return cg(this,e,t,!0,n)},Bv.prototype.writeFloatBE=function(e,t,n){return cg(this,e,t,!1,n)},Bv.prototype.writeDoubleLE=function(e,t,n){return pg(this,e,t,!0,n)},Bv.prototype.writeDoubleBE=function(e,t,n){return pg(this,e,t,!1,n)},Bv.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var i,a=r-n;if(this===e&&n<t&&t<r)for(i=a-1;i>=0;--i)e[i+t]=this[i+n];else if(a<1e3||!Bv.TYPED_ARRAY_SUPPORT)for(i=0;i<a;++i)e[i+t]=this[i+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+a),t);return a},Bv.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var i=e.charCodeAt(0);i<256&&(e=i)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!Bv.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var a;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(a=t;a<n;++a)this[a]=e;else{var o=Uv(e)?e:dg(new Bv(e,r).toString()),s=o.length;for(a=0;a<n-t;++a)this[a+t]=o[a%s]}return this};var hg=/[^+\/0-9A-Za-z-_]/g;function fg(e){return e<16?"0"+e.toString(16):e.toString(16)}function dg(e,t){var n;t=t||1/0;for(var r=e.length,i=null,a=[],o=0;o<r;++o){if((n=e.charCodeAt(o))>55295&&n<57344){if(!i){if(n>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(o+1===r){(t-=3)>-1&&a.push(239,191,189);continue}i=n;continue}if(n<56320){(t-=3)>-1&&a.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(t-=3)>-1&&a.push(239,191,189);if(i=null,n<128){if((t-=1)<0)break;a.push(n)}else if(n<2048){if((t-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function mg(e){return function(e){var t,n,r,i,a,o;Sv||xv();var s=e.length;if(s%4>0)throw new Error("Invalid string. Length must be a multiple of 4");a="="===e[s-2]?2:"="===e[s-1]?1:0,o=new Dv(3*s/4-a),r=a>0?s-4:s;var u=0;for(t=0,n=0;t<r;t+=4,n+=3)i=Av[e.charCodeAt(t)]<<18|Av[e.charCodeAt(t+1)]<<12|Av[e.charCodeAt(t+2)]<<6|Av[e.charCodeAt(t+3)],o[u++]=i>>16&255,o[u++]=i>>8&255,o[u++]=255&i;return 2===a?(i=Av[e.charCodeAt(t)]<<2|Av[e.charCodeAt(t+1)]>>4,o[u++]=255&i):1===a&&(i=Av[e.charCodeAt(t)]<<10|Av[e.charCodeAt(t+1)]<<4|Av[e.charCodeAt(t+2)]>>2,o[u++]=i>>8&255,o[u++]=255&i),o}(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(hg,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function yg(e,t,n,r){for(var i=0;i<r&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}function vg(e){return null!=e&&(!!e._isBuffer||gg(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&gg(e.slice(0,0))}(e))}function gg(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}var bg=Object.freeze({__proto__:null,INSPECT_MAX_BYTES:50,kMaxLength:_v,Buffer:Bv,SlowBuffer:function(e){return+e!=e&&(e=0),Bv.alloc(+e)},isBuffer:vg}),Eg={},Ag=Eg.hasOwnProperty,Dg=function(e,t){for(var n in e)Ag.call(e,n)&&t(n,e[n])},Sg=Eg.toString,xg=Array.isArray,Tg=vg,Cg={'"':'\\"',"'":"\\'","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"},wg=/["'\\\b\f\n\r\t]/,Pg=/[0-9]/,Fg=/[ !#-&\(-\[\]-_a-~]/,kg=function e(t,n){var r,i,a=function(){f=h,++n.indentLevel,h=n.indent.repeat(n.indentLevel)},o={escapeEverything:!1,minimal:!1,isScriptContext:!1,quotes:"single",wrap:!1,es6:!1,json:!1,compact:!0,lowercaseHex:!1,numbers:"decimal",indent:"\t",indentLevel:0,__inline1__:!1,__inline2__:!1},s=n&&n.json;s&&(o.quotes="double",o.wrap=!0),r=o,"single"!=(n=(i=n)?(Dg(i,(function(e,t){r[e]=t})),r):r).quotes&&"double"!=n.quotes&&"backtick"!=n.quotes&&(n.quotes="single");var u,l="double"==n.quotes?'"':"backtick"==n.quotes?"`":"'",c=n.compact,p=n.lowercaseHex,h=n.indent.repeat(n.indentLevel),f="",d=n.__inline1__,m=n.__inline2__,y=c?"":"\n",v=!0,g="binary"==n.numbers,b="octal"==n.numbers,E="decimal"==n.numbers,A="hexadecimal"==n.numbers;if(s&&t&&"function"==typeof t.toJSON&&(t=t.toJSON()),!function(e){return"string"==typeof e||"[object String]"==Sg.call(e)}(t)){if(function(e){return"[object Map]"==Sg.call(e)}(t))return 0==t.size?"new Map()":(c||(n.__inline1__=!0,n.__inline2__=!1),"new Map("+e(Array.from(t),n)+")");if(function(e){return"[object Set]"==Sg.call(e)}(t))return 0==t.size?"new Set()":"new Set("+e(Array.from(t),n)+")";if(Tg(t))return 0==t.length?"Buffer.from([])":"Buffer.from("+e(Array.from(t),n)+")";if(xg(t))return u=[],n.wrap=!0,d&&(n.__inline1__=!1,n.__inline2__=!0),m||a(),function(e,t){for(var n=e.length,r=-1;++r<n;)t(e[r])}(t,(function(t){v=!1,m&&(n.__inline2__=!1),u.push((c||m?"":h)+e(t,n))})),v?"[]":m?"["+u.join(", ")+"]":"["+y+u.join(","+y)+y+(c?"":f)+"]";if(!function(e){return"number"==typeof e||"[object Number]"==Sg.call(e)}(t))return function(e){return"[object Object]"==Sg.call(e)}(t)?(u=[],n.wrap=!0,a(),Dg(t,(function(t,r){v=!1,u.push((c?"":h)+e(t,n)+":"+(c?"":" ")+e(r,n))})),v?"{}":"{"+y+u.join(","+y)+y+(c?"":f)+"}"):s?JSON.stringify(t)||"null":String(t);if(s)return JSON.stringify(t);if(E)return String(t);if(A){var D=t.toString(16);return p||(D=D.toUpperCase()),"0x"+D}if(g)return"0b"+t.toString(2);if(b)return"0o"+t.toString(8)}var S=t,x=-1,T=S.length;for(u="";++x<T;){var C=S.charAt(x);if(n.es6){var w=S.charCodeAt(x);if(w>=55296&&w<=56319&&T>x+1){var P=S.charCodeAt(x+1);if(P>=56320&&P<=57343){var F=(1024*(w-55296)+P-56320+65536).toString(16);p||(F=F.toUpperCase()),u+="\\u{"+F+"}",++x;continue}}}if(!n.escapeEverything){if(Fg.test(C)){u+=C;continue}if('"'==C){u+=l==C?'\\"':C;continue}if("`"==C){u+=l==C?"\\`":C;continue}if("'"==C){u+=l==C?"\\'":C;continue}}if("\0"!=C||s||Pg.test(S.charAt(x+1)))if(wg.test(C))u+=Cg[C];else{var k=C.charCodeAt(0);if(n.minimal&&8232!=k&&8233!=k)u+=C;else{var _=k.toString(16);p||(_=_.toUpperCase());var I=_.length>2||s,O="\\"+(I?"u":"x")+("0000"+_).slice(I?-4:-2);u+=O}}else u+="\\0"}return n.wrap&&(u=l+u+l),"`"==l&&(u=u.replace(/\$\{/g,"\\${")),n.isScriptContext?u.replace(/<\/(script|style)/gi,"<\\/$1").replace(/<!--/g,s?"\\u003C!--":"\\x3C!--"):u};kg.version="2.5.2";var _g=kg;function Ig(e){this.token("..."),this.print(e.argument,e)}function Og(e){var t=e.properties;this.token("{"),this.printInnerComments(e),t.length&&(this.space(),this.printList(t,e,{indent:!0,statement:!0}),this.space()),this.token("}")}function Bg(e){var t=e.elements,n=t.length;this.token("["),this.printInnerComments(e);for(var r=0;r<t.length;r++){var i=t[r];i?(r>0&&this.space(),this.print(i,e),r<n-1&&this.token(",")):this.token(",")}this.token("]")}function Ng(e){var t=this.getPossibleRaw(e),n=e.value+"";null==t?this.number(n):this.format.minified?this.number(t.length<n.length?t:n):this.number(t)}function Mg(e){var t=this.getPossibleRaw(e);if(this.format.minified||null==t){var n=this.format.jsescOption;this.format.jsonCompatibleStrings&&(n.json=!0);var r=_g(e.value,n);return this.token(r)}this.token(t)}function Rg(e,t,n){n&&(e.space(),e.word("of"),e.space(),e.word(t)),e.space()}function Lg(e,t){var n=t.members;e.token("{"),e.indent(),e.newline();var r=n,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}var s=o;e.print(s,t),e.newline()}e.dedent(),e.token("}")}function jg(e,t){var n=t.id,r=t.init;e.print(n,t),e.space(),e.token("="),e.space(),e.print(r,t),e.token(",")}function Ug(e){if(e.declaration){var t=e.declaration;this.print(t,e),it(t)||this.semicolon()}else this.token("{"),e.specifiers.length&&(this.space(),this.printList(e.specifiers,e),this.space()),this.token("}"),e.source&&(this.space(),this.word("from"),this.space(),this.print(e.source,e)),this.semicolon()}function Vg(e){this.print(e.id,e),this.print(e.typeParameters,e)}function Wg(){this.space(),this.token("&"),this.space()}function Gg(e){this.token("<"),this.printList(e.params,e,{}),this.token(">")}function Hg(){this.space(),this.token("|"),this.space()}var qg=/(?:^|[^\\])(?:\\\\)*'/,Kg=/(?:^|[^\\])(?:\\\\)*"/;function Xg(){this.space()}function zg(e){this.token("<"),this.printList(e.params,e,{}),this.token(">")}function Jg(e,t){!0!==t&&e.token(t)}var Yg=Object.freeze({__proto__:null,TaggedTemplateExpression:function(e){this.print(e.tag,e),this.print(e.typeParameters,e),this.print(e.quasi,e)},TemplateElement:function(e,t){var n=t.quasis[0]===e,r=t.quasis[t.quasis.length-1]===e,i=(n?"`":"}")+e.value.raw+(r?"`":"${");this.token(i)},TemplateLiteral:function(e){for(var t=e.quasis,n=0;n<t.length;n++)this.print(t[n],e),n+1<t.length&&this.print(e.expressions[n],e)},UnaryExpression:function(e){"void"===e.operator||"delete"===e.operator||"typeof"===e.operator||"throw"===e.operator?(this.word(e.operator),this.space()):this.token(e.operator),this.print(e.argument,e)},DoExpression:function(e){this.word("do"),this.space(),this.print(e.body,e)},ParenthesizedExpression:function(e){this.token("("),this.print(e.expression,e),this.token(")")},UpdateExpression:function(e){e.prefix?(this.token(e.operator),this.print(e.argument,e)):(this.startTerminatorless(!0),this.print(e.argument,e),this.endTerminatorless(),this.token(e.operator))},ConditionalExpression:function(e){this.print(e.test,e),this.space(),this.token("?"),this.space(),this.print(e.consequent,e),this.space(),this.token(":"),this.space(),this.print(e.alternate,e)},NewExpression:function(e,t){this.word("new"),this.space(),this.print(e.callee,e),(!this.format.minified||0!==e.arguments.length||e.optional||h(t,{callee:e})||_(t)||I(t))&&(this.print(e.typeArguments,e),this.print(e.typeParameters,e),e.optional&&this.token("?."),this.token("("),this.printList(e.arguments,e),this.token(")"))},SequenceExpression:function(e){this.printList(e.expressions,e)},ThisExpression:function(){this.word("this")},Super:function(){this.word("super")},Decorator:function(e){this.token("@"),this.print(e.expression,e),this.newline()},OptionalMemberExpression:function(e){if(this.print(e.object,e),!e.computed&&_(e.property))throw new TypeError("Got a MemberExpression for MemberExpression property");var t=e.computed;ht(e.property)&&"number"==typeof e.property.value&&(t=!0),e.optional&&this.token("?."),t?(this.token("["),this.print(e.property,e),this.token("]")):(e.optional||this.token("."),this.print(e.property,e))},OptionalCallExpression:function(e){this.print(e.callee,e),this.print(e.typeArguments,e),this.print(e.typeParameters,e),e.optional&&this.token("?."),this.token("("),this.printList(e.arguments,e),this.token(")")},CallExpression:function(e){this.print(e.callee,e),this.print(e.typeArguments,e),this.print(e.typeParameters,e),this.token("("),this.printList(e.arguments,e),this.token(")")},Import:function(){this.word("import")},YieldExpression:rv,AwaitExpression:iv,EmptyStatement:function(){this.semicolon(!0)},ExpressionStatement:function(e){this.print(e.expression,e),this.semicolon()},AssignmentPattern:function(e){this.print(e.left,e),e.left.optional&&this.token("?"),this.print(e.left.typeAnnotation,e),this.space(),this.token("="),this.space(),this.print(e.right,e)},AssignmentExpression:av,BindExpression:function(e){this.print(e.object,e),this.token("::"),this.print(e.callee,e)},BinaryExpression:av,LogicalExpression:av,MemberExpression:function(e){if(this.print(e.object,e),!e.computed&&_(e.property))throw new TypeError("Got a MemberExpression for MemberExpression property");var t=e.computed;ht(e.property)&&"number"==typeof e.property.value&&(t=!0),t?(this.token("["),this.print(e.property,e),this.token("]")):(this.token("."),this.print(e.property,e))},MetaProperty:function(e){this.print(e.meta,e),this.token("."),this.print(e.property,e)},PrivateName:function(e){this.token("#"),this.print(e.id,e)},V8IntrinsicIdentifier:function(e){this.token("%"),this.word(e.name)},WithStatement:function(e){this.word("with"),this.space(),this.token("("),this.print(e.object,e),this.token(")"),this.printBlock(e)},IfStatement:function(e){this.word("if"),this.space(),this.token("("),this.print(e.test,e),this.token(")"),this.space();var t=e.alternate&&x(function e(t){return it(t.body)?e(t.body):t}(e.consequent));t&&(this.token("{"),this.newline(),this.indent()),this.printAndIndentOnComments(e.consequent,e),t&&(this.dedent(),this.newline(),this.token("}")),e.alternate&&(this.endsWith("}")&&this.space(),this.word("else"),this.space(),this.printAndIndentOnComments(e.alternate,e))},ForStatement:function(e){this.word("for"),this.space(),this.token("("),this.inForStatementInitCounter++,this.print(e.init,e),this.inForStatementInitCounter--,this.token(";"),e.test&&(this.space(),this.print(e.test,e)),this.token(";"),e.update&&(this.space(),this.print(e.update,e)),this.token(")"),this.printBlock(e)},WhileStatement:function(e){this.word("while"),this.space(),this.token("("),this.print(e.test,e),this.token(")"),this.printBlock(e)},ForInStatement:sv,ForOfStatement:uv,DoWhileStatement:function(e){this.word("do"),this.space(),this.print(e.body,e),this.space(),this.word("while"),this.space(),this.token("("),this.print(e.test,e),this.token(")"),this.semicolon()},ContinueStatement:cv,ReturnStatement:pv,BreakStatement:hv,ThrowStatement:fv,LabeledStatement:function(e){this.print(e.label,e),this.token(":"),this.space(),this.print(e.body,e)},TryStatement:function(e){this.word("try"),this.space(),this.print(e.block,e),this.space(),e.handlers?this.print(e.handlers[0],e):this.print(e.handler,e),e.finalizer&&(this.space(),this.word("finally"),this.space(),this.print(e.finalizer,e))},CatchClause:function(e){this.word("catch"),this.space(),e.param&&(this.token("("),this.print(e.param,e),this.token(")"),this.space()),this.print(e.body,e)},SwitchStatement:function(e){this.word("switch"),this.space(),this.token("("),this.print(e.discriminant,e),this.token(")"),this.space(),this.token("{"),this.printSequence(e.cases,e,{indent:!0,addNewlines:function(t,n){if(!t&&e.cases[e.cases.length-1]===n)return-1}}),this.token("}")},SwitchCase:function(e){e.test?(this.word("case"),this.space(),this.print(e.test,e),this.token(":")):(this.word("default"),this.token(":")),e.consequent.length&&(this.newline(),this.printSequence(e.consequent,e,{indent:!0}))},DebuggerStatement:function(){this.word("debugger"),this.semicolon()},VariableDeclaration:function(e,t){e.declare&&(this.word("declare"),this.space()),this.word(e.kind),this.space();var n,r=!1;if(!st(t))for(var i=0,a=e.declarations;i<a.length;i++){a[i].init&&(r=!0)}r&&(n="const"===e.kind?mv:dv),this.printList(e.declarations,e,{separator:n}),(!st(t)||t.left!==e&&t.init!==e)&&this.semicolon()},VariableDeclarator:function(e){this.print(e.id,e),e.definite&&this.token("!"),this.print(e.id.typeAnnotation,e),e.init&&(this.space(),this.token("="),this.space(),this.print(e.init,e))},ClassDeclaration:yv,ClassExpression:yv,ClassBody:function(e){this.token("{"),this.printInnerComments(e),0===e.body.length?this.token("}"):(this.newline(),this.indent(),this.printSequence(e.body,e),this.dedent(),this.endsWith("\n")||this.newline(),this.rightBrace())},ClassProperty:function(e){this.printJoin(e.decorators,e),this.tsPrintClassMemberModifiers(e,!0),e.computed?(this.token("["),this.print(e.key,e),this.token("]")):(this._variance(e),this.print(e.key,e)),e.optional&&this.token("?"),e.definite&&this.token("!"),this.print(e.typeAnnotation,e),e.value&&(this.space(),this.token("="),this.space(),this.print(e.value,e)),this.semicolon()},ClassPrivateProperty:function(e){e.static&&(this.word("static"),this.space()),this.print(e.key,e),this.print(e.typeAnnotation,e),e.value&&(this.space(),this.token("="),this.space(),this.print(e.value,e)),this.semicolon()},ClassMethod:function(e){this._classMethodHead(e),this.space(),this.print(e.body,e)},ClassPrivateMethod:function(e){this._classMethodHead(e),this.space(),this.print(e.body,e)},_classMethodHead:function(e){this.printJoin(e.decorators,e),this.tsPrintClassMemberModifiers(e,!1),this._methodHead(e)},_params:function(e){this.print(e.typeParameters,e),this.token("("),this._parameters(e.params,e),this.token(")"),this.print(e.returnType,e)},_parameters:function(e,t){for(var n=0;n<e.length;n++)this._param(e[n],t),n<e.length-1&&(this.token(","),this.space())},_param:function(e,t){this.printJoin(e.decorators,e),this.print(e,t),e.optional&&this.token("?"),this.print(e.typeAnnotation,e)},_methodHead:function(e){var t=e.kind,n=e.key;"get"!==t&&"set"!==t||(this.word(t),this.space()),e.async&&(this.word("async"),this.space()),"method"!==t&&"init"!==t||e.generator&&this.token("*"),e.computed?(this.token("["),this.print(n,e),this.token("]")):this.print(n,e),e.optional&&this.token("?"),this._params(e)},_predicate:function(e){e.predicate&&(e.returnType||this.token(":"),this.space(),this.print(e.predicate,e))},_functionHead:function(e){e.async&&(this.word("async"),this.space()),this.word("function"),e.generator&&this.token("*"),this.space(),e.id&&this.print(e.id,e),this._params(e),this._predicate(e)},FunctionExpression:vv,FunctionDeclaration:vv,ArrowFunctionExpression:function(e){e.async&&(this.word("async"),this.space());var t=e.params[0];1===e.params.length&&S(t)&&!function(e,t){return e.typeParameters||e.returnType||t.typeAnnotation||t.optional||t.trailingComments}(e,t)?this.format.retainLines&&e.loc&&e.body.loc&&e.loc.start.line<e.body.loc.start.line?(this.token("("),t.loc&&t.loc.start.line>e.loc.start.line?(this.indent(),this.print(t,e),this.dedent(),this._catchUp("start",e.body.loc)):this.print(t,e),this.token(")")):this.print(t,e):this._params(e),this._predicate(e),this.space(),this.token("=>"),this.space(),this.print(e.body,e)},ImportSpecifier:function(e){"type"!==e.importKind&&"typeof"!==e.importKind||(this.word(e.importKind),this.space()),this.print(e.imported,e),e.local&&e.local.name!==e.imported.name&&(this.space(),this.word("as"),this.space(),this.print(e.local,e))},ImportDefaultSpecifier:function(e){this.print(e.local,e)},ExportDefaultSpecifier:function(e){this.print(e.exported,e)},ExportSpecifier:function(e){this.print(e.local,e),e.exported&&e.local.name!==e.exported.name&&(this.space(),this.word("as"),this.space(),this.print(e.exported,e))},ExportNamespaceSpecifier:function(e){this.token("*"),this.space(),this.word("as"),this.space(),this.print(e.exported,e)},ExportAllDeclaration:gv,ExportNamedDeclaration:function(e){this.format.decoratorsBeforeExport&&$(e.declaration)&&this.printJoin(e.declaration.decorators,e),this.word("export"),this.space(),bv.apply(this,arguments)},ExportDefaultDeclaration:function(e){this.format.decoratorsBeforeExport&&$(e.declaration)&&this.printJoin(e.declaration.decorators,e),this.word("export"),this.space(),this.word("default"),this.space(),bv.apply(this,arguments)},ImportDeclaration:function(e){this.word("import"),this.space(),"type"!==e.importKind&&"typeof"!==e.importKind||(this.word(e.importKind),this.space());var t=e.specifiers.slice(0);if(t&&t.length){for(;;){var n=t[0];if(!ie(n)&&!ae(n))break;this.print(t.shift(),e),t.length&&(this.token(","),this.space())}t.length&&(this.token("{"),this.space(),this.printList(t,e),this.space(),this.token("}")),this.space(),this.word("from"),this.space()}this.print(e.source,e),this.semicolon()},ImportNamespaceSpecifier:function(e){this.token("*"),this.space(),this.word("as"),this.space(),this.print(e.local,e)},Identifier:function(e){var t=this;this.exactSource(e.loc,(function(){t.word(e.name)}))},ArgumentPlaceholder:function(){this.token("?")},RestElement:Ig,SpreadElement:Ig,ObjectExpression:Og,ObjectPattern:Og,ObjectMethod:function(e){this.printJoin(e.decorators,e),this._methodHead(e),this.space(),this.print(e.body,e)},ObjectProperty:function(e){if(this.printJoin(e.decorators,e),e.computed)this.token("["),this.print(e.key,e),this.token("]");else{if(X(e.value)&&S(e.key)&&e.key.name===e.value.left.name)return void this.print(e.value,e);if(this.print(e.key,e),e.shorthand&&S(e.key)&&S(e.value)&&e.key.name===e.value.name)return}this.token(":"),this.space(),this.print(e.value,e)},ArrayExpression:Bg,ArrayPattern:Bg,RegExpLiteral:function(e){this.word("/"+e.pattern+"/"+e.flags)},BooleanLiteral:function(e){this.word(e.value?"true":"false")},NullLiteral:function(){this.word("null")},NumericLiteral:Ng,StringLiteral:Mg,BigIntLiteral:function(e){var t=this.getPossibleRaw(e);this.format.minified||null==t?this.token(e.value):this.token(t)},PipelineTopicExpression:function(e){this.print(e.expression,e)},PipelineBareFunction:function(e){this.print(e.callee,e)},PipelinePrimaryTopicReference:function(){this.token("#")},AnyTypeAnnotation:function(){this.word("any")},ArrayTypeAnnotation:function(e){this.print(e.elementType,e),this.token("["),this.token("]")},BooleanTypeAnnotation:function(){this.word("boolean")},BooleanLiteralTypeAnnotation:function(e){this.word(e.value?"true":"false")},NullLiteralTypeAnnotation:function(){this.word("null")},DeclareClass:function(e,t){ve(t)||(this.word("declare"),this.space()),this.word("class"),this.space(),this._interfaceish(e)},DeclareFunction:function(e,t){ve(t)||(this.word("declare"),this.space()),this.word("function"),this.space(),this.print(e.id,e),this.print(e.id.typeAnnotation.typeAnnotation,e),e.predicate&&(this.space(),this.print(e.predicate,e)),this.semicolon()},InferredPredicate:function(){this.token("%"),this.word("checks")},DeclaredPredicate:function(e){this.token("%"),this.word("checks"),this.token("("),this.print(e.value,e),this.token(")")},DeclareInterface:function(e){this.word("declare"),this.space(),this.InterfaceDeclaration(e)},DeclareModule:function(e){this.word("declare"),this.space(),this.word("module"),this.space(),this.print(e.id,e),this.space(),this.print(e.body,e)},DeclareModuleExports:function(e){this.word("declare"),this.space(),this.word("module"),this.token("."),this.word("exports"),this.print(e.typeAnnotation,e)},DeclareTypeAlias:function(e){this.word("declare"),this.space(),this.TypeAlias(e)},DeclareOpaqueType:function(e,t){ve(t)||(this.word("declare"),this.space()),this.OpaqueType(e)},DeclareVariable:function(e,t){ve(t)||(this.word("declare"),this.space()),this.word("var"),this.space(),this.print(e.id,e),this.print(e.id.typeAnnotation,e),this.semicolon()},DeclareExportDeclaration:function(e){this.word("declare"),this.space(),this.word("export"),this.space(),e.default&&(this.word("default"),this.space()),Ug.apply(this,arguments)},DeclareExportAllDeclaration:function(){this.word("declare"),this.space(),gv.apply(this,arguments)},EnumDeclaration:function(e){var t=e.id,n=e.body;this.word("enum"),this.space(),this.print(t,e),this.print(n,e)},EnumBooleanBody:function(e){Rg(this,"boolean",e.explicitType),Lg(this,e)},EnumNumberBody:function(e){Rg(this,"number",e.explicitType),Lg(this,e)},EnumStringBody:function(e){Rg(this,"string",e.explicitType),Lg(this,e)},EnumSymbolBody:function(e){Rg(this,"symbol",!0),Lg(this,e)},EnumDefaultedMember:function(e){var t=e.id;this.print(t,e),this.token(",")},EnumBooleanMember:function(e){jg(this,e)},EnumNumberMember:function(e){jg(this,e)},EnumStringMember:function(e){jg(this,e)},ExistsTypeAnnotation:function(){this.token("*")},FunctionTypeAnnotation:function(e,t){this.print(e.typeParameters,e),this.token("("),this.printList(e.params,e),e.rest&&(e.params.length&&(this.token(","),this.space()),this.token("..."),this.print(e.rest,e)),this.token(")"),"ObjectTypeCallProperty"===t.type||"DeclareFunction"===t.type||"ObjectTypeProperty"===t.type&&t.method?this.token(":"):(this.space(),this.token("=>")),this.space(),this.print(e.returnType,e)},FunctionTypeParam:function(e){this.print(e.name,e),e.optional&&this.token("?"),e.name&&(this.token(":"),this.space()),this.print(e.typeAnnotation,e)},InterfaceExtends:Vg,ClassImplements:Vg,GenericTypeAnnotation:Vg,_interfaceish:function(e){this.print(e.id,e),this.print(e.typeParameters,e),e.extends.length&&(this.space(),this.word("extends"),this.space(),this.printList(e.extends,e)),e.mixins&&e.mixins.length&&(this.space(),this.word("mixins"),this.space(),this.printList(e.mixins,e)),e.implements&&e.implements.length&&(this.space(),this.word("implements"),this.space(),this.printList(e.implements,e)),this.space(),this.print(e.body,e)},_variance:function(e){e.variance&&("plus"===e.variance.kind?this.token("+"):"minus"===e.variance.kind&&this.token("-"))},InterfaceDeclaration:function(e){this.word("interface"),this.space(),this._interfaceish(e)},InterfaceTypeAnnotation:function(e){this.word("interface"),e.extends&&e.extends.length&&(this.space(),this.word("extends"),this.space(),this.printList(e.extends,e)),this.space(),this.print(e.body,e)},IntersectionTypeAnnotation:function(e){this.printJoin(e.types,e,{separator:Wg})},MixedTypeAnnotation:function(){this.word("mixed")},EmptyTypeAnnotation:function(){this.word("empty")},NullableTypeAnnotation:function(e){this.token("?"),this.print(e.typeAnnotation,e)},NumberTypeAnnotation:function(){this.word("number")},StringTypeAnnotation:function(){this.word("string")},ThisTypeAnnotation:function(){this.word("this")},TupleTypeAnnotation:function(e){this.token("["),this.printList(e.types,e),this.token("]")},TypeofTypeAnnotation:function(e){this.word("typeof"),this.space(),this.print(e.argument,e)},TypeAlias:function(e){this.word("type"),this.space(),this.print(e.id,e),this.print(e.typeParameters,e),this.space(),this.token("="),this.space(),this.print(e.right,e),this.semicolon()},TypeAnnotation:function(e){this.token(":"),this.space(),e.optional&&this.token("?"),this.print(e.typeAnnotation,e)},TypeParameterInstantiation:Gg,TypeParameterDeclaration:Gg,TypeParameter:function(e){this._variance(e),this.word(e.name),e.bound&&this.print(e.bound,e),e.default&&(this.space(),this.token("="),this.space(),this.print(e.default,e))},OpaqueType:function(e){this.word("opaque"),this.space(),this.word("type"),this.space(),this.print(e.id,e),this.print(e.typeParameters,e),e.supertype&&(this.token(":"),this.space(),this.print(e.supertype,e)),e.impltype&&(this.space(),this.token("="),this.space(),this.print(e.impltype,e)),this.semicolon()},ObjectTypeAnnotation:function(e){var t=this;e.exact?this.token("{|"):this.token("{");var n=e.properties.concat(e.callProperties||[],e.indexers||[],e.internalSlots||[]);n.length&&(this.space(),this.printJoin(n,e,{addNewlines:function(e){if(e&&!n[0])return 1},indent:!0,statement:!0,iterator:function(){(1!==n.length||e.inexact)&&(t.token(","),t.space())}}),this.space()),e.inexact&&(this.indent(),this.token("..."),n.length&&this.newline(),this.dedent()),e.exact?this.token("|}"):this.token("}")},ObjectTypeInternalSlot:function(e){e.static&&(this.word("static"),this.space()),this.token("["),this.token("["),this.print(e.id,e),this.token("]"),this.token("]"),e.optional&&this.token("?"),e.method||(this.token(":"),this.space()),this.print(e.value,e)},ObjectTypeCallProperty:function(e){e.static&&(this.word("static"),this.space()),this.print(e.value,e)},ObjectTypeIndexer:function(e){e.static&&(this.word("static"),this.space()),this._variance(e),this.token("["),e.id&&(this.print(e.id,e),this.token(":"),this.space()),this.print(e.key,e),this.token("]"),this.token(":"),this.space(),this.print(e.value,e)},ObjectTypeProperty:function(e){e.proto&&(this.word("proto"),this.space()),e.static&&(this.word("static"),this.space()),this._variance(e),this.print(e.key,e),e.optional&&this.token("?"),e.method||(this.token(":"),this.space()),this.print(e.value,e)},ObjectTypeSpreadProperty:function(e){this.token("..."),this.print(e.argument,e)},QualifiedTypeIdentifier:function(e){this.print(e.qualification,e),this.token("."),this.print(e.id,e)},UnionTypeAnnotation:function(e){this.printJoin(e.types,e,{separator:Hg})},TypeCastExpression:function(e){this.token("("),this.print(e.expression,e),this.print(e.typeAnnotation,e),this.token(")")},Variance:function(e){"plus"===e.kind?this.token("+"):this.token("-")},VoidTypeAnnotation:function(){this.word("void")},NumberLiteralTypeAnnotation:Ng,StringLiteralTypeAnnotation:Mg,File:function(e){e.program&&this.print(e.program.interpreter,e),this.print(e.program,e)},Program:function(e){this.printInnerComments(e,!1),this.printSequence(e.directives,e),e.directives&&e.directives.length&&this.newline(),this.printSequence(e.body,e)},BlockStatement:function(e){this.token("{"),this.printInnerComments(e);var t=e.directives&&e.directives.length;e.body.length||t?(this.newline(),this.printSequence(e.directives,e,{indent:!0}),t&&this.newline(),this.printSequence(e.body,e,{indent:!0}),this.removeTrailingNewline(),this.source("end",e.loc),this.endsWith("\n")||this.newline(),this.rightBrace()):(this.source("end",e.loc),this.token("}"))},Noop:function(){},Directive:function(e){this.print(e.value,e),this.semicolon()},DirectiveLiteral:function(e){var t=this.getPossibleRaw(e);if(null==t){var n=e.value;if(Kg.test(n)){if(qg.test(n))throw new Error("Malformed AST: it is not possible to print a directive containing both unescaped single and double quotes.");this.token("'"+n+"'")}else this.token('"'+n+'"')}else this.token(t)},InterpreterDirective:function(e){this.token("#!"+e.value+"\n")},Placeholder:function(e){this.token("%%"),this.print(e.name),this.token("%%"),"Statement"===e.expectedNode&&this.semicolon()},JSXAttribute:function(e){this.print(e.name,e),e.value&&(this.token("="),this.print(e.value,e))},JSXIdentifier:function(e){this.word(e.name)},JSXNamespacedName:function(e){this.print(e.namespace,e),this.token(":"),this.print(e.name,e)},JSXMemberExpression:function(e){this.print(e.object,e),this.token("."),this.print(e.property,e)},JSXSpreadAttribute:function(e){this.token("{"),this.token("..."),this.print(e.argument,e),this.token("}")},JSXExpressionContainer:function(e){this.token("{"),this.print(e.expression,e),this.token("}")},JSXSpreadChild:function(e){this.token("{"),this.token("..."),this.print(e.expression,e),this.token("}")},JSXText:function(e){var t=this.getPossibleRaw(e);null!=t?this.token(t):this.token(e.value)},JSXElement:function(e){var t=e.openingElement;if(this.print(t,e),!t.selfClosing){this.indent();for(var n=0,r=e.children;n<r.length;n++){var i=r[n];this.print(i,e)}this.dedent(),this.print(e.closingElement,e)}},JSXOpeningElement:function(e){this.token("<"),this.print(e.name,e),this.print(e.typeParameters,e),e.attributes.length>0&&(this.space(),this.printJoin(e.attributes,e,{separator:Xg})),e.selfClosing?(this.space(),this.token("/>")):this.token(">")},JSXClosingElement:function(e){this.token("</"),this.print(e.name,e),this.token(">")},JSXEmptyExpression:function(e){this.printInnerComments(e)},JSXFragment:function(e){this.print(e.openingFragment,e),this.indent();for(var t=0,n=e.children;t<n.length;t++){var r=n[t];this.print(r,e)}this.dedent(),this.print(e.closingFragment,e)},JSXOpeningFragment:function(){this.token("<"),this.token(">")},JSXClosingFragment:function(){this.token("</"),this.token(">")},TSTypeAnnotation:function(e){this.token(":"),this.space(),e.optional&&this.token("?"),this.print(e.typeAnnotation,e)},TSTypeParameterInstantiation:zg,TSTypeParameterDeclaration:zg,TSTypeParameter:function(e){this.word(e.name),e.constraint&&(this.space(),this.word("extends"),this.space(),this.print(e.constraint,e)),e.default&&(this.space(),this.token("="),this.space(),this.print(e.default,e))},TSParameterProperty:function(e){e.accessibility&&(this.word(e.accessibility),this.space()),e.readonly&&(this.word("readonly"),this.space()),this._param(e.parameter)},TSDeclareFunction:function(e){e.declare&&(this.word("declare"),this.space()),this._functionHead(e),this.token(";")},TSDeclareMethod:function(e){this._classMethodHead(e),this.token(";")},TSQualifiedName:function(e){this.print(e.left,e),this.token("."),this.print(e.right,e)},TSCallSignatureDeclaration:function(e){this.tsPrintSignatureDeclarationBase(e),this.token(";")},TSConstructSignatureDeclaration:function(e){this.word("new"),this.space(),this.tsPrintSignatureDeclarationBase(e),this.token(";")},TSPropertySignature:function(e){var t=e.readonly,n=e.initializer;t&&(this.word("readonly"),this.space()),this.tsPrintPropertyOrMethodName(e),this.print(e.typeAnnotation,e),n&&(this.space(),this.token("="),this.space(),this.print(n,e)),this.token(";")},tsPrintPropertyOrMethodName:function(e){e.computed&&this.token("["),this.print(e.key,e),e.computed&&this.token("]"),e.optional&&this.token("?")},TSMethodSignature:function(e){this.tsPrintPropertyOrMethodName(e),this.tsPrintSignatureDeclarationBase(e),this.token(";")},TSIndexSignature:function(e){e.readonly&&(this.word("readonly"),this.space()),this.token("["),this._parameters(e.parameters,e),this.token("]"),this.print(e.typeAnnotation,e),this.token(";")},TSAnyKeyword:function(){this.word("any")},TSBigIntKeyword:function(){this.word("bigint")},TSUnknownKeyword:function(){this.word("unknown")},TSNumberKeyword:function(){this.word("number")},TSObjectKeyword:function(){this.word("object")},TSBooleanKeyword:function(){this.word("boolean")},TSStringKeyword:function(){this.word("string")},TSSymbolKeyword:function(){this.word("symbol")},TSVoidKeyword:function(){this.word("void")},TSUndefinedKeyword:function(){this.word("undefined")},TSNullKeyword:function(){this.word("null")},TSNeverKeyword:function(){this.word("never")},TSThisType:function(){this.word("this")},TSFunctionType:function(e){this.tsPrintFunctionOrConstructorType(e)},TSConstructorType:function(e){this.word("new"),this.space(),this.tsPrintFunctionOrConstructorType(e)},tsPrintFunctionOrConstructorType:function(e){var t=e.typeParameters,n=e.parameters;this.print(t,e),this.token("("),this._parameters(n,e),this.token(")"),this.space(),this.token("=>"),this.space(),this.print(e.typeAnnotation.typeAnnotation,e)},TSTypeReference:function(e){this.print(e.typeName,e),this.print(e.typeParameters,e)},TSTypePredicate:function(e){e.asserts&&(this.word("asserts"),this.space()),this.print(e.parameterName),e.typeAnnotation&&(this.space(),this.word("is"),this.space(),this.print(e.typeAnnotation.typeAnnotation))},TSTypeQuery:function(e){this.word("typeof"),this.space(),this.print(e.exprName)},TSTypeLiteral:function(e){this.tsPrintTypeLiteralOrInterfaceBody(e.members,e)},tsPrintTypeLiteralOrInterfaceBody:function(e,t){this.tsPrintBraced(e,t)},tsPrintBraced:function(e,t){if(this.token("{"),e.length){this.indent(),this.newline();var n=e,r=Array.isArray(n),i=0;for(n=r?n:n[Symbol.iterator]();;){var a;if(r){if(i>=n.length)break;a=n[i++]}else{if((i=n.next()).done)break;a=i.value}var o=a;this.print(o,t),this.newline()}this.dedent(),this.rightBrace()}else this.token("}")},TSArrayType:function(e){this.print(e.elementType,e),this.token("[]")},TSTupleType:function(e){this.token("["),this.printList(e.elementTypes,e),this.token("]")},TSOptionalType:function(e){this.print(e.typeAnnotation,e),this.token("?")},TSRestType:function(e){this.token("..."),this.print(e.typeAnnotation,e)},TSUnionType:function(e){this.tsPrintUnionOrIntersectionType(e,"|")},TSIntersectionType:function(e){this.tsPrintUnionOrIntersectionType(e,"&")},tsPrintUnionOrIntersectionType:function(e,t){this.printJoin(e.types,e,{separator:function(){this.space(),this.token(t),this.space()}})},TSConditionalType:function(e){this.print(e.checkType),this.space(),this.word("extends"),this.space(),this.print(e.extendsType),this.space(),this.token("?"),this.space(),this.print(e.trueType),this.space(),this.token(":"),this.space(),this.print(e.falseType)},TSInferType:function(e){this.token("infer"),this.space(),this.print(e.typeParameter)},TSParenthesizedType:function(e){this.token("("),this.print(e.typeAnnotation,e),this.token(")")},TSTypeOperator:function(e){this.token(e.operator),this.space(),this.print(e.typeAnnotation,e)},TSIndexedAccessType:function(e){this.print(e.objectType,e),this.token("["),this.print(e.indexType,e),this.token("]")},TSMappedType:function(e){var t=e.readonly,n=e.typeParameter,r=e.optional;this.token("{"),this.space(),t&&(Jg(this,t),this.word("readonly"),this.space()),this.token("["),this.word(n.name),this.space(),this.word("in"),this.space(),this.print(n.constraint,n),this.token("]"),r&&(Jg(this,r),this.token("?")),this.token(":"),this.space(),this.print(e.typeAnnotation,e),this.space(),this.token("}")},TSLiteralType:function(e){this.print(e.literal,e)},TSExpressionWithTypeArguments:function(e){this.print(e.expression,e),this.print(e.typeParameters,e)},TSInterfaceDeclaration:function(e){var t=e.declare,n=e.id,r=e.typeParameters,i=e.extends,a=e.body;t&&(this.word("declare"),this.space()),this.word("interface"),this.space(),this.print(n,e),this.print(r,e),i&&(this.space(),this.word("extends"),this.space(),this.printList(i,e)),this.space(),this.print(a,e)},TSInterfaceBody:function(e){this.tsPrintTypeLiteralOrInterfaceBody(e.body,e)},TSTypeAliasDeclaration:function(e){var t=e.declare,n=e.id,r=e.typeParameters,i=e.typeAnnotation;t&&(this.word("declare"),this.space()),this.word("type"),this.space(),this.print(n,e),this.print(r,e),this.space(),this.token("="),this.space(),this.print(i,e),this.token(";")},TSAsExpression:function(e){var t=e.expression,n=e.typeAnnotation;this.print(t,e),this.space(),this.word("as"),this.space(),this.print(n,e)},TSTypeAssertion:function(e){var t=e.typeAnnotation,n=e.expression;this.token("<"),this.print(t,e),this.token(">"),this.space(),this.print(n,e)},TSEnumDeclaration:function(e){var t=e.declare,n=e.const,r=e.id,i=e.members;t&&(this.word("declare"),this.space()),n&&(this.word("const"),this.space()),this.word("enum"),this.space(),this.print(r,e),this.space(),this.tsPrintBraced(i,e)},TSEnumMember:function(e){var t=e.id,n=e.initializer;this.print(t,e),n&&(this.space(),this.token("="),this.space(),this.print(n,e)),this.token(",")},TSModuleDeclaration:function(e){var t=e.declare,n=e.id;if(t&&(this.word("declare"),this.space()),e.global||(this.word("Identifier"===n.type?"namespace":"module"),this.space()),this.print(n,e),e.body){for(var r=e.body;"TSModuleDeclaration"===r.type;)this.token("."),this.print(r.id,r),r=r.body;this.space(),this.print(r,e)}else this.token(";")},TSModuleBlock:function(e){this.tsPrintBraced(e.body,e)},TSImportType:function(e){var t=e.argument,n=e.qualifier,r=e.typeParameters;this.word("import"),this.token("("),this.print(t,e),this.token(")"),n&&(this.token("."),this.print(n,e)),r&&this.print(r,e)},TSImportEqualsDeclaration:function(e){var t=e.isExport,n=e.id,r=e.moduleReference;t&&(this.word("export"),this.space()),this.word("import"),this.space(),this.print(n,e),this.space(),this.token("="),this.space(),this.print(r,e),this.token(";")},TSExternalModuleReference:function(e){this.token("require("),this.print(e.expression,e),this.token(")")},TSNonNullExpression:function(e){this.print(e.expression,e),this.token("!")},TSExportAssignment:function(e){this.word("export"),this.space(),this.token("="),this.space(),this.print(e.expression,e),this.token(";")},TSNamespaceExportDeclaration:function(e){this.word("export"),this.space(),this.word("as"),this.space(),this.word("namespace"),this.space(),this.print(e.id,e)},tsPrintSignatureDeclarationBase:function(e){var t=e.typeParameters,n=e.parameters;this.print(t,e),this.token("("),this._parameters(n,e),this.token(")"),this.print(e.typeAnnotation,e)},tsPrintClassMemberModifiers:function(e,t){t&&e.declare&&(this.word("declare"),this.space()),e.accessibility&&(this.word(e.accessibility),this.space()),e.static&&(this.word("static"),this.space()),e.abstract&&(this.word("abstract"),this.space()),t&&e.readonly&&(this.word("readonly"),this.space())}}),$g=/e/i,Qg=/\.0+$/,Zg=/^0[box]/,eb=function(){function e(e,t){this.inForStatementInitCounter=0,this._printStack=[],this._indent=0,this._insideAux=!1,this._printedCommentStarts={},this._parenPushNewlineState=null,this._noLineTerminator=!1,this._printAuxAfterOnNextUserNode=!1,this._printedComments=new WeakSet,this._endsWithInteger=!1,this._endsWithWord=!1,this.format=e||{},this._buf=new By(t)}var t=e.prototype;return t.generate=function(e){return this.print(e),this._maybeAddAuxComment(),this._buf.get()},t.indent=function(){this.format.compact||this.format.concise||this._indent++},t.dedent=function(){this.format.compact||this.format.concise||this._indent--},t.semicolon=function(e){void 0===e&&(e=!1),this._maybeAddAuxComment(),this._append(";",!e)},t.rightBrace=function(){this.format.minified&&this._buf.removeLastSemicolon(),this.token("}")},t.space=function(e){void 0===e&&(e=!1),this.format.compact||(this._buf.hasContent()&&!this.endsWith(" ")&&!this.endsWith("\n")||e)&&this._space()},t.word=function(e){(this._endsWithWord||this.endsWith("/")&&0===e.indexOf("/"))&&this._space(),this._maybeAddAuxComment(),this._append(e),this._endsWithWord=!0},t.number=function(e){this.word(e),this._endsWithInteger=Iy(+e)&&!Zg.test(e)&&!$g.test(e)&&!Qg.test(e)&&"."!==e[e.length-1]},t.token=function(e){("--"===e&&this.endsWith("!")||"+"===e[0]&&this.endsWith("+")||"-"===e[0]&&this.endsWith("-")||"."===e[0]&&this._endsWithInteger)&&this._space(),this._maybeAddAuxComment(),this._append(e)},t.newline=function(e){if(!this.format.retainLines&&!this.format.compact)if(this.format.concise)this.space();else if(!(this.endsWith("\n\n")||("number"!=typeof e&&(e=1),e=Math.min(2,e),(this.endsWith("{\n")||this.endsWith(":\n"))&&e--,e<=0)))for(var t=0;t<e;t++)this._newline()},t.endsWith=function(e){return this._buf.endsWith(e)},t.removeTrailingNewline=function(){this._buf.removeTrailingNewline()},t.exactSource=function(e,t){this._catchUp("start",e),this._buf.exactSource(e,t)},t.source=function(e,t){this._catchUp(e,t),this._buf.source(e,t)},t.withSource=function(e,t,n){this._catchUp(e,t),this._buf.withSource(e,t,n)},t._space=function(){this._append(" ",!0)},t._newline=function(){this._append("\n",!0)},t._append=function(e,t){void 0===t&&(t=!1),this._maybeAddParen(e),this._maybeIndent(e),t?this._buf.queue(e):this._buf.append(e),this._endsWithWord=!1,this._endsWithInteger=!1},t._maybeIndent=function(e){this._indent&&this.endsWith("\n")&&"\n"!==e[0]&&this._buf.queue(this._getIndent())},t._maybeAddParen=function(e){var t=this._parenPushNewlineState;if(t){var n;for(this._parenPushNewlineState=null,n=0;n<e.length&&" "===e[n];n++);if(n!==e.length){var r=e[n];if("\n"!==r){if("/"!==r)return;if(n+1===e.length)return;var i=e[n+1];if("/"!==i&&"*"!==i)return}this.token("("),this.indent(),t.printed=!0}}},t._catchUp=function(e,t){if(this.format.retainLines){var n=t?t[e]:null;if(n&&null!==n.line)for(var r=n.line-this._buf.getCurrentLine(),i=0;i<r;i++)this._newline()}},t._getIndent=function(){return Kd(this.format.indent.style,this._indent)},t.startTerminatorless=function(e){return void 0===e&&(e=!1),e?(this._noLineTerminator=!0,null):this._parenPushNewlineState={printed:!1}},t.endTerminatorless=function(e){this._noLineTerminator=!1,e&&e.printed&&(this.dedent(),this.newline(),this.token(")"))},t.print=function(e,t){var n=this;if(e){var r=this.format.concise;e._compact&&(this.format.concise=!0);var i=this[e.type];if(!i)throw new ReferenceError("unknown node of type "+JSON.stringify(e.type)+" with constructor "+JSON.stringify(e&&e.constructor.name));this._printStack.push(e);var a=this._insideAux;this._insideAux=!e.loc,this._maybeAddAuxComment(this._insideAux&&!a);var o=tv(e,t,this._printStack);this.format.retainFunctionParens&&"FunctionExpression"===e.type&&e.extra&&e.extra.parenthesized&&(o=!0),o&&this.token("("),this._printLeadingComments(e);var s=O(e)||g(e)?null:e.loc;this.withSource("start",s,(function(){i.call(n,e,t)})),this._printTrailingComments(e),o&&this.token(")"),this._printStack.pop(),this.format.concise=r,this._insideAux=a}},t._maybeAddAuxComment=function(e){e&&this._printAuxBeforeComment(),this._insideAux||this._printAuxAfterComment()},t._printAuxBeforeComment=function(){if(!this._printAuxAfterOnNextUserNode){this._printAuxAfterOnNextUserNode=!0;var e=this.format.auxiliaryCommentBefore;e&&this._printComment({type:"CommentBlock",value:e})}},t._printAuxAfterComment=function(){if(this._printAuxAfterOnNextUserNode){this._printAuxAfterOnNextUserNode=!1;var e=this.format.auxiliaryCommentAfter;e&&this._printComment({type:"CommentBlock",value:e})}},t.getPossibleRaw=function(e){var t=e.extra;if(t&&null!=t.raw&&null!=t.rawValue&&e.value===t.rawValue)return t.raw},t.printJoin=function(e,t,n){if(void 0===n&&(n={}),e&&e.length){n.indent&&this.indent();for(var r={addNewlines:n.addNewlines},i=0;i<e.length;i++){var a=e[i];a&&(n.statement&&this._printNewline(!0,a,t,r),this.print(a,t),n.iterator&&n.iterator(a,i),n.separator&&i<e.length-1&&n.separator.call(this),n.statement&&this._printNewline(!1,a,t,r))}n.indent&&this.dedent()}},t.printAndIndentOnComments=function(e,t){var n=e.leadingComments&&e.leadingComments.length>0;n&&this.indent(),this.print(e,t),n&&this.dedent()},t.printBlock=function(e){var t=e.body;y(t)||this.space(),this.print(t,e)},t._printTrailingComments=function(e){this._printComments(this._getComments(!1,e))},t._printLeadingComments=function(e){this._printComments(this._getComments(!0,e))},t.printInnerComments=function(e,t){void 0===t&&(t=!0),e.innerComments&&e.innerComments.length&&(t&&this.indent(),this._printComments(e.innerComments),t&&this.dedent())},t.printSequence=function(e,t,n){return void 0===n&&(n={}),n.statement=!0,this.printJoin(e,t,n)},t.printList=function(e,t,n){return void 0===n&&(n={}),null==n.separator&&(n.separator=tb),this.printJoin(e,t,n)},t._printNewline=function(e,t,n,r){if(!this.format.retainLines&&!this.format.compact)if(this.format.concise)this.space();else{var i=0;if(this._buf.hasContent())e||i++,r.addNewlines&&(i+=r.addNewlines(e,t)||0),(e?Zy:ev)(t,n)&&i++;this.newline(i)}},t._getComments=function(e,t){return t&&(e?t.leadingComments:t.trailingComments)||[]},t._printComment=function(e){var t=this;if(this.format.shouldPrintComment(e.value)&&!e.ignore&&!this._printedComments.has(e)){if(this._printedComments.add(e),null!=e.start){if(this._printedCommentStarts[e.start])return;this._printedCommentStarts[e.start]=!0}var n="CommentBlock"===e.type;this.newline(this._buf.hasContent()&&!this._noLineTerminator&&n?1:0),this.endsWith("[")||this.endsWith("{")||this.space();var r=n||this._noLineTerminator?"/*"+e.value+"*/":"//"+e.value+"\n";if(n&&this.format.indent.adjustMultilineComment){var i=e.loc&&e.loc.start.column;if(i){var a=new RegExp("\\n\\s{1,"+i+"}","g");r=r.replace(a,"\n")}var o=Math.max(this._getIndent().length,this._buf.getCurrentColumn());r=r.replace(/\n(?!$)/g,"\n"+Kd(" ",o))}this.endsWith("/")&&this._space(),this.withSource("start",e.loc,(function(){t._append(r)})),this.newline(n&&!this._noLineTerminator?1:0)}},t._printComments=function(e){if(e&&e.length){var t=e,n=Array.isArray(t),r=0;for(t=n?t:t[Symbol.iterator]();;){var i;if(n){if(r>=t.length)break;i=t[r++]}else{if((r=t.next()).done)break;i=r.value}var a=i;this._printComment(a)}}},e}();function tb(){this.token(","),this.space()}Object.assign(eb.prototype,Yg);var nb=function(e){function t(t,n,r){var i;void 0===n&&(n={});var a=function(e,t){var n={auxiliaryCommentBefore:t.auxiliaryCommentBefore,auxiliaryCommentAfter:t.auxiliaryCommentAfter,shouldPrintComment:t.shouldPrintComment,retainLines:t.retainLines,retainFunctionParens:t.retainFunctionParens,comments:null==t.comments||t.comments,compact:t.compact,minified:t.minified,concise:t.concise,jsonCompatibleStrings:t.jsonCompatibleStrings,indent:{adjustMultilineComment:!0,style:"  ",base:0},decoratorsBeforeExport:!!t.decoratorsBeforeExport,jsescOption:Object.assign({quotes:"double",wrap:!0},t.jsescOption)};n.minified?(n.compact=!0,n.shouldPrintComment=n.shouldPrintComment||function(){return n.comments}):n.shouldPrintComment=n.shouldPrintComment||function(e){return n.comments||e.indexOf("@license")>=0||e.indexOf("@preserve")>=0};"auto"===n.compact&&(n.compact=e.length>5e5,n.compact&&console.error("[BABEL] Note: The code generator has deoptimised the styling of "+t.filename+" as it exceeds the max of 500KB."));n.compact&&(n.indent.adjustMultilineComment=!1);return n}(r,n),o=n.sourceMaps?new _y(n,r):null;return(i=e.call(this,a,o)||this).ast=t,i}return i(t,e),t.prototype.generate=function(){return e.prototype.generate.call(this,this.ast)},t}(eb);function rb(e,t,n){return new nb(e,t,n).generate()}var ib=Object.freeze({__proto__:null,findParent:function(e){for(var t=this;t=t.parentPath;)if(e(t))return t;return null},find:function(e){var t=this;do{if(e(t))return t}while(t=t.parentPath);return null},getFunctionParent:function(){return this.findParent((function(e){return e.isFunction()}))},getStatementParent:function(){var e=this;do{if(!e.parentPath||Array.isArray(e.container)&&e.isStatement())break;e=e.parentPath}while(e);if(e&&(e.isProgram()||e.isFile()))throw new Error("File/Program node, we can't possibly find a statement parent to this");return e},getEarliestCommonAncestorFrom:function(e){return this.getDeepestCommonAncestorFrom(e,(function(e,t,n){for(var r,i=Ga[e.type],a=0,o=n;a<o.length;a++){var s=o[a][t+1];if(r)if(s.listKey&&r.listKey===s.listKey&&s.key<r.key)r=s;else i.indexOf(r.parentKey)>i.indexOf(s.parentKey)&&(r=s);else r=s}return r}))},getDeepestCommonAncestorFrom:function(e,t){var n=this;if(!e.length)return this;if(1===e.length)return e[0];var r,i,a=1/0,o=e.map((function(e){var t=[];do{t.unshift(e)}while((e=e.parentPath)&&e!==n);return t.length<a&&(a=t.length),t})),s=o[0];e:for(var u=0;u<a;u++){for(var l=s[u],c=0,p=o;c<p.length;c++){if(p[c][u]!==l)break e}r=u,i=l}if(i)return t?t(i,r,o):i;throw new Error("Couldn't find intersection")},getAncestry:function(){var e=this,t=[];do{t.push(e)}while(e=e.parentPath);return t},isAncestor:function(e){return e.isDescendant(this)},isDescendant:function(e){return!!this.findParent((function(t){return t===e}))},inType:function(){for(var e=this;e;){for(var t=0,n=arguments;t<n.length;t++){var r=n[t];if(e.node.type===r)return!0}e=e.parentPath}return!1}});function ab(e,t,n){var r=e.constantViolations.slice();return r.unshift(e.path),r.filter((function(e){var r=(e=e.resolve())._guessExecutionStatusRelativeTo(t);return n&&"unknown"===r&&n.push(e),"before"===r}))}function ob(e,t){var n,r,i,a=t.node.operator,o=t.get("right").resolve(),s=t.get("left").resolve();if(s.isIdentifier({name:e})?n=o:o.isIdentifier({name:e})&&(n=s),n)return"==="===a?n.getTypeAnnotation():Ta.indexOf(a)>=0?Mu():void 0;if(("==="===a||"=="===a)&&(s.isUnaryExpression({operator:"typeof"})?(r=s,i=o):o.isUnaryExpression({operator:"typeof"})&&(r=o,i=s),r&&r.get("argument").isIdentifier({name:e})&&(i=i.resolve()).isLiteral())){var u=i.node.value;if("string"==typeof u)return hp(u)}}function sb(e){return e.typeAnnotation}function ub(){return Cu(os("Array"))}function lb(){return ub()}function cb(){return Cu(os("Function"))}sb.validParent=!0,lb.validParent=!0;var pb=St("Array.from"),hb=St("Object.keys"),fb=St("Object.values"),db=St("Object.entries");function mb(e){if((e=e.resolve()).isFunction()){if(e.is("async"))return e.is("generator")?Cu(os("AsyncIterator")):Cu(os("Promise"));if(e.node.returnType)return e.node.returnType}}var yb=Object.freeze({__proto__:null,VariableDeclarator:function(){if(this.get("id").isIdentifier()){var e=this.get("init"),t=e.getTypeAnnotation();return t&&"AnyTypeAnnotation"===t.type&&e.isCallExpression()&&e.get("callee").isIdentifier({name:"Array"})&&!e.scope.hasBinding("Array",!0)&&(t=ub()),t}},TypeCastExpression:sb,NewExpression:function(e){if(this.get("callee").isIdentifier())return Cu(e.callee)},TemplateLiteral:function(){return Ku()},UnaryExpression:function(e){var t=e.operator;return"void"===t?il():Ia.indexOf(t)>=0?Mu():Oa.indexOf(t)>=0?Ku():_a.indexOf(t)>=0?uu():void 0},BinaryExpression:function(e){var t=e.operator;if(Fa.indexOf(t)>=0)return Mu();if(Pa.indexOf(t)>=0)return uu();if("+"===t){var n=this.get("right"),r=this.get("left");return r.isBaseType("number")&&n.isBaseType("number")?Mu():r.isBaseType("string")||n.isBaseType("string")?Ku():nl([Ku(),Mu()])}},LogicalExpression:function(){return dp([this.get("left").getTypeAnnotation(),this.get("right").getTypeAnnotation()])},ConditionalExpression:function(){return dp([this.get("consequent").getTypeAnnotation(),this.get("alternate").getTypeAnnotation()])},SequenceExpression:function(){return this.get("expressions").pop().getTypeAnnotation()},ParenthesizedExpression:function(){return this.get("expression").getTypeAnnotation()},AssignmentExpression:function(){return this.get("right").getTypeAnnotation()},UpdateExpression:function(e){var t=e.operator;if("++"===t||"--"===t)return Mu()},StringLiteral:function(){return Ku()},NumericLiteral:function(){return Mu()},BooleanLiteral:function(){return uu()},NullLiteral:function(){return cu()},RegExpLiteral:function(){return Cu(os("RegExp"))},ObjectExpression:function(){return Cu(os("Object"))},ArrayExpression:ub,RestElement:lb,FunctionExpression:cb,ArrowFunctionExpression:cb,FunctionDeclaration:cb,ClassExpression:cb,ClassDeclaration:cb,CallExpression:function(){var e=this.node.callee;return hb(e)?su(Ku()):pb(e)||fb(e)?su(ou()):db(e)?su(zu([Ku(),ou()])):mb(this.get("callee"))},TaggedTemplateExpression:function(){return mb(this.get("tag"))},Identifier:function(e){if(this.isReferenced()){var t=this.scope.getBinding(e.name);return t?t.identifier.typeAnnotation?t.identifier.typeAnnotation:function(e,t,n){var r=[],i=[],a=ab(e,t,i),o=function e(t,n,r){var i=function(e,t,n){var r;for(;r=t.parentPath;){if(r.isIfStatement()||r.isConditionalExpression()){if("test"===t.key)return;return r}if(r.isFunction()&&r.parentPath.scope.getBinding(n)!==e)return;t=r}}(t,n,r);if(!i)return;for(var a=[i.get("test")],o=[],s=0;s<a.length;s++){var u=a[s];if(u.isLogicalExpression())"&&"===u.node.operator&&(a.push(u.get("left")),a.push(u.get("right")));else if(u.isBinaryExpression()){var l=ob(r,u);l&&o.push(l)}}if(o.length)return{typeAnnotation:dp(o),ifStatement:i};return e(i,r)}(e,t,n);if(o){var s=ab(e,o.ifStatement);a=a.filter((function(e){return s.indexOf(e)<0})),r.push(o.typeAnnotation)}if(a.length){a=a.concat(i);for(var u=0,l=a;u<l.length;u++){var c=l[u];r.push(c.getTypeAnnotation())}}if(r.length)return dp(r)}(t,this,e.name):"undefined"===e.name?il():"NaN"===e.name||"Infinity"===e.name?Mu():void e.name}}});function vb(e,t,n){if("string"===e)return xe(t);if("number"===e)return Se(t);if("boolean"===e)return ye(t);if("any"===e)return de(t);if("mixed"===e)return Ee(t);if("empty"===e)return Ae(t);if("void"===e)return Pe(t);if(n)return!1;throw new Error("Unknown base type "+e)}var gb=Object.freeze({__proto__:null,getTypeAnnotation:function(){if(this.typeAnnotation)return this.typeAnnotation;var e=this._getTypeAnnotation()||ou();return Te(e)&&(e=e.typeAnnotation),this.typeAnnotation=e},_getTypeAnnotation:function(){var e=this.node;if(e){if(e.typeAnnotation)return e.typeAnnotation;var t=yb[e.type];return t?t.call(this,e):(t=yb[this.parentPath.type])&&t.validParent?this.parentPath.getTypeAnnotation():void 0}if("init"===this.key&&this.parentPath.isVariableDeclarator()){var n=this.parentPath.parentPath,r=n.parentPath;return"left"===n.key&&r.isForInStatement()?Ku():"left"===n.key&&r.isForOfStatement()?ou():il()}},isBaseType:function(e,t){return vb(e,this.getTypeAnnotation(),t)},couldBeBaseType:function(e){var t=this.getTypeAnnotation();if(de(t))return!0;if(we(t)){for(var n=0,r=t.types;n<r.length;n++){var i=r[n];if(de(i)||vb(e,i,!0))return!0}return!1}return vb(e,t,!0)},baseTypeStrictlyMatches:function(e){var t=this.getTypeAnnotation();if(e=e.getTypeAnnotation(),!de(t)&&At(t))return e.type===t.type},isGenericType:function(e){var t=this.getTypeAnnotation();return ge(t)&&S(t.id,{name:e})}}),bb=Vt((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=/((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g,t.matchToToken=function(e){var t={type:"invalid",value:e[0],closed:void 0};return e[1]?(t.type="string",t.closed=!(!e[3]&&!e[4])):e[5]?t.type="comment":e[6]?(t.type="comment",t.closed=!!e[7]):e[8]?t.type="regex":e[9]?t.type="number":e[10]?t.type="name":e[11]?t.type="punctuator":e[12]&&(t.type="whitespace"),t}})),Eb=Ut(bb),Ab=bb.matchToToken,Db=/[|\\{}()[\]^$+*?.]/g,Sb=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(Db,"\\$&")},xb={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},Tb=Vt((function(e){var t={};for(var n in xb)xb.hasOwnProperty(n)&&(t[xb[n]]=n);var r=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var i in r)if(r.hasOwnProperty(i)){if(!("channels"in r[i]))throw new Error("missing channels property: "+i);if(!("labels"in r[i]))throw new Error("missing channel labels property: "+i);if(r[i].labels.length!==r[i].channels)throw new Error("channel and label counts mismatch: "+i);var a=r[i].channels,o=r[i].labels;delete r[i].channels,delete r[i].labels,Object.defineProperty(r[i],"channels",{value:a}),Object.defineProperty(r[i],"labels",{value:o})}function s(e,t){return Math.pow(e[0]-t[0],2)+Math.pow(e[1]-t[1],2)+Math.pow(e[2]-t[2],2)}r.rgb.hsl=function(e){var t,n,r=e[0]/255,i=e[1]/255,a=e[2]/255,o=Math.min(r,i,a),s=Math.max(r,i,a),u=s-o;return s===o?t=0:r===s?t=(i-a)/u:i===s?t=2+(a-r)/u:a===s&&(t=4+(r-i)/u),(t=Math.min(60*t,360))<0&&(t+=360),n=(o+s)/2,[t,100*(s===o?0:n<=.5?u/(s+o):u/(2-s-o)),100*n]},r.rgb.hsv=function(e){var t,n,r,i,a,o=e[0]/255,s=e[1]/255,u=e[2]/255,l=Math.max(o,s,u),c=l-Math.min(o,s,u),p=function(e){return(l-e)/6/c+.5};return 0===c?i=a=0:(a=c/l,t=p(o),n=p(s),r=p(u),o===l?i=r-n:s===l?i=1/3+t-r:u===l&&(i=2/3+n-t),i<0?i+=1:i>1&&(i-=1)),[360*i,100*a,100*l]},r.rgb.hwb=function(e){var t=e[0],n=e[1],i=e[2];return[r.rgb.hsl(e)[0],100*(1/255*Math.min(t,Math.min(n,i))),100*(i=1-1/255*Math.max(t,Math.max(n,i)))]},r.rgb.cmyk=function(e){var t,n=e[0]/255,r=e[1]/255,i=e[2]/255;return[100*((1-n-(t=Math.min(1-n,1-r,1-i)))/(1-t)||0),100*((1-r-t)/(1-t)||0),100*((1-i-t)/(1-t)||0),100*t]},r.rgb.keyword=function(e){var n=t[e];if(n)return n;var r,i=1/0;for(var a in xb)if(xb.hasOwnProperty(a)){var o=s(e,xb[a]);o<i&&(i=o,r=a)}return r},r.keyword.rgb=function(e){return xb[e]},r.rgb.xyz=function(e){var t=e[0]/255,n=e[1]/255,r=e[2]/255;return[100*(.4124*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.3576*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)+.1805*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)),100*(.2126*t+.7152*n+.0722*r),100*(.0193*t+.1192*n+.9505*r)]},r.rgb.lab=function(e){var t=r.rgb.xyz(e),n=t[0],i=t[1],a=t[2];return i/=100,a/=108.883,n=(n/=95.047)>.008856?Math.pow(n,1/3):7.787*n+16/116,[116*(i=i>.008856?Math.pow(i,1/3):7.787*i+16/116)-16,500*(n-i),200*(i-(a=a>.008856?Math.pow(a,1/3):7.787*a+16/116))]},r.hsl.rgb=function(e){var t,n,r,i,a,o=e[0]/360,s=e[1]/100,u=e[2]/100;if(0===s)return[a=255*u,a,a];t=2*u-(n=u<.5?u*(1+s):u+s-u*s),i=[0,0,0];for(var l=0;l<3;l++)(r=o+1/3*-(l-1))<0&&r++,r>1&&r--,a=6*r<1?t+6*(n-t)*r:2*r<1?n:3*r<2?t+(n-t)*(2/3-r)*6:t,i[l]=255*a;return i},r.hsl.hsv=function(e){var t=e[0],n=e[1]/100,r=e[2]/100,i=n,a=Math.max(r,.01);return n*=(r*=2)<=1?r:2-r,i*=a<=1?a:2-a,[t,100*(0===r?2*i/(a+i):2*n/(r+n)),100*((r+n)/2)]},r.hsv.rgb=function(e){var t=e[0]/60,n=e[1]/100,r=e[2]/100,i=Math.floor(t)%6,a=t-Math.floor(t),o=255*r*(1-n),s=255*r*(1-n*a),u=255*r*(1-n*(1-a));switch(r*=255,i){case 0:return[r,u,o];case 1:return[s,r,o];case 2:return[o,r,u];case 3:return[o,s,r];case 4:return[u,o,r];case 5:return[r,o,s]}},r.hsv.hsl=function(e){var t,n,r,i=e[0],a=e[1]/100,o=e[2]/100,s=Math.max(o,.01);return r=(2-a)*o,n=a*s,[i,100*(n=(n/=(t=(2-a)*s)<=1?t:2-t)||0),100*(r/=2)]},r.hwb.rgb=function(e){var t,n,r,i,a,o,s,u=e[0]/360,l=e[1]/100,c=e[2]/100,p=l+c;switch(p>1&&(l/=p,c/=p),r=6*u-(t=Math.floor(6*u)),0!=(1&t)&&(r=1-r),i=l+r*((n=1-c)-l),t){default:case 6:case 0:a=n,o=i,s=l;break;case 1:a=i,o=n,s=l;break;case 2:a=l,o=n,s=i;break;case 3:a=l,o=i,s=n;break;case 4:a=i,o=l,s=n;break;case 5:a=n,o=l,s=i}return[255*a,255*o,255*s]},r.cmyk.rgb=function(e){var t=e[0]/100,n=e[1]/100,r=e[2]/100,i=e[3]/100;return[255*(1-Math.min(1,t*(1-i)+i)),255*(1-Math.min(1,n*(1-i)+i)),255*(1-Math.min(1,r*(1-i)+i))]},r.xyz.rgb=function(e){var t,n,r,i=e[0]/100,a=e[1]/100,o=e[2]/100;return n=-.9689*i+1.8758*a+.0415*o,r=.0557*i+-.204*a+1.057*o,t=(t=3.2406*i+-1.5372*a+-.4986*o)>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r,[255*(t=Math.min(Math.max(0,t),1)),255*(n=Math.min(Math.max(0,n),1)),255*(r=Math.min(Math.max(0,r),1))]},r.xyz.lab=function(e){var t=e[0],n=e[1],r=e[2];return n/=100,r/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116)-16,500*(t-n),200*(n-(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116))]},r.lab.xyz=function(e){var t,n,r,i=e[0];t=e[1]/500+(n=(i+16)/116),r=n-e[2]/200;var a=Math.pow(n,3),o=Math.pow(t,3),s=Math.pow(r,3);return n=a>.008856?a:(n-16/116)/7.787,t=o>.008856?o:(t-16/116)/7.787,r=s>.008856?s:(r-16/116)/7.787,[t*=95.047,n*=100,r*=108.883]},r.lab.lch=function(e){var t,n=e[0],r=e[1],i=e[2];return(t=360*Math.atan2(i,r)/2/Math.PI)<0&&(t+=360),[n,Math.sqrt(r*r+i*i),t]},r.lch.lab=function(e){var t,n=e[0],r=e[1];return t=e[2]/360*2*Math.PI,[n,r*Math.cos(t),r*Math.sin(t)]},r.rgb.ansi16=function(e){var t=e[0],n=e[1],i=e[2],a=1 in arguments?arguments[1]:r.rgb.hsv(e)[2];if(0===(a=Math.round(a/50)))return 30;var o=30+(Math.round(i/255)<<2|Math.round(n/255)<<1|Math.round(t/255));return 2===a&&(o+=60),o},r.hsv.ansi16=function(e){return r.rgb.ansi16(r.hsv.rgb(e),e[2])},r.rgb.ansi256=function(e){var t=e[0],n=e[1],r=e[2];return t===n&&n===r?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5)},r.ansi16.rgb=function(e){var t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];var n=.5*(1+~~(e>50));return[(1&t)*n*255,(t>>1&1)*n*255,(t>>2&1)*n*255]},r.ansi256.rgb=function(e){if(e>=232){var t=10*(e-232)+8;return[t,t,t]}var n;return e-=16,[Math.floor(e/36)/5*255,Math.floor((n=e%36)/6)/5*255,n%6/5*255]},r.rgb.hex=function(e){var t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},r.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];var n=t[0];3===t[0].length&&(n=n.split("").map((function(e){return e+e})).join(""));var r=parseInt(n,16);return[r>>16&255,r>>8&255,255&r]},r.rgb.hcg=function(e){var t,n=e[0]/255,r=e[1]/255,i=e[2]/255,a=Math.max(Math.max(n,r),i),o=Math.min(Math.min(n,r),i),s=a-o;return t=s<=0?0:a===n?(r-i)/s%6:a===r?2+(i-n)/s:4+(n-r)/s+4,t/=6,[360*(t%=1),100*s,100*(s<1?o/(1-s):0)]},r.hsl.hcg=function(e){var t=e[1]/100,n=e[2]/100,r=1,i=0;return(r=n<.5?2*t*n:2*t*(1-n))<1&&(i=(n-.5*r)/(1-r)),[e[0],100*r,100*i]},r.hsv.hcg=function(e){var t=e[1]/100,n=e[2]/100,r=t*n,i=0;return r<1&&(i=(n-r)/(1-r)),[e[0],100*r,100*i]},r.hcg.rgb=function(e){var t=e[0]/360,n=e[1]/100,r=e[2]/100;if(0===n)return[255*r,255*r,255*r];var i,a=[0,0,0],o=t%1*6,s=o%1,u=1-s;switch(Math.floor(o)){case 0:a[0]=1,a[1]=s,a[2]=0;break;case 1:a[0]=u,a[1]=1,a[2]=0;break;case 2:a[0]=0,a[1]=1,a[2]=s;break;case 3:a[0]=0,a[1]=u,a[2]=1;break;case 4:a[0]=s,a[1]=0,a[2]=1;break;default:a[0]=1,a[1]=0,a[2]=u}return i=(1-n)*r,[255*(n*a[0]+i),255*(n*a[1]+i),255*(n*a[2]+i)]},r.hcg.hsv=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t),r=0;return n>0&&(r=t/n),[e[0],100*r,100*n]},r.hcg.hsl=function(e){var t=e[1]/100,n=e[2]/100*(1-t)+.5*t,r=0;return n>0&&n<.5?r=t/(2*n):n>=.5&&n<1&&(r=t/(2*(1-n))),[e[0],100*r,100*n]},r.hcg.hwb=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t);return[e[0],100*(n-t),100*(1-n)]},r.hwb.hcg=function(e){var t=e[1]/100,n=1-e[2]/100,r=n-t,i=0;return r<1&&(i=(n-r)/(1-r)),[e[0],100*r,100*i]},r.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},r.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},r.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},r.gray.hsl=r.gray.hsv=function(e){return[0,0,e[0]]},r.gray.hwb=function(e){return[0,100,e[0]]},r.gray.cmyk=function(e){return[0,0,0,e[0]]},r.gray.lab=function(e){return[e[0],0,0]},r.gray.hex=function(e){var t=255&Math.round(e[0]/100*255),n=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(n.length)+n},r.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}}));Tb.rgb,Tb.hsl,Tb.hsv,Tb.hwb,Tb.cmyk,Tb.xyz,Tb.lab,Tb.lch,Tb.hex,Tb.keyword,Tb.ansi16,Tb.ansi256,Tb.hcg,Tb.apple,Tb.gray;function Cb(e){var t=function(){for(var e={},t=Object.keys(Tb),n=t.length,r=0;r<n;r++)e[t[r]]={distance:-1,parent:null};return e}(),n=[e];for(t[e].distance=0;n.length;)for(var r=n.pop(),i=Object.keys(Tb[r]),a=i.length,o=0;o<a;o++){var s=i[o],u=t[s];-1===u.distance&&(u.distance=t[r].distance+1,u.parent=r,n.unshift(s))}return t}function wb(e,t){return function(n){return t(e(n))}}function Pb(e,t){for(var n=[t[e].parent,e],r=Tb[t[e].parent][e],i=t[e].parent;t[i].parent;)n.unshift(t[i].parent),r=wb(Tb[t[i].parent][i],r),i=t[i].parent;return r.conversion=n,r}var Fb={};Object.keys(Tb).forEach((function(e){Fb[e]={},Object.defineProperty(Fb[e],"channels",{value:Tb[e].channels}),Object.defineProperty(Fb[e],"labels",{value:Tb[e].labels});var t=function(e){for(var t=Cb(e),n={},r=Object.keys(t),i=r.length,a=0;a<i;a++){var o=r[a];null!==t[o].parent&&(n[o]=Pb(o,t))}return n}(e);Object.keys(t).forEach((function(n){var r=t[n];Fb[e][n]=function(e){var t=function(t){if(null==t)return t;arguments.length>1&&(t=Array.prototype.slice.call(arguments));var n=e(t);if("object"==typeof n)for(var r=n.length,i=0;i<r;i++)n[i]=Math.round(n[i]);return n};return"conversion"in e&&(t.conversion=e.conversion),t}(r),Fb[e][n].raw=function(e){var t=function(t){return null==t?t:(arguments.length>1&&(t=Array.prototype.slice.call(arguments)),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(r)}))}));var kb=Fb,_b=Vt((function(e){var t=function(e,t){return function(){var n=e.apply(kb,arguments);return"["+(n+t)+"m"}},n=function(e,t){return function(){var n=e.apply(kb,arguments);return"["+(38+t)+";5;"+n+"m"}},r=function(e,t){return function(){var n=e.apply(kb,arguments);return"["+(38+t)+";2;"+n[0]+";"+n[1]+";"+n[2]+"m"}};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){var e=new Map,i={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};i.color.grey=i.color.gray;for(var a=0,o=Object.keys(i);a<o.length;a++){for(var s=o[a],u=i[s],l=0,c=Object.keys(u);l<c.length;l++){var p=c[l],h=u[p];i[p]={open:"["+h[0]+"m",close:"["+h[1]+"m"},u[p]=i[p],e.set(h[0],h[1])}Object.defineProperty(i,s,{value:u,enumerable:!1}),Object.defineProperty(i,"codes",{value:e,enumerable:!1})}var f=function(e){return e},d=function(e,t,n){return[e,t,n]};i.color.close="[39m",i.bgColor.close="[49m",i.color.ansi={ansi:t(f,0)},i.color.ansi256={ansi256:n(f,0)},i.color.ansi16m={rgb:r(d,0)},i.bgColor.ansi={ansi:t(f,10)},i.bgColor.ansi256={ansi256:n(f,10)},i.bgColor.ansi16m={rgb:r(d,10)};for(var m=0,y=Object.keys(kb);m<y.length;m++){var v=y[m];if("object"==typeof kb[v]){var g=kb[v];"ansi16"===v&&(v="ansi"),"ansi16"in g&&(i.color.ansi[v]=t(g.ansi16,0),i.bgColor.ansi[v]=t(g.ansi16,10)),"ansi256"in g&&(i.color.ansi256[v]=n(g.ansi256,0),i.bgColor.ansi256[v]=n(g.ansi256,10)),"rgb"in g&&(i.color.ansi16m[v]=r(g.rgb,0),i.bgColor.ansi16m[v]=r(g.rgb,10))}}return i}})})),Ib=!1,Ob=/(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,Bb=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,Nb=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,Mb=/\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi,Rb=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e",""],["a",""]]);function Lb(e){return"u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):Rb.get(e)||e}function jb(e,t){var n,r=[],i=t.trim().split(/\s*,\s*/g),a=Array.isArray(i),o=0;for(i=a?i:i[Symbol.iterator]();;){var s;if(a){if(o>=i.length)break;s=i[o++]}else{if((o=i.next()).done)break;s=o.value}var u=s;if(isNaN(u)){if(!(n=u.match(Nb)))throw new Error("Invalid Chalk template style argument: "+u+" (in style '"+e+"')");r.push(n[2].replace(Mb,(function(e,t,n){return t?Lb(t):n})))}else r.push(Number(u))}return r}function Ub(e){Bb.lastIndex=0;for(var t,n=[];null!==(t=Bb.exec(e));){var r=t[1];if(t[2]){var i=jb(r,t[2]);n.push([r].concat(i))}else n.push([r])}return n}function Vb(e,t){var n={},r=t,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}var s=o,u=s.styles,l=Array.isArray(u),c=0;for(u=l?u:u[Symbol.iterator]();;){var p;if(l){if(c>=u.length)break;p=u[c++]}else{if((c=u.next()).done)break;p=c.value}var h=p;n[h[0]]=s.inverse?null:h.slice(1)}}for(var f=e,d=0,m=Object.keys(n);d<m.length;d++){var y=m[d];if(Array.isArray(n[y])){if(!(y in f))throw new Error("Unknown Chalk style: "+y);f=n[y].length>0?f[y].apply(f,n[y]):f[y]}}return f}var Wb=function(e,t){var n=[],r=[],i=[];if(t.replace(Ob,(function(t,a,o,s,u,l){if(a)i.push(Lb(a));else if(s){var c=i.join("");i=[],r.push(0===n.length?c:Vb(e,n)(c)),n.push({inverse:o,styles:Ub(s)})}else if(u){if(0===n.length)throw new Error("Found extraneous } in Chalk template literal");r.push(Vb(e,n)(i.join(""))),i=[],n.pop()}else i.push(l)})),r.push(i.join("")),n.length>0){var a="Chalk template literal is missing "+n.length+" closing bracket"+(1===n.length?"":"s")+" (`}`)";throw new Error(a)}return r.join("")},Gb=Vt((function(e){var t=Ib,n=["ansi","ansi","ansi256","ansi16m"],r=new Set(["gray"]),i=Object.create(null);function a(e,t){t=t||{};e.level=void 0===t.level?0:t.level,e.enabled="enabled"in t?t.enabled:e.level>0}function o(e){if(!this||!(this instanceof o)||this.template){var t={};return a(t,e),t.template=function(){var e=[].slice.call(arguments);return b.apply(null,[t.template].concat(e))},Object.setPrototypeOf(t,o.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=o,t.template}a(this,e)}for(var s=function(){var e=l[u];_b[e].closeRe=new RegExp(Sb(_b[e].close),"g"),i[e]={get:function(){var t=_b[e];return v.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}}},u=0,l=Object.keys(_b);u<l.length;u++)s();i.visible={get:function(){return v.call(this,this._styles||[],!0,"visible")}},_b.color.closeRe=new RegExp(Sb(_b.color.close),"g");for(var c=function(){var e=h[p];if(r.has(e))return"continue";i[e]={get:function(){var t=this.level;return function(){var r=_b.color[n[t]][e].apply(null,arguments),i={open:r,close:_b.color.close,closeRe:_b.color.closeRe};return v.call(this,this._styles?this._styles.concat(i):[i],this._empty,e)}}}},p=0,h=Object.keys(_b.color.ansi);p<h.length;p++)c();_b.bgColor.closeRe=new RegExp(Sb(_b.bgColor.close),"g");for(var f=function(){var e=m[d];if(r.has(e))return"continue";var t="bg"+e[0].toUpperCase()+e.slice(1);i[t]={get:function(){var t=this.level;return function(){var r=_b.bgColor[n[t]][e].apply(null,arguments),i={open:r,close:_b.bgColor.close,closeRe:_b.bgColor.closeRe};return v.call(this,this._styles?this._styles.concat(i):[i],this._empty,e)}}}},d=0,m=Object.keys(_b.bgColor.ansi);d<m.length;d++)f();var y=Object.defineProperties((function(){}),i);function v(e,t,n){var r=function e(){return g.apply(e,arguments)};r._styles=e,r._empty=t;var i=this;return Object.defineProperty(r,"level",{enumerable:!0,get:function(){return i.level},set:function(e){i.level=e}}),Object.defineProperty(r,"enabled",{enumerable:!0,get:function(){return i.enabled},set:function(e){i.enabled=e}}),r.hasGrey=this.hasGrey||"gray"===n||"grey"===n,r.__proto__=y,r}function g(){var e=arguments,t=e.length,n=String(arguments[0]);if(0===t)return"";if(t>1)for(var r=1;r<t;r++)n+=" "+e[r];if(!this.enabled||this.level<=0||!n)return this._empty?"":n;var i=_b.dim.open,a=this._styles.slice().reverse(),o=Array.isArray(a),s=0;for(a=o?a:a[Symbol.iterator]();;){var u;if(o){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}var l=u;n=(n=l.open+n.replace(l.closeRe,l.open)+l.close).replace(/\r?\n/g,l.close+"$&"+l.open)}return _b.dim.open=i,n}function b(e,t){if(!Array.isArray(t))return[].slice.call(arguments,1).join(" ");for(var n=[].slice.call(arguments,2),r=[t.raw[0]],i=1;i<t.length;i++)r.push(String(n[i-1]).replace(/[{}\\]/g,"\\$&")),r.push(String(t.raw[i]));return Wb(e,r.join(""))}Object.defineProperties(o.prototype,i),e.exports=o(),e.exports.supportsColor=t,e.exports.default=e.exports}));Gb.supportsColor;var Hb=/\r\n|[\n\r\u2028\u2029]/,qb=/^[a-z][\w-]*$/i,Kb=/^[()[\]{}]$/;function Xb(e){var t=e.slice(-2),n=t[0],r=t[1],i=Ab(e);if("name"===i.type){if(ga.keyword.isReservedWordES6(i.value))return"keyword";if(qb.test(i.value)&&("<"===r[n-1]||"</"==r.substr(n-2,2)))return"jsx_tag";if(i.value[0]!==i.value[0].toLowerCase())return"capitalized"}return"punctuator"===i.type&&Kb.test(i.value)?"bracket":"invalid"!==i.type||"@"!==i.value&&"#"!==i.value?i.type:"punctuator"}function zb(e){return Gb.supportsColor||e.forceColor}function Jb(e){var t=Gb;return e.forceColor&&(t=new Gb.constructor({enabled:!0,level:1})),t}function Yb(e,t){return void 0===t&&(t={}),zb(t)?function(e,t){return t.replace(Eb,(function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];var i=Xb(n),a=e[i];return a?n[0].split(Hb).map((function(e){return a(e)})).join("\n"):n[0]}))}(function(e){return{keyword:e.cyan,capitalized:e.yellow,jsx_tag:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.grey,invalid:e.white.bgRed.bold}}(Jb(t)),e):e}var $b=/\r\n|[\n\r\u2028\u2029]/;function Qb(e,t,n){void 0===n&&(n={});var r=(n.highlightCode||n.forceColor)&&zb(n),i=Jb(n),a=function(e){return{gutter:e.grey,marker:e.red.bold,message:e.red.bold}}(i),o=function(e,t){return r?e(t):t},s=function(e,t,n){var r=Object.assign({column:0,line:-1},e.start),i=Object.assign({},r,{},e.end),a=n||{},o=a.linesAbove,s=void 0===o?2:o,u=a.linesBelow,l=void 0===u?3:u,c=r.line,p=r.column,h=i.line,f=i.column,d=Math.max(c-(s+1),0),m=Math.min(t.length,h+l);-1===c&&(d=0),-1===h&&(m=t.length);var y=h-c,v={};if(y)for(var g=0;g<=y;g++){var b=g+c;if(p)if(0===g){var E=t[b-1].length;v[b]=[p,E-p+1]}else if(g===y)v[b]=[0,f];else{var A=t[b-g].length;v[b]=[0,A]}else v[b]=!0}else v[c]=p===f?!p||[p,0]:[p,f-p];return{start:d,end:m,markerLines:v}}(t,e.split($b),n),u=s.start,l=s.end,c=s.markerLines,p=t.start&&"number"==typeof t.start.column,h=String(l).length,f=(r?Yb(e,n):e).split($b).slice(u,l).map((function(e,t){var r=u+1+t,i=" "+(" "+r).slice(-h)+" | ",s=c[r],l=!c[r+1];if(s){var p="";if(Array.isArray(s)){var f=e.slice(0,Math.max(s[0]-1,0)).replace(/[^\t]/g," "),d=s[1]||1;p=["\n ",o(a.gutter,i.replace(/\d/g," ")),f,o(a.marker,"^").repeat(d)].join(""),l&&n.message&&(p+=" "+o(a.message,n.message))}return[o(a.marker,">"),o(a.gutter,i),e,p].join("")}return" "+o(a.gutter,i)+e})).join("\n");return n.message&&!p&&(f=""+" ".repeat(h+1)+n.message+"\n"+f),r?i.reset(f):f}var Zb=!0,eE=function(e,t){void 0===t&&(t={}),this.label=e,this.keyword=t.keyword,this.beforeExpr=!!t.beforeExpr,this.startsExpr=!!t.startsExpr,this.rightAssociative=!!t.rightAssociative,this.isLoop=!!t.isLoop,this.isAssign=!!t.isAssign,this.prefix=!!t.prefix,this.postfix=!!t.postfix,this.binop=null!=t.binop?t.binop:null,this.updateContext=null},tE=new Map;function nE(e,t){void 0===t&&(t={}),t.keyword=e;var n=new eE(e,t);return tE.set(e,n),n}function rE(e,t){return new eE(e,{beforeExpr:Zb,binop:t})}var iE={num:new eE("num",{startsExpr:!0}),bigint:new eE("bigint",{startsExpr:!0}),regexp:new eE("regexp",{startsExpr:!0}),string:new eE("string",{startsExpr:!0}),name:new eE("name",{startsExpr:!0}),eof:new eE("eof"),bracketL:new eE("[",{beforeExpr:Zb,startsExpr:!0}),bracketR:new eE("]"),braceL:new eE("{",{beforeExpr:Zb,startsExpr:!0}),braceBarL:new eE("{|",{beforeExpr:Zb,startsExpr:!0}),braceR:new eE("}"),braceBarR:new eE("|}"),parenL:new eE("(",{beforeExpr:Zb,startsExpr:!0}),parenR:new eE(")"),comma:new eE(",",{beforeExpr:Zb}),semi:new eE(";",{beforeExpr:Zb}),colon:new eE(":",{beforeExpr:Zb}),doubleColon:new eE("::",{beforeExpr:Zb}),dot:new eE("."),question:new eE("?",{beforeExpr:Zb}),questionDot:new eE("?."),arrow:new eE("=>",{beforeExpr:Zb}),template:new eE("template"),ellipsis:new eE("...",{beforeExpr:Zb}),backQuote:new eE("`",{startsExpr:!0}),dollarBraceL:new eE("${",{beforeExpr:Zb,startsExpr:!0}),at:new eE("@"),hash:new eE("#",{startsExpr:!0}),interpreterDirective:new eE("#!..."),eq:new eE("=",{beforeExpr:Zb,isAssign:!0}),assign:new eE("_=",{beforeExpr:Zb,isAssign:!0}),incDec:new eE("++/--",{prefix:!0,postfix:!0,startsExpr:!0}),bang:new eE("!",{beforeExpr:Zb,prefix:!0,startsExpr:!0}),tilde:new eE("~",{beforeExpr:Zb,prefix:!0,startsExpr:!0}),pipeline:rE("|>",0),nullishCoalescing:rE("??",1),logicalOR:rE("||",2),logicalAND:rE("&&",3),bitwiseOR:rE("|",4),bitwiseXOR:rE("^",5),bitwiseAND:rE("&",6),equality:rE("==/!=/===/!==",7),relational:rE("</>/<=/>=",8),bitShift:rE("<</>>/>>>",9),plusMin:new eE("+/-",{beforeExpr:Zb,binop:10,prefix:!0,startsExpr:!0}),modulo:new eE("%",{beforeExpr:Zb,binop:11,startsExpr:!0}),star:rE("*",11),slash:rE("/",11),exponent:new eE("**",{beforeExpr:Zb,binop:12,rightAssociative:!0}),_break:nE("break"),_case:nE("case",{beforeExpr:Zb}),_catch:nE("catch"),_continue:nE("continue"),_debugger:nE("debugger"),_default:nE("default",{beforeExpr:Zb}),_do:nE("do",{isLoop:!0,beforeExpr:Zb}),_else:nE("else",{beforeExpr:Zb}),_finally:nE("finally"),_for:nE("for",{isLoop:!0}),_function:nE("function",{startsExpr:!0}),_if:nE("if"),_return:nE("return",{beforeExpr:Zb}),_switch:nE("switch"),_throw:nE("throw",{beforeExpr:Zb,prefix:!0,startsExpr:!0}),_try:nE("try"),_var:nE("var"),_const:nE("const"),_while:nE("while",{isLoop:!0}),_with:nE("with"),_new:nE("new",{beforeExpr:Zb,startsExpr:!0}),_this:nE("this",{startsExpr:!0}),_super:nE("super",{startsExpr:!0}),_class:nE("class",{startsExpr:!0}),_extends:nE("extends",{beforeExpr:Zb}),_export:nE("export"),_import:nE("import",{startsExpr:!0}),_null:nE("null",{startsExpr:!0}),_true:nE("true",{startsExpr:!0}),_false:nE("false",{startsExpr:!0}),_in:nE("in",{beforeExpr:Zb,binop:8}),_instanceof:nE("instanceof",{beforeExpr:Zb,binop:8}),_typeof:nE("typeof",{beforeExpr:Zb,prefix:!0,startsExpr:!0}),_void:nE("void",{beforeExpr:Zb,prefix:!0,startsExpr:!0}),_delete:nE("delete",{beforeExpr:Zb,prefix:!0,startsExpr:!0})},aE=2,oE=4,sE=8,uE=513|aE;function lE(e,t){return aE|(e?oE:0)|(t?sE:0)}function cE(e){return null!=e&&"Property"===e.type&&"init"===e.kind&&!1===e.method}var pE=/\r\n?|[\n\u2028\u2029]/,hE=new RegExp(pE.source,"g");function fE(e){switch(e){case 10:case 13:case 8232:case 8233:return!0;default:return!1}}var dE=/(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;function mE(e){switch(e){case 9:case 11:case 12:case 32:case 160:case 5760:case 8192:case 8193:case 8194:case 8195:case 8196:case 8197:case 8198:case 8199:case 8200:case 8201:case 8202:case 8239:case 8287:case 12288:case 65279:return!0;default:return!1}}var yE=function(e,t,n,r){this.token=e,this.isExpr=!!t,this.preserveSpace=!!n,this.override=r},vE={braceStatement:new yE("{",!1),braceExpression:new yE("{",!0),templateQuasi:new yE("${",!1),parenStatement:new yE("(",!1),parenExpression:new yE("(",!0),template:new yE("`",!0,!0,(function(e){return e.readTmplToken()})),functionExpression:new yE("function",!0),functionStatement:new yE("function",!1)};iE.parenR.updateContext=iE.braceR.updateContext=function(){if(1!==this.state.context.length){var e=this.state.context.pop();e===vE.braceStatement&&"function"===this.curContext().token&&(e=this.state.context.pop()),this.state.exprAllowed=!e.isExpr}else this.state.exprAllowed=!0},iE.name.updateContext=function(e){var t=!1;e!==iE.dot&&("of"===this.state.value&&!this.state.exprAllowed||"yield"===this.state.value&&this.scope.inGenerator)&&(t=!0),this.state.exprAllowed=t,this.state.isIterator&&(this.state.isIterator=!1)},iE.braceL.updateContext=function(e){this.state.context.push(this.braceIsBlock(e)?vE.braceStatement:vE.braceExpression),this.state.exprAllowed=!0},iE.dollarBraceL.updateContext=function(){this.state.context.push(vE.templateQuasi),this.state.exprAllowed=!0},iE.parenL.updateContext=function(e){var t=e===iE._if||e===iE._for||e===iE._with||e===iE._while;this.state.context.push(t?vE.parenStatement:vE.parenExpression),this.state.exprAllowed=!0},iE.incDec.updateContext=function(){},iE._function.updateContext=iE._class.updateContext=function(e){!e.beforeExpr||e===iE.semi||e===iE._else||e===iE._return&&pE.test(this.input.slice(this.state.lastTokEnd,this.state.start))||(e===iE.colon||e===iE.braceL)&&this.curContext()===vE.b_stat?this.state.context.push(vE.functionStatement):this.state.context.push(vE.functionExpression),this.state.exprAllowed=!1},iE.backQuote.updateContext=function(){this.curContext()===vE.template?this.state.context.pop():this.state.context.push(vE.template),this.state.exprAllowed=!1};var gE=["eval","arguments"],bE=new Set(["implements","interface","let","package","private","protected","public","static","yield"]),EE=new Set(gE),AE=function(e,t){return t&&"await"===e||"enum"===e};function DE(e,t){return AE(e,t)||bE.has(e)}function SE(e){return EE.has(e)}function xE(e,t){return DE(e,t)||SE(e)}var TE=/^in(stanceof)?$/,CE="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-Ᶎꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭧꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",wE="‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ංඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿",PE=new RegExp("["+CE+"]"),FE=new RegExp("["+CE+wE+"]");CE=wE=null;var kE=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541],_E=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,792487,239];function IE(e,t){for(var n=65536,r=0,i=t.length;r<i;r+=2){if((n+=t[r])>e)return!1;if((n+=t[r+1])>=e)return!0}return!1}function OE(e){return e<65?36===e:e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&PE.test(String.fromCharCode(e)):IE(e,kE)))}function BE(e){return e<48?36===e:e<58||!(e<65)&&(e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&FE.test(String.fromCharCode(e)):IE(e,kE)||IE(e,_E))))}var NE=new Set(["_","any","bool","boolean","empty","extends","false","interface","mixed","null","number","static","string","true","typeof","void"]);function ME(e){return"type"===e.importKind||"typeof"===e.importKind}function RE(e){return(e.type===iE.name||!!e.type.keyword)&&"from"!==e.value}var LE={const:"declare export var",let:"declare export var",type:"export type",interface:"export interface"};var jE=/\*?\s*@((?:no)?flow)\b/,UE={quot:'"',amp:"&",apos:"'",lt:"<",gt:">",nbsp:" ",iexcl:"¡",cent:"¢",pound:"£",curren:"¤",yen:"¥",brvbar:"¦",sect:"§",uml:"¨",copy:"©",ordf:"ª",laquo:"«",not:"¬",shy:"­",reg:"®",macr:"¯",deg:"°",plusmn:"±",sup2:"²",sup3:"³",acute:"´",micro:"µ",para:"¶",middot:"·",cedil:"¸",sup1:"¹",ordm:"º",raquo:"»",frac14:"¼",frac12:"½",frac34:"¾",iquest:"¿",Agrave:"À",Aacute:"Á",Acirc:"Â",Atilde:"Ã",Auml:"Ä",Aring:"Å",AElig:"Æ",Ccedil:"Ç",Egrave:"È",Eacute:"É",Ecirc:"Ê",Euml:"Ë",Igrave:"Ì",Iacute:"Í",Icirc:"Î",Iuml:"Ï",ETH:"Ð",Ntilde:"Ñ",Ograve:"Ò",Oacute:"Ó",Ocirc:"Ô",Otilde:"Õ",Ouml:"Ö",times:"×",Oslash:"Ø",Ugrave:"Ù",Uacute:"Ú",Ucirc:"Û",Uuml:"Ü",Yacute:"Ý",THORN:"Þ",szlig:"ß",agrave:"à",aacute:"á",acirc:"â",atilde:"ã",auml:"ä",aring:"å",aelig:"æ",ccedil:"ç",egrave:"è",eacute:"é",ecirc:"ê",euml:"ë",igrave:"ì",iacute:"í",icirc:"î",iuml:"ï",eth:"ð",ntilde:"ñ",ograve:"ò",oacute:"ó",ocirc:"ô",otilde:"õ",ouml:"ö",divide:"÷",oslash:"ø",ugrave:"ù",uacute:"ú",ucirc:"û",uuml:"ü",yacute:"ý",thorn:"þ",yuml:"ÿ",OElig:"Œ",oelig:"œ",Scaron:"Š",scaron:"š",Yuml:"Ÿ",fnof:"ƒ",circ:"ˆ",tilde:"˜",Alpha:"Α",Beta:"Β",Gamma:"Γ",Delta:"Δ",Epsilon:"Ε",Zeta:"Ζ",Eta:"Η",Theta:"Θ",Iota:"Ι",Kappa:"Κ",Lambda:"Λ",Mu:"Μ",Nu:"Ν",Xi:"Ξ",Omicron:"Ο",Pi:"Π",Rho:"Ρ",Sigma:"Σ",Tau:"Τ",Upsilon:"Υ",Phi:"Φ",Chi:"Χ",Psi:"Ψ",Omega:"Ω",alpha:"α",beta:"β",gamma:"γ",delta:"δ",epsilon:"ε",zeta:"ζ",eta:"η",theta:"θ",iota:"ι",kappa:"κ",lambda:"λ",mu:"μ",nu:"ν",xi:"ξ",omicron:"ο",pi:"π",rho:"ρ",sigmaf:"ς",sigma:"σ",tau:"τ",upsilon:"υ",phi:"φ",chi:"χ",psi:"ψ",omega:"ω",thetasym:"ϑ",upsih:"ϒ",piv:"ϖ",ensp:" ",emsp:" ",thinsp:" ",zwnj:"‌",zwj:"‍",lrm:"‎",rlm:"‏",ndash:"–",mdash:"—",lsquo:"‘",rsquo:"’",sbquo:"‚",ldquo:"“",rdquo:"”",bdquo:"„",dagger:"†",Dagger:"‡",bull:"•",hellip:"…",permil:"‰",prime:"′",Prime:"″",lsaquo:"‹",rsaquo:"›",oline:"‾",frasl:"⁄",euro:"€",image:"ℑ",weierp:"℘",real:"ℜ",trade:"™",alefsym:"ℵ",larr:"←",uarr:"↑",rarr:"→",darr:"↓",harr:"↔",crarr:"↵",lArr:"⇐",uArr:"⇑",rArr:"⇒",dArr:"⇓",hArr:"⇔",forall:"∀",part:"∂",exist:"∃",empty:"∅",nabla:"∇",isin:"∈",notin:"∉",ni:"∋",prod:"∏",sum:"∑",minus:"−",lowast:"∗",radic:"√",prop:"∝",infin:"∞",ang:"∠",and:"∧",or:"∨",cap:"∩",cup:"∪",int:"∫",there4:"∴",sim:"∼",cong:"≅",asymp:"≈",ne:"≠",equiv:"≡",le:"≤",ge:"≥",sub:"⊂",sup:"⊃",nsub:"⊄",sube:"⊆",supe:"⊇",oplus:"⊕",otimes:"⊗",perp:"⊥",sdot:"⋅",lceil:"⌈",rceil:"⌉",lfloor:"⌊",rfloor:"⌋",lang:"〈",rang:"〉",loz:"◊",spades:"♠",clubs:"♣",hearts:"♥",diams:"♦"},VE=/^[\da-fA-F]+$/,WE=/^\d+$/;function GE(e){return!!e&&("JSXOpeningFragment"===e.type||"JSXClosingFragment"===e.type)}function HE(e){if("JSXIdentifier"===e.type)return e.name;if("JSXNamespacedName"===e.type)return e.namespace.name+":"+e.name.name;if("JSXMemberExpression"===e.type)return HE(e.object)+"."+HE(e.property);throw new Error("Node had unexpected type: "+e.type)}vE.j_oTag=new yE("<tag",!1),vE.j_cTag=new yE("</tag",!1),vE.j_expr=new yE("<tag>...</tag>",!0,!0),iE.jsxName=new eE("jsxName"),iE.jsxText=new eE("jsxText",{beforeExpr:!0}),iE.jsxTagStart=new eE("jsxTagStart",{startsExpr:!0}),iE.jsxTagEnd=new eE("jsxTagEnd"),iE.jsxTagStart.updateContext=function(){this.state.context.push(vE.j_expr),this.state.context.push(vE.j_oTag),this.state.exprAllowed=!1},iE.jsxTagEnd.updateContext=function(e){var t=this.state.context.pop();t===vE.j_oTag&&e===iE.slash||t===vE.j_cTag?(this.state.context.pop(),this.state.exprAllowed=this.curContext()===vE.j_expr):this.state.exprAllowed=!0};var qE=function(e){this.var=[],this.lexical=[],this.functions=[],this.flags=e},KE=function(){function e(e,t){this.scopeStack=[],this.undefinedExports=new Map,this.raise=e,this.inModule=t}var t=e.prototype;return t.createScope=function(e){return new qE(e)},t.enter=function(e){this.scopeStack.push(this.createScope(e))},t.exit=function(){this.scopeStack.pop()},t.treatFunctionsAsVarInScope=function(e){return!!(e.flags&aE||!this.inModule&&1&e.flags)},t.declareName=function(e,t,n){var r=this.currentScope();if(8&t||16&t)this.checkRedeclarationInScope(r,e,t,n),16&t?r.functions.push(e):r.lexical.push(e),8&t&&this.maybeExportDefined(r,e);else if(4&t)for(var i=this.scopeStack.length-1;i>=0&&(r=this.scopeStack[i],this.checkRedeclarationInScope(r,e,t,n),r.var.push(e),this.maybeExportDefined(r,e),!(r.flags&uE));--i);this.inModule&&1&r.flags&&this.undefinedExports.delete(e)},t.maybeExportDefined=function(e,t){this.inModule&&1&e.flags&&this.undefinedExports.delete(t)},t.checkRedeclarationInScope=function(e,t,n,r){this.isRedeclaredInScope(e,t,n)&&this.raise(r,"Identifier '"+t+"' has already been declared")},t.isRedeclaredInScope=function(e,t,n){return!!(1&n)&&(8&n?e.lexical.indexOf(t)>-1||e.functions.indexOf(t)>-1||e.var.indexOf(t)>-1:16&n?e.lexical.indexOf(t)>-1||!this.treatFunctionsAsVarInScope(e)&&e.var.indexOf(t)>-1:e.lexical.indexOf(t)>-1&&!(32&e.flags&&e.lexical[0]===t)||!this.treatFunctionsAsVarInScope(e)&&e.functions.indexOf(t)>-1)},t.checkLocalExport=function(e){-1===this.scopeStack[0].lexical.indexOf(e.name)&&-1===this.scopeStack[0].var.indexOf(e.name)&&-1===this.scopeStack[0].functions.indexOf(e.name)&&this.undefinedExports.set(e.name,e.start)},t.currentScope=function(){return this.scopeStack[this.scopeStack.length-1]},t.currentVarScope=function(){for(var e=this.scopeStack.length-1;;e--){var t=this.scopeStack[e];if(t.flags&uE)return t}},t.currentThisScope=function(){for(var e=this.scopeStack.length-1;;e--){var t=this.scopeStack[e];if((t.flags&uE||256&t.flags)&&!(16&t.flags))return t}},r(e,[{key:"inFunction",get:function(){return(this.currentVarScope().flags&aE)>0}},{key:"inGenerator",get:function(){return(this.currentVarScope().flags&sE)>0}},{key:"inAsync",get:function(){return(this.currentVarScope().flags&oE)>0}},{key:"allowSuper",get:function(){return(64&this.currentThisScope().flags)>0}},{key:"allowDirectSuper",get:function(){return(128&this.currentThisScope().flags)>0}},{key:"inClass",get:function(){return(256&this.currentThisScope().flags)>0}},{key:"inNonArrowFunction",get:function(){return(this.currentThisScope().flags&aE)>0}},{key:"treatFunctionsAsVar",get:function(){return this.treatFunctionsAsVarInScope(this.currentScope())}}]),e}(),XE=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(t=e.call.apply(e,[this].concat(r))||this).types=[],t.enums=[],t.constEnums=[],t.classes=[],t.exportOnlyBindings=[],t}return i(t,e),t}(qE),zE=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var n=t.prototype;return n.createScope=function(e){return new XE(e)},n.declareName=function(t,n,r){var i=this.currentScope();if(1024&n)return this.maybeExportDefined(i,t),void i.exportOnlyBindings.push(t);e.prototype.declareName.apply(this,arguments),2&n&&(1&n||(this.checkRedeclarationInScope(i,t,n,r),this.maybeExportDefined(i,t)),i.types.push(t)),256&n&&i.enums.push(t),512&n&&i.constEnums.push(t),128&n&&i.classes.push(t)},n.isRedeclaredInScope=function(t,n,r){if(t.enums.indexOf(n)>-1){if(256&r){var i=!!(512&r),a=t.constEnums.indexOf(n)>-1;return i!==a}return!0}return 128&r&&t.classes.indexOf(n)>-1?t.lexical.indexOf(n)>-1&&!!(1&r):!!(2&r&&t.types.indexOf(n)>-1)||e.prototype.isRedeclaredInScope.apply(this,arguments)},n.checkLocalExport=function(t){-1===this.scopeStack[0].types.indexOf(t.name)&&-1===this.scopeStack[0].exportOnlyBindings.indexOf(t.name)&&e.prototype.checkLocalExport.call(this,t)},t}(KE);function JE(e){if(null==e)throw new Error("Unexpected "+e+" value.");return e}function YE(e){if(!e)throw new Error("Assert fail")}iE.placeholder=new eE("%%",{startsExpr:!0});function $E(e,t){return e.some((function(e){return Array.isArray(e)?e[0]===t:e===t}))}function QE(e,t,n){var r=e.find((function(e){return Array.isArray(e)?e[0]===t:e===t}));return r&&Array.isArray(r)?r[1][n]:null}var ZE=["minimal","smart","fsharp"];var eA={estree:function(e){return function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var n=t.prototype;return n.estreeParseRegExpLiteral=function(e){var t=e.pattern,n=e.flags,r=null;try{r=new RegExp(t,n)}catch(e){}var i=this.estreeParseLiteral(r);return i.regex={pattern:t,flags:n},i},n.estreeParseLiteral=function(e){return this.parseLiteral(e,"Literal")},n.directiveToStmt=function(e){var t=e.value,n=this.startNodeAt(e.start,e.loc.start),r=this.startNodeAt(t.start,t.loc.start);return r.value=t.value,r.raw=t.extra.raw,n.expression=this.finishNodeAt(r,"Literal",t.end,t.loc.end),n.directive=t.extra.raw.slice(1,-1),this.finishNodeAt(n,"ExpressionStatement",e.end,e.loc.end)},n.initFunction=function(t,n){e.prototype.initFunction.call(this,t,n),t.expression=!1},n.checkDeclaration=function(t){cE(t)?this.checkDeclaration(t.value):e.prototype.checkDeclaration.call(this,t)},n.checkGetterSetterParams=function(e){var t=e,n="get"===t.kind?0:1,r=t.start;t.value.params.length!==n?"get"===t.kind?this.raise(r,"getter must not have any formal parameters"):this.raise(r,"setter must have exactly one formal parameter"):"set"===t.kind&&"RestElement"===t.value.params[0].type&&this.raise(r,"setter function argument must not be a rest parameter")},n.checkLVal=function(t,n,r,i,a){var o=this;switch(void 0===n&&(n=64),t.type){case"ObjectPattern":t.properties.forEach((function(e){o.checkLVal("Property"===e.type?e.value:e,n,r,"object destructuring pattern",a)}));break;default:e.prototype.checkLVal.call(this,t,n,r,i,a)}},n.checkDuplicatedProto=function(e,t){if(!("SpreadElement"===e.type||e.computed||e.method||e.shorthand)){var n=e.key;"__proto__"===("Identifier"===n.type?n.name:String(n.value))&&"init"===e.kind&&(t.used&&!t.start&&(t.start=n.start),t.used=!0)}},n.isStrictBody=function(e){if("BlockStatement"===e.body.type&&e.body.body.length>0)for(var t=0,n=e.body.body;t<n.length;t++){var r=n[t];if("ExpressionStatement"!==r.type||"Literal"!==r.expression.type)break;if("use strict"===r.expression.value)return!0}return!1},n.isValidDirective=function(e){return!("ExpressionStatement"!==e.type||"Literal"!==e.expression.type||"string"!=typeof e.expression.value||e.expression.extra&&e.expression.extra.parenthesized)},n.stmtToDirective=function(t){var n=e.prototype.stmtToDirective.call(this,t),r=t.expression.value;return n.value.value=r,n},n.parseBlockBody=function(t,n,r,i){var a=this;e.prototype.parseBlockBody.call(this,t,n,r,i);var o=t.directives.map((function(e){return a.directiveToStmt(e)}));t.body=o.concat(t.body),delete t.directives},n.pushClassMethod=function(e,t,n,r,i,a){this.parseMethod(t,n,r,i,a,"ClassMethod",!0),t.typeParameters&&(t.value.typeParameters=t.typeParameters,delete t.typeParameters),e.body.push(t)},n.parseExprAtom=function(t){switch(this.state.type){case iE.regexp:return this.estreeParseRegExpLiteral(this.state.value);case iE.num:case iE.string:return this.estreeParseLiteral(this.state.value);case iE._null:return this.estreeParseLiteral(null);case iE._true:return this.estreeParseLiteral(!0);case iE._false:return this.estreeParseLiteral(!1);default:return e.prototype.parseExprAtom.call(this,t)}},n.parseLiteral=function(t,n,r,i){var a=e.prototype.parseLiteral.call(this,t,n,r,i);return a.raw=a.extra.raw,delete a.extra,a},n.parseFunctionBody=function(t,n,r){void 0===r&&(r=!1),e.prototype.parseFunctionBody.call(this,t,n,r),t.expression="BlockStatement"!==t.body.type},n.parseMethod=function(t,n,r,i,a,o,s){void 0===s&&(s=!1);var u=this.startNode();return u.kind=t.kind,(u=e.prototype.parseMethod.call(this,u,n,r,i,a,o,s)).type="FunctionExpression",delete u.kind,t.value=u,o="ClassMethod"===o?"MethodDefinition":o,this.finishNode(t,o)},n.parseObjectMethod=function(t,n,r,i,a){var o=e.prototype.parseObjectMethod.call(this,t,n,r,i,a);return o&&(o.type="Property","method"===o.kind&&(o.kind="init"),o.shorthand=!1),o},n.parseObjectProperty=function(t,n,r,i,a){var o=e.prototype.parseObjectProperty.call(this,t,n,r,i,a);return o&&(o.kind="init",o.type="Property"),o},n.toAssignable=function(t,n,r){return cE(t)?(this.toAssignable(t.value,n,r),t):e.prototype.toAssignable.call(this,t,n,r)},n.toAssignableObjectExpressionProp=function(t,n,r){if("get"===t.kind||"set"===t.kind)throw this.raise(t.key.start,"Object pattern can't contain getter or setter");if(t.method)throw this.raise(t.key.start,"Object pattern can't contain methods");e.prototype.toAssignableObjectExpressionProp.call(this,t,n,r)},t}(e)},jsx:function(e){return function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var n=t.prototype;return n.jsxReadToken=function(){for(var t="",n=this.state.pos;;){if(this.state.pos>=this.length)throw this.raise(this.state.start,"Unterminated JSX contents");var r=this.input.charCodeAt(this.state.pos);switch(r){case 60:case 123:return this.state.pos===this.state.start?60===r&&this.state.exprAllowed?(++this.state.pos,this.finishToken(iE.jsxTagStart)):e.prototype.getTokenFromCode.call(this,r):(t+=this.input.slice(n,this.state.pos),this.finishToken(iE.jsxText,t));case 38:t+=this.input.slice(n,this.state.pos),t+=this.jsxReadEntity(),n=this.state.pos;break;default:fE(r)?(t+=this.input.slice(n,this.state.pos),t+=this.jsxReadNewLine(!0),n=this.state.pos):++this.state.pos}}},n.jsxReadNewLine=function(e){var t,n=this.input.charCodeAt(this.state.pos);return++this.state.pos,13===n&&10===this.input.charCodeAt(this.state.pos)?(++this.state.pos,t=e?"\n":"\r\n"):t=String.fromCharCode(n),++this.state.curLine,this.state.lineStart=this.state.pos,t},n.jsxReadString=function(e){for(var t="",n=++this.state.pos;;){if(this.state.pos>=this.length)throw this.raise(this.state.start,"Unterminated string constant");var r=this.input.charCodeAt(this.state.pos);if(r===e)break;38===r?(t+=this.input.slice(n,this.state.pos),t+=this.jsxReadEntity(),n=this.state.pos):fE(r)?(t+=this.input.slice(n,this.state.pos),t+=this.jsxReadNewLine(!1),n=this.state.pos):++this.state.pos}return t+=this.input.slice(n,this.state.pos++),this.finishToken(iE.string,t)},n.jsxReadEntity=function(){for(var e,t="",n=0,r=this.input[this.state.pos],i=++this.state.pos;this.state.pos<this.length&&n++<10;){if(";"===(r=this.input[this.state.pos++])){"#"===t[0]?"x"===t[1]?(t=t.substr(2),VE.test(t)&&(e=String.fromCodePoint(parseInt(t,16)))):(t=t.substr(1),WE.test(t)&&(e=String.fromCodePoint(parseInt(t,10)))):e=UE[t];break}t+=r}return e||(this.state.pos=i,"&")},n.jsxReadWord=function(){var e,t=this.state.pos;do{e=this.input.charCodeAt(++this.state.pos)}while(BE(e)||45===e);return this.finishToken(iE.jsxName,this.input.slice(t,this.state.pos))},n.jsxParseIdentifier=function(){var e=this.startNode();return this.match(iE.jsxName)?e.name=this.state.value:this.state.type.keyword?e.name=this.state.type.keyword:this.unexpected(),this.next(),this.finishNode(e,"JSXIdentifier")},n.jsxParseNamespacedName=function(){var e=this.state.start,t=this.state.startLoc,n=this.jsxParseIdentifier();if(!this.eat(iE.colon))return n;var r=this.startNodeAt(e,t);return r.namespace=n,r.name=this.jsxParseIdentifier(),this.finishNode(r,"JSXNamespacedName")},n.jsxParseElementName=function(){var e=this.state.start,t=this.state.startLoc,n=this.jsxParseNamespacedName();if("JSXNamespacedName"===n.type)return n;for(;this.eat(iE.dot);){var r=this.startNodeAt(e,t);r.object=n,r.property=this.jsxParseIdentifier(),n=this.finishNode(r,"JSXMemberExpression")}return n},n.jsxParseAttributeValue=function(){var e;switch(this.state.type){case iE.braceL:return e=this.startNode(),this.next(),"JSXEmptyExpression"===(e=this.jsxParseExpressionContainer(e)).expression.type&&this.raise(e.start,"JSX attributes must only be assigned a non-empty expression"),e;case iE.jsxTagStart:case iE.string:return this.parseExprAtom();default:throw this.raise(this.state.start,"JSX value should be either an expression or a quoted JSX text")}},n.jsxParseEmptyExpression=function(){var e=this.startNodeAt(this.state.lastTokEnd,this.state.lastTokEndLoc);return this.finishNodeAt(e,"JSXEmptyExpression",this.state.start,this.state.startLoc)},n.jsxParseSpreadChild=function(e){return this.next(),e.expression=this.parseExpression(),this.expect(iE.braceR),this.finishNode(e,"JSXSpreadChild")},n.jsxParseExpressionContainer=function(e){return this.match(iE.braceR)?e.expression=this.jsxParseEmptyExpression():e.expression=this.parseExpression(),this.expect(iE.braceR),this.finishNode(e,"JSXExpressionContainer")},n.jsxParseAttribute=function(){var e=this.startNode();return this.eat(iE.braceL)?(this.expect(iE.ellipsis),e.argument=this.parseMaybeAssign(),this.expect(iE.braceR),this.finishNode(e,"JSXSpreadAttribute")):(e.name=this.jsxParseNamespacedName(),e.value=this.eat(iE.eq)?this.jsxParseAttributeValue():null,this.finishNode(e,"JSXAttribute"))},n.jsxParseOpeningElementAt=function(e,t){var n=this.startNodeAt(e,t);return this.match(iE.jsxTagEnd)?(this.expect(iE.jsxTagEnd),this.finishNode(n,"JSXOpeningFragment")):(n.name=this.jsxParseElementName(),this.jsxParseOpeningElementAfterName(n))},n.jsxParseOpeningElementAfterName=function(e){for(var t=[];!this.match(iE.slash)&&!this.match(iE.jsxTagEnd);)t.push(this.jsxParseAttribute());return e.attributes=t,e.selfClosing=this.eat(iE.slash),this.expect(iE.jsxTagEnd),this.finishNode(e,"JSXOpeningElement")},n.jsxParseClosingElementAt=function(e,t){var n=this.startNodeAt(e,t);return this.match(iE.jsxTagEnd)?(this.expect(iE.jsxTagEnd),this.finishNode(n,"JSXClosingFragment")):(n.name=this.jsxParseElementName(),this.expect(iE.jsxTagEnd),this.finishNode(n,"JSXClosingElement"))},n.jsxParseElementAt=function(e,t){var n=this.startNodeAt(e,t),r=[],i=this.jsxParseOpeningElementAt(e,t),a=null;if(!i.selfClosing){e:for(;;)switch(this.state.type){case iE.jsxTagStart:if(e=this.state.start,t=this.state.startLoc,this.next(),this.eat(iE.slash)){a=this.jsxParseClosingElementAt(e,t);break e}r.push(this.jsxParseElementAt(e,t));break;case iE.jsxText:r.push(this.parseExprAtom());break;case iE.braceL:var o=this.startNode();this.next(),this.match(iE.ellipsis)?r.push(this.jsxParseSpreadChild(o)):r.push(this.jsxParseExpressionContainer(o));break;default:throw this.unexpected()}GE(i)&&!GE(a)?this.raise(a.start,"Expected corresponding JSX closing tag for <>"):!GE(i)&&GE(a)?this.raise(a.start,"Expected corresponding JSX closing tag for <"+HE(i.name)+">"):GE(i)||GE(a)||HE(a.name)!==HE(i.name)&&this.raise(a.start,"Expected corresponding JSX closing tag for <"+HE(i.name)+">")}if(GE(i)?(n.openingFragment=i,n.closingFragment=a):(n.openingElement=i,n.closingElement=a),n.children=r,this.isRelational("<"))throw this.raise(this.state.start,"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?");return GE(i)?this.finishNode(n,"JSXFragment"):this.finishNode(n,"JSXElement")},n.jsxParseElement=function(){var e=this.state.start,t=this.state.startLoc;return this.next(),this.jsxParseElementAt(e,t)},n.parseExprAtom=function(t){return this.match(iE.jsxText)?this.parseLiteral(this.state.value,"JSXText"):this.match(iE.jsxTagStart)?this.jsxParseElement():this.isRelational("<")&&33!==this.input.charCodeAt(this.state.pos)?(this.finishToken(iE.jsxTagStart),this.jsxParseElement()):e.prototype.parseExprAtom.call(this,t)},n.getTokenFromCode=function(t){if(this.state.inPropertyName)return e.prototype.getTokenFromCode.call(this,t);var n=this.curContext();if(n===vE.j_expr)return this.jsxReadToken();if(n===vE.j_oTag||n===vE.j_cTag){if(OE(t))return this.jsxReadWord();if(62===t)return++this.state.pos,this.finishToken(iE.jsxTagEnd);if((34===t||39===t)&&n===vE.j_oTag)return this.jsxReadString(t)}return 60===t&&this.state.exprAllowed&&33!==this.input.charCodeAt(this.state.pos+1)?(++this.state.pos,this.finishToken(iE.jsxTagStart)):e.prototype.getTokenFromCode.call(this,t)},n.updateContext=function(t){if(this.match(iE.braceL)){var n=this.curContext();n===vE.j_oTag?this.state.context.push(vE.braceExpression):n===vE.j_expr?this.state.context.push(vE.templateQuasi):e.prototype.updateContext.call(this,t),this.state.exprAllowed=!0}else{if(!this.match(iE.slash)||t!==iE.jsxTagStart)return e.prototype.updateContext.call(this,t);this.state.context.length-=2,this.state.context.push(vE.j_cTag),this.state.exprAllowed=!1}},t}(e)},flow:function(e){return function(e){function t(t,n){var r;return(r=e.call(this,t,n)||this).flowPragma=void 0,r}i(t,e);var n=t.prototype;return n.shouldParseTypes=function(){return this.getPluginOption("flow","all")||"flow"===this.flowPragma},n.shouldParseEnums=function(){return!!this.getPluginOption("flow","enums")},n.finishToken=function(t,n){return t!==iE.string&&t!==iE.semi&&t!==iE.interpreterDirective&&void 0===this.flowPragma&&(this.flowPragma=null),e.prototype.finishToken.call(this,t,n)},n.addComment=function(t){if(void 0===this.flowPragma){var n=jE.exec(t.value);if(n)if("flow"===n[1])this.flowPragma="flow";else{if("noflow"!==n[1])throw new Error("Unexpected flow pragma");this.flowPragma="noflow"}else;}return e.prototype.addComment.call(this,t)},n.flowParseTypeInitialiser=function(e){var t=this.state.inType;this.state.inType=!0,this.expect(e||iE.colon);var n=this.flowParseType();return this.state.inType=t,n},n.flowParsePredicate=function(){var e=this.startNode(),t=this.state.startLoc,n=this.state.start;this.expect(iE.modulo);var r=this.state.startLoc;return this.expectContextual("checks"),t.line===r.line&&t.column===r.column-1||this.raise(n,"Spaces between ´%´ and ´checks´ are not allowed here."),this.eat(iE.parenL)?(e.value=this.parseExpression(),this.expect(iE.parenR),this.finishNode(e,"DeclaredPredicate")):this.finishNode(e,"InferredPredicate")},n.flowParseTypeAndPredicateInitialiser=function(){var e=this.state.inType;this.state.inType=!0,this.expect(iE.colon);var t=null,n=null;return this.match(iE.modulo)?(this.state.inType=e,n=this.flowParsePredicate()):(t=this.flowParseType(),this.state.inType=e,this.match(iE.modulo)&&(n=this.flowParsePredicate())),[t,n]},n.flowParseDeclareClass=function(e){return this.next(),this.flowParseInterfaceish(e,!0),this.finishNode(e,"DeclareClass")},n.flowParseDeclareFunction=function(e){this.next();var t=e.id=this.parseIdentifier(),n=this.startNode(),r=this.startNode();this.isRelational("<")?n.typeParameters=this.flowParseTypeParameterDeclaration():n.typeParameters=null,this.expect(iE.parenL);var i=this.flowParseFunctionTypeParams();n.params=i.params,n.rest=i.rest,this.expect(iE.parenR);var a=this.flowParseTypeAndPredicateInitialiser();return n.returnType=a[0],e.predicate=a[1],r.typeAnnotation=this.finishNode(n,"FunctionTypeAnnotation"),t.typeAnnotation=this.finishNode(r,"TypeAnnotation"),this.resetEndLocation(t),this.semicolon(),this.finishNode(e,"DeclareFunction")},n.flowParseDeclare=function(e,t){if(this.match(iE._class))return this.flowParseDeclareClass(e);if(this.match(iE._function))return this.flowParseDeclareFunction(e);if(this.match(iE._var))return this.flowParseDeclareVariable(e);if(this.eatContextual("module"))return this.match(iE.dot)?this.flowParseDeclareModuleExports(e):(t&&this.raise(this.state.lastTokStart,"`declare module` cannot be used inside another `declare module`"),this.flowParseDeclareModule(e));if(this.isContextual("type"))return this.flowParseDeclareTypeAlias(e);if(this.isContextual("opaque"))return this.flowParseDeclareOpaqueType(e);if(this.isContextual("interface"))return this.flowParseDeclareInterface(e);if(this.match(iE._export))return this.flowParseDeclareExportDeclaration(e,t);throw this.unexpected()},n.flowParseDeclareVariable=function(e){return this.next(),e.id=this.flowParseTypeAnnotatableIdentifier(!0),this.scope.declareName(e.id.name,5,e.id.start),this.semicolon(),this.finishNode(e,"DeclareVariable")},n.flowParseDeclareModule=function(e){var t=this;this.scope.enter(0),this.match(iE.string)?e.id=this.parseExprAtom():e.id=this.parseIdentifier();var n=e.body=this.startNode(),r=n.body=[];for(this.expect(iE.braceL);!this.match(iE.braceR);){var i=this.startNode();this.match(iE._import)?(this.next(),this.isContextual("type")||this.match(iE._typeof)||this.raise(this.state.lastTokStart,"Imports within a `declare module` body must always be `import type` or `import typeof`"),this.parseImport(i)):(this.expectContextual("declare","Only declares and type imports are allowed inside declare module"),i=this.flowParseDeclare(i,!0)),r.push(i)}this.scope.exit(),this.expect(iE.braceR),this.finishNode(n,"BlockStatement");var a=null,o=!1,s="Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module";return r.forEach((function(e){!function(e){return"DeclareExportAllDeclaration"===e.type||"DeclareExportDeclaration"===e.type&&(!e.declaration||"TypeAlias"!==e.declaration.type&&"InterfaceDeclaration"!==e.declaration.type)}(e)?"DeclareModuleExports"===e.type&&(o&&t.raise(e.start,"Duplicate `declare module.exports` statement"),"ES"===a&&t.raise(e.start,s),a="CommonJS",o=!0):("CommonJS"===a&&t.raise(e.start,s),a="ES")})),e.kind=a||"CommonJS",this.finishNode(e,"DeclareModule")},n.flowParseDeclareExportDeclaration=function(e,t){if(this.expect(iE._export),this.eat(iE._default))return this.match(iE._function)||this.match(iE._class)?e.declaration=this.flowParseDeclare(this.startNode()):(e.declaration=this.flowParseType(),this.semicolon()),e.default=!0,this.finishNode(e,"DeclareExportDeclaration");if(this.match(iE._const)||this.isLet()||(this.isContextual("type")||this.isContextual("interface"))&&!t){var n=this.state.value,r=LE[n];this.unexpected(this.state.start,"`declare export "+n+"` is not supported. Use `"+r+"` instead")}if(this.match(iE._var)||this.match(iE._function)||this.match(iE._class)||this.isContextual("opaque"))return e.declaration=this.flowParseDeclare(this.startNode()),e.default=!1,this.finishNode(e,"DeclareExportDeclaration");if(this.match(iE.star)||this.match(iE.braceL)||this.isContextual("interface")||this.isContextual("type")||this.isContextual("opaque"))return"ExportNamedDeclaration"===(e=this.parseExport(e)).type&&(e.type="ExportDeclaration",e.default=!1,delete e.exportKind),e.type="Declare"+e.type,e;throw this.unexpected()},n.flowParseDeclareModuleExports=function(e){return this.next(),this.expectContextual("exports"),e.typeAnnotation=this.flowParseTypeAnnotation(),this.semicolon(),this.finishNode(e,"DeclareModuleExports")},n.flowParseDeclareTypeAlias=function(e){return this.next(),this.flowParseTypeAlias(e),e.type="DeclareTypeAlias",e},n.flowParseDeclareOpaqueType=function(e){return this.next(),this.flowParseOpaqueType(e,!0),e.type="DeclareOpaqueType",e},n.flowParseDeclareInterface=function(e){return this.next(),this.flowParseInterfaceish(e),this.finishNode(e,"DeclareInterface")},n.flowParseInterfaceish=function(e,t){if(void 0===t&&(t=!1),e.id=this.flowParseRestrictedIdentifier(!t,!0),this.scope.declareName(e.id.name,t?17:9,e.id.start),this.isRelational("<")?e.typeParameters=this.flowParseTypeParameterDeclaration():e.typeParameters=null,e.extends=[],e.implements=[],e.mixins=[],this.eat(iE._extends))do{e.extends.push(this.flowParseInterfaceExtends())}while(!t&&this.eat(iE.comma));if(this.isContextual("mixins")){this.next();do{e.mixins.push(this.flowParseInterfaceExtends())}while(this.eat(iE.comma))}if(this.isContextual("implements")){this.next();do{e.implements.push(this.flowParseInterfaceExtends())}while(this.eat(iE.comma))}e.body=this.flowParseObjectType({allowStatic:t,allowExact:!1,allowSpread:!1,allowProto:t,allowInexact:!1})},n.flowParseInterfaceExtends=function(){var e=this.startNode();return e.id=this.flowParseQualifiedTypeIdentifier(),this.isRelational("<")?e.typeParameters=this.flowParseTypeParameterInstantiation():e.typeParameters=null,this.finishNode(e,"InterfaceExtends")},n.flowParseInterface=function(e){return this.flowParseInterfaceish(e),this.finishNode(e,"InterfaceDeclaration")},n.checkNotUnderscore=function(e){"_"===e&&this.raise(this.state.start,"`_` is only allowed as a type argument to call or new")},n.checkReservedType=function(e,t,n){NE.has(e)&&(n?this.raise(t,"Cannot overwrite reserved type "+e):this.raise(t,"Unexpected reserved type "+e))},n.flowParseRestrictedIdentifier=function(e,t){return this.checkReservedType(this.state.value,this.state.start,t),this.parseIdentifier(e)},n.flowParseTypeAlias=function(e){return e.id=this.flowParseRestrictedIdentifier(!1,!0),this.scope.declareName(e.id.name,9,e.id.start),this.isRelational("<")?e.typeParameters=this.flowParseTypeParameterDeclaration():e.typeParameters=null,e.right=this.flowParseTypeInitialiser(iE.eq),this.semicolon(),this.finishNode(e,"TypeAlias")},n.flowParseOpaqueType=function(e,t){return this.expectContextual("type"),e.id=this.flowParseRestrictedIdentifier(!0,!0),this.scope.declareName(e.id.name,9,e.id.start),this.isRelational("<")?e.typeParameters=this.flowParseTypeParameterDeclaration():e.typeParameters=null,e.supertype=null,this.match(iE.colon)&&(e.supertype=this.flowParseTypeInitialiser(iE.colon)),e.impltype=null,t||(e.impltype=this.flowParseTypeInitialiser(iE.eq)),this.semicolon(),this.finishNode(e,"OpaqueType")},n.flowParseTypeParameter=function(e){void 0===e&&(e=!1);var t=this.state.start,n=this.startNode(),r=this.flowParseVariance(),i=this.flowParseTypeAnnotatableIdentifier();return n.name=i.name,n.variance=r,n.bound=i.typeAnnotation,this.match(iE.eq)?(this.eat(iE.eq),n.default=this.flowParseType()):e&&this.raise(t,"Type parameter declaration needs a default, since a preceding type parameter declaration has a default."),this.finishNode(n,"TypeParameter")},n.flowParseTypeParameterDeclaration=function(){var e=this.state.inType,t=this.startNode();t.params=[],this.state.inType=!0,this.isRelational("<")||this.match(iE.jsxTagStart)?this.next():this.unexpected();var n=!1;do{var r=this.flowParseTypeParameter(n);t.params.push(r),r.default&&(n=!0),this.isRelational(">")||this.expect(iE.comma)}while(!this.isRelational(">"));return this.expectRelational(">"),this.state.inType=e,this.finishNode(t,"TypeParameterDeclaration")},n.flowParseTypeParameterInstantiation=function(){var e=this.startNode(),t=this.state.inType;e.params=[],this.state.inType=!0,this.expectRelational("<");var n=this.state.noAnonFunctionType;for(this.state.noAnonFunctionType=!1;!this.isRelational(">");)e.params.push(this.flowParseType()),this.isRelational(">")||this.expect(iE.comma);return this.state.noAnonFunctionType=n,this.expectRelational(">"),this.state.inType=t,this.finishNode(e,"TypeParameterInstantiation")},n.flowParseTypeParameterInstantiationCallOrNew=function(){var e=this.startNode(),t=this.state.inType;for(e.params=[],this.state.inType=!0,this.expectRelational("<");!this.isRelational(">");)e.params.push(this.flowParseTypeOrImplicitInstantiation()),this.isRelational(">")||this.expect(iE.comma);return this.expectRelational(">"),this.state.inType=t,this.finishNode(e,"TypeParameterInstantiation")},n.flowParseInterfaceType=function(){var e=this.startNode();if(this.expectContextual("interface"),e.extends=[],this.eat(iE._extends))do{e.extends.push(this.flowParseInterfaceExtends())}while(this.eat(iE.comma));return e.body=this.flowParseObjectType({allowStatic:!1,allowExact:!1,allowSpread:!1,allowProto:!1,allowInexact:!1}),this.finishNode(e,"InterfaceTypeAnnotation")},n.flowParseObjectPropertyKey=function(){return this.match(iE.num)||this.match(iE.string)?this.parseExprAtom():this.parseIdentifier(!0)},n.flowParseObjectTypeIndexer=function(e,t,n){return e.static=t,this.lookahead().type===iE.colon?(e.id=this.flowParseObjectPropertyKey(),e.key=this.flowParseTypeInitialiser()):(e.id=null,e.key=this.flowParseType()),this.expect(iE.bracketR),e.value=this.flowParseTypeInitialiser(),e.variance=n,this.finishNode(e,"ObjectTypeIndexer")},n.flowParseObjectTypeInternalSlot=function(e,t){return e.static=t,e.id=this.flowParseObjectPropertyKey(),this.expect(iE.bracketR),this.expect(iE.bracketR),this.isRelational("<")||this.match(iE.parenL)?(e.method=!0,e.optional=!1,e.value=this.flowParseObjectTypeMethodish(this.startNodeAt(e.start,e.loc.start))):(e.method=!1,this.eat(iE.question)&&(e.optional=!0),e.value=this.flowParseTypeInitialiser()),this.finishNode(e,"ObjectTypeInternalSlot")},n.flowParseObjectTypeMethodish=function(e){for(e.params=[],e.rest=null,e.typeParameters=null,this.isRelational("<")&&(e.typeParameters=this.flowParseTypeParameterDeclaration()),this.expect(iE.parenL);!this.match(iE.parenR)&&!this.match(iE.ellipsis);)e.params.push(this.flowParseFunctionTypeParam()),this.match(iE.parenR)||this.expect(iE.comma);return this.eat(iE.ellipsis)&&(e.rest=this.flowParseFunctionTypeParam()),this.expect(iE.parenR),e.returnType=this.flowParseTypeInitialiser(),this.finishNode(e,"FunctionTypeAnnotation")},n.flowParseObjectTypeCallProperty=function(e,t){var n=this.startNode();return e.static=t,e.value=this.flowParseObjectTypeMethodish(n),this.finishNode(e,"ObjectTypeCallProperty")},n.flowParseObjectType=function(e){var t=e.allowStatic,n=e.allowExact,r=e.allowSpread,i=e.allowProto,a=e.allowInexact,o=this.state.inType;this.state.inType=!0;var s,u,l=this.startNode();l.callProperties=[],l.properties=[],l.indexers=[],l.internalSlots=[];var c=!1;for(n&&this.match(iE.braceBarL)?(this.expect(iE.braceBarL),s=iE.braceBarR,u=!0):(this.expect(iE.braceL),s=iE.braceR,u=!1),l.exact=u;!this.match(s);){var p=!1,h=null,f=null,d=this.startNode();if(i&&this.isContextual("proto")){var m=this.lookahead();m.type!==iE.colon&&m.type!==iE.question&&(this.next(),h=this.state.start,t=!1)}if(t&&this.isContextual("static")){var y=this.lookahead();y.type!==iE.colon&&y.type!==iE.question&&(this.next(),p=!0)}var v=this.flowParseVariance();if(this.eat(iE.bracketL))null!=h&&this.unexpected(h),this.eat(iE.bracketL)?(v&&this.unexpected(v.start),l.internalSlots.push(this.flowParseObjectTypeInternalSlot(d,p))):l.indexers.push(this.flowParseObjectTypeIndexer(d,p,v));else if(this.match(iE.parenL)||this.isRelational("<"))null!=h&&this.unexpected(h),v&&this.unexpected(v.start),l.callProperties.push(this.flowParseObjectTypeCallProperty(d,p));else{var g,b="init";if(this.isContextual("get")||this.isContextual("set")){var E=this.lookahead();E.type!==iE.name&&E.type!==iE.string&&E.type!==iE.num||(b=this.state.value,this.next())}var A=this.flowParseObjectTypeProperty(d,p,h,v,b,r,null!=(g=a)?g:!u);null===A?(c=!0,f=this.state.lastTokStart):l.properties.push(A)}this.flowObjectTypeSemicolon(),!f||this.match(iE.braceR)||this.match(iE.braceBarR)||this.raise(f,"Explicit inexact syntax must appear at the end of an inexact object")}this.expect(s),r&&(l.inexact=c);var D=this.finishNode(l,"ObjectTypeAnnotation");return this.state.inType=o,D},n.flowParseObjectTypeProperty=function(e,t,n,r,i,a,o){if(this.eat(iE.ellipsis))return this.match(iE.comma)||this.match(iE.semi)||this.match(iE.braceR)||this.match(iE.braceBarR)?(a?o||this.raise(this.state.lastTokStart,"Explicit inexact syntax cannot appear inside an explicit exact object type"):this.raise(this.state.lastTokStart,"Explicit inexact syntax cannot appear in class or interface definitions"),r&&this.raise(r.start,"Explicit inexact syntax cannot have variance"),null):(a||this.raise(this.state.lastTokStart,"Spread operator cannot appear in class or interface definitions"),null!=n&&this.unexpected(n),r&&this.raise(r.start,"Spread properties cannot have variance"),e.argument=this.flowParseType(),this.finishNode(e,"ObjectTypeSpreadProperty"));e.key=this.flowParseObjectPropertyKey(),e.static=t,e.proto=null!=n,e.kind=i;var s=!1;return this.isRelational("<")||this.match(iE.parenL)?(e.method=!0,null!=n&&this.unexpected(n),r&&this.unexpected(r.start),e.value=this.flowParseObjectTypeMethodish(this.startNodeAt(e.start,e.loc.start)),"get"!==i&&"set"!==i||this.flowCheckGetterSetterParams(e)):("init"!==i&&this.unexpected(),e.method=!1,this.eat(iE.question)&&(s=!0),e.value=this.flowParseTypeInitialiser(),e.variance=r),e.optional=s,this.finishNode(e,"ObjectTypeProperty")},n.flowCheckGetterSetterParams=function(e){var t="get"===e.kind?0:1,n=e.start;e.value.params.length+(e.value.rest?1:0)!==t&&("get"===e.kind?this.raise(n,"getter must not have any formal parameters"):this.raise(n,"setter must have exactly one formal parameter")),"set"===e.kind&&e.value.rest&&this.raise(n,"setter function argument must not be a rest parameter")},n.flowObjectTypeSemicolon=function(){this.eat(iE.semi)||this.eat(iE.comma)||this.match(iE.braceR)||this.match(iE.braceBarR)||this.unexpected()},n.flowParseQualifiedTypeIdentifier=function(e,t,n){e=e||this.state.start,t=t||this.state.startLoc;for(var r=n||this.flowParseRestrictedIdentifier(!0);this.eat(iE.dot);){var i=this.startNodeAt(e,t);i.qualification=r,i.id=this.flowParseRestrictedIdentifier(!0),r=this.finishNode(i,"QualifiedTypeIdentifier")}return r},n.flowParseGenericType=function(e,t,n){var r=this.startNodeAt(e,t);return r.typeParameters=null,r.id=this.flowParseQualifiedTypeIdentifier(e,t,n),this.isRelational("<")&&(r.typeParameters=this.flowParseTypeParameterInstantiation()),this.finishNode(r,"GenericTypeAnnotation")},n.flowParseTypeofType=function(){var e=this.startNode();return this.expect(iE._typeof),e.argument=this.flowParsePrimaryType(),this.finishNode(e,"TypeofTypeAnnotation")},n.flowParseTupleType=function(){var e=this.startNode();for(e.types=[],this.expect(iE.bracketL);this.state.pos<this.length&&!this.match(iE.bracketR)&&(e.types.push(this.flowParseType()),!this.match(iE.bracketR));)this.expect(iE.comma);return this.expect(iE.bracketR),this.finishNode(e,"TupleTypeAnnotation")},n.flowParseFunctionTypeParam=function(){var e=null,t=!1,n=null,r=this.startNode(),i=this.lookahead();return i.type===iE.colon||i.type===iE.question?(e=this.parseIdentifier(),this.eat(iE.question)&&(t=!0),n=this.flowParseTypeInitialiser()):n=this.flowParseType(),r.name=e,r.optional=t,r.typeAnnotation=n,this.finishNode(r,"FunctionTypeParam")},n.reinterpretTypeAsFunctionTypeParam=function(e){var t=this.startNodeAt(e.start,e.loc.start);return t.name=null,t.optional=!1,t.typeAnnotation=e,this.finishNode(t,"FunctionTypeParam")},n.flowParseFunctionTypeParams=function(e){void 0===e&&(e=[]);for(var t=null;!this.match(iE.parenR)&&!this.match(iE.ellipsis);)e.push(this.flowParseFunctionTypeParam()),this.match(iE.parenR)||this.expect(iE.comma);return this.eat(iE.ellipsis)&&(t=this.flowParseFunctionTypeParam()),{params:e,rest:t}},n.flowIdentToTypeAnnotation=function(e,t,n,r){switch(r.name){case"any":return this.finishNode(n,"AnyTypeAnnotation");case"bool":case"boolean":return this.finishNode(n,"BooleanTypeAnnotation");case"mixed":return this.finishNode(n,"MixedTypeAnnotation");case"empty":return this.finishNode(n,"EmptyTypeAnnotation");case"number":return this.finishNode(n,"NumberTypeAnnotation");case"string":return this.finishNode(n,"StringTypeAnnotation");default:return this.checkNotUnderscore(r.name),this.flowParseGenericType(e,t,r)}},n.flowParsePrimaryType=function(){var t,n,r=this.state.start,i=this.state.startLoc,a=this.startNode(),o=!1,s=this.state.noAnonFunctionType;switch(this.state.type){case iE.name:return this.isContextual("interface")?this.flowParseInterfaceType():this.flowIdentToTypeAnnotation(r,i,a,this.parseIdentifier());case iE.braceL:return this.flowParseObjectType({allowStatic:!1,allowExact:!1,allowSpread:!0,allowProto:!1,allowInexact:!0});case iE.braceBarL:return this.flowParseObjectType({allowStatic:!1,allowExact:!0,allowSpread:!0,allowProto:!1,allowInexact:!1});case iE.bracketL:return this.state.noAnonFunctionType=!1,n=this.flowParseTupleType(),this.state.noAnonFunctionType=s,n;case iE.relational:if("<"===this.state.value)return a.typeParameters=this.flowParseTypeParameterDeclaration(),this.expect(iE.parenL),t=this.flowParseFunctionTypeParams(),a.params=t.params,a.rest=t.rest,this.expect(iE.parenR),this.expect(iE.arrow),a.returnType=this.flowParseType(),this.finishNode(a,"FunctionTypeAnnotation");break;case iE.parenL:if(this.next(),!this.match(iE.parenR)&&!this.match(iE.ellipsis))if(this.match(iE.name)){var u=this.lookahead().type;o=u!==iE.question&&u!==iE.colon}else o=!0;if(o){if(this.state.noAnonFunctionType=!1,n=this.flowParseType(),this.state.noAnonFunctionType=s,this.state.noAnonFunctionType||!(this.match(iE.comma)||this.match(iE.parenR)&&this.lookahead().type===iE.arrow))return this.expect(iE.parenR),n;this.eat(iE.comma)}return t=n?this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(n)]):this.flowParseFunctionTypeParams(),a.params=t.params,a.rest=t.rest,this.expect(iE.parenR),this.expect(iE.arrow),a.returnType=this.flowParseType(),a.typeParameters=null,this.finishNode(a,"FunctionTypeAnnotation");case iE.string:return this.parseLiteral(this.state.value,"StringLiteralTypeAnnotation");case iE._true:case iE._false:return a.value=this.match(iE._true),this.next(),this.finishNode(a,"BooleanLiteralTypeAnnotation");case iE.plusMin:if("-"===this.state.value){if(this.next(),this.match(iE.num))return this.parseLiteral(-this.state.value,"NumberLiteralTypeAnnotation",a.start,a.loc.start);if(this.match(iE.bigint))return this.parseLiteral(-this.state.value,"BigIntLiteralTypeAnnotation",a.start,a.loc.start);throw this.raise(this.state.start,'Unexpected token, expected "number" or "bigint"')}this.unexpected();case iE.num:return this.parseLiteral(this.state.value,"NumberLiteralTypeAnnotation");case iE.bigint:return this.parseLiteral(this.state.value,"BigIntLiteralTypeAnnotation");case iE._void:return this.next(),this.finishNode(a,"VoidTypeAnnotation");case iE._null:return this.next(),this.finishNode(a,"NullLiteralTypeAnnotation");case iE._this:return this.next(),this.finishNode(a,"ThisTypeAnnotation");case iE.star:return this.next(),this.finishNode(a,"ExistsTypeAnnotation");default:if("typeof"===this.state.type.keyword)return this.flowParseTypeofType();if(this.state.type.keyword){var l=this.state.type.label;return this.next(),e.prototype.createIdentifier.call(this,a,l)}}throw this.unexpected()},n.flowParsePostfixType=function(){for(var e=this.state.start,t=this.state.startLoc,n=this.flowParsePrimaryType();this.match(iE.bracketL)&&!this.canInsertSemicolon();){var r=this.startNodeAt(e,t);r.elementType=n,this.expect(iE.bracketL),this.expect(iE.bracketR),n=this.finishNode(r,"ArrayTypeAnnotation")}return n},n.flowParsePrefixType=function(){var e=this.startNode();return this.eat(iE.question)?(e.typeAnnotation=this.flowParsePrefixType(),this.finishNode(e,"NullableTypeAnnotation")):this.flowParsePostfixType()},n.flowParseAnonFunctionWithoutParens=function(){var e=this.flowParsePrefixType();if(!this.state.noAnonFunctionType&&this.eat(iE.arrow)){var t=this.startNodeAt(e.start,e.loc.start);return t.params=[this.reinterpretTypeAsFunctionTypeParam(e)],t.rest=null,t.returnType=this.flowParseType(),t.typeParameters=null,this.finishNode(t,"FunctionTypeAnnotation")}return e},n.flowParseIntersectionType=function(){var e=this.startNode();this.eat(iE.bitwiseAND);var t=this.flowParseAnonFunctionWithoutParens();for(e.types=[t];this.eat(iE.bitwiseAND);)e.types.push(this.flowParseAnonFunctionWithoutParens());return 1===e.types.length?t:this.finishNode(e,"IntersectionTypeAnnotation")},n.flowParseUnionType=function(){var e=this.startNode();this.eat(iE.bitwiseOR);var t=this.flowParseIntersectionType();for(e.types=[t];this.eat(iE.bitwiseOR);)e.types.push(this.flowParseIntersectionType());return 1===e.types.length?t:this.finishNode(e,"UnionTypeAnnotation")},n.flowParseType=function(){var e=this.state.inType;this.state.inType=!0;var t=this.flowParseUnionType();return this.state.inType=e,this.state.exprAllowed=this.state.exprAllowed||this.state.noAnonFunctionType,t},n.flowParseTypeOrImplicitInstantiation=function(){if(this.state.type===iE.name&&"_"===this.state.value){var e=this.state.start,t=this.state.startLoc,n=this.parseIdentifier();return this.flowParseGenericType(e,t,n)}return this.flowParseType()},n.flowParseTypeAnnotation=function(){var e=this.startNode();return e.typeAnnotation=this.flowParseTypeInitialiser(),this.finishNode(e,"TypeAnnotation")},n.flowParseTypeAnnotatableIdentifier=function(e){var t=e?this.parseIdentifier():this.flowParseRestrictedIdentifier();return this.match(iE.colon)&&(t.typeAnnotation=this.flowParseTypeAnnotation(),this.resetEndLocation(t)),t},n.typeCastToParameter=function(e){return e.expression.typeAnnotation=e.typeAnnotation,this.resetEndLocation(e.expression,e.typeAnnotation.end,e.typeAnnotation.loc.end),e.expression},n.flowParseVariance=function(){var e=null;return this.match(iE.plusMin)&&(e=this.startNode(),"+"===this.state.value?e.kind="plus":e.kind="minus",this.next(),this.finishNode(e,"Variance")),e},n.parseFunctionBody=function(t,n,r){var i=this;return void 0===r&&(r=!1),n?this.forwardNoArrowParamsConversionAt(t,(function(){return e.prototype.parseFunctionBody.call(i,t,!0,r)})):e.prototype.parseFunctionBody.call(this,t,!1,r)},n.parseFunctionBodyAndFinish=function(t,n,r){if(void 0===r&&(r=!1),this.match(iE.colon)){var i=this.startNode(),a=this.flowParseTypeAndPredicateInitialiser();i.typeAnnotation=a[0],t.predicate=a[1],t.returnType=i.typeAnnotation?this.finishNode(i,"TypeAnnotation"):null}e.prototype.parseFunctionBodyAndFinish.call(this,t,n,r)},n.parseStatement=function(t,n){if(this.state.strict&&this.match(iE.name)&&"interface"===this.state.value){var r=this.startNode();return this.next(),this.flowParseInterface(r)}if(this.shouldParseEnums()&&this.isContextual("enum")){var i=this.startNode();return this.next(),this.flowParseEnumDeclaration(i)}var a=e.prototype.parseStatement.call(this,t,n);return void 0!==this.flowPragma||this.isValidDirective(a)||(this.flowPragma=null),a},n.parseExpressionStatement=function(t,n){if("Identifier"===n.type)if("declare"===n.name){if(this.match(iE._class)||this.match(iE.name)||this.match(iE._function)||this.match(iE._var)||this.match(iE._export))return this.flowParseDeclare(t)}else if(this.match(iE.name)){if("interface"===n.name)return this.flowParseInterface(t);if("type"===n.name)return this.flowParseTypeAlias(t);if("opaque"===n.name)return this.flowParseOpaqueType(t,!1)}return e.prototype.parseExpressionStatement.call(this,t,n)},n.shouldParseExportDeclaration=function(){return this.isContextual("type")||this.isContextual("interface")||this.isContextual("opaque")||this.shouldParseEnums()&&this.isContextual("enum")||e.prototype.shouldParseExportDeclaration.call(this)},n.isExportDefaultSpecifier=function(){return(!this.match(iE.name)||!("type"===this.state.value||"interface"===this.state.value||"opaque"===this.state.value||this.shouldParseEnums()&&"enum"===this.state.value))&&e.prototype.isExportDefaultSpecifier.call(this)},n.parseExportDefaultExpression=function(){if(this.shouldParseEnums()&&this.isContextual("enum")){var t=this.startNode();return this.next(),this.flowParseEnumDeclaration(t)}return e.prototype.parseExportDefaultExpression.call(this)},n.parseConditional=function(t,n,r,i,a){var o=this;if(!this.match(iE.question))return t;if(a){var s=this.tryParse((function(){return e.prototype.parseConditional.call(o,t,n,r,i)}));return s.node?(s.error&&(this.state=s.failState),s.node):(a.start=s.error.pos||this.state.start,t)}this.expect(iE.question);var u=this.state.clone(),l=this.state.noArrowAt,c=this.startNodeAt(r,i),p=this.tryParseConditionalConsequent(),h=p.consequent,f=p.failed,d=this.getArrowLikeExpressions(h),m=d[0],y=d[1];if(f||y.length>0){var v=[].concat(l);if(y.length>0){this.state=u,this.state.noArrowAt=v;for(var g=0;g<y.length;g++)v.push(y[g].start);var b=this.tryParseConditionalConsequent();h=b.consequent,f=b.failed;var E=this.getArrowLikeExpressions(h);m=E[0],y=E[1]}if(f&&m.length>1&&this.raise(u.start,"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate."),f&&1===m.length){this.state=u,this.state.noArrowAt=v.concat(m[0].start);var A=this.tryParseConditionalConsequent();h=A.consequent,f=A.failed}}return this.getArrowLikeExpressions(h,!0),this.state.noArrowAt=l,this.expect(iE.colon),c.test=t,c.consequent=h,c.alternate=this.forwardNoArrowParamsConversionAt(c,(function(){return o.parseMaybeAssign(n,void 0,void 0,void 0)})),this.finishNode(c,"ConditionalExpression")},n.tryParseConditionalConsequent=function(){this.state.noArrowParamsConversionAt.push(this.state.start);var e=this.parseMaybeAssign(),t=!this.match(iE.colon);return this.state.noArrowParamsConversionAt.pop(),{consequent:e,failed:t}},n.getArrowLikeExpressions=function(e,t){for(var n=this,r=[e],i=[];0!==r.length;){var a=r.pop();"ArrowFunctionExpression"===a.type?(a.typeParameters||!a.returnType?this.finishArrowValidation(a):i.push(a),r.push(a.body)):"ConditionalExpression"===a.type&&(r.push(a.consequent),r.push(a.alternate))}return t?(i.forEach((function(e){return n.finishArrowValidation(e)})),[i,[]]):function(e,t){for(var n=[],r=[],i=0;i<e.length;i++)(t(e[i],i,e)?n:r).push(e[i]);return[n,r]}(i,(function(e){return e.params.every((function(e){return n.isAssignable(e,!0)}))}))},n.finishArrowValidation=function(t){var n;this.toAssignableList(t.params,!0,"arrow function parameters",null==(n=t.extra)?void 0:n.trailingComma),this.scope.enter(16|lE(!1,!1)),e.prototype.checkParams.call(this,t,!1,!0),this.scope.exit()},n.forwardNoArrowParamsConversionAt=function(e,t){var n;return-1!==this.state.noArrowParamsConversionAt.indexOf(e.start)?(this.state.noArrowParamsConversionAt.push(this.state.start),n=t(),this.state.noArrowParamsConversionAt.pop()):n=t(),n},n.parseParenItem=function(t,n,r){if(t=e.prototype.parseParenItem.call(this,t,n,r),this.eat(iE.question)&&(t.optional=!0,this.resetEndLocation(t)),this.match(iE.colon)){var i=this.startNodeAt(n,r);return i.expression=t,i.typeAnnotation=this.flowParseTypeAnnotation(),this.finishNode(i,"TypeCastExpression")}return t},n.assertModuleNodeAllowed=function(t){"ImportDeclaration"===t.type&&("type"===t.importKind||"typeof"===t.importKind)||"ExportNamedDeclaration"===t.type&&"type"===t.exportKind||"ExportAllDeclaration"===t.type&&"type"===t.exportKind||e.prototype.assertModuleNodeAllowed.call(this,t)},n.parseExport=function(t){var n=e.prototype.parseExport.call(this,t);return"ExportNamedDeclaration"!==n.type&&"ExportAllDeclaration"!==n.type||(n.exportKind=n.exportKind||"value"),n},n.parseExportDeclaration=function(t){if(this.isContextual("type")){t.exportKind="type";var n=this.startNode();return this.next(),this.match(iE.braceL)?(t.specifiers=this.parseExportSpecifiers(),this.parseExportFrom(t),null):this.flowParseTypeAlias(n)}if(this.isContextual("opaque")){t.exportKind="type";var r=this.startNode();return this.next(),this.flowParseOpaqueType(r,!1)}if(this.isContextual("interface")){t.exportKind="type";var i=this.startNode();return this.next(),this.flowParseInterface(i)}if(this.shouldParseEnums()&&this.isContextual("enum")){t.exportKind="value";var a=this.startNode();return this.next(),this.flowParseEnumDeclaration(a)}return e.prototype.parseExportDeclaration.call(this,t)},n.eatExportStar=function(t){return!!e.prototype.eatExportStar.apply(this,arguments)||!(!this.isContextual("type")||this.lookahead().type!==iE.star)&&(t.exportKind="type",this.next(),this.next(),!0)},n.maybeParseExportNamespaceSpecifier=function(t){var n=this.state.start,r=e.prototype.maybeParseExportNamespaceSpecifier.call(this,t);return r&&"type"===t.exportKind&&this.unexpected(n),r},n.parseClassId=function(t,n,r){e.prototype.parseClassId.call(this,t,n,r),this.isRelational("<")&&(t.typeParameters=this.flowParseTypeParameterDeclaration())},n.getTokenFromCode=function(t){var n=this.input.charCodeAt(this.state.pos+1);return 123===t&&124===n?this.finishOp(iE.braceBarL,2):!this.state.inType||62!==t&&60!==t?function(e,t){return 64===e&&64===t}(t,n)?(this.state.isIterator=!0,e.prototype.readWord.call(this)):e.prototype.getTokenFromCode.call(this,t):this.finishOp(iE.relational,1)},n.isAssignable=function(e,t){var n=this;switch(e.type){case"Identifier":case"ObjectPattern":case"ArrayPattern":case"AssignmentPattern":return!0;case"ObjectExpression":var r=e.properties.length-1;return e.properties.every((function(e,t){return"ObjectMethod"!==e.type&&(t===r||"SpreadElement"===e.type)&&n.isAssignable(e)}));case"ObjectProperty":return this.isAssignable(e.value);case"SpreadElement":return this.isAssignable(e.argument);case"ArrayExpression":return e.elements.every((function(e){return n.isAssignable(e)}));case"AssignmentExpression":return"="===e.operator;case"ParenthesizedExpression":case"TypeCastExpression":return this.isAssignable(e.expression);case"MemberExpression":case"OptionalMemberExpression":return!t;default:return!1}},n.toAssignable=function(t,n,r){return"TypeCastExpression"===t.type?e.prototype.toAssignable.call(this,this.typeCastToParameter(t),n,r):e.prototype.toAssignable.call(this,t,n,r)},n.toAssignableList=function(t,n,r,i){for(var a=0;a<t.length;a++){var o=t[a];o&&"TypeCastExpression"===o.type&&(t[a]=this.typeCastToParameter(o))}return e.prototype.toAssignableList.call(this,t,n,r,i)},n.toReferencedList=function(e,t){for(var n=0;n<e.length;n++){var r=e[n];!r||"TypeCastExpression"!==r.type||r.extra&&r.extra.parenthesized||!(e.length>1)&&t||this.raise(r.typeAnnotation.start,"The type cast expression is expected to be wrapped with parenthesis")}return e},n.checkLVal=function(t,n,r,i){if(void 0===n&&(n=64),"TypeCastExpression"!==t.type)return e.prototype.checkLVal.call(this,t,n,r,i)},n.parseClassProperty=function(t){return this.match(iE.colon)&&(t.typeAnnotation=this.flowParseTypeAnnotation()),e.prototype.parseClassProperty.call(this,t)},n.parseClassPrivateProperty=function(t){return this.match(iE.colon)&&(t.typeAnnotation=this.flowParseTypeAnnotation()),e.prototype.parseClassPrivateProperty.call(this,t)},n.isClassMethod=function(){return this.isRelational("<")||e.prototype.isClassMethod.call(this)},n.isClassProperty=function(){return this.match(iE.colon)||e.prototype.isClassProperty.call(this)},n.isNonstaticConstructor=function(t){return!this.match(iE.colon)&&e.prototype.isNonstaticConstructor.call(this,t)},n.pushClassMethod=function(t,n,r,i,a,o){n.variance&&this.unexpected(n.variance.start),delete n.variance,this.isRelational("<")&&(n.typeParameters=this.flowParseTypeParameterDeclaration()),e.prototype.pushClassMethod.call(this,t,n,r,i,a,o)},n.pushClassPrivateMethod=function(t,n,r,i){n.variance&&this.unexpected(n.variance.start),delete n.variance,this.isRelational("<")&&(n.typeParameters=this.flowParseTypeParameterDeclaration()),e.prototype.pushClassPrivateMethod.call(this,t,n,r,i)},n.parseClassSuper=function(t){if(e.prototype.parseClassSuper.call(this,t),t.superClass&&this.isRelational("<")&&(t.superTypeParameters=this.flowParseTypeParameterInstantiation()),this.isContextual("implements")){this.next();var n=t.implements=[];do{var r=this.startNode();r.id=this.flowParseRestrictedIdentifier(!0),this.isRelational("<")?r.typeParameters=this.flowParseTypeParameterInstantiation():r.typeParameters=null,n.push(this.finishNode(r,"ClassImplements"))}while(this.eat(iE.comma))}},n.parsePropertyName=function(t){var n=this.flowParseVariance(),r=e.prototype.parsePropertyName.call(this,t);return t.variance=n,r},n.parseObjPropValue=function(t,n,r,i,a,o,s,u){var l;t.variance&&this.unexpected(t.variance.start),delete t.variance,this.isRelational("<")&&(l=this.flowParseTypeParameterDeclaration(),this.match(iE.parenL)||this.unexpected()),e.prototype.parseObjPropValue.call(this,t,n,r,i,a,o,s,u),l&&((t.value||t).typeParameters=l)},n.parseAssignableListItemTypes=function(e){return this.eat(iE.question)&&("Identifier"!==e.type&&this.raise(e.start,"A binding pattern parameter cannot be optional in an implementation signature."),e.optional=!0),this.match(iE.colon)&&(e.typeAnnotation=this.flowParseTypeAnnotation()),this.resetEndLocation(e),e},n.parseMaybeDefault=function(t,n,r){var i=e.prototype.parseMaybeDefault.call(this,t,n,r);return"AssignmentPattern"===i.type&&i.typeAnnotation&&i.right.start<i.typeAnnotation.start&&this.raise(i.typeAnnotation.start,"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`"),i},n.shouldParseDefaultImport=function(t){return ME(t)?RE(this.state):e.prototype.shouldParseDefaultImport.call(this,t)},n.parseImportSpecifierLocal=function(e,t,n,r){t.local=ME(e)?this.flowParseRestrictedIdentifier(!0,!0):this.parseIdentifier(),this.checkLVal(t.local,9,void 0,r),e.specifiers.push(this.finishNode(t,n))},n.maybeParseDefaultImportSpecifier=function(t){t.importKind="value";var n=null;if(this.match(iE._typeof)?n="typeof":this.isContextual("type")&&(n="type"),n){var r=this.lookahead();"type"===n&&r.type===iE.star&&this.unexpected(r.start),(RE(r)||r.type===iE.braceL||r.type===iE.star)&&(this.next(),t.importKind=n)}return e.prototype.maybeParseDefaultImportSpecifier.call(this,t)},n.parseImportSpecifier=function(e){var t=this.startNode(),n=this.state.start,r=this.parseIdentifier(!0),i=null;"type"===r.name?i="type":"typeof"===r.name&&(i="typeof");var a=!1;if(this.isContextual("as")&&!this.isLookaheadContextual("as")){var o=this.parseIdentifier(!0);null===i||this.match(iE.name)||this.state.type.keyword?(t.imported=r,t.importKind=null,t.local=this.parseIdentifier()):(t.imported=o,t.importKind=i,t.local=o.__clone())}else null!==i&&(this.match(iE.name)||this.state.type.keyword)?(t.imported=this.parseIdentifier(!0),t.importKind=i,this.eatContextual("as")?t.local=this.parseIdentifier():(a=!0,t.local=t.imported.__clone())):(a=!0,t.imported=r,t.importKind=null,t.local=t.imported.__clone());var s=ME(e),u=ME(t);s&&u&&this.raise(n,"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements"),(s||u)&&this.checkReservedType(t.local.name,t.local.start,!0),!a||s||u||this.checkReservedWord(t.local.name,t.start,!0,!0),this.checkLVal(t.local,9,void 0,"import specifier"),e.specifiers.push(this.finishNode(t,"ImportSpecifier"))},n.parseFunctionParams=function(t,n){var r=t.kind;"get"!==r&&"set"!==r&&this.isRelational("<")&&(t.typeParameters=this.flowParseTypeParameterDeclaration()),e.prototype.parseFunctionParams.call(this,t,n)},n.parseVarId=function(t,n){e.prototype.parseVarId.call(this,t,n),this.match(iE.colon)&&(t.id.typeAnnotation=this.flowParseTypeAnnotation(),this.resetEndLocation(t.id))},n.parseAsyncArrowFromCallExpression=function(t,n){if(this.match(iE.colon)){var r=this.state.noAnonFunctionType;this.state.noAnonFunctionType=!0,t.returnType=this.flowParseTypeAnnotation(),this.state.noAnonFunctionType=r}return e.prototype.parseAsyncArrowFromCallExpression.call(this,t,n)},n.shouldParseAsyncArrow=function(){return this.match(iE.colon)||e.prototype.shouldParseAsyncArrow.call(this)},n.parseMaybeAssign=function(t,n,r,i){var a,o=this,s=null;if(this.hasPlugin("jsx")&&(this.match(iE.jsxTagStart)||this.isRelational("<"))){if(s=this.state.clone(),!(a=this.tryParse((function(){return e.prototype.parseMaybeAssign.call(o,t,n,r,i)}),s)).error)return a.node;var u=this.state.context;u[u.length-1]===vE.j_oTag?u.length-=2:u[u.length-1]===vE.j_expr&&(u.length-=1)}if(a&&a.error||this.isRelational("<")){var l;s=s||this.state.clone();var c=this.tryParse((function(){l=o.flowParseTypeParameterDeclaration();var a=o.forwardNoArrowParamsConversionAt(l,(function(){return e.prototype.parseMaybeAssign.call(o,t,n,r,i)}));return a.typeParameters=l,o.resetStartLocationFromNode(a,l),a}),s),p=c.node&&"ArrowFunctionExpression"===c.node.type?c.node:null;if(!c.error&&p)return p;if(a&&a.node)return this.state=a.failState,a.node;if(p)return this.state=c.failState,p;if(a&&a.thrown)throw a.error;if(c.thrown)throw c.error;throw this.raise(l.start,"Expected an arrow function after this type parameter declaration")}return e.prototype.parseMaybeAssign.call(this,t,n,r,i)},n.parseArrow=function(t){var n=this;if(this.match(iE.colon)){var r=this.tryParse((function(){var e=n.state.noAnonFunctionType;n.state.noAnonFunctionType=!0;var r=n.startNode(),i=n.flowParseTypeAndPredicateInitialiser();return r.typeAnnotation=i[0],t.predicate=i[1],n.state.noAnonFunctionType=e,n.canInsertSemicolon()&&n.unexpected(),n.match(iE.arrow)||n.unexpected(),r}));if(r.thrown)return null;r.error&&(this.state=r.failState),t.returnType=r.node.typeAnnotation?this.finishNode(r.node,"TypeAnnotation"):null}return e.prototype.parseArrow.call(this,t)},n.shouldParseArrow=function(){return this.match(iE.colon)||e.prototype.shouldParseArrow.call(this)},n.setArrowFunctionParameters=function(t,n){-1!==this.state.noArrowParamsConversionAt.indexOf(t.start)?t.params=n:e.prototype.setArrowFunctionParameters.call(this,t,n)},n.checkParams=function(t,n,r){if(!r||-1===this.state.noArrowParamsConversionAt.indexOf(t.start))return e.prototype.checkParams.apply(this,arguments)},n.parseParenAndDistinguishExpression=function(t){return e.prototype.parseParenAndDistinguishExpression.call(this,t&&-1===this.state.noArrowAt.indexOf(this.state.start))},n.parseSubscripts=function(t,n,r,i){var a=this;if("Identifier"===t.type&&"async"===t.name&&-1!==this.state.noArrowAt.indexOf(n)){this.next();var o=this.startNodeAt(n,r);o.callee=t,o.arguments=this.parseCallExpressionArguments(iE.parenR,!1),t=this.finishNode(o,"CallExpression")}else if("Identifier"===t.type&&"async"===t.name&&this.isRelational("<")){var s=this.state.clone(),u=this.tryParse((function(e){return a.parseAsyncArrowWithTypeParameters(n,r)||e()}),s);if(!u.error&&!u.aborted)return u.node;var l=this.tryParse((function(){return e.prototype.parseSubscripts.call(a,t,n,r,i)}),s);if(l.node&&!l.error)return l.node;if(u.node)return this.state=u.failState,u.node;if(l.node)return this.state=l.failState,l.node;throw u.error||l.error}return e.prototype.parseSubscripts.call(this,t,n,r,i)},n.parseSubscript=function(t,n,r,i,a){var o=this;if(this.match(iE.questionDot)&&this.isLookaheadRelational("<")){if(this.expectPlugin("optionalChaining"),a.optionalChainMember=!0,i)return a.stop=!0,t;this.next();var s=this.startNodeAt(n,r);return s.callee=t,s.typeArguments=this.flowParseTypeParameterInstantiation(),this.expect(iE.parenL),s.arguments=this.parseCallExpressionArguments(iE.parenR,!1),s.optional=!0,this.finishCallExpression(s,!0)}if(!i&&this.shouldParseTypes()&&this.isRelational("<")){var u=this.startNodeAt(n,r);u.callee=t;var l=this.tryParse((function(){return u.typeArguments=o.flowParseTypeParameterInstantiationCallOrNew(),o.expect(iE.parenL),u.arguments=o.parseCallExpressionArguments(iE.parenR,!1),a.optionalChainMember&&(u.optional=!1),o.finishCallExpression(u,a.optionalChainMember)}));if(l.node)return l.error&&(this.state=l.failState),l.node}return e.prototype.parseSubscript.call(this,t,n,r,i,a)},n.parseNewArguments=function(t){var n=this,r=null;this.shouldParseTypes()&&this.isRelational("<")&&(r=this.tryParse((function(){return n.flowParseTypeParameterInstantiationCallOrNew()})).node),t.typeArguments=r,e.prototype.parseNewArguments.call(this,t)},n.parseAsyncArrowWithTypeParameters=function(e,t){var n=this.startNodeAt(e,t);if(this.parseFunctionParams(n),this.parseArrow(n))return this.parseArrowExpression(n,void 0,!0)},n.readToken_mult_modulo=function(t){var n=this.input.charCodeAt(this.state.pos+1);if(42===t&&47===n&&this.state.hasFlowComment)return this.state.hasFlowComment=!1,this.state.pos+=2,void this.nextToken();e.prototype.readToken_mult_modulo.call(this,t)},n.readToken_pipe_amp=function(t){var n=this.input.charCodeAt(this.state.pos+1);124!==t||125!==n?e.prototype.readToken_pipe_amp.call(this,t):this.finishOp(iE.braceBarR,2)},n.parseTopLevel=function(t,n){var r=e.prototype.parseTopLevel.call(this,t,n);return this.state.hasFlowComment&&this.raise(this.state.pos,"Unterminated flow-comment"),r},n.skipBlockComment=function(){if(this.hasPlugin("flowComments")&&this.skipFlowComment())return this.state.hasFlowComment&&this.unexpected(null,"Cannot have a flow comment inside another flow comment"),this.hasFlowCommentCompletion(),this.state.pos+=this.skipFlowComment(),void(this.state.hasFlowComment=!0);if(this.state.hasFlowComment){var t=this.input.indexOf("*-/",this.state.pos+=2);if(-1===t)throw this.raise(this.state.pos-2,"Unterminated comment");this.state.pos=t+3}else e.prototype.skipBlockComment.call(this)},n.skipFlowComment=function(){for(var e=this.state.pos,t=2;[32,9].includes(this.input.charCodeAt(e+t));)t++;var n=this.input.charCodeAt(t+e),r=this.input.charCodeAt(t+e+1);return 58===n&&58===r?t+2:"flow-include"===this.input.slice(t+e,t+e+12)?t+12:58===n&&58!==r&&t},n.hasFlowCommentCompletion=function(){if(-1===this.input.indexOf("*/",this.state.pos))throw this.raise(this.state.pos,"Unterminated comment")},n.flowEnumErrorBooleanMemberNotInitialized=function(e,t){var n=t.enumName,r=t.memberName;this.raise(e,"Boolean enum members need to be initialized. Use either `"+r+" = true,` or `"+r+" = false,` in enum `"+n+"`.")},n.flowEnumErrorInvalidMemberName=function(e,t){var n=t.enumName,r=t.memberName,i=r[0].toUpperCase()+r.slice(1);this.raise(e,"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `"+r+"`, consider using `"+i+"`, in enum `"+n+"`.")},n.flowEnumErrorDuplicateMemberName=function(e,t){var n=t.enumName,r=t.memberName;this.raise(e,"Enum member names need to be unique, but the name `"+r+"` has already been used before in enum `"+n+"`.")},n.flowEnumErrorInconsistentMemberValues=function(e,t){var n=t.enumName;this.raise(e,"Enum `"+n+"` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.")},n.flowEnumErrorInvalidExplicitType=function(e,t){var n=t.enumName,r=t.suppliedType,i="Use one of `boolean`, `number`, `string`, or `symbol` in enum `"+n+"`.",a=null===r?"Supplied enum type is not valid. "+i:"Enum type `"+r+"` is not valid. "+i;return this.raise(e,a)},n.flowEnumErrorInvalidMemberInitializer=function(e,t){var n=t.enumName,r=t.explicitType,i=t.memberName,a=null;switch(r){case"boolean":case"number":case"string":a="Enum `"+n+"` has type `"+r+"`, so the initializer of `"+i+"` needs to be a "+r+" literal.";break;case"symbol":a="Symbol enum members cannot be initialized. Use `"+i+",` in enum `"+n+"`.";break;default:a="The enum member initializer for `"+i+"` needs to be a literal (either a boolean, number, or string) in enum `"+n+"`."}return this.raise(e,a)},n.flowEnumErrorNumberMemberNotInitialized=function(e,t){var n=t.enumName,r=t.memberName;this.raise(e,"Number enum members need to be initialized, e.g. `"+r+" = 1` in enum `"+n+"`.")},n.flowEnumErrorStringMemberInconsistentlyInitailized=function(e,t){var n=t.enumName;this.raise(e,"String enum members need to consistently either all use initializers, or use no initializers, in enum `"+n+"`.")},n.flowEnumMemberInit=function(){var e=this,t=this.state.start,n=function(){return e.match(iE.comma)||e.match(iE.braceR)};switch(this.state.type){case iE.num:var r=this.parseLiteral(this.state.value,"NumericLiteral");return n()?{type:"number",pos:r.start,value:r}:{type:"invalid",pos:t};case iE.string:var i=this.parseLiteral(this.state.value,"StringLiteral");return n()?{type:"string",pos:i.start,value:i}:{type:"invalid",pos:t};case iE._true:case iE._false:var a=this.parseBooleanLiteral();return n()?{type:"boolean",pos:a.start,value:a}:{type:"invalid",pos:t};default:return{type:"invalid",pos:t}}},n.flowEnumMemberRaw=function(){var e=this.state.start;return{id:this.parseIdentifier(!0),init:this.eat(iE.eq)?this.flowEnumMemberInit():{type:"none",pos:e}}},n.flowEnumCheckExplicitTypeMismatch=function(e,t,n){var r=t.explicitType;null!==r&&r!==n&&this.flowEnumErrorInvalidMemberInitializer(e,t)},n.flowEnumMembers=function(e){for(var t=e.enumName,n=e.explicitType,r=new Set,i={booleanMembers:[],numberMembers:[],stringMembers:[],defaultedMembers:[]};!this.match(iE.braceR);){var a=this.startNode(),o=this.flowEnumMemberRaw(),s=o.id,u=o.init,l=s.name;if(""!==l){/^[a-z]/.test(l)&&this.flowEnumErrorInvalidMemberName(s.start,{enumName:t,memberName:l}),r.has(l)&&this.flowEnumErrorDuplicateMemberName(s.start,{enumName:t,memberName:l}),r.add(l);var c={enumName:t,explicitType:n,memberName:l};switch(a.id=s,u.type){case"boolean":this.flowEnumCheckExplicitTypeMismatch(u.pos,c,"boolean"),a.init=u.value,i.booleanMembers.push(this.finishNode(a,"EnumBooleanMember"));break;case"number":this.flowEnumCheckExplicitTypeMismatch(u.pos,c,"number"),a.init=u.value,i.numberMembers.push(this.finishNode(a,"EnumNumberMember"));break;case"string":this.flowEnumCheckExplicitTypeMismatch(u.pos,c,"string"),a.init=u.value,i.stringMembers.push(this.finishNode(a,"EnumStringMember"));break;case"invalid":throw this.flowEnumErrorInvalidMemberInitializer(u.pos,c);case"none":switch(n){case"boolean":this.flowEnumErrorBooleanMemberNotInitialized(u.pos,c);break;case"number":this.flowEnumErrorNumberMemberNotInitialized(u.pos,c);break;default:i.defaultedMembers.push(this.finishNode(a,"EnumDefaultedMember"))}}this.match(iE.braceR)||this.expect(iE.comma)}}return i},n.flowEnumStringMembers=function(e,t,n){var r=n.enumName;if(0===e.length)return t;if(0===t.length)return e;if(t.length>e.length){for(var i=0;i<e.length;i++){var a=e[i];this.flowEnumErrorStringMemberInconsistentlyInitailized(a.start,{enumName:r})}return t}for(var o=0;o<t.length;o++){var s=t[o];this.flowEnumErrorStringMemberInconsistentlyInitailized(s.start,{enumName:r})}return e},n.flowEnumParseExplicitType=function(e){var t=e.enumName;if(this.eatContextual("of")){if(!this.match(iE.name))throw this.flowEnumErrorInvalidExplicitType(this.state.start,{enumName:t,suppliedType:null});var n=this.state.value;return this.next(),"boolean"!==n&&"number"!==n&&"string"!==n&&"symbol"!==n&&this.flowEnumErrorInvalidExplicitType(this.state.start,{enumName:t,suppliedType:n}),n}return null},n.flowEnumBody=function(e,t){var n=this,r=t.enumName,i=t.nameLoc,a=this.flowEnumParseExplicitType({enumName:r});this.expect(iE.braceL);var o=this.flowEnumMembers({enumName:r,explicitType:a});switch(a){case"boolean":return e.explicitType=!0,e.members=o.booleanMembers,this.expect(iE.braceR),this.finishNode(e,"EnumBooleanBody");case"number":return e.explicitType=!0,e.members=o.numberMembers,this.expect(iE.braceR),this.finishNode(e,"EnumNumberBody");case"string":return e.explicitType=!0,e.members=this.flowEnumStringMembers(o.stringMembers,o.defaultedMembers,{enumName:r}),this.expect(iE.braceR),this.finishNode(e,"EnumStringBody");case"symbol":return e.members=o.defaultedMembers,this.expect(iE.braceR),this.finishNode(e,"EnumSymbolBody");default:var s=function(){return e.members=[],n.expect(iE.braceR),n.finishNode(e,"EnumStringBody")};e.explicitType=!1;var u=o.booleanMembers.length,l=o.numberMembers.length,c=o.stringMembers.length,p=o.defaultedMembers.length;if(u||l||c||p){if(u||l){if(!l&&!c&&u>=p){for(var h=0,f=o.defaultedMembers;h<f.length;h++){var d=f[h];this.flowEnumErrorBooleanMemberNotInitialized(d.start,{enumName:r,memberName:d.id.name})}return e.members=o.booleanMembers,this.expect(iE.braceR),this.finishNode(e,"EnumBooleanBody")}if(!u&&!c&&l>=p){for(var m=0,y=o.defaultedMembers;m<y.length;m++){var v=y[m];this.flowEnumErrorNumberMemberNotInitialized(v.start,{enumName:r,memberName:v.id.name})}return e.members=o.numberMembers,this.expect(iE.braceR),this.finishNode(e,"EnumNumberBody")}return this.flowEnumErrorInconsistentMemberValues(i,{enumName:r}),s()}return e.members=this.flowEnumStringMembers(o.stringMembers,o.defaultedMembers,{enumName:r}),this.expect(iE.braceR),this.finishNode(e,"EnumStringBody")}return s()}},n.flowParseEnumDeclaration=function(e){var t=this.parseIdentifier();return e.id=t,e.body=this.flowEnumBody(this.startNode(),{enumName:t.name,nameLoc:t.start}),this.finishNode(e,"EnumDeclaration")},t}(e)},typescript:function(e){return function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var n=t.prototype;return n.getScopeHandler=function(){return zE},n.tsIsIdentifier=function(){return this.match(iE.name)},n.tsNextTokenCanFollowModifier=function(){return this.next(),!(this.hasPrecedingLineBreak()||this.match(iE.parenL)||this.match(iE.parenR)||this.match(iE.colon)||this.match(iE.eq)||this.match(iE.question)||this.match(iE.bang))},n.tsParseModifier=function(e){if(this.match(iE.name)){var t=this.state.value;return-1!==e.indexOf(t)&&this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))?t:void 0}},n.tsParseModifiers=function(e){for(var t=Object.create(null);;){var n=this.state.start,r=this.tsParseModifier(e);if(!r)break;Object.hasOwnProperty.call(t,r)&&this.raise(n,"Duplicate modifier: '"+r+"'"),t[r]=!0}return t},n.tsIsListTerminator=function(e){switch(e){case"EnumMembers":case"TypeMembers":return this.match(iE.braceR);case"HeritageClauseElement":return this.match(iE.braceL);case"TupleElementTypes":return this.match(iE.bracketR);case"TypeParametersOrArguments":return this.isRelational(">")}throw new Error("Unreachable")},n.tsParseList=function(e,t){for(var n=[];!this.tsIsListTerminator(e);)n.push(t());return n},n.tsParseDelimitedList=function(e,t){return JE(this.tsParseDelimitedListWorker(e,t,!0))},n.tsParseDelimitedListWorker=function(e,t,n){for(var r=[];!this.tsIsListTerminator(e);){var i=t();if(null==i)return;if(r.push(i),!this.eat(iE.comma)){if(this.tsIsListTerminator(e))break;return void(n&&this.expect(iE.comma))}}return r},n.tsParseBracketedList=function(e,t,n,r){r||(n?this.expect(iE.bracketL):this.expectRelational("<"));var i=this.tsParseDelimitedList(e,t);return n?this.expect(iE.bracketR):this.expectRelational(">"),i},n.tsParseImportType=function(){var e=this.startNode();return this.expect(iE._import),this.expect(iE.parenL),this.match(iE.string)||this.raise(this.state.start,"Argument in a type import must be a string literal"),e.argument=this.parseExprAtom(),this.expect(iE.parenR),this.eat(iE.dot)&&(e.qualifier=this.tsParseEntityName(!0)),this.isRelational("<")&&(e.typeParameters=this.tsParseTypeArguments()),this.finishNode(e,"TSImportType")},n.tsParseEntityName=function(e){for(var t=this.parseIdentifier();this.eat(iE.dot);){var n=this.startNodeAtNode(t);n.left=t,n.right=this.parseIdentifier(e),t=this.finishNode(n,"TSQualifiedName")}return t},n.tsParseTypeReference=function(){var e=this.startNode();return e.typeName=this.tsParseEntityName(!1),!this.hasPrecedingLineBreak()&&this.isRelational("<")&&(e.typeParameters=this.tsParseTypeArguments()),this.finishNode(e,"TSTypeReference")},n.tsParseThisTypePredicate=function(e){this.next();var t=this.startNodeAtNode(e);return t.parameterName=e,t.typeAnnotation=this.tsParseTypeAnnotation(!1),this.finishNode(t,"TSTypePredicate")},n.tsParseThisTypeNode=function(){var e=this.startNode();return this.next(),this.finishNode(e,"TSThisType")},n.tsParseTypeQuery=function(){var e=this.startNode();return this.expect(iE._typeof),this.match(iE._import)?e.exprName=this.tsParseImportType():e.exprName=this.tsParseEntityName(!0),this.finishNode(e,"TSTypeQuery")},n.tsParseTypeParameter=function(){var e=this.startNode();return e.name=this.parseIdentifierName(e.start),e.constraint=this.tsEatThenParseType(iE._extends),e.default=this.tsEatThenParseType(iE.eq),this.finishNode(e,"TSTypeParameter")},n.tsTryParseTypeParameters=function(){if(this.isRelational("<"))return this.tsParseTypeParameters()},n.tsParseTypeParameters=function(){var e=this.startNode();return this.isRelational("<")||this.match(iE.jsxTagStart)?this.next():this.unexpected(),e.params=this.tsParseBracketedList("TypeParametersOrArguments",this.tsParseTypeParameter.bind(this),!1,!0),this.finishNode(e,"TSTypeParameterDeclaration")},n.tsTryNextParseConstantContext=function(){return this.lookahead().type===iE._const?(this.next(),this.tsParseTypeReference()):null},n.tsFillSignature=function(e,t){var n=e===iE.arrow;t.typeParameters=this.tsTryParseTypeParameters(),this.expect(iE.parenL),t.parameters=this.tsParseBindingListForSignature(),n?t.typeAnnotation=this.tsParseTypeOrTypePredicateAnnotation(e):this.match(e)&&(t.typeAnnotation=this.tsParseTypeOrTypePredicateAnnotation(e))},n.tsParseBindingListForSignature=function(){var e=this;return this.parseBindingList(iE.parenR,41).map((function(t){return"Identifier"!==t.type&&"RestElement"!==t.type&&"ObjectPattern"!==t.type&&"ArrayPattern"!==t.type&&e.raise(t.start,"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern,instead got "+t.type),t}))},n.tsParseTypeMemberSemicolon=function(){this.eat(iE.comma)||this.semicolon()},n.tsParseSignatureMember=function(e,t){return this.tsFillSignature(iE.colon,t),this.tsParseTypeMemberSemicolon(),this.finishNode(t,e)},n.tsIsUnambiguouslyIndexSignature=function(){return this.next(),this.eat(iE.name)&&this.match(iE.colon)},n.tsTryParseIndexSignature=function(e){if(this.match(iE.bracketL)&&this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))){this.expect(iE.bracketL);var t=this.parseIdentifier();t.typeAnnotation=this.tsParseTypeAnnotation(),this.resetEndLocation(t),this.expect(iE.bracketR),e.parameters=[t];var n=this.tsTryParseTypeAnnotation();return n&&(e.typeAnnotation=n),this.tsParseTypeMemberSemicolon(),this.finishNode(e,"TSIndexSignature")}},n.tsParsePropertyOrMethodSignature=function(e,t){this.eat(iE.question)&&(e.optional=!0);var n=e;if(t||!this.match(iE.parenL)&&!this.isRelational("<")){var r=n;t&&(r.readonly=!0);var i=this.tsTryParseTypeAnnotation();return i&&(r.typeAnnotation=i),this.tsParseTypeMemberSemicolon(),this.finishNode(r,"TSPropertySignature")}var a=n;return this.tsFillSignature(iE.colon,a),this.tsParseTypeMemberSemicolon(),this.finishNode(a,"TSMethodSignature")},n.tsParseTypeMember=function(){var e=this.startNode();if(this.match(iE.parenL)||this.isRelational("<"))return this.tsParseSignatureMember("TSCallSignatureDeclaration",e);if(this.match(iE._new)){var t=this.startNode();return this.next(),this.match(iE.parenL)||this.isRelational("<")?this.tsParseSignatureMember("TSConstructSignatureDeclaration",e):(e.key=this.createIdentifier(t,"new"),this.tsParsePropertyOrMethodSignature(e,!1))}var n=!!this.tsParseModifier(["readonly"]),r=this.tsTryParseIndexSignature(e);return r?(n&&(e.readonly=!0),r):(this.parsePropertyName(e),this.tsParsePropertyOrMethodSignature(e,n))},n.tsParseTypeLiteral=function(){var e=this.startNode();return e.members=this.tsParseObjectTypeMembers(),this.finishNode(e,"TSTypeLiteral")},n.tsParseObjectTypeMembers=function(){this.expect(iE.braceL);var e=this.tsParseList("TypeMembers",this.tsParseTypeMember.bind(this));return this.expect(iE.braceR),e},n.tsIsStartOfMappedType=function(){return this.next(),this.eat(iE.plusMin)?this.isContextual("readonly"):(this.isContextual("readonly")&&this.next(),!!this.match(iE.bracketL)&&(this.next(),!!this.tsIsIdentifier()&&(this.next(),this.match(iE._in))))},n.tsParseMappedTypeParameter=function(){var e=this.startNode();return e.name=this.parseIdentifierName(e.start),e.constraint=this.tsExpectThenParseType(iE._in),this.finishNode(e,"TSTypeParameter")},n.tsParseMappedType=function(){var e=this.startNode();return this.expect(iE.braceL),this.match(iE.plusMin)?(e.readonly=this.state.value,this.next(),this.expectContextual("readonly")):this.eatContextual("readonly")&&(e.readonly=!0),this.expect(iE.bracketL),e.typeParameter=this.tsParseMappedTypeParameter(),this.expect(iE.bracketR),this.match(iE.plusMin)?(e.optional=this.state.value,this.next(),this.expect(iE.question)):this.eat(iE.question)&&(e.optional=!0),e.typeAnnotation=this.tsTryParseType(),this.semicolon(),this.expect(iE.braceR),this.finishNode(e,"TSMappedType")},n.tsParseTupleType=function(){var e=this,t=this.startNode();t.elementTypes=this.tsParseBracketedList("TupleElementTypes",this.tsParseTupleElementType.bind(this),!0,!1);var n=!1;return t.elementTypes.forEach((function(t){"TSOptionalType"===t.type?n=!0:n&&"TSRestType"!==t.type&&e.raise(t.start,"A required element cannot follow an optional element.")})),this.finishNode(t,"TSTupleType")},n.tsParseTupleElementType=function(){if(this.match(iE.ellipsis)){var e=this.startNode();return this.next(),e.typeAnnotation=this.tsParseType(),this.match(iE.comma)&&93!==this.lookaheadCharCode()&&this.raiseRestNotLast(this.state.start),this.finishNode(e,"TSRestType")}var t=this.tsParseType();if(this.eat(iE.question)){var n=this.startNodeAtNode(t);return n.typeAnnotation=t,this.finishNode(n,"TSOptionalType")}return t},n.tsParseParenthesizedType=function(){var e=this.startNode();return this.expect(iE.parenL),e.typeAnnotation=this.tsParseType(),this.expect(iE.parenR),this.finishNode(e,"TSParenthesizedType")},n.tsParseFunctionOrConstructorType=function(e){var t=this.startNode();return"TSConstructorType"===e&&this.expect(iE._new),this.tsFillSignature(iE.arrow,t),this.finishNode(t,e)},n.tsParseLiteralTypeNode=function(){var e=this,t=this.startNode();return t.literal=function(){switch(e.state.type){case iE.num:case iE.string:case iE._true:case iE._false:return e.parseExprAtom();default:throw e.unexpected()}}(),this.finishNode(t,"TSLiteralType")},n.tsParseTemplateLiteralType=function(){var e=this.startNode(),t=this.parseTemplate(!1);return t.expressions.length>0&&this.raise(t.expressions[0].start,"Template literal types cannot have any substitution"),e.literal=t,this.finishNode(e,"TSLiteralType")},n.tsParseThisTypeOrThisTypePredicate=function(){var e=this.tsParseThisTypeNode();return this.isContextual("is")&&!this.hasPrecedingLineBreak()?this.tsParseThisTypePredicate(e):e},n.tsParseNonArrayType=function(){switch(this.state.type){case iE.name:case iE._void:case iE._null:var e=this.match(iE._void)?"TSVoidKeyword":this.match(iE._null)?"TSNullKeyword":function(e){switch(e){case"any":return"TSAnyKeyword";case"boolean":return"TSBooleanKeyword";case"bigint":return"TSBigIntKeyword";case"never":return"TSNeverKeyword";case"number":return"TSNumberKeyword";case"object":return"TSObjectKeyword";case"string":return"TSStringKeyword";case"symbol":return"TSSymbolKeyword";case"undefined":return"TSUndefinedKeyword";case"unknown":return"TSUnknownKeyword";default:return}}(this.state.value);if(void 0!==e&&46!==this.lookaheadCharCode()){var t=this.startNode();return this.next(),this.finishNode(t,e)}return this.tsParseTypeReference();case iE.string:case iE.num:case iE._true:case iE._false:return this.tsParseLiteralTypeNode();case iE.plusMin:if("-"===this.state.value){var n=this.startNode();if(this.lookahead().type!==iE.num)throw this.unexpected();return n.literal=this.parseMaybeUnary(),this.finishNode(n,"TSLiteralType")}break;case iE._this:return this.tsParseThisTypeOrThisTypePredicate();case iE._typeof:return this.tsParseTypeQuery();case iE._import:return this.tsParseImportType();case iE.braceL:return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))?this.tsParseMappedType():this.tsParseTypeLiteral();case iE.bracketL:return this.tsParseTupleType();case iE.parenL:return this.tsParseParenthesizedType();case iE.backQuote:return this.tsParseTemplateLiteralType()}throw this.unexpected()},n.tsParseArrayTypeOrHigher=function(){for(var e=this.tsParseNonArrayType();!this.hasPrecedingLineBreak()&&this.eat(iE.bracketL);)if(this.match(iE.bracketR)){var t=this.startNodeAtNode(e);t.elementType=e,this.expect(iE.bracketR),e=this.finishNode(t,"TSArrayType")}else{var n=this.startNodeAtNode(e);n.objectType=e,n.indexType=this.tsParseType(),this.expect(iE.bracketR),e=this.finishNode(n,"TSIndexedAccessType")}return e},n.tsParseTypeOperator=function(e){var t=this.startNode();return this.expectContextual(e),t.operator=e,t.typeAnnotation=this.tsParseTypeOperatorOrHigher(),"readonly"===e&&this.tsCheckTypeAnnotationForReadOnly(t),this.finishNode(t,"TSTypeOperator")},n.tsCheckTypeAnnotationForReadOnly=function(e){switch(e.typeAnnotation.type){case"TSTupleType":case"TSArrayType":return;default:this.raise(e.start,"'readonly' type modifier is only permitted on array and tuple literal types.")}},n.tsParseInferType=function(){var e=this.startNode();this.expectContextual("infer");var t=this.startNode();return t.name=this.parseIdentifierName(t.start),e.typeParameter=this.finishNode(t,"TSTypeParameter"),this.finishNode(e,"TSInferType")},n.tsParseTypeOperatorOrHigher=function(){var e=this,t=["keyof","unique","readonly"].find((function(t){return e.isContextual(t)}));return t?this.tsParseTypeOperator(t):this.isContextual("infer")?this.tsParseInferType():this.tsParseArrayTypeOrHigher()},n.tsParseUnionOrIntersectionType=function(e,t,n){this.eat(n);var r=t();if(this.match(n)){for(var i=[r];this.eat(n);)i.push(t());var a=this.startNodeAtNode(r);a.types=i,r=this.finishNode(a,e)}return r},n.tsParseIntersectionTypeOrHigher=function(){return this.tsParseUnionOrIntersectionType("TSIntersectionType",this.tsParseTypeOperatorOrHigher.bind(this),iE.bitwiseAND)},n.tsParseUnionTypeOrHigher=function(){return this.tsParseUnionOrIntersectionType("TSUnionType",this.tsParseIntersectionTypeOrHigher.bind(this),iE.bitwiseOR)},n.tsIsStartOfFunctionType=function(){return!!this.isRelational("<")||this.match(iE.parenL)&&this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))},n.tsSkipParameterStart=function(){if(this.match(iE.name)||this.match(iE._this))return this.next(),!0;if(this.match(iE.braceL)){var e=1;for(this.next();e>0;)this.match(iE.braceL)?++e:this.match(iE.braceR)&&--e,this.next();return!0}if(this.match(iE.bracketL)){var t=1;for(this.next();t>0;)this.match(iE.bracketL)?++t:this.match(iE.bracketR)&&--t,this.next();return!0}return!1},n.tsIsUnambiguouslyStartOfFunctionType=function(){if(this.next(),this.match(iE.parenR)||this.match(iE.ellipsis))return!0;if(this.tsSkipParameterStart()){if(this.match(iE.colon)||this.match(iE.comma)||this.match(iE.question)||this.match(iE.eq))return!0;if(this.match(iE.parenR)&&(this.next(),this.match(iE.arrow)))return!0}return!1},n.tsParseTypeOrTypePredicateAnnotation=function(e){var t=this;return this.tsInType((function(){var n=t.startNode();t.expect(e);var r=t.tsTryParse(t.tsParseTypePredicateAsserts.bind(t));if(r&&t.match(iE._this)){var i=t.tsParseThisTypeOrThisTypePredicate();if("TSThisType"===i.type){var a=t.startNodeAtNode(n);a.parameterName=i,a.asserts=!0,i=t.finishNode(a,"TSTypePredicate")}else i.asserts=!0;return n.typeAnnotation=i,t.finishNode(n,"TSTypeAnnotation")}var o=t.tsIsIdentifier()&&t.tsTryParse(t.tsParseTypePredicatePrefix.bind(t));if(!o){if(!r)return t.tsParseTypeAnnotation(!1,n);var s=t.startNodeAtNode(n);return s.parameterName=t.parseIdentifier(),s.asserts=r,n.typeAnnotation=t.finishNode(s,"TSTypePredicate"),t.finishNode(n,"TSTypeAnnotation")}var u=t.tsParseTypeAnnotation(!1),l=t.startNodeAtNode(n);return l.parameterName=o,l.typeAnnotation=u,l.asserts=r,n.typeAnnotation=t.finishNode(l,"TSTypePredicate"),t.finishNode(n,"TSTypeAnnotation")}))},n.tsTryParseTypeOrTypePredicateAnnotation=function(){return this.match(iE.colon)?this.tsParseTypeOrTypePredicateAnnotation(iE.colon):void 0},n.tsTryParseTypeAnnotation=function(){return this.match(iE.colon)?this.tsParseTypeAnnotation():void 0},n.tsTryParseType=function(){return this.tsEatThenParseType(iE.colon)},n.tsParseTypePredicatePrefix=function(){var e=this.parseIdentifier();if(this.isContextual("is")&&!this.hasPrecedingLineBreak())return this.next(),e},n.tsParseTypePredicateAsserts=function(){if(!this.match(iE.name)||"asserts"!==this.state.value||this.hasPrecedingLineBreak())return!1;var e=this.state.containsEsc;return this.next(),!(!this.match(iE.name)&&!this.match(iE._this))&&(e&&this.raise(this.state.lastTokStart,"Escape sequence in keyword asserts"),!0)},n.tsParseTypeAnnotation=function(e,t){var n=this;return void 0===e&&(e=!0),void 0===t&&(t=this.startNode()),this.tsInType((function(){e&&n.expect(iE.colon),t.typeAnnotation=n.tsParseType()})),this.finishNode(t,"TSTypeAnnotation")},n.tsParseType=function(){YE(this.state.inType);var e=this.tsParseNonConditionalType();if(this.hasPrecedingLineBreak()||!this.eat(iE._extends))return e;var t=this.startNodeAtNode(e);return t.checkType=e,t.extendsType=this.tsParseNonConditionalType(),this.expect(iE.question),t.trueType=this.tsParseType(),this.expect(iE.colon),t.falseType=this.tsParseType(),this.finishNode(t,"TSConditionalType")},n.tsParseNonConditionalType=function(){return this.tsIsStartOfFunctionType()?this.tsParseFunctionOrConstructorType("TSFunctionType"):this.match(iE._new)?this.tsParseFunctionOrConstructorType("TSConstructorType"):this.tsParseUnionTypeOrHigher()},n.tsParseTypeAssertion=function(){var e=this.startNode(),t=this.tsTryNextParseConstantContext();return e.typeAnnotation=t||this.tsNextThenParseType(),this.expectRelational(">"),e.expression=this.parseMaybeUnary(),this.finishNode(e,"TSTypeAssertion")},n.tsParseHeritageClause=function(e){var t=this.state.start,n=this.tsParseDelimitedList("HeritageClauseElement",this.tsParseExpressionWithTypeArguments.bind(this));return n.length||this.raise(t,"'"+e+"' list cannot be empty."),n},n.tsParseExpressionWithTypeArguments=function(){var e=this.startNode();return e.expression=this.tsParseEntityName(!1),this.isRelational("<")&&(e.typeParameters=this.tsParseTypeArguments()),this.finishNode(e,"TSExpressionWithTypeArguments")},n.tsParseInterfaceDeclaration=function(e){e.id=this.parseIdentifier(),this.checkLVal(e.id,130,void 0,"typescript interface declaration"),e.typeParameters=this.tsTryParseTypeParameters(),this.eat(iE._extends)&&(e.extends=this.tsParseHeritageClause("extends"));var t=this.startNode();return t.body=this.tsInType(this.tsParseObjectTypeMembers.bind(this)),e.body=this.finishNode(t,"TSInterfaceBody"),this.finishNode(e,"TSInterfaceDeclaration")},n.tsParseTypeAliasDeclaration=function(e){return e.id=this.parseIdentifier(),this.checkLVal(e.id,2,void 0,"typescript type alias"),e.typeParameters=this.tsTryParseTypeParameters(),e.typeAnnotation=this.tsExpectThenParseType(iE.eq),this.semicolon(),this.finishNode(e,"TSTypeAliasDeclaration")},n.tsInNoContext=function(e){var t=this.state.context;this.state.context=[t[0]];try{return e()}finally{this.state.context=t}},n.tsInType=function(e){var t=this.state.inType;this.state.inType=!0;try{return e()}finally{this.state.inType=t}},n.tsEatThenParseType=function(e){return this.match(e)?this.tsNextThenParseType():void 0},n.tsExpectThenParseType=function(e){var t=this;return this.tsDoThenParseType((function(){return t.expect(e)}))},n.tsNextThenParseType=function(){var e=this;return this.tsDoThenParseType((function(){return e.next()}))},n.tsDoThenParseType=function(e){var t=this;return this.tsInType((function(){return e(),t.tsParseType()}))},n.tsParseEnumMember=function(){var e=this.startNode();return e.id=this.match(iE.string)?this.parseExprAtom():this.parseIdentifier(!0),this.eat(iE.eq)&&(e.initializer=this.parseMaybeAssign()),this.finishNode(e,"TSEnumMember")},n.tsParseEnumDeclaration=function(e,t){return t&&(e.const=!0),e.id=this.parseIdentifier(),this.checkLVal(e.id,t?779:267,void 0,"typescript enum declaration"),this.expect(iE.braceL),e.members=this.tsParseDelimitedList("EnumMembers",this.tsParseEnumMember.bind(this)),this.expect(iE.braceR),this.finishNode(e,"TSEnumDeclaration")},n.tsParseModuleBlock=function(){var e=this.startNode();return this.scope.enter(0),this.expect(iE.braceL),this.parseBlockOrModuleBlockBody(e.body=[],void 0,!0,iE.braceR),this.scope.exit(),this.finishNode(e,"TSModuleBlock")},n.tsParseModuleOrNamespaceDeclaration=function(e,t){if(void 0===t&&(t=!1),e.id=this.parseIdentifier(),t||this.checkLVal(e.id,1024,null,"module or namespace declaration"),this.eat(iE.dot)){var n=this.startNode();this.tsParseModuleOrNamespaceDeclaration(n,!0),e.body=n}else this.scope.enter(512),e.body=this.tsParseModuleBlock(),this.scope.exit();return this.finishNode(e,"TSModuleDeclaration")},n.tsParseAmbientExternalModuleDeclaration=function(e){return this.isContextual("global")?(e.global=!0,e.id=this.parseIdentifier()):this.match(iE.string)?e.id=this.parseExprAtom():this.unexpected(),this.match(iE.braceL)?(this.scope.enter(512),e.body=this.tsParseModuleBlock(),this.scope.exit()):this.semicolon(),this.finishNode(e,"TSModuleDeclaration")},n.tsParseImportEqualsDeclaration=function(e,t){return e.isExport=t||!1,e.id=this.parseIdentifier(),this.checkLVal(e.id,9,void 0,"import equals declaration"),this.expect(iE.eq),e.moduleReference=this.tsParseModuleReference(),this.semicolon(),this.finishNode(e,"TSImportEqualsDeclaration")},n.tsIsExternalModuleReference=function(){return this.isContextual("require")&&40===this.lookaheadCharCode()},n.tsParseModuleReference=function(){return this.tsIsExternalModuleReference()?this.tsParseExternalModuleReference():this.tsParseEntityName(!1)},n.tsParseExternalModuleReference=function(){var e=this.startNode();if(this.expectContextual("require"),this.expect(iE.parenL),!this.match(iE.string))throw this.unexpected();return e.expression=this.parseExprAtom(),this.expect(iE.parenR),this.finishNode(e,"TSExternalModuleReference")},n.tsLookAhead=function(e){var t=this.state.clone(),n=e();return this.state=t,n},n.tsTryParseAndCatch=function(e){var t=this.tryParse((function(t){return e()||t()}));if(!t.aborted&&t.node)return t.error&&(this.state=t.failState),t.node},n.tsTryParse=function(e){var t=this.state.clone(),n=e();return void 0!==n&&!1!==n?n:void(this.state=t)},n.tsTryParseDeclare=function(e){if(!this.isLineTerminator()){var t,n=this.state.type;switch(this.isContextual("let")&&(n=iE._var,t="let"),n){case iE._function:return this.parseFunctionStatement(e,!1,!0);case iE._class:return e.declare=!0,this.parseClass(e,!0,!1);case iE._const:if(this.match(iE._const)&&this.isLookaheadContextual("enum"))return this.expect(iE._const),this.expectContextual("enum"),this.tsParseEnumDeclaration(e,!0);case iE._var:return t=t||this.state.value,this.parseVarStatement(e,t);case iE.name:var r=this.state.value;return"global"===r?this.tsParseAmbientExternalModuleDeclaration(e):this.tsParseDeclaration(e,r,!0)}}},n.tsTryParseExportDeclaration=function(){return this.tsParseDeclaration(this.startNode(),this.state.value,!0)},n.tsParseExpressionStatement=function(e,t){switch(t.name){case"declare":var n=this.tsTryParseDeclare(e);if(n)return n.declare=!0,n;break;case"global":if(this.match(iE.braceL)){this.scope.enter(512);var r=e;return r.global=!0,r.id=t,r.body=this.tsParseModuleBlock(),this.scope.exit(),this.finishNode(r,"TSModuleDeclaration")}break;default:return this.tsParseDeclaration(e,t.name,!1)}},n.tsParseDeclaration=function(e,t,n){switch(t){case"abstract":if(this.tsCheckLineTerminatorAndMatch(iE._class,n)){var r=e;return r.abstract=!0,n&&(this.next(),this.match(iE._class)||this.unexpected(null,iE._class)),this.parseClass(r,!0,!1)}break;case"enum":if(n||this.match(iE.name))return n&&this.next(),this.tsParseEnumDeclaration(e,!1);break;case"interface":if(this.tsCheckLineTerminatorAndMatch(iE.name,n))return n&&this.next(),this.tsParseInterfaceDeclaration(e);break;case"module":if(n&&this.next(),this.match(iE.string))return this.tsParseAmbientExternalModuleDeclaration(e);if(this.tsCheckLineTerminatorAndMatch(iE.name,n))return this.tsParseModuleOrNamespaceDeclaration(e);break;case"namespace":if(this.tsCheckLineTerminatorAndMatch(iE.name,n))return n&&this.next(),this.tsParseModuleOrNamespaceDeclaration(e);break;case"type":if(this.tsCheckLineTerminatorAndMatch(iE.name,n))return n&&this.next(),this.tsParseTypeAliasDeclaration(e)}},n.tsCheckLineTerminatorAndMatch=function(e,t){return(t||this.match(e))&&!this.isLineTerminator()},n.tsTryParseGenericAsyncArrowFunction=function(t,n){var r=this;if(this.isRelational("<")){var i=this.tsTryParseAndCatch((function(){var i=r.startNodeAt(t,n);return i.typeParameters=r.tsParseTypeParameters(),e.prototype.parseFunctionParams.call(r,i),i.returnType=r.tsTryParseTypeOrTypePredicateAnnotation(),r.expect(iE.arrow),i}));if(i)return this.parseArrowExpression(i,null,!0)}},n.tsParseTypeArguments=function(){var e=this,t=this.startNode();return t.params=this.tsInType((function(){return e.tsInNoContext((function(){return e.expectRelational("<"),e.tsParseDelimitedList("TypeParametersOrArguments",e.tsParseType.bind(e))}))})),this.state.exprAllowed=!1,this.expectRelational(">"),this.finishNode(t,"TSTypeParameterInstantiation")},n.tsIsDeclarationStart=function(){if(this.match(iE.name))switch(this.state.value){case"abstract":case"declare":case"enum":case"interface":case"module":case"namespace":case"type":return!0}return!1},n.isExportDefaultSpecifier=function(){return!this.tsIsDeclarationStart()&&e.prototype.isExportDefaultSpecifier.call(this)},n.parseAssignableListItem=function(e,t){var n,r=this.state.start,i=this.state.startLoc,a=!1;e&&(n=this.parseAccessModifier(),a=!!this.tsParseModifier(["readonly"]));var o=this.parseMaybeDefault();this.parseAssignableListItemTypes(o);var s=this.parseMaybeDefault(o.start,o.loc.start,o);if(n||a){var u=this.startNodeAt(r,i);return t.length&&(u.decorators=t),n&&(u.accessibility=n),a&&(u.readonly=a),"Identifier"!==s.type&&"AssignmentPattern"!==s.type&&this.raise(u.start,"A parameter property may not be declared using a binding pattern."),u.parameter=s,this.finishNode(u,"TSParameterProperty")}return t.length&&(o.decorators=t),s},n.parseFunctionBodyAndFinish=function(t,n,r){void 0===r&&(r=!1),this.match(iE.colon)&&(t.returnType=this.tsParseTypeOrTypePredicateAnnotation(iE.colon));var i="FunctionDeclaration"===n?"TSDeclareFunction":"ClassMethod"===n?"TSDeclareMethod":void 0;i&&!this.match(iE.braceL)&&this.isLineTerminator()?this.finishNode(t,i):e.prototype.parseFunctionBodyAndFinish.call(this,t,n,r)},n.registerFunctionStatementId=function(t){!t.body&&t.id?this.checkLVal(t.id,1024,null,"function name"):e.prototype.registerFunctionStatementId.apply(this,arguments)},n.parseSubscript=function(t,n,r,i,a){var o=this;if(!this.hasPrecedingLineBreak()&&this.match(iE.bang)){this.state.exprAllowed=!1,this.next();var s=this.startNodeAt(n,r);return s.expression=t,this.finishNode(s,"TSNonNullExpression")}if(this.isRelational("<")){var u=this.tsTryParseAndCatch((function(){if(!i&&o.atPossibleAsync(t)){var e=o.tsTryParseGenericAsyncArrowFunction(n,r);if(e)return e}var s=o.startNodeAt(n,r);s.callee=t;var u=o.tsParseTypeArguments();if(u){if(!i&&o.eat(iE.parenL))return s.arguments=o.parseCallExpressionArguments(iE.parenR,!1),s.typeParameters=u,o.finishCallExpression(s,a.optionalChainMember);if(o.match(iE.backQuote))return o.parseTaggedTemplateExpression(n,r,t,a,u)}o.unexpected()}));if(u)return u}return e.prototype.parseSubscript.call(this,t,n,r,i,a)},n.parseNewArguments=function(t){var n=this;if(this.isRelational("<")){var r=this.tsTryParseAndCatch((function(){var e=n.tsParseTypeArguments();return n.match(iE.parenL)||n.unexpected(),e}));r&&(t.typeParameters=r)}e.prototype.parseNewArguments.call(this,t)},n.parseExprOp=function(t,n,r,i,a){if(JE(iE._in.binop)>i&&!this.hasPrecedingLineBreak()&&this.isContextual("as")){var o=this.startNodeAt(n,r);o.expression=t;var s=this.tsTryNextParseConstantContext();return o.typeAnnotation=s||this.tsNextThenParseType(),this.finishNode(o,"TSAsExpression"),this.parseExprOp(o,n,r,i,a)}return e.prototype.parseExprOp.call(this,t,n,r,i,a)},n.checkReservedWord=function(e,t,n,r){},n.checkDuplicateExports=function(){},n.parseImport=function(t){return this.match(iE.name)&&this.lookahead().type===iE.eq?this.tsParseImportEqualsDeclaration(t):e.prototype.parseImport.call(this,t)},n.parseExport=function(t){if(this.match(iE._import))return this.expect(iE._import),this.tsParseImportEqualsDeclaration(t,!0);if(this.eat(iE.eq)){var n=t;return n.expression=this.parseExpression(),this.semicolon(),this.finishNode(n,"TSExportAssignment")}if(this.eatContextual("as")){var r=t;return this.expectContextual("namespace"),r.id=this.parseIdentifier(),this.semicolon(),this.finishNode(r,"TSNamespaceExportDeclaration")}return e.prototype.parseExport.call(this,t)},n.isAbstractClass=function(){return this.isContextual("abstract")&&this.lookahead().type===iE._class},n.parseExportDefaultExpression=function(){if(this.isAbstractClass()){var t=this.startNode();return this.next(),this.parseClass(t,!0,!0),t.abstract=!0,t}if("interface"===this.state.value){var n=this.tsParseDeclaration(this.startNode(),this.state.value,!0);if(n)return n}return e.prototype.parseExportDefaultExpression.call(this)},n.parseStatementContent=function(t,n){if(this.state.type===iE._const){var r=this.lookahead();if(r.type===iE.name&&"enum"===r.value){var i=this.startNode();return this.expect(iE._const),this.expectContextual("enum"),this.tsParseEnumDeclaration(i,!0)}}return e.prototype.parseStatementContent.call(this,t,n)},n.parseAccessModifier=function(){return this.tsParseModifier(["public","protected","private"])},n.parseClassMember=function(t,n,r,i){var a=this.parseAccessModifier();a&&(n.accessibility=a),e.prototype.parseClassMember.call(this,t,n,r,i)},n.parseClassMemberWithIsStatic=function(t,n,r,i,a){var o=this.tsParseModifiers(["abstract","readonly","declare"]);Object.assign(n,o);var s=this.tsTryParseIndexSignature(n);if(s)return t.body.push(s),o.abstract&&this.raise(n.start,"Index signatures cannot have the 'abstract' modifier"),i&&this.raise(n.start,"Index signatures cannot have the 'static' modifier"),void(n.accessibility&&this.raise(n.start,"Index signatures cannot have an accessibility modifier ('"+n.accessibility+"')"));e.prototype.parseClassMemberWithIsStatic.call(this,t,n,r,i,a)},n.parsePostMemberNameModifiers=function(e){this.eat(iE.question)&&(e.optional=!0),e.readonly&&this.match(iE.parenL)&&this.raise(e.start,"Class methods cannot have the 'readonly' modifier"),e.declare&&this.match(iE.parenL)&&this.raise(e.start,"Class methods cannot have the 'declare' modifier")},n.parseExpressionStatement=function(t,n){return("Identifier"===n.type?this.tsParseExpressionStatement(t,n):void 0)||e.prototype.parseExpressionStatement.call(this,t,n)},n.shouldParseExportDeclaration=function(){return!!this.tsIsDeclarationStart()||e.prototype.shouldParseExportDeclaration.call(this)},n.parseConditional=function(t,n,r,i,a){var o=this;if(!a||!this.match(iE.question))return e.prototype.parseConditional.call(this,t,n,r,i,a);var s=this.tryParse((function(){return e.prototype.parseConditional.call(o,t,n,r,i)}));return s.node?(s.error&&(this.state=s.failState),s.node):(a.start=s.error.pos||this.state.start,t)},n.parseParenItem=function(t,n,r){if(t=e.prototype.parseParenItem.call(this,t,n,r),this.eat(iE.question)&&(t.optional=!0,this.resetEndLocation(t)),this.match(iE.colon)){var i=this.startNodeAt(n,r);return i.expression=t,i.typeAnnotation=this.tsParseTypeAnnotation(),this.finishNode(i,"TSTypeCastExpression")}return t},n.parseExportDeclaration=function(t){var n,r=this.state.start,i=this.state.startLoc,a=this.eatContextual("declare");return this.match(iE.name)&&(n=this.tsTryParseExportDeclaration()),n||(n=e.prototype.parseExportDeclaration.call(this,t)),n&&a&&(this.resetStartLocation(n,r,i),n.declare=!0),n},n.parseClassId=function(t,n,r){if(n&&!r||!this.isContextual("implements")){e.prototype.parseClassId.call(this,t,n,r,t.declare?1024:139);var i=this.tsTryParseTypeParameters();i&&(t.typeParameters=i)}},n.parseClassPropertyAnnotation=function(e){!e.optional&&this.eat(iE.bang)&&(e.definite=!0);var t=this.tsTryParseTypeAnnotation();t&&(e.typeAnnotation=t)},n.parseClassProperty=function(t){return this.parseClassPropertyAnnotation(t),t.declare&&this.match(iE.equal)&&this.raise(this.state.start,"'declare' class fields cannot have an initializer"),e.prototype.parseClassProperty.call(this,t)},n.parseClassPrivateProperty=function(t){return t.abstract&&this.raise(t.start,"Private elements cannot have the 'abstract' modifier."),t.accessibility&&this.raise(t.start,"Private elements cannot have an accessibility modifier ('"+t.accessibility+"')"),this.parseClassPropertyAnnotation(t),e.prototype.parseClassPrivateProperty.call(this,t)},n.pushClassMethod=function(t,n,r,i,a,o){var s=this.tsTryParseTypeParameters();s&&(n.typeParameters=s),e.prototype.pushClassMethod.call(this,t,n,r,i,a,o)},n.pushClassPrivateMethod=function(t,n,r,i){var a=this.tsTryParseTypeParameters();a&&(n.typeParameters=a),e.prototype.pushClassPrivateMethod.call(this,t,n,r,i)},n.parseClassSuper=function(t){e.prototype.parseClassSuper.call(this,t),t.superClass&&this.isRelational("<")&&(t.superTypeParameters=this.tsParseTypeArguments()),this.eatContextual("implements")&&(t.implements=this.tsParseHeritageClause("implements"))},n.parseObjPropValue=function(t){var n,r=this.tsTryParseTypeParameters();r&&(t.typeParameters=r);for(var i=arguments.length,a=new Array(i>1?i-1:0),o=1;o<i;o++)a[o-1]=arguments[o];(n=e.prototype.parseObjPropValue).call.apply(n,[this,t].concat(a))},n.parseFunctionParams=function(t,n){var r=this.tsTryParseTypeParameters();r&&(t.typeParameters=r),e.prototype.parseFunctionParams.call(this,t,n)},n.parseVarId=function(t,n){e.prototype.parseVarId.call(this,t,n),"Identifier"===t.id.type&&this.eat(iE.bang)&&(t.definite=!0);var r=this.tsTryParseTypeAnnotation();r&&(t.id.typeAnnotation=r,this.resetEndLocation(t.id))},n.parseAsyncArrowFromCallExpression=function(t,n){return this.match(iE.colon)&&(t.returnType=this.tsParseTypeAnnotation()),e.prototype.parseAsyncArrowFromCallExpression.call(this,t,n)},n.parseMaybeAssign=function(){for(var t,n,r,i,a,o=this,s=arguments.length,u=new Array(s),l=0;l<s;l++)u[l]=arguments[l];if(this.match(iE.jsxTagStart)){if(t=this.state.clone(),!(n=this.tryParse((function(){var t;return(t=e.prototype.parseMaybeAssign).call.apply(t,[o].concat(u))}),t)).error)return n.node;var c=this.state.context;c[c.length-1]===vE.j_oTag?c.length-=2:c[c.length-1]===vE.j_expr&&(c.length-=1)}if(!(n&&n.error||this.isRelational("<")))return(i=e.prototype.parseMaybeAssign).call.apply(i,[this].concat(u));t=t||this.state.clone();var p=this.tryParse((function(t){var n;a=o.tsParseTypeParameters();var r=(n=e.prototype.parseMaybeAssign).call.apply(n,[o].concat(u));return("ArrowFunctionExpression"!==r.type||r.extra&&r.extra.parenthesized)&&t(),a&&0!==a.params.length&&o.resetStartLocationFromNode(r,a),r.typeParameters=a,r}),t);if(!p.error&&!p.aborted)return p.node;if(!n&&(YE(!this.hasPlugin("jsx")),!(r=this.tryParse((function(){var t;return(t=e.prototype.parseMaybeAssign).call.apply(t,[o].concat(u))}),t)).error))return r.node;if(n&&n.node)return this.state=n.failState,n.node;if(p.node)return this.state=p.failState,p.node;if(r&&r.node)return this.state=r.failState,r.node;if(n&&n.thrown)throw n.error;if(p.thrown)throw p.error;if(r&&r.thrown)throw r.error;throw n&&n.error||p.error||r&&r.error},n.parseMaybeUnary=function(t){return!this.hasPlugin("jsx")&&this.isRelational("<")?this.tsParseTypeAssertion():e.prototype.parseMaybeUnary.call(this,t)},n.parseArrow=function(t){var n=this;if(this.match(iE.colon)){var r=this.tryParse((function(e){var t=n.tsParseTypeOrTypePredicateAnnotation(iE.colon);return!n.canInsertSemicolon()&&n.match(iE.arrow)||e(),t}));if(r.aborted)return;r.thrown||(r.error&&(this.state=r.failState),t.returnType=r.node)}return e.prototype.parseArrow.call(this,t)},n.parseAssignableListItemTypes=function(e){this.eat(iE.question)&&("Identifier"!==e.type&&this.raise(e.start,"A binding pattern parameter cannot be optional in an implementation signature."),e.optional=!0);var t=this.tsTryParseTypeAnnotation();return t&&(e.typeAnnotation=t),this.resetEndLocation(e),e},n.toAssignable=function(t,n,r){switch(t.type){case"TSTypeCastExpression":return e.prototype.toAssignable.call(this,this.typeCastToParameter(t),n,r);case"TSParameterProperty":return e.prototype.toAssignable.call(this,t,n,r);case"TSAsExpression":case"TSNonNullExpression":case"TSTypeAssertion":return t.expression=this.toAssignable(t.expression,n,r),t;default:return e.prototype.toAssignable.call(this,t,n,r)}},n.checkLVal=function(t,n,r,i){switch(void 0===n&&(n=64),t.type){case"TSTypeCastExpression":return;case"TSParameterProperty":return void this.checkLVal(t.parameter,n,r,"parameter property");case"TSAsExpression":case"TSNonNullExpression":case"TSTypeAssertion":return void this.checkLVal(t.expression,n,r,i);default:return void e.prototype.checkLVal.call(this,t,n,r,i)}},n.parseBindingAtom=function(){switch(this.state.type){case iE._this:return this.parseIdentifier(!0);default:return e.prototype.parseBindingAtom.call(this)}},n.parseMaybeDecoratorArguments=function(t){if(this.isRelational("<")){var n=this.tsParseTypeArguments();if(this.match(iE.parenL)){var r=e.prototype.parseMaybeDecoratorArguments.call(this,t);return r.typeParameters=n,r}this.unexpected(this.state.start,iE.parenL)}return e.prototype.parseMaybeDecoratorArguments.call(this,t)},n.isClassMethod=function(){return this.isRelational("<")||e.prototype.isClassMethod.call(this)},n.isClassProperty=function(){return this.match(iE.bang)||this.match(iE.colon)||e.prototype.isClassProperty.call(this)},n.parseMaybeDefault=function(){for(var t,n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];var a=(t=e.prototype.parseMaybeDefault).call.apply(t,[this].concat(r));return"AssignmentPattern"===a.type&&a.typeAnnotation&&a.right.start<a.typeAnnotation.start&&this.raise(a.typeAnnotation.start,"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`"),a},n.getTokenFromCode=function(t){return!this.state.inType||62!==t&&60!==t?e.prototype.getTokenFromCode.call(this,t):this.finishOp(iE.relational,1)},n.toAssignableList=function(t,n){for(var r=0;r<t.length;r++){var i=t[r];if(i)switch(i.type){case"TSTypeCastExpression":t[r]=this.typeCastToParameter(i);break;case"TSAsExpression":case"TSTypeAssertion":n?this.raise(i.start,"Unexpected type cast in parameter position."):t[r]=this.typeCastToParameter(i)}}return e.prototype.toAssignableList.apply(this,arguments)},n.typeCastToParameter=function(e){return e.expression.typeAnnotation=e.typeAnnotation,this.resetEndLocation(e.expression,e.typeAnnotation.end,e.typeAnnotation.loc.end),e.expression},n.toReferencedList=function(e,t){for(var n=0;n<e.length;n++){var r=e[n];r&&r._exprListItem&&"TsTypeCastExpression"===r.type&&this.raise(r.start,"Did not expect a type annotation here.")}return e},n.shouldParseArrow=function(){return this.match(iE.colon)||e.prototype.shouldParseArrow.call(this)},n.shouldParseAsyncArrow=function(){return this.match(iE.colon)||e.prototype.shouldParseAsyncArrow.call(this)},n.canHaveLeadingDecorator=function(){return e.prototype.canHaveLeadingDecorator.call(this)||this.isAbstractClass()},n.jsxParseOpeningElementAfterName=function(t){var n=this;if(this.isRelational("<")){var r=this.tsTryParseAndCatch((function(){return n.tsParseTypeArguments()}));r&&(t.typeParameters=r)}return e.prototype.jsxParseOpeningElementAfterName.call(this,t)},n.getGetterSetterExpectedParamCount=function(t){var n=e.prototype.getGetterSetterExpectedParamCount.call(this,t),r=t.params[0];return r&&"Identifier"===r.type&&"this"===r.name?n+1:n},t}(e)},v8intrinsic:function(e){return function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var n=t.prototype;return n.parseV8Intrinsic=function(){if(this.match(iE.modulo)){var e=this.state.start,t=this.startNode();if(this.eat(iE.modulo),this.match(iE.name)){var n=this.parseIdentifierName(this.state.start),r=this.createIdentifier(t,n);if(r.type="V8IntrinsicIdentifier",this.match(iE.parenL))return r}this.unexpected(e)}},n.parseExprAtom=function(){return this.parseV8Intrinsic()||e.prototype.parseExprAtom.apply(this,arguments)},t}(e)},placeholders:function(e){return function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var n=t.prototype;return n.parsePlaceholder=function(t){if(this.match(iE.placeholder)){var n=this.startNode();return this.next(),this.assertNoSpace("Unexpected space in placeholder."),n.name=e.prototype.parseIdentifier.call(this,!0),this.assertNoSpace("Unexpected space in placeholder."),this.expect(iE.placeholder),this.finishPlaceholder(n,t)}},n.finishPlaceholder=function(e,t){var n=!(!e.expectedNode||"Placeholder"!==e.type);return e.expectedNode=t,n?e:this.finishNode(e,"Placeholder")},n.getTokenFromCode=function(t){return 37===t&&37===this.input.charCodeAt(this.state.pos+1)?this.finishOp(iE.placeholder,2):e.prototype.getTokenFromCode.apply(this,arguments)},n.parseExprAtom=function(){return this.parsePlaceholder("Expression")||e.prototype.parseExprAtom.apply(this,arguments)},n.parseIdentifier=function(){return this.parsePlaceholder("Identifier")||e.prototype.parseIdentifier.apply(this,arguments)},n.checkReservedWord=function(t){void 0!==t&&e.prototype.checkReservedWord.apply(this,arguments)},n.parseBindingAtom=function(){return this.parsePlaceholder("Pattern")||e.prototype.parseBindingAtom.apply(this,arguments)},n.checkLVal=function(t){"Placeholder"!==t.type&&e.prototype.checkLVal.apply(this,arguments)},n.toAssignable=function(t){return t&&"Placeholder"===t.type&&"Expression"===t.expectedNode?(t.expectedNode="Pattern",t):e.prototype.toAssignable.apply(this,arguments)},n.verifyBreakContinue=function(t){t.label&&"Placeholder"===t.label.type||e.prototype.verifyBreakContinue.apply(this,arguments)},n.parseExpressionStatement=function(t,n){if("Placeholder"!==n.type||n.extra&&n.extra.parenthesized)return e.prototype.parseExpressionStatement.apply(this,arguments);if(this.match(iE.colon)){var r=t;return r.label=this.finishPlaceholder(n,"Identifier"),this.next(),r.body=this.parseStatement("label"),this.finishNode(r,"LabeledStatement")}return this.semicolon(),t.name=n.name,this.finishPlaceholder(t,"Statement")},n.parseBlock=function(){return this.parsePlaceholder("BlockStatement")||e.prototype.parseBlock.apply(this,arguments)},n.parseFunctionId=function(){return this.parsePlaceholder("Identifier")||e.prototype.parseFunctionId.apply(this,arguments)},n.parseClass=function(e,t,n){var r=t?"ClassDeclaration":"ClassExpression";this.next(),this.takeDecorators(e);var i=this.parsePlaceholder("Identifier");if(i)if(this.match(iE._extends)||this.match(iE.placeholder)||this.match(iE.braceL))e.id=i;else{if(n||!t)return e.id=null,e.body=this.finishPlaceholder(i,"ClassBody"),this.finishNode(e,r);this.unexpected(null,"A class name is required")}else this.parseClassId(e,t,n);return this.parseClassSuper(e),e.body=this.parsePlaceholder("ClassBody")||this.parseClassBody(!!e.superClass),this.finishNode(e,r)},n.parseExport=function(t){var n=this.parsePlaceholder("Identifier");if(!n)return e.prototype.parseExport.apply(this,arguments);if(!this.isContextual("from")&&!this.match(iE.comma))return t.specifiers=[],t.source=null,t.declaration=this.finishPlaceholder(n,"Declaration"),this.finishNode(t,"ExportNamedDeclaration");this.expectPlugin("exportDefaultFrom");var r=this.startNode();return r.exported=n,t.specifiers=[this.finishNode(r,"ExportDefaultSpecifier")],e.prototype.parseExport.call(this,t)},n.maybeParseExportDefaultSpecifier=function(t){return!!(t.specifiers&&t.specifiers.length>0)||e.prototype.maybeParseExportDefaultSpecifier.apply(this,arguments)},n.checkExport=function(t){var n=t.specifiers;n&&n.length&&(t.specifiers=n.filter((function(e){return"Placeholder"===e.exported.type}))),e.prototype.checkExport.call(this,t),t.specifiers=n},n.parseImport=function(t){var n=this.parsePlaceholder("Identifier");if(!n)return e.prototype.parseImport.apply(this,arguments);if(t.specifiers=[],!this.isContextual("from")&&!this.match(iE.comma))return t.source=this.finishPlaceholder(n,"StringLiteral"),this.semicolon(),this.finishNode(t,"ImportDeclaration");var r=this.startNodeAtNode(n);if(r.local=n,this.finishNode(r,"ImportDefaultSpecifier"),t.specifiers.push(r),this.eat(iE.comma)){var i=this.maybeParseStarImportSpecifier(t);i||this.parseNamedImportSpecifiers(t)}return this.expectContextual("from"),t.source=this.parseImportSource(),this.semicolon(),this.finishNode(t,"ImportDeclaration")},n.parseImportSource=function(){return this.parsePlaceholder("StringLiteral")||e.prototype.parseImportSource.apply(this,arguments)},t}(e)}},tA=Object.keys(eA),nA={sourceType:"script",sourceFilename:void 0,startLine:1,allowAwaitOutsideFunction:!1,allowReturnOutsideFunction:!1,allowImportExportEverywhere:!1,allowSuperOutsideMethod:!1,allowUndeclaredExports:!1,plugins:[],strictMode:null,ranges:!1,tokens:!1,createParenthesizedExpressions:!1,errorRecovery:!1};var rA=function(e,t){this.line=e,this.column=t},iA=function(e,t){this.start=e,this.end=t};function aA(e){return e[e.length-1]}var oA=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var n=t.prototype;return n.getLocationForPosition=function(e){return e===this.state.start?this.state.startLoc:e===this.state.lastTokStart?this.state.lastTokStartLoc:e===this.state.end?this.state.endLoc:e===this.state.lastTokEnd?this.state.lastTokEndLoc:function(e,t){var n,r=1,i=0;for(hE.lastIndex=0;(n=hE.exec(e))&&n.index<t;)r++,i=hE.lastIndex;return new rA(r,t-i)}(this.input,e)},n.raise=function(e,t,n){var r=void 0===n?{}:n,i=r.missingPluginNames,a=r.code,o=this.getLocationForPosition(e);t+=" ("+o.line+":"+o.column+")";var s=new SyntaxError(t);if(s.pos=e,s.loc=o,i&&(s.missingPlugin=i),void 0!==a&&(s.code=a),this.options.errorRecovery)return this.isLookahead||this.state.errors.push(s),s;throw s},t}(function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var n=t.prototype;return n.addComment=function(e){this.filename&&(e.loc.filename=this.filename),this.state.trailingComments.push(e),this.state.leadingComments.push(e)},n.adjustCommentsAfterTrailingComma=function(e,t,n){if(0!==this.state.leadingComments.length){for(var r=null,i=t.length;null===r&&i>0;)r=t[--i];if(null!==r){for(var a=0;a<this.state.leadingComments.length;a++)this.state.leadingComments[a].end<this.state.commentPreviousNode.end&&(this.state.leadingComments.splice(a,1),a--);for(var o=[],s=0;s<this.state.leadingComments.length;s++){var u=this.state.leadingComments[s];u.end<e.end?(o.push(u),n||(this.state.leadingComments.splice(s,1),s--)):(void 0===e.trailingComments&&(e.trailingComments=[]),e.trailingComments.push(u))}n&&(this.state.leadingComments=[]),o.length>0?r.trailingComments=o:void 0!==r.trailingComments&&(r.trailingComments=[])}}},n.processComment=function(e){if(!("Program"===e.type&&e.body.length>0)){var t,n,r,i,a,o=this.state.commentStack;if(this.state.trailingComments.length>0)this.state.trailingComments[0].start>=e.end?(r=this.state.trailingComments,this.state.trailingComments=[]):this.state.trailingComments.length=0;else if(o.length>0){var s=aA(o);s.trailingComments&&s.trailingComments[0].start>=e.end&&(r=s.trailingComments,delete s.trailingComments)}for(o.length>0&&aA(o).start>=e.start&&(t=o.pop());o.length>0&&aA(o).start>=e.start;)n=o.pop();if(!n&&t&&(n=t),t)switch(e.type){case"ObjectExpression":this.adjustCommentsAfterTrailingComma(e,e.properties);break;case"ObjectPattern":this.adjustCommentsAfterTrailingComma(e,e.properties,!0);break;case"CallExpression":this.adjustCommentsAfterTrailingComma(e,e.arguments);break;case"ArrayExpression":this.adjustCommentsAfterTrailingComma(e,e.elements);break;case"ArrayPattern":this.adjustCommentsAfterTrailingComma(e,e.elements,!0)}else this.state.commentPreviousNode&&("ImportSpecifier"===this.state.commentPreviousNode.type&&"ImportSpecifier"!==e.type||"ExportSpecifier"===this.state.commentPreviousNode.type&&"ExportSpecifier"!==e.type)&&this.adjustCommentsAfterTrailingComma(e,[this.state.commentPreviousNode],!0);if(n){if(n.leadingComments)if(n!==e&&n.leadingComments.length>0&&aA(n.leadingComments).end<=e.start)e.leadingComments=n.leadingComments,delete n.leadingComments;else for(i=n.leadingComments.length-2;i>=0;--i)if(n.leadingComments[i].end<=e.start){e.leadingComments=n.leadingComments.splice(0,i+1);break}}else if(this.state.leadingComments.length>0)if(aA(this.state.leadingComments).end<=e.start){if(this.state.commentPreviousNode)for(a=0;a<this.state.leadingComments.length;a++)this.state.leadingComments[a].end<this.state.commentPreviousNode.end&&(this.state.leadingComments.splice(a,1),a--);this.state.leadingComments.length>0&&(e.leadingComments=this.state.leadingComments,this.state.leadingComments=[])}else{for(i=0;i<this.state.leadingComments.length&&!(this.state.leadingComments[i].end>e.start);i++);var u=this.state.leadingComments.slice(0,i);u.length&&(e.leadingComments=u),0===(r=this.state.leadingComments.slice(i)).length&&(r=null)}this.state.commentPreviousNode=e,r&&(r.length&&r[0].start>=e.start&&aA(r).end<=e.end?e.innerComments=r:e.trailingComments=r),o.push(e)}},t}(function(){function e(){this.sawUnambiguousESM=!1,this.ambiguousScriptDifferentAst=!1}var t=e.prototype;return t.hasPlugin=function(e){return this.plugins.has(e)},t.getPluginOption=function(e,t){if(this.hasPlugin(e))return this.plugins.get(e)[t]},e}())),sA=function(){function e(){this.errors=[],this.potentialArrowAt=-1,this.noArrowAt=[],this.noArrowParamsConversionAt=[],this.inParameters=!1,this.maybeInArrowParameters=!1,this.inPipeline=!1,this.inType=!1,this.noAnonFunctionType=!1,this.inPropertyName=!1,this.inClassProperty=!1,this.hasFlowComment=!1,this.isIterator=!1,this.topicContext={maxNumOfResolvableTopics:0,maxTopicIndex:null},this.soloAwait=!1,this.inFSharpPipelineDirectBody=!1,this.classLevel=0,this.labels=[],this.decoratorStack=[[]],this.yieldPos=-1,this.awaitPos=-1,this.tokens=[],this.comments=[],this.trailingComments=[],this.leadingComments=[],this.commentStack=[],this.commentPreviousNode=null,this.pos=0,this.lineStart=0,this.type=iE.eof,this.value=null,this.start=0,this.end=0,this.lastTokEndLoc=null,this.lastTokStartLoc=null,this.lastTokStart=0,this.lastTokEnd=0,this.context=[vE.braceStatement],this.exprAllowed=!0,this.containsEsc=!1,this.containsOctal=!1,this.octalPosition=null,this.exportedIdentifiers=[],this.invalidTemplateEscapePosition=null}var t=e.prototype;return t.init=function(e){this.strict=!1!==e.strictMode&&"module"===e.sourceType,this.curLine=e.startLine,this.startLoc=this.endLoc=this.curPosition()},t.curPosition=function(){return new rA(this.curLine,this.pos-this.lineStart)},t.clone=function(t){for(var n=new e,r=Object.keys(this),i=0,a=r.length;i<a;i++){var o=r[i],s=this[o];!t&&Array.isArray(s)&&(s=s.slice()),n[o]=s}return n},e}(),uA=function(e){return e>=48&&e<=57},lA=new Set(["g","m","s","i","y","u"]),cA={decBinOct:[46,66,69,79,95,98,101,111],hex:[46,88,95,120]},pA={bin:[48,49]};pA.oct=[].concat(pA.bin,[50,51,52,53,54,55]),pA.dec=[].concat(pA.oct,[56,57]),pA.hex=[].concat(pA.dec,[65,66,67,68,69,70,97,98,99,100,101,102]);var hA=function(e){this.type=e.type,this.value=e.value,this.start=e.start,this.end=e.end,this.loc=new iA(e.startLoc,e.endLoc)},fA=function(e){function t(t,n){var r;return(r=e.call(this)||this).state=new sA,r.state.init(t),r.input=n,r.length=n.length,r.isLookahead=!1,r}i(t,e);var n=t.prototype;return n.next=function(){this.isLookahead||(this.checkKeywordEscapes(),this.options.tokens&&this.state.tokens.push(new hA(this.state))),this.state.lastTokEnd=this.state.end,this.state.lastTokStart=this.state.start,this.state.lastTokEndLoc=this.state.endLoc,this.state.lastTokStartLoc=this.state.startLoc,this.nextToken()},n.eat=function(e){return!!this.match(e)&&(this.next(),!0)},n.match=function(e){return this.state.type===e},n.lookahead=function(){var e=this.state;this.state=e.clone(!0),this.isLookahead=!0,this.next(),this.isLookahead=!1;var t=this.state;return this.state=e,t},n.nextTokenStart=function(){var e=this.state.pos;return dE.lastIndex=e,e+dE.exec(this.input)[0].length},n.lookaheadCharCode=function(){return this.input.charCodeAt(this.nextTokenStart())},n.setStrict=function(e){if(this.state.strict=e,this.match(iE.num)||this.match(iE.string)){for(this.state.pos=this.state.start;this.state.pos<this.state.lineStart;)this.state.lineStart=this.input.lastIndexOf("\n",this.state.lineStart-2)+1,--this.state.curLine;this.nextToken()}},n.curContext=function(){return this.state.context[this.state.context.length-1]},n.nextToken=function(){var e=this.curContext();e&&e.preserveSpace||this.skipSpace(),this.state.containsOctal=!1,this.state.octalPosition=null,this.state.start=this.state.pos,this.state.startLoc=this.state.curPosition(),this.state.pos>=this.length?this.finishToken(iE.eof):e.override?e.override(this):this.getTokenFromCode(this.input.codePointAt(this.state.pos))},n.pushComment=function(e,t,n,r,i,a){var o={type:e?"CommentBlock":"CommentLine",value:t,start:n,end:r,loc:new iA(i,a)};this.options.tokens&&this.state.tokens.push(o),this.state.comments.push(o),this.addComment(o)},n.skipBlockComment=function(){var e,t=this.state.curPosition(),n=this.state.pos,r=this.input.indexOf("*/",this.state.pos+2);if(-1===r)throw this.raise(n,"Unterminated comment");for(this.state.pos=r+2,hE.lastIndex=n;(e=hE.exec(this.input))&&e.index<this.state.pos;)++this.state.curLine,this.state.lineStart=e.index+e[0].length;this.isLookahead||this.pushComment(!0,this.input.slice(n+2,r),n,this.state.pos,t,this.state.curPosition())},n.skipLineComment=function(e){var t=this.state.pos,n=this.state.curPosition(),r=this.input.charCodeAt(this.state.pos+=e);if(this.state.pos<this.length)for(;!fE(r)&&++this.state.pos<this.length;)r=this.input.charCodeAt(this.state.pos);this.isLookahead||this.pushComment(!1,this.input.slice(t+e,this.state.pos),t,this.state.pos,n,this.state.curPosition())},n.skipSpace=function(){e:for(;this.state.pos<this.length;){var e=this.input.charCodeAt(this.state.pos);switch(e){case 32:case 160:case 9:++this.state.pos;break;case 13:10===this.input.charCodeAt(this.state.pos+1)&&++this.state.pos;case 10:case 8232:case 8233:++this.state.pos,++this.state.curLine,this.state.lineStart=this.state.pos;break;case 47:switch(this.input.charCodeAt(this.state.pos+1)){case 42:this.skipBlockComment();break;case 47:this.skipLineComment(2);break;default:break e}break;default:if(!mE(e))break e;++this.state.pos}}},n.finishToken=function(e,t){this.state.end=this.state.pos,this.state.endLoc=this.state.curPosition();var n=this.state.type;this.state.type=e,this.state.value=t,this.isLookahead||this.updateContext(n)},n.readToken_numberSign=function(){if(0!==this.state.pos||!this.readToken_interpreter()){var e=this.state.pos+1,t=this.input.charCodeAt(e);if(t>=48&&t<=57)throw this.raise(this.state.pos,"Unexpected digit after hash token");if((this.hasPlugin("classPrivateProperties")||this.hasPlugin("classPrivateMethods"))&&this.state.classLevel>0)return++this.state.pos,void this.finishToken(iE.hash);if("smart"!==this.getPluginOption("pipelineOperator","proposal"))throw this.raise(this.state.pos,"Unexpected character '#'");this.finishOp(iE.hash,1)}},n.readToken_dot=function(){var e=this.input.charCodeAt(this.state.pos+1);e>=48&&e<=57?this.readNumber(!0):46===e&&46===this.input.charCodeAt(this.state.pos+2)?(this.state.pos+=3,this.finishToken(iE.ellipsis)):(++this.state.pos,this.finishToken(iE.dot))},n.readToken_slash=function(){if(this.state.exprAllowed&&!this.state.inType)return++this.state.pos,void this.readRegexp();61===this.input.charCodeAt(this.state.pos+1)?this.finishOp(iE.assign,2):this.finishOp(iE.slash,1)},n.readToken_interpreter=function(){if(0!==this.state.pos||this.length<2)return!1;var e=this.state.pos;this.state.pos+=1;var t=this.input.charCodeAt(this.state.pos);if(33!==t)return!1;for(;!fE(t)&&++this.state.pos<this.length;)t=this.input.charCodeAt(this.state.pos);var n=this.input.slice(e+2,this.state.pos);return this.finishToken(iE.interpreterDirective,n),!0},n.readToken_mult_modulo=function(e){var t=42===e?iE.star:iE.modulo,n=1,r=this.input.charCodeAt(this.state.pos+1),i=this.state.exprAllowed;42===e&&42===r&&(n++,r=this.input.charCodeAt(this.state.pos+2),t=iE.exponent),61!==r||i||(n++,t=iE.assign),this.finishOp(t,n)},n.readToken_pipe_amp=function(e){var t=this.input.charCodeAt(this.state.pos+1);t!==e?124!==e||62!==t?61!==t?this.finishOp(124===e?iE.bitwiseOR:iE.bitwiseAND,1):this.finishOp(iE.assign,2):this.finishOp(iE.pipeline,2):61===this.input.charCodeAt(this.state.pos+2)?this.finishOp(iE.assign,3):this.finishOp(124===e?iE.logicalOR:iE.logicalAND,2)},n.readToken_caret=function(){61===this.input.charCodeAt(this.state.pos+1)?this.finishOp(iE.assign,2):this.finishOp(iE.bitwiseXOR,1)},n.readToken_plus_min=function(e){var t=this.input.charCodeAt(this.state.pos+1);if(t===e)return 45!==t||this.inModule||62!==this.input.charCodeAt(this.state.pos+2)||0!==this.state.lastTokEnd&&!pE.test(this.input.slice(this.state.lastTokEnd,this.state.pos))?void this.finishOp(iE.incDec,2):(this.skipLineComment(3),this.skipSpace(),void this.nextToken());61===t?this.finishOp(iE.assign,2):this.finishOp(iE.plusMin,1)},n.readToken_lt_gt=function(e){var t=this.input.charCodeAt(this.state.pos+1),n=1;return t===e?(n=62===e&&62===this.input.charCodeAt(this.state.pos+2)?3:2,61===this.input.charCodeAt(this.state.pos+n)?void this.finishOp(iE.assign,n+1):void this.finishOp(iE.bitShift,n)):33!==t||60!==e||this.inModule||45!==this.input.charCodeAt(this.state.pos+2)||45!==this.input.charCodeAt(this.state.pos+3)?(61===t&&(n=2),void this.finishOp(iE.relational,n)):(this.skipLineComment(4),this.skipSpace(),void this.nextToken())},n.readToken_eq_excl=function(e){var t=this.input.charCodeAt(this.state.pos+1);if(61!==t)return 61===e&&62===t?(this.state.pos+=2,void this.finishToken(iE.arrow)):void this.finishOp(61===e?iE.eq:iE.bang,1);this.finishOp(iE.equality,61===this.input.charCodeAt(this.state.pos+2)?3:2)},n.readToken_question=function(){var e=this.input.charCodeAt(this.state.pos+1),t=this.input.charCodeAt(this.state.pos+2);63!==e||this.state.inType?46!==e||t>=48&&t<=57?(++this.state.pos,this.finishToken(iE.question)):(this.state.pos+=2,this.finishToken(iE.questionDot)):61===t?this.finishOp(iE.assign,3):this.finishOp(iE.nullishCoalescing,2)},n.getTokenFromCode=function(e){switch(e){case 46:return void this.readToken_dot();case 40:return++this.state.pos,void this.finishToken(iE.parenL);case 41:return++this.state.pos,void this.finishToken(iE.parenR);case 59:return++this.state.pos,void this.finishToken(iE.semi);case 44:return++this.state.pos,void this.finishToken(iE.comma);case 91:return++this.state.pos,void this.finishToken(iE.bracketL);case 93:return++this.state.pos,void this.finishToken(iE.bracketR);case 123:return++this.state.pos,void this.finishToken(iE.braceL);case 125:return++this.state.pos,void this.finishToken(iE.braceR);case 58:return void(this.hasPlugin("functionBind")&&58===this.input.charCodeAt(this.state.pos+1)?this.finishOp(iE.doubleColon,2):(++this.state.pos,this.finishToken(iE.colon)));case 63:return void this.readToken_question();case 96:return++this.state.pos,void this.finishToken(iE.backQuote);case 48:var t=this.input.charCodeAt(this.state.pos+1);if(120===t||88===t)return void this.readRadixNumber(16);if(111===t||79===t)return void this.readRadixNumber(8);if(98===t||66===t)return void this.readRadixNumber(2);case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return void this.readNumber(!1);case 34:case 39:return void this.readString(e);case 47:return void this.readToken_slash();case 37:case 42:return void this.readToken_mult_modulo(e);case 124:case 38:return void this.readToken_pipe_amp(e);case 94:return void this.readToken_caret();case 43:case 45:return void this.readToken_plus_min(e);case 60:case 62:return void this.readToken_lt_gt(e);case 61:case 33:return void this.readToken_eq_excl(e);case 126:return void this.finishOp(iE.tilde,1);case 64:return++this.state.pos,void this.finishToken(iE.at);case 35:return void this.readToken_numberSign();case 92:return void this.readWord();default:if(OE(e))return void this.readWord()}throw this.raise(this.state.pos,"Unexpected character '"+String.fromCodePoint(e)+"'")},n.finishOp=function(e,t){var n=this.input.slice(this.state.pos,this.state.pos+t);this.state.pos+=t,this.finishToken(e,n)},n.readRegexp=function(){for(var e,t,n=this.state.pos;;){if(this.state.pos>=this.length)throw this.raise(n,"Unterminated regular expression");var r=this.input.charAt(this.state.pos);if(pE.test(r))throw this.raise(n,"Unterminated regular expression");if(e)e=!1;else{if("["===r)t=!0;else if("]"===r&&t)t=!1;else if("/"===r&&!t)break;e="\\"===r}++this.state.pos}var i=this.input.slice(n,this.state.pos);++this.state.pos;for(var a="";this.state.pos<this.length;){var o=this.input[this.state.pos],s=this.input.codePointAt(this.state.pos);if(lA.has(o))a.indexOf(o)>-1&&this.raise(this.state.pos+1,"Duplicate regular expression flag");else{if(!BE(s)&&92!==s)break;this.raise(this.state.pos+1,"Invalid regular expression flag")}++this.state.pos,a+=o}this.finishToken(iE.regexp,{pattern:i,flags:a})},n.readInt=function(e,t,n,r){void 0===r&&(r=!0);for(var i=this.state.pos,a=16===e?cA.hex:cA.decBinOct,o=16===e?pA.hex:10===e?pA.dec:8===e?pA.oct:pA.bin,s=!1,u=0,l=0,c=null==t?1/0:t;l<c;++l){var p=this.input.charCodeAt(this.state.pos),h=void 0;if(this.hasPlugin("numericSeparator")&&95===p){var f=this.input.charCodeAt(this.state.pos-1),d=this.input.charCodeAt(this.state.pos+1);-1===o.indexOf(d)?this.raise(this.state.pos,"A numeric separator is only allowed between two digits"):(a.indexOf(f)>-1||a.indexOf(d)>-1||Number.isNaN(d))&&this.raise(this.state.pos,"A numeric separator is only allowed between two digits"),r||this.raise(this.state.pos,"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences"),++this.state.pos}else{if((h=p>=97?p-97+10:p>=65?p-65+10:uA(p)?p-48:1/0)>=e)if(this.options.errorRecovery&&h<=9)h=0,this.raise(this.state.start+l+2,"Expected number in radix "+e);else{if(!n)break;h=0,s=!0}++this.state.pos,u=u*e+h}}return this.state.pos===i||null!=t&&this.state.pos-i!==t||s?null:u},n.readRadixNumber=function(e){var t=this.state.pos,n=!1;this.state.pos+=2;var r=this.readInt(e);if(null==r&&this.raise(this.state.start+2,"Expected number in radix "+e),this.hasPlugin("bigInt")&&110===this.input.charCodeAt(this.state.pos)&&(++this.state.pos,n=!0),OE(this.input.codePointAt(this.state.pos)))throw this.raise(this.state.pos,"Identifier directly after number");if(n){var i=this.input.slice(t,this.state.pos).replace(/[_n]/g,"");this.finishToken(iE.bigint,i)}else this.finishToken(iE.num,r)},n.readNumber=function(e){var t=this.state.pos,n=!1,r=!1,i=!1;e||null!==this.readInt(10)||this.raise(t,"Invalid number");var a=this.state.pos-t>=2&&48===this.input.charCodeAt(t);a&&(this.state.strict&&this.raise(t,"Legacy octal literals are not allowed in strict mode"),/[89]/.test(this.input.slice(t,this.state.pos))&&(a=!1,i=!0));var o=this.input.charCodeAt(this.state.pos);if(46!==o||a||(++this.state.pos,this.readInt(10),n=!0,o=this.input.charCodeAt(this.state.pos)),69!==o&&101!==o||a||(43!==(o=this.input.charCodeAt(++this.state.pos))&&45!==o||++this.state.pos,null===this.readInt(10)&&this.raise(t,"Invalid number"),n=!0,o=this.input.charCodeAt(this.state.pos)),this.hasPlugin("numericSeparator")&&(a||i)){var s=this.input.slice(t,this.state.pos).indexOf("_");s>0&&this.raise(s+t,"Numeric separator can not be used after leading 0")}if(this.hasPlugin("bigInt")&&110===o&&((n||a||i)&&this.raise(t,"Invalid BigIntLiteral"),++this.state.pos,r=!0),OE(this.input.codePointAt(this.state.pos)))throw this.raise(this.state.pos,"Identifier directly after number");var u=this.input.slice(t,this.state.pos).replace(/[_n]/g,"");if(r)this.finishToken(iE.bigint,u);else{var l=a?parseInt(u,8):parseFloat(u);this.finishToken(iE.num,l)}},n.readCodePoint=function(e){var t;if(123===this.input.charCodeAt(this.state.pos)){var n=++this.state.pos;if(t=this.readHexChar(this.input.indexOf("}",this.state.pos)-this.state.pos,!0,e),++this.state.pos,null===t)--this.state.invalidTemplateEscapePosition;else if(t>1114111){if(!e)return this.state.invalidTemplateEscapePosition=n-2,null;this.raise(n,"Code point out of bounds")}}else t=this.readHexChar(4,!1,e);return t},n.readString=function(e){for(var t="",n=++this.state.pos;;){if(this.state.pos>=this.length)throw this.raise(this.state.start,"Unterminated string constant");var r=this.input.charCodeAt(this.state.pos);if(r===e)break;if(92===r)t+=this.input.slice(n,this.state.pos),t+=this.readEscapedChar(!1),n=this.state.pos;else if(8232===r||8233===r)++this.state.pos,++this.state.curLine;else{if(fE(r))throw this.raise(this.state.start,"Unterminated string constant");++this.state.pos}}t+=this.input.slice(n,this.state.pos++),this.finishToken(iE.string,t)},n.readTmplToken=function(){for(var e="",t=this.state.pos,n=!1;;){if(this.state.pos>=this.length)throw this.raise(this.state.start,"Unterminated template");var r=this.input.charCodeAt(this.state.pos);if(96===r||36===r&&123===this.input.charCodeAt(this.state.pos+1))return this.state.pos===this.state.start&&this.match(iE.template)?36===r?(this.state.pos+=2,void this.finishToken(iE.dollarBraceL)):(++this.state.pos,void this.finishToken(iE.backQuote)):(e+=this.input.slice(t,this.state.pos),void this.finishToken(iE.template,n?null:e));if(92===r){e+=this.input.slice(t,this.state.pos);var i=this.readEscapedChar(!0);null===i?n=!0:e+=i,t=this.state.pos}else if(fE(r)){switch(e+=this.input.slice(t,this.state.pos),++this.state.pos,r){case 13:10===this.input.charCodeAt(this.state.pos)&&++this.state.pos;case 10:e+="\n";break;default:e+=String.fromCharCode(r)}++this.state.curLine,this.state.lineStart=this.state.pos,t=this.state.pos}else++this.state.pos}},n.readEscapedChar=function(e){var t=!e,n=this.input.charCodeAt(++this.state.pos);switch(++this.state.pos,n){case 110:return"\n";case 114:return"\r";case 120:var r=this.readHexChar(2,!1,t);return null===r?null:String.fromCharCode(r);case 117:var i=this.readCodePoint(t);return null===i?null:String.fromCodePoint(i);case 116:return"\t";case 98:return"\b";case 118:return"\v";case 102:return"\f";case 13:10===this.input.charCodeAt(this.state.pos)&&++this.state.pos;case 10:this.state.lineStart=this.state.pos,++this.state.curLine;case 8232:case 8233:return"";case 56:case 57:if(e){var a=this.state.pos-1;return this.state.invalidTemplateEscapePosition=a,null}default:if(n>=48&&n<=55){var o=this.state.pos-1,s=this.input.substr(this.state.pos-1,3).match(/^[0-7]+/)[0],u=parseInt(s,8);u>255&&(s=s.slice(0,-1),u=parseInt(s,8)),this.state.pos+=s.length-1;var l=this.input.charCodeAt(this.state.pos);if("0"!==s||56===l||57===l){if(e)return this.state.invalidTemplateEscapePosition=o,null;this.state.strict?this.raise(o,"Octal literal in strict mode"):this.state.containsOctal||(this.state.containsOctal=!0,this.state.octalPosition=o)}return String.fromCharCode(u)}return String.fromCharCode(n)}},n.readHexChar=function(e,t,n){var r=this.state.pos,i=this.readInt(16,e,t,!1);return null===i&&(n?this.raise(r,"Bad character escape sequence"):(this.state.pos=r-1,this.state.invalidTemplateEscapePosition=r-1)),i},n.readWord1=function(){var e="";this.state.containsEsc=!1;for(var t=this.state.pos,n=this.state.pos;this.state.pos<this.length;){var r=this.input.codePointAt(this.state.pos);if(BE(r))this.state.pos+=r<=65535?1:2;else if(this.state.isIterator&&64===r)++this.state.pos;else{if(92!==r)break;this.state.containsEsc=!0,e+=this.input.slice(n,this.state.pos);var i=this.state.pos,a=this.state.pos===t?OE:BE;if(117!==this.input.charCodeAt(++this.state.pos)){this.raise(this.state.pos,"Expecting Unicode escape sequence \\uXXXX");continue}++this.state.pos;var o=this.readCodePoint(!0);null!==o&&(a(o)||this.raise(i,"Invalid Unicode escape"),e+=String.fromCodePoint(o)),n=this.state.pos}}return e+this.input.slice(n,this.state.pos)},n.isIterator=function(e){return"@@iterator"===e||"@@asyncIterator"===e},n.readWord=function(){var e=this.readWord1(),t=tE.get(e)||iE.name;!this.state.isIterator||this.isIterator(e)&&this.state.inType||this.raise(this.state.pos,"Invalid identifier "+e),this.finishToken(t,e)},n.checkKeywordEscapes=function(){var e=this.state.type.keyword;e&&this.state.containsEsc&&this.raise(this.state.start,"Escape sequence in keyword "+e)},n.braceIsBlock=function(e){var t=this.curContext();return t===vE.functionExpression||t===vE.functionStatement||(e!==iE.colon||t!==vE.braceStatement&&t!==vE.braceExpression?e===iE._return||e===iE.name&&this.state.exprAllowed?pE.test(this.input.slice(this.state.lastTokEnd,this.state.start)):e===iE._else||e===iE.semi||e===iE.eof||e===iE.parenR||e===iE.arrow||(e===iE.braceL?t===vE.braceStatement:e!==iE._var&&e!==iE._const&&e!==iE.name&&(e===iE.relational||!this.state.exprAllowed)):!t.isExpr)},n.updateContext=function(e){var t,n=this.state.type;!n.keyword||e!==iE.dot&&e!==iE.questionDot?(t=n.updateContext)?t.call(this,e):this.state.exprAllowed=n.beforeExpr:this.state.exprAllowed=!1},t}(oA),dA=/^('|")((?:\\?.)*?)\1/,mA=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var n=t.prototype;return n.addExtra=function(e,t,n){e&&((e.extra=e.extra||{})[t]=n)},n.isRelational=function(e){return this.match(iE.relational)&&this.state.value===e},n.isLookaheadRelational=function(e){var t=this.nextTokenStart();if(this.input.charAt(t)===e){if(t+1===this.input.length)return!0;var n=this.input.charCodeAt(t+1);return n!==e.charCodeAt(0)&&61!==n}return!1},n.expectRelational=function(e){this.isRelational(e)?this.next():this.unexpected(null,iE.relational)},n.eatRelational=function(e){return!!this.isRelational(e)&&(this.next(),!0)},n.isContextual=function(e){return this.match(iE.name)&&this.state.value===e&&!this.state.containsEsc},n.isUnparsedContextual=function(e,t){var n=e+t.length;return this.input.slice(e,n)===t&&(n===this.input.length||!BE(this.input.charCodeAt(n)))},n.isLookaheadContextual=function(e){var t=this.nextTokenStart();return this.isUnparsedContextual(t,e)},n.eatContextual=function(e){return this.isContextual(e)&&this.eat(iE.name)},n.expectContextual=function(e,t){this.eatContextual(e)||this.unexpected(null,t)},n.canInsertSemicolon=function(){return this.match(iE.eof)||this.match(iE.braceR)||this.hasPrecedingLineBreak()},n.hasPrecedingLineBreak=function(){return pE.test(this.input.slice(this.state.lastTokEnd,this.state.start))},n.isLineTerminator=function(){return this.eat(iE.semi)||this.canInsertSemicolon()},n.semicolon=function(){this.isLineTerminator()||this.unexpected(null,iE.semi)},n.expect=function(e,t){this.eat(e)||this.unexpected(t,e)},n.assertNoSpace=function(e){void 0===e&&(e="Unexpected space."),this.state.start>this.state.lastTokEnd&&this.raise(this.state.lastTokEnd,e)},n.unexpected=function(e,t){throw void 0===t&&(t="Unexpected token"),"string"!=typeof t&&(t='Unexpected token, expected "'+t.label+'"'),this.raise(null!=e?e:this.state.start,t)},n.expectPlugin=function(e,t){if(!this.hasPlugin(e))throw this.raise(null!=t?t:this.state.start,"This experimental syntax requires enabling the parser plugin: '"+e+"'",{missingPluginNames:[e]});return!0},n.expectOnePlugin=function(e,t){var n=this;if(!e.some((function(e){return n.hasPlugin(e)})))throw this.raise(null!=t?t:this.state.start,"This experimental syntax requires enabling one of the following parser plugin(s): '"+e.join(", ")+"'",{missingPluginNames:e})},n.checkYieldAwaitInDefaultParams=function(){-1!==this.state.yieldPos&&(-1===this.state.awaitPos||this.state.yieldPos<this.state.awaitPos)&&this.raise(this.state.yieldPos,"Yield cannot be used as name inside a generator function"),-1!==this.state.awaitPos&&this.raise(this.state.awaitPos,"Await cannot be used as name inside an async function")},n.strictDirective=function(e){for(;;){dE.lastIndex=e,e+=dE.exec(this.input)[0].length;var t=dA.exec(this.input.slice(e));if(!t)break;if("use strict"===t[2])return!0;e+=t[0].length,dE.lastIndex=e,e+=dE.exec(this.input)[0].length,";"===this.input[e]&&e++}return!1},n.tryParse=function(e,t){void 0===t&&(t=this.state.clone());var n={node:null};try{var r=e((function(e){throw void 0===e&&(e=null),n.node=e,n}));if(this.state.errors.length>t.errors.length){var i=this.state;return this.state=t,{node:r,error:i.errors[t.errors.length],thrown:!1,aborted:!1,failState:i}}return{node:r,error:null,thrown:!1,aborted:!1,failState:null}}catch(e){var a=this.state;if(this.state=t,e instanceof SyntaxError)return{node:null,error:e,thrown:!0,aborted:!1,failState:a};if(e===n)return{node:n.node,error:null,thrown:!1,aborted:!0,failState:a};throw e}},t}(fA),yA=function(){function e(e,t,n){this.type="",this.start=t,this.end=0,this.loc=new iA(n),e&&e.options.ranges&&(this.range=[t,0]),e&&e.filename&&(this.loc.filename=e.filename)}return e.prototype.__clone=function(){for(var t=new e,n=Object.keys(this),r=0,i=n.length;r<i;r++){var a=n[r];"leadingComments"!==a&&"trailingComments"!==a&&"innerComments"!==a&&(t[a]=this[a])}return t},e}(),vA=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var n=t.prototype;return n.toAssignable=function(e,t,n){var r;if(e)switch(e.type){case"Identifier":case"ObjectPattern":case"ArrayPattern":case"AssignmentPattern":break;case"ObjectExpression":e.type="ObjectPattern";for(var i=0,a=e.properties.length,o=a-1;i<a;i++){var s,u=e.properties[i],l=i===o;this.toAssignableObjectExpressionProp(u,t,l),l&&"RestElement"===u.type&&(null==(s=e.extra)?void 0:s.trailingComma)&&this.raiseRestNotLast(e.extra.trailingComma)}break;case"ObjectProperty":this.toAssignable(e.value,t,n);break;case"SpreadElement":this.checkToRestConversion(e),e.type="RestElement";var c=e.argument;this.toAssignable(c,t,n);break;case"ArrayExpression":e.type="ArrayPattern",this.toAssignableList(e.elements,t,n,null==(r=e.extra)?void 0:r.trailingComma);break;case"AssignmentExpression":"="!==e.operator&&this.raise(e.left.end,"Only '=' operator can be used for specifying default value."),e.type="AssignmentPattern",delete e.operator,this.toAssignable(e.left,t,n);break;case"ParenthesizedExpression":e.expression=this.toAssignable(e.expression,t,n)}return e},n.toAssignableObjectExpressionProp=function(e,t,n){if("ObjectMethod"===e.type){var r="get"===e.kind||"set"===e.kind?"Object pattern can't contain getter or setter":"Object pattern can't contain methods";this.raise(e.key.start,r)}else"SpreadElement"!==e.type||n?this.toAssignable(e,t,"object destructuring pattern"):this.raiseRestNotLast(e.start)},n.toAssignableList=function(e,t,n,r){var i=e.length;if(i){var a=e[i-1];if(a&&"RestElement"===a.type)--i;else if(a&&"SpreadElement"===a.type){a.type="RestElement";var o=a.argument;this.toAssignable(o,t,n),"Identifier"!==o.type&&"MemberExpression"!==o.type&&"ArrayPattern"!==o.type&&"ObjectPattern"!==o.type&&this.unexpected(o.start),r&&this.raiseTrailingCommaAfterRest(r),--i}}for(var s=0;s<i;s++){var u=e[s];u&&(this.toAssignable(u,t,n),"RestElement"===u.type&&this.raiseRestNotLast(u.start))}return e},n.toReferencedList=function(e,t){return e},n.toReferencedListDeep=function(e,t){this.toReferencedList(e,t);for(var n=0;n<e.length;n++){var r=e[n];r&&"ArrayExpression"===r.type&&this.toReferencedListDeep(r.elements)}return e},n.parseSpread=function(e,t){var n=this.startNode();return this.next(),n.argument=this.parseMaybeAssign(!1,e,void 0,t),this.finishNode(n,"SpreadElement")},n.parseRestBinding=function(){var e=this.startNode();return this.next(),e.argument=this.parseBindingAtom(),this.finishNode(e,"RestElement")},n.parseBindingAtom=function(){switch(this.state.type){case iE.bracketL:var e=this.startNode();return this.next(),e.elements=this.parseBindingList(iE.bracketR,93,!0),this.finishNode(e,"ArrayPattern");case iE.braceL:return this.parseObj(!0)}return this.parseIdentifier()},n.parseBindingList=function(e,t,n,r){for(var i=[],a=!0;!this.eat(e);)if(a?a=!1:this.expect(iE.comma),n&&this.match(iE.comma))i.push(null);else{if(this.eat(e))break;if(this.match(iE.ellipsis)){i.push(this.parseAssignableListItemTypes(this.parseRestBinding())),this.checkCommaAfterRest(t),this.expect(e);break}var o=[];for(this.match(iE.at)&&this.hasPlugin("decorators")&&this.raise(this.state.start,"Stage 2 decorators cannot be used to decorate parameters");this.match(iE.at);)o.push(this.parseDecorator());i.push(this.parseAssignableListItem(r,o))}return i},n.parseAssignableListItem=function(e,t){var n=this.parseMaybeDefault();this.parseAssignableListItemTypes(n);var r=this.parseMaybeDefault(n.start,n.loc.start,n);return t.length&&(n.decorators=t),r},n.parseAssignableListItemTypes=function(e){return e},n.parseMaybeDefault=function(e,t,n){if(t=t||this.state.startLoc,e=e||this.state.start,n=n||this.parseBindingAtom(),!this.eat(iE.eq))return n;var r=this.startNodeAt(e,t);return r.left=n,r.right=this.parseMaybeAssign(),this.finishNode(r,"AssignmentPattern")},n.checkLVal=function(e,t,n,r,i,a){switch(void 0===t&&(t=64),void 0===a&&(a=!1),e.type){case"Identifier":if(this.state.strict&&(a?xE(e.name,this.inModule):SE(e.name))&&this.raise(e.start,(64===t?"Assigning to":"Binding")+" '"+e.name+"' in strict mode"),n){var o="_"+e.name;n[o]?this.raise(e.start,"Argument name clash"):n[o]=!0}i&&"let"===e.name&&this.raise(e.start,"'let' is not allowed to be used as a name in 'let' or 'const' declarations."),64&t||this.scope.declareName(e.name,t,e.start);break;case"MemberExpression":64!==t&&this.raise(e.start,"Binding member expression");break;case"ObjectPattern":for(var s=0,u=e.properties;s<u.length;s++){var l=u[s];if("ObjectProperty"===l.type)l=l.value;else if("ObjectMethod"===l.type)continue;this.checkLVal(l,t,n,"object destructuring pattern",i)}break;case"ArrayPattern":for(var c=0,p=e.elements;c<p.length;c++){var h=p[c];h&&this.checkLVal(h,t,n,"array destructuring pattern",i)}break;case"AssignmentPattern":this.checkLVal(e.left,t,n,"assignment pattern");break;case"RestElement":this.checkLVal(e.argument,t,n,"rest element");break;case"ParenthesizedExpression":this.checkLVal(e.expression,t,n,"parenthesized expression");break;default:var f=(64===t?"Invalid":"Binding invalid")+" left-hand side"+(r?" in "+r:"expression");this.raise(e.start,f)}},n.checkToRestConversion=function(e){"Identifier"!==e.argument.type&&"MemberExpression"!==e.argument.type&&this.raise(e.argument.start,"Invalid rest operator's argument")},n.checkCommaAfterRest=function(e){this.match(iE.comma)&&(this.lookaheadCharCode()===e?this.raiseTrailingCommaAfterRest(this.state.start):this.raiseRestNotLast(this.state.start))},n.raiseRestNotLast=function(e){throw this.raise(e,"Rest element must be last element")},n.raiseTrailingCommaAfterRest=function(e){this.raise(e,"Unexpected trailing comma after rest element")},t}(function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var n=t.prototype;return n.startNode=function(){return new yA(this,this.state.start,this.state.startLoc)},n.startNodeAt=function(e,t){return new yA(this,e,t)},n.startNodeAtNode=function(e){return this.startNodeAt(e.start,e.loc.start)},n.finishNode=function(e,t){return this.finishNodeAt(e,t,this.state.lastTokEnd,this.state.lastTokEndLoc)},n.finishNodeAt=function(e,t,n,r){if(e.end>0)throw new Error("Do not call finishNode*() twice on the same node. Instead use resetEndLocation() or change type directly.");return e.type=t,e.end=n,e.loc.end=r,this.options.ranges&&(e.range[1]=n),this.processComment(e),e},n.resetStartLocation=function(e,t,n){e.start=t,e.loc.start=n,this.options.ranges&&(e.range[0]=t)},n.resetEndLocation=function(e,t,n){void 0===t&&(t=this.state.lastTokEnd),void 0===n&&(n=this.state.lastTokEndLoc),e.end=t,e.loc.end=n,this.options.ranges&&(e.range[1]=t)},n.resetStartLocationFromNode=function(e,t){this.resetStartLocation(e,t.start,t.loc.start)},t}(mA)),gA=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var n=t.prototype;return n.checkDuplicatedProto=function(e,t){if(!("SpreadElement"===e.type||e.computed||e.kind||e.shorthand)){var n=e.key;"__proto__"===("Identifier"===n.type?n.name:String(n.value))&&(t.used&&!t.start&&(t.start=n.start),t.used=!0)}},n.getExpression=function(){this.scope.enter(1),this.nextToken();var e=this.parseExpression();return this.match(iE.eof)||this.unexpected(),e.comments=this.state.comments,e.errors=this.state.errors,e},n.parseExpression=function(e,t){var n=this.state.start,r=this.state.startLoc,i=this.parseMaybeAssign(e,t);if(this.match(iE.comma)){var a=this.startNodeAt(n,r);for(a.expressions=[i];this.eat(iE.comma);)a.expressions.push(this.parseMaybeAssign(e,t));return this.toReferencedList(a.expressions),this.finishNode(a,"SequenceExpression")}return i},n.parseMaybeAssign=function(e,t,n,r){var i,a=this.state.start,o=this.state.startLoc;if(this.isContextual("yield")){if(this.scope.inGenerator){var s=this.parseYield(e);return n&&(s=n.call(this,s,a,o)),s}this.state.exprAllowed=!1}t?i=!1:(t={start:0},i=!0),(this.match(iE.parenL)||this.match(iE.name))&&(this.state.potentialArrowAt=this.state.start);var u=this.parseMaybeConditional(e,t,r);if(n&&(u=n.call(this,u,a,o)),this.state.type.isAssign){var l=this.startNodeAt(a,o),c=this.state.value;l.operator=c,"??="===c&&(this.expectPlugin("nullishCoalescingOperator"),this.expectPlugin("logicalAssignment")),"||="!==c&&"&&="!==c||this.expectPlugin("logicalAssignment"),l.left=this.match(iE.eq)?this.toAssignable(u,void 0,"assignment expression"):u,t.start>=l.left.start&&(t.start=0),this.checkLVal(u,void 0,void 0,"assignment expression");var p,h=function e(t){return"ParenthesizedExpression"===t.type?e(t.expression):t}(u);return"ObjectPattern"===h.type?p="`({a}) = 0` use `({a} = 0)`":"ArrayPattern"===h.type&&(p="`([a]) = 0` use `([a] = 0)`"),p&&(u.extra&&u.extra.parenthesized||"ParenthesizedExpression"===u.type)&&this.raise(h.start,"You're trying to assign to a parenthesized expression, eg. instead of "+p),this.next(),l.right=this.parseMaybeAssign(e),this.finishNode(l,"AssignmentExpression")}return i&&t.start&&this.unexpected(t.start),u},n.parseMaybeConditional=function(e,t,n){var r=this.state.start,i=this.state.startLoc,a=this.state.potentialArrowAt,o=this.parseExprOps(e,t);return"ArrowFunctionExpression"===o.type&&o.start===a?o:t&&t.start?o:this.parseConditional(o,e,r,i,n)},n.parseConditional=function(e,t,n,r,i){if(this.eat(iE.question)){var a=this.startNodeAt(n,r);return a.test=e,a.consequent=this.parseMaybeAssign(),this.expect(iE.colon),a.alternate=this.parseMaybeAssign(t),this.finishNode(a,"ConditionalExpression")}return e},n.parseExprOps=function(e,t){var n=this.state.start,r=this.state.startLoc,i=this.state.potentialArrowAt,a=this.parseMaybeUnary(t);return"ArrowFunctionExpression"===a.type&&a.start===i?a:t&&t.start?a:this.parseExprOp(a,n,r,-1,e)},n.parseExprOp=function(e,t,n,r,i){var a=this.state.type.binop;if(!(null==a||i&&this.match(iE._in))&&a>r){var o=this.state.value;if("|>"===o&&this.state.inFSharpPipelineDirectBody)return e;var s=this.startNodeAt(t,n);s.left=e,s.operator=o,"**"!==o||"UnaryExpression"!==e.type||!this.options.createParenthesizedExpressions&&e.extra&&e.extra.parenthesized||this.raise(e.argument.start,"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.");var u=this.state.type;if(u===iE.pipeline?(this.expectPlugin("pipelineOperator"),this.state.inPipeline=!0,this.checkPipelineAtInfixOperator(e,t)):u===iE.nullishCoalescing&&this.expectPlugin("nullishCoalescingOperator"),this.next(),u===iE.pipeline&&"minimal"===this.getPluginOption("pipelineOperator","proposal")&&this.match(iE.name)&&"await"===this.state.value&&this.scope.inAsync)throw this.raise(this.state.start,'Unexpected "await" after pipeline body; await must have parentheses in minimal proposal');if(s.right=this.parseExprOpRightExpr(u,a,i),u===iE.nullishCoalescing){if(!("LogicalExpression"!==e.type||"??"===e.operator||e.extra&&e.extra.parenthesized))throw this.raise(e.start,"Nullish coalescing operator(??) requires parens when mixing with logical operators");if(!("LogicalExpression"!==s.right.type||"??"===s.right.operator||s.right.extra&&s.right.extra.parenthesized))throw this.raise(s.right.start,"Nullish coalescing operator(??) requires parens when mixing with logical operators")}return this.finishNode(s,u===iE.logicalOR||u===iE.logicalAND||u===iE.nullishCoalescing?"LogicalExpression":"BinaryExpression"),this.parseExprOp(s,t,n,r,i)}return e},n.parseExprOpRightExpr=function(e,t,n){var r=this,i=this.state.start,a=this.state.startLoc;switch(e){case iE.pipeline:switch(this.getPluginOption("pipelineOperator","proposal")){case"smart":return this.withTopicPermittingContext((function(){return r.parseSmartPipelineBody(r.parseExprOpBaseRightExpr(e,t,n),i,a)}));case"fsharp":return this.withSoloAwaitPermittingContext((function(){return r.parseFSharpPipelineBody(t,n)}))}default:return this.parseExprOpBaseRightExpr(e,t,n)}},n.parseExprOpBaseRightExpr=function(e,t,n){var r=this.state.start,i=this.state.startLoc;return this.parseExprOp(this.parseMaybeUnary(),r,i,e.rightAssociative?t-1:t,n)},n.parseMaybeUnary=function(e){if(this.isContextual("await")&&this.isAwaitAllowed())return this.parseAwait();if(this.state.type.prefix){var t=this.startNode(),n=this.match(iE.incDec);if(t.operator=this.state.value,t.prefix=!0,"throw"===t.operator&&this.expectPlugin("throwExpressions"),this.next(),t.argument=this.parseMaybeUnary(),e&&e.start&&this.unexpected(e.start),n)this.checkLVal(t.argument,void 0,void 0,"prefix operation");else if(this.state.strict&&"delete"===t.operator){var r=t.argument;"Identifier"===r.type?this.raise(t.start,"Deleting local variable in strict mode"):"MemberExpression"===r.type&&"PrivateName"===r.property.type&&this.raise(t.start,"Deleting a private field is not allowed")}return this.finishNode(t,n?"UpdateExpression":"UnaryExpression")}var i=this.state.start,a=this.state.startLoc,o=this.parseExprSubscripts(e);if(e&&e.start)return o;for(;this.state.type.postfix&&!this.canInsertSemicolon();){var s=this.startNodeAt(i,a);s.operator=this.state.value,s.prefix=!1,s.argument=o,this.checkLVal(o,void 0,void 0,"postfix operation"),this.next(),o=this.finishNode(s,"UpdateExpression")}return o},n.parseExprSubscripts=function(e){var t=this.state.start,n=this.state.startLoc,r=this.state.potentialArrowAt,i=this.parseExprAtom(e);return"ArrowFunctionExpression"===i.type&&i.start===r?i:e&&e.start?i:this.parseSubscripts(i,t,n)},n.parseSubscripts=function(e,t,n,r){var i={optionalChainMember:!1,maybeAsyncArrow:this.atPossibleAsync(e),stop:!1};do{e=this.parseSubscript(e,t,n,r,i),i.maybeAsyncArrow=!1}while(!i.stop);return e},n.parseSubscript=function(e,t,n,r,i){if(!r&&this.eat(iE.doubleColon)){var a=this.startNodeAt(t,n);return a.object=e,a.callee=this.parseNoCallExpr(),i.stop=!0,this.parseSubscripts(this.finishNode(a,"BindExpression"),t,n,r)}if(this.match(iE.questionDot)){if(this.expectPlugin("optionalChaining"),i.optionalChainMember=!0,r&&40===this.lookaheadCharCode())return i.stop=!0,e;this.next();var o=this.startNodeAt(t,n);return this.eat(iE.bracketL)?(o.object=e,o.property=this.parseExpression(),o.computed=!0,o.optional=!0,this.expect(iE.bracketR),this.finishNode(o,"OptionalMemberExpression")):this.eat(iE.parenL)?(o.callee=e,o.arguments=this.parseCallExpressionArguments(iE.parenR,!1),o.optional=!0,this.finishCallExpression(o,!0)):(o.object=e,o.property=this.parseIdentifier(!0),o.computed=!1,o.optional=!0,this.finishNode(o,"OptionalMemberExpression"))}if(this.eat(iE.dot)){var s=this.startNodeAt(t,n);return s.object=e,s.property=this.parseMaybePrivateName(),s.computed=!1,"PrivateName"===s.property.type&&"Super"===s.object.type&&this.raise(t,"Private fields can't be accessed on super"),i.optionalChainMember?(s.optional=!1,this.finishNode(s,"OptionalMemberExpression")):this.finishNode(s,"MemberExpression")}if(this.eat(iE.bracketL)){var u=this.startNodeAt(t,n);return u.object=e,u.property=this.parseExpression(),u.computed=!0,this.expect(iE.bracketR),i.optionalChainMember?(u.optional=!1,this.finishNode(u,"OptionalMemberExpression")):this.finishNode(u,"MemberExpression")}if(!r&&this.match(iE.parenL)){var l=this.state.maybeInArrowParameters,c=this.state.yieldPos,p=this.state.awaitPos;this.state.maybeInArrowParameters=!0,this.state.yieldPos=-1,this.state.awaitPos=-1,this.next();var h=this.startNodeAt(t,n);return h.callee=e,h.arguments=this.parseCallExpressionArguments(iE.parenR,i.maybeAsyncArrow,"Import"===e.type,"Super"!==e.type,h),this.finishCallExpression(h,i.optionalChainMember),i.maybeAsyncArrow&&this.shouldParseAsyncArrow()?(i.stop=!0,h=this.parseAsyncArrowFromCallExpression(this.startNodeAt(t,n),h),this.checkYieldAwaitInDefaultParams(),this.state.yieldPos=c,this.state.awaitPos=p):(this.toReferencedListDeep(h.arguments),-1!==c&&(this.state.yieldPos=c),(this.isAwaitAllowed()||l)&&-1===p||(this.state.awaitPos=p)),this.state.maybeInArrowParameters=l,h}return this.match(iE.backQuote)?this.parseTaggedTemplateExpression(t,n,e,i):(i.stop=!0,e)},n.parseTaggedTemplateExpression=function(e,t,n,r,i){var a=this.startNodeAt(e,t);return a.tag=n,a.quasi=this.parseTemplate(!0),i&&(a.typeParameters=i),r.optionalChainMember&&this.raise(e,"Tagged Template Literals are not allowed in optionalChain"),this.finishNode(a,"TaggedTemplateExpression")},n.atPossibleAsync=function(e){return"Identifier"===e.type&&"async"===e.name&&this.state.lastTokEnd===e.end&&!this.canInsertSemicolon()&&"async"===this.input.slice(e.start,e.end)},n.finishCallExpression=function(e,t){if("Import"===e.callee.type)if(1!==e.arguments.length)this.raise(e.start,"import() requires exactly one argument");else{var n=e.arguments[0];n&&"SpreadElement"===n.type&&this.raise(n.start,"... is not allowed in import()")}return this.finishNode(e,t?"OptionalCallExpression":"CallExpression")},n.parseCallExpressionArguments=function(e,t,n,r,i){var a,o=[],s=!0,u=this.state.inFSharpPipelineDirectBody;for(this.state.inFSharpPipelineDirectBody=!1;!this.eat(e);){if(s)s=!1;else if(this.expect(iE.comma),this.match(e)){n&&this.raise(this.state.lastTokStart,"Trailing comma is disallowed inside import(...) arguments"),i&&this.addExtra(i,"trailingComma",this.state.lastTokStart),this.next();break}this.match(iE.parenL)&&!a&&(a=this.state.start),o.push(this.parseExprListItem(!1,t?{start:0}:void 0,t?{start:0}:void 0,r))}return t&&a&&this.shouldParseAsyncArrow()&&this.unexpected(),this.state.inFSharpPipelineDirectBody=u,o},n.shouldParseAsyncArrow=function(){return this.match(iE.arrow)&&!this.canInsertSemicolon()},n.parseAsyncArrowFromCallExpression=function(e,t){var n;return this.expect(iE.arrow),this.parseArrowExpression(e,t.arguments,!0,null==(n=t.extra)?void 0:n.trailingComma),e},n.parseNoCallExpr=function(){var e=this.state.start,t=this.state.startLoc;return this.parseSubscripts(this.parseExprAtom(),e,t,!0)},n.parseExprAtom=function(e){this.state.type===iE.slash&&this.readRegexp();var t,n=this.state.potentialArrowAt===this.state.start;switch(this.state.type){case iE._super:return t=this.startNode(),this.next(),!this.match(iE.parenL)||this.scope.allowDirectSuper||this.options.allowSuperOutsideMethod?this.scope.allowSuper||this.options.allowSuperOutsideMethod||this.raise(t.start,"super is only allowed in object methods and classes"):this.raise(t.start,"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?"),this.match(iE.parenL)||this.match(iE.bracketL)||this.match(iE.dot)||this.raise(t.start,"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])"),this.finishNode(t,"Super");case iE._import:return t=this.startNode(),this.next(),this.match(iE.dot)?this.parseImportMetaProperty(t):(this.expectPlugin("dynamicImport",t.start),this.match(iE.parenL)||this.unexpected(null,iE.parenL),this.finishNode(t,"Import"));case iE._this:return t=this.startNode(),this.next(),this.finishNode(t,"ThisExpression");case iE.name:t=this.startNode();var r=this.state.containsEsc,i=this.parseIdentifier();if(!r&&"async"===i.name&&this.match(iE._function)&&!this.canInsertSemicolon()){var a=this.state.context.length-1;if(this.state.context[a]!==vE.functionStatement)throw new Error("Internal error");return this.state.context[a]=vE.functionExpression,this.next(),this.parseFunction(t,void 0,!0)}if(n&&!r&&"async"===i.name&&this.match(iE.name)&&!this.canInsertSemicolon()){var o=[this.parseIdentifier()];return this.expect(iE.arrow),this.parseArrowExpression(t,o,!0),t}return n&&this.match(iE.arrow)&&!this.canInsertSemicolon()?(this.next(),this.parseArrowExpression(t,[i],!1),t):i;case iE._do:this.expectPlugin("doExpressions");var s=this.startNode();this.next();var u=this.state.labels;return this.state.labels=[],s.body=this.parseBlock(),this.state.labels=u,this.finishNode(s,"DoExpression");case iE.regexp:var l=this.state.value;return(t=this.parseLiteral(l.value,"RegExpLiteral")).pattern=l.pattern,t.flags=l.flags,t;case iE.num:return this.parseLiteral(this.state.value,"NumericLiteral");case iE.bigint:return this.parseLiteral(this.state.value,"BigIntLiteral");case iE.string:return this.parseLiteral(this.state.value,"StringLiteral");case iE._null:return t=this.startNode(),this.next(),this.finishNode(t,"NullLiteral");case iE._true:case iE._false:return this.parseBooleanLiteral();case iE.parenL:return this.parseParenAndDistinguishExpression(n);case iE.bracketL:var c=this.state.inFSharpPipelineDirectBody;return this.state.inFSharpPipelineDirectBody=!1,t=this.startNode(),this.next(),t.elements=this.parseExprList(iE.bracketR,!0,e,t),this.state.maybeInArrowParameters||this.toReferencedList(t.elements),this.state.inFSharpPipelineDirectBody=c,this.finishNode(t,"ArrayExpression");case iE.braceL:var p=this.state.inFSharpPipelineDirectBody;this.state.inFSharpPipelineDirectBody=!1;var h=this.parseObj(!1,e);return this.state.inFSharpPipelineDirectBody=p,h;case iE._function:return this.parseFunctionExpression();case iE.at:this.parseDecorators();case iE._class:return t=this.startNode(),this.takeDecorators(t),this.parseClass(t,!1);case iE._new:return this.parseNew();case iE.backQuote:return this.parseTemplate(!1);case iE.doubleColon:t=this.startNode(),this.next(),t.object=null;var f=t.callee=this.parseNoCallExpr();if("MemberExpression"===f.type)return this.finishNode(t,"BindExpression");throw this.raise(f.start,"Binding should be performed on object property.");case iE.hash:if(this.state.inPipeline)return t=this.startNode(),"smart"!==this.getPluginOption("pipelineOperator","proposal")&&this.raise(t.start,"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option."),this.next(),this.primaryTopicReferenceIsAllowedInCurrentTopicContext()||this.raise(t.start,"Topic reference was used in a lexical context without topic binding"),this.registerTopicReference(),this.finishNode(t,"PipelinePrimaryTopicReference");default:throw this.unexpected()}},n.parseBooleanLiteral=function(){var e=this.startNode();return e.value=this.match(iE._true),this.next(),this.finishNode(e,"BooleanLiteral")},n.parseMaybePrivateName=function(){if(this.match(iE.hash)){this.expectOnePlugin(["classPrivateProperties","classPrivateMethods"]);var e=this.startNode();return this.next(),this.assertNoSpace("Unexpected space between # and identifier"),e.id=this.parseIdentifier(!0),this.finishNode(e,"PrivateName")}return this.parseIdentifier(!0)},n.parseFunctionExpression=function(){var e=this.startNode(),t=this.startNode();return this.next(),t=this.createIdentifier(t,"function"),this.scope.inGenerator&&this.eat(iE.dot)?this.parseMetaProperty(e,t,"sent"):this.parseFunction(e)},n.parseMetaProperty=function(e,t,n){e.meta=t,"function"===t.name&&"sent"===n&&(this.isContextual(n)?this.expectPlugin("functionSent"):this.hasPlugin("functionSent")||this.unexpected());var r=this.state.containsEsc;return e.property=this.parseIdentifier(!0),(e.property.name!==n||r)&&this.raise(e.property.start,"The only valid meta property for "+t.name+" is "+t.name+"."+n),this.finishNode(e,"MetaProperty")},n.parseImportMetaProperty=function(e){var t=this.createIdentifier(this.startNodeAtNode(e),"import");return this.expect(iE.dot),this.isContextual("meta")?(this.expectPlugin("importMeta"),this.inModule||this.raise(t.start,"import.meta may appear only with 'sourceType: \"module\"'",{code:"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED"}),this.sawUnambiguousESM=!0):this.hasPlugin("importMeta")||this.raise(t.start,"Dynamic imports require a parameter: import('a.js')"),this.parseMetaProperty(e,t,"meta")},n.parseLiteral=function(e,t,n,r){n=n||this.state.start,r=r||this.state.startLoc;var i=this.startNodeAt(n,r);return this.addExtra(i,"rawValue",e),this.addExtra(i,"raw",this.input.slice(n,this.state.end)),i.value=e,this.next(),this.finishNode(i,t)},n.parseParenAndDistinguishExpression=function(e){var t,n=this.state.start,r=this.state.startLoc;this.expect(iE.parenL);var i=this.state.maybeInArrowParameters,a=this.state.yieldPos,o=this.state.awaitPos,s=this.state.inFSharpPipelineDirectBody;this.state.maybeInArrowParameters=!0,this.state.yieldPos=-1,this.state.awaitPos=-1,this.state.inFSharpPipelineDirectBody=!1;for(var u,l,c=this.state.start,p=this.state.startLoc,h=[],f={start:0},d={start:0},m=!0;!this.match(iE.parenR);){if(m)m=!1;else if(this.expect(iE.comma,d.start||null),this.match(iE.parenR)){l=this.state.start;break}if(this.match(iE.ellipsis)){var y=this.state.start,v=this.state.startLoc;u=this.state.start,h.push(this.parseParenItem(this.parseRestBinding(),y,v)),this.checkCommaAfterRest(41);break}h.push(this.parseMaybeAssign(!1,f,this.parseParenItem,d))}var g=this.state.start,b=this.state.startLoc;this.expect(iE.parenR),this.state.maybeInArrowParameters=i,this.state.inFSharpPipelineDirectBody=s;var E=this.startNodeAt(n,r);if(e&&this.shouldParseArrow()&&(E=this.parseArrow(E))){this.checkYieldAwaitInDefaultParams(),this.state.yieldPos=a,this.state.awaitPos=o;for(var A=0;A<h.length;A++){var D=h[A];D.extra&&D.extra.parenthesized&&this.unexpected(D.extra.parenStart)}return this.parseArrowExpression(E,h,!1),E}if(-1!==a&&(this.state.yieldPos=a),-1!==o&&(this.state.awaitPos=o),h.length||this.unexpected(this.state.lastTokStart),l&&this.unexpected(l),u&&this.unexpected(u),f.start&&this.unexpected(f.start),d.start&&this.unexpected(d.start),this.toReferencedListDeep(h,!0),h.length>1?((t=this.startNodeAt(c,p)).expressions=h,this.finishNodeAt(t,"SequenceExpression",g,b)):t=h[0],!this.options.createParenthesizedExpressions)return this.addExtra(t,"parenthesized",!0),this.addExtra(t,"parenStart",n),t;var S=this.startNodeAt(n,r);return S.expression=t,this.finishNode(S,"ParenthesizedExpression"),S},n.shouldParseArrow=function(){return!this.canInsertSemicolon()},n.parseArrow=function(e){if(this.eat(iE.arrow))return e},n.parseParenItem=function(e,t,n){return e},n.parseNew=function(){var e=this.startNode(),t=this.startNode();if(this.next(),t=this.createIdentifier(t,"new"),this.eat(iE.dot)){var n=this.parseMetaProperty(e,t,"target");if(!this.scope.inNonArrowFunction&&!this.state.inClassProperty){var r="new.target can only be used in functions";this.hasPlugin("classProperties")&&(r+=" or class properties"),this.raise(n.start,r)}return n}return e.callee=this.parseNoCallExpr(),"Import"===e.callee.type?this.raise(e.callee.start,"Cannot use new with import(...)"):"OptionalMemberExpression"===e.callee.type||"OptionalCallExpression"===e.callee.type?this.raise(this.state.lastTokEnd,"constructors in/after an Optional Chain are not allowed"):this.eat(iE.questionDot)&&this.raise(this.state.start,"constructors in/after an Optional Chain are not allowed"),this.parseNewArguments(e),this.finishNode(e,"NewExpression")},n.parseNewArguments=function(e){if(this.eat(iE.parenL)){var t=this.parseExprList(iE.parenR);this.toReferencedList(t),e.arguments=t}else e.arguments=[]},n.parseTemplateElement=function(e){var t=this.startNode();return null===this.state.value&&(e?this.state.invalidTemplateEscapePosition=null:this.raise(this.state.invalidTemplateEscapePosition||0,"Invalid escape sequence in template")),t.value={raw:this.input.slice(this.state.start,this.state.end).replace(/\r\n?/g,"\n"),cooked:this.state.value},this.next(),t.tail=this.match(iE.backQuote),this.finishNode(t,"TemplateElement")},n.parseTemplate=function(e){var t=this.startNode();this.next(),t.expressions=[];var n=this.parseTemplateElement(e);for(t.quasis=[n];!n.tail;)this.expect(iE.dollarBraceL),t.expressions.push(this.parseExpression()),this.expect(iE.braceR),t.quasis.push(n=this.parseTemplateElement(e));return this.next(),this.finishNode(t,"TemplateLiteral")},n.parseObj=function(e,t){var n=Object.create(null),r=!0,i=this.startNode();for(i.properties=[],this.next();!this.eat(iE.braceR);){if(r)r=!1;else if(this.expect(iE.comma),this.match(iE.braceR)){this.addExtra(i,"trailingComma",this.state.lastTokStart),this.next();break}var a=this.parseObjectMember(e,t);e||this.checkDuplicatedProto(a,n),a.shorthand&&this.addExtra(a,"shorthand",!0),i.properties.push(a)}return this.match(iE.eq)||void 0===n.start||this.raise(n.start,"Redefinition of __proto__ property"),this.finishNode(i,e?"ObjectPattern":"ObjectExpression")},n.isAsyncProp=function(e){return!e.computed&&"Identifier"===e.key.type&&"async"===e.key.name&&(this.match(iE.name)||this.match(iE.num)||this.match(iE.string)||this.match(iE.bracketL)||this.state.type.keyword||this.match(iE.star))&&!this.hasPrecedingLineBreak()},n.parseObjectMember=function(e,t){var n=[];if(this.match(iE.at))for(this.hasPlugin("decorators")&&this.raise(this.state.start,"Stage 2 decorators disallow object literal property decorators");this.match(iE.at);)n.push(this.parseDecorator());var r,i,a=this.startNode(),o=!1,s=!1;if(this.match(iE.ellipsis))return n.length&&this.unexpected(),e?(this.next(),a.argument=this.parseIdentifier(),this.checkCommaAfterRest(125),this.finishNode(a,"RestElement")):this.parseSpread();n.length&&(a.decorators=n,n=[]),a.method=!1,(e||t)&&(r=this.state.start,i=this.state.startLoc),e||(o=this.eat(iE.star));var u=this.state.containsEsc;return this.parsePropertyName(a),e||u||o||!this.isAsyncProp(a)?s=!1:(s=!0,o=this.eat(iE.star),this.parsePropertyName(a)),this.parseObjPropValue(a,r,i,o,s,e,t,u),a},n.isGetterOrSetterMethod=function(e,t){return!t&&!e.computed&&"Identifier"===e.key.type&&("get"===e.key.name||"set"===e.key.name)&&(this.match(iE.string)||this.match(iE.num)||this.match(iE.bracketL)||this.match(iE.name)||!!this.state.type.keyword)},n.getGetterSetterExpectedParamCount=function(e){return"get"===e.kind?0:1},n.checkGetterSetterParams=function(e){var t=this.getGetterSetterExpectedParamCount(e),n=e.start;e.params.length!==t&&("get"===e.kind?this.raise(n,"getter must not have any formal parameters"):this.raise(n,"setter must have exactly one formal parameter")),"set"===e.kind&&"RestElement"===e.params[e.params.length-1].type&&this.raise(n,"setter function argument must not be a rest parameter")},n.parseObjectMethod=function(e,t,n,r,i){return n||t||this.match(iE.parenL)?(r&&this.unexpected(),e.kind="method",e.method=!0,this.parseMethod(e,t,n,!1,!1,"ObjectMethod")):!i&&this.isGetterOrSetterMethod(e,r)?((t||n)&&this.unexpected(),e.kind=e.key.name,this.parsePropertyName(e),this.parseMethod(e,!1,!1,!1,!1,"ObjectMethod"),this.checkGetterSetterParams(e),e):void 0},n.parseObjectProperty=function(e,t,n,r,i){return e.shorthand=!1,this.eat(iE.colon)?(e.value=r?this.parseMaybeDefault(this.state.start,this.state.startLoc):this.parseMaybeAssign(!1,i),this.finishNode(e,"ObjectProperty")):e.computed||"Identifier"!==e.key.type?void 0:(this.checkReservedWord(e.key.name,e.key.start,!0,!0),r?e.value=this.parseMaybeDefault(t,n,e.key.__clone()):this.match(iE.eq)&&i?(i.start||(i.start=this.state.start),e.value=this.parseMaybeDefault(t,n,e.key.__clone())):e.value=e.key.__clone(),e.shorthand=!0,this.finishNode(e,"ObjectProperty"))},n.parseObjPropValue=function(e,t,n,r,i,a,o,s){var u=this.parseObjectMethod(e,r,i,a,s)||this.parseObjectProperty(e,t,n,a,o);return u||this.unexpected(),u},n.parsePropertyName=function(e){if(this.eat(iE.bracketL))e.computed=!0,e.key=this.parseMaybeAssign(),this.expect(iE.bracketR);else{var t=this.state.inPropertyName;this.state.inPropertyName=!0,e.key=this.match(iE.num)||this.match(iE.string)?this.parseExprAtom():this.parseMaybePrivateName(),"PrivateName"!==e.key.type&&(e.computed=!1),this.state.inPropertyName=t}return e.key},n.initFunction=function(e,t){e.id=null,e.generator=!1,e.async=!!t},n.parseMethod=function(e,t,n,r,i,a,o){void 0===o&&(o=!1);var s=this.state.yieldPos,u=this.state.awaitPos;this.state.yieldPos=-1,this.state.awaitPos=-1,this.initFunction(e,n),e.generator=!!t;var l=r;return this.scope.enter(64|lE(n,e.generator)|(o?256:0)|(i?128:0)),this.parseFunctionParams(e,l),this.checkYieldAwaitInDefaultParams(),this.parseFunctionBodyAndFinish(e,a,!0),this.scope.exit(),this.state.yieldPos=s,this.state.awaitPos=u,e},n.parseArrowExpression=function(e,t,n,r){this.scope.enter(16|lE(n,!1)),this.initFunction(e,n);var i=this.state.maybeInArrowParameters,a=this.state.yieldPos,o=this.state.awaitPos;return this.state.maybeInArrowParameters=!1,this.state.yieldPos=-1,this.state.awaitPos=-1,t&&this.setArrowFunctionParameters(e,t,r),this.parseFunctionBody(e,!0),this.scope.exit(),this.state.maybeInArrowParameters=i,this.state.yieldPos=a,this.state.awaitPos=o,this.finishNode(e,"ArrowFunctionExpression")},n.setArrowFunctionParameters=function(e,t,n){e.params=this.toAssignableList(t,!0,"arrow function parameters",n)},n.isStrictBody=function(e){if("BlockStatement"===e.body.type&&e.body.directives.length)for(var t=0,n=e.body.directives;t<n.length;t++){if("use strict"===n[t].value.value)return!0}return!1},n.parseFunctionBodyAndFinish=function(e,t,n){void 0===n&&(n=!1),this.parseFunctionBody(e,!1,n),this.finishNode(e,t)},n.parseFunctionBody=function(e,t,n){void 0===n&&(n=!1);var r=t&&!this.match(iE.braceL),i=this.state.strict,a=!1,o=this.state.inParameters;if(this.state.inParameters=!1,r)e.body=this.parseMaybeAssign(),this.checkParams(e,!1,t,!1);else{var s=!this.isSimpleParamList(e.params);if((!i||s)&&(a=this.strictDirective(this.state.end))&&s){var u="method"!==e.kind&&"constructor"!==e.kind||!e.key?e.start:e.key.end;this.raise(u,"Illegal 'use strict' directive in function with non-simple parameter list")}var l=this.state.labels;this.state.labels=[],a&&(this.state.strict=!0),this.checkParams(e,!(i||a||t||n||s),t,!i&&a),e.body=this.parseBlock(!0,!1),this.state.labels=l}this.state.inParameters=o,this.state.strict&&e.id&&this.checkLVal(e.id,65,void 0,"function name",void 0,!i&&a),this.state.strict=i},n.isSimpleParamList=function(e){for(var t=0,n=e.length;t<n;t++)if("Identifier"!==e[t].type)return!1;return!0},n.checkParams=function(e,t,n,r){void 0===r&&(r=!0);for(var i=Object.create(null),a=0;a<e.params.length;a++)this.checkLVal(e.params[a],5,t?null:i,"function parameter list",void 0,r)},n.parseExprList=function(e,t,n,r){for(var i=[],a=!0;!this.eat(e);){if(a)a=!1;else if(this.expect(iE.comma),this.match(e)){r&&this.addExtra(r,"trailingComma",this.state.lastTokStart),this.next();break}i.push(this.parseExprListItem(t,n))}return i},n.parseExprListItem=function(e,t,n,r){var i;if(e&&this.match(iE.comma))i=null;else if(this.match(iE.ellipsis)){var a=this.state.start,o=this.state.startLoc;i=this.parseParenItem(this.parseSpread(t,n),a,o)}else if(this.match(iE.question)){this.expectPlugin("partialApplication"),r||this.raise(this.state.start,"Unexpected argument placeholder");var s=this.startNode();this.next(),i=this.finishNode(s,"ArgumentPlaceholder")}else i=this.parseMaybeAssign(!1,t,this.parseParenItem,n);return i},n.parseIdentifier=function(e){var t=this.startNode(),n=this.parseIdentifierName(t.start,e);return this.createIdentifier(t,n)},n.createIdentifier=function(e,t){return e.name=t,e.loc.identifierName=t,this.finishNode(e,"Identifier")},n.parseIdentifierName=function(e,t){var n;if(this.match(iE.name))n=this.state.value;else{if(!this.state.type.keyword)throw this.unexpected();"class"!==(n=this.state.type.keyword)&&"function"!==n||this.state.lastTokEnd===this.state.lastTokStart+1&&46===this.input.charCodeAt(this.state.lastTokStart)||this.state.context.pop()}return t?this.state.type=iE.name:this.checkReservedWord(n,this.state.start,!!this.state.type.keyword,!1),this.next(),n},n.checkReservedWord=function(e,t,n,r){if(this.scope.inGenerator&&"yield"===e)this.raise(t,"Can not use 'yield' as identifier inside a generator");else{if("await"===e){if(this.scope.inAsync)return void this.raise(t,"Can not use 'await' as identifier inside an async function");-1===this.state.awaitPos&&(this.state.maybeInArrowParameters||this.isAwaitAllowed())&&(this.state.awaitPos=this.state.start)}if(!this.scope.inClass||this.scope.inNonArrowFunction||"arguments"!==e)if(n&&function(e){return tE.has(e)}(e))this.raise(t,"Unexpected keyword '"+e+"'");else(this.state.strict?r?xE:DE:AE)(e,this.inModule)&&(this.scope.inAsync||"await"!==e?this.raise(t,"Unexpected reserved word '"+e+"'"):this.raise(t,"Can not use keyword 'await' outside an async function"));else this.raise(t,"'arguments' is not allowed in class field initializer")}},n.isAwaitAllowed=function(){return this.scope.inFunction?this.scope.inAsync:!!this.options.allowAwaitOutsideFunction||!!this.hasPlugin("topLevelAwait")&&this.inModule},n.parseAwait=function(){var e=this.startNode();return this.next(),this.state.inParameters?this.raise(e.start,"await is not allowed in async function parameters"):-1===this.state.awaitPos&&(this.state.awaitPos=e.start),this.eat(iE.star)&&this.raise(e.start,"await* has been removed from the async functions proposal. Use Promise.all() instead."),this.scope.inFunction||this.options.allowAwaitOutsideFunction||(this.hasPrecedingLineBreak()||this.match(iE.plusMin)||this.match(iE.parenL)||this.match(iE.bracketL)||this.match(iE.backQuote)||this.match(iE.regexp)||this.match(iE.slash)||this.hasPlugin("v8intrinsic")&&this.match(iE.modulo)?this.ambiguousScriptDifferentAst=!0:this.sawUnambiguousESM=!0),this.state.soloAwait||(e.argument=this.parseMaybeUnary()),this.finishNode(e,"AwaitExpression")},n.parseYield=function(e){var t=this.startNode();return this.state.inParameters?this.raise(t.start,"yield is not allowed in generator parameters"):-1===this.state.yieldPos&&(this.state.yieldPos=t.start),this.next(),this.match(iE.semi)||!this.match(iE.star)&&!this.state.type.startsExpr||this.hasPrecedingLineBreak()?(t.delegate=!1,t.argument=null):(t.delegate=this.eat(iE.star),t.argument=this.parseMaybeAssign(e)),this.finishNode(t,"YieldExpression")},n.checkPipelineAtInfixOperator=function(e,t){"smart"===this.getPluginOption("pipelineOperator","proposal")&&"SequenceExpression"===e.type&&this.raise(t,"Pipeline head should not be a comma-separated sequence expression")},n.parseSmartPipelineBody=function(e,t,n){var r=this.checkSmartPipelineBodyStyle(e);return this.checkSmartPipelineBodyEarlyErrors(e,r,t),this.parseSmartPipelineBodyInStyle(e,r,t,n)},n.checkSmartPipelineBodyEarlyErrors=function(e,t,n){if(this.match(iE.arrow))throw this.raise(this.state.start,'Unexpected arrow "=>" after pipeline body; arrow function in pipeline body must be parenthesized');"PipelineTopicExpression"===t&&"SequenceExpression"===e.type&&this.raise(n,"Pipeline body may not be a comma-separated sequence expression")},n.parseSmartPipelineBodyInStyle=function(e,t,n,r){var i=this.startNodeAt(n,r);switch(t){case"PipelineBareFunction":i.callee=e;break;case"PipelineBareConstructor":i.callee=e.callee;break;case"PipelineBareAwaitedFunction":i.callee=e.argument;break;case"PipelineTopicExpression":this.topicReferenceWasUsedInCurrentTopicContext()||this.raise(n,"Pipeline is in topic style but does not use topic reference"),i.expression=e;break;default:throw new Error("Internal @babel/parser error: Unknown pipeline style ("+t+")")}return this.finishNode(i,t)},n.checkSmartPipelineBodyStyle=function(e){return e.type,this.isSimpleReference(e)?"PipelineBareFunction":"PipelineTopicExpression"},n.isSimpleReference=function(e){switch(e.type){case"MemberExpression":return!e.computed&&this.isSimpleReference(e.object);case"Identifier":return!0;default:return!1}},n.withTopicPermittingContext=function(e){var t=this.state.topicContext;this.state.topicContext={maxNumOfResolvableTopics:1,maxTopicIndex:null};try{return e()}finally{this.state.topicContext=t}},n.withTopicForbiddingContext=function(e){var t=this.state.topicContext;this.state.topicContext={maxNumOfResolvableTopics:0,maxTopicIndex:null};try{return e()}finally{this.state.topicContext=t}},n.withSoloAwaitPermittingContext=function(e){var t=this.state.soloAwait;this.state.soloAwait=!0;try{return e()}finally{this.state.soloAwait=t}},n.registerTopicReference=function(){this.state.topicContext.maxTopicIndex=0},n.primaryTopicReferenceIsAllowedInCurrentTopicContext=function(){return this.state.topicContext.maxNumOfResolvableTopics>=1},n.topicReferenceWasUsedInCurrentTopicContext=function(){return null!=this.state.topicContext.maxTopicIndex&&this.state.topicContext.maxTopicIndex>=0},n.parseFSharpPipelineBody=function(e,t){var n=this.state.start,r=this.state.startLoc;this.state.potentialArrowAt=this.state.start;var i=this.state.inFSharpPipelineDirectBody;this.state.inFSharpPipelineDirectBody=!0;var a=this.parseExprOp(this.parseMaybeUnary(),n,r,e,t);return this.state.inFSharpPipelineDirectBody=i,a},t}(vA),bA={kind:"loop"},EA={kind:"switch"},AA=function(e){function t(t,n){var r;t=function(e){for(var t={},n=0,r=Object.keys(nA);n<r.length;n++){var i=r[n];t[i]=e&&null!=e[i]?e[i]:nA[i]}return t}(t);var i=(r=e.call(this,t,n)||this).getScopeHandler();return r.options=t,r.inModule="module"===r.options.sourceType,r.scope=new i(r.raise.bind(function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(r)),r.inModule),r.plugins=function(e){for(var t=new Map,n=0;n<e.length;n++){var r=e[n],i=Array.isArray(r)?r:[r,{}],a=i[0],o=i[1];t.has(a)||t.set(a,o||{})}return t}(r.options.plugins),r.filename=t.sourceFilename,r}i(t,e);var n=t.prototype;return n.getScopeHandler=function(){return KE},n.parse=function(){this.scope.enter(1);var e=this.startNode(),t=this.startNode();return this.nextToken(),e.errors=null,this.parseTopLevel(e,t),e.errors=this.state.errors,e},t}(function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var n=t.prototype;return n.parseTopLevel=function(e,t){if(t.sourceType=this.options.sourceType,t.interpreter=this.parseInterpreterDirective(),this.parseBlockBody(t,!0,!0,iE.eof),this.inModule&&!this.options.allowUndeclaredExports&&this.scope.undefinedExports.size>0)for(var n=0,r=Array.from(this.scope.undefinedExports);n<r.length;n++){var i=r[n][0],a=this.scope.undefinedExports.get(i);this.raise(a,"Export '"+i+"' is not defined")}return e.program=this.finishNode(t,"Program"),e.comments=this.state.comments,this.options.tokens&&(e.tokens=this.state.tokens),this.finishNode(e,"File")},n.stmtToDirective=function(e){var t=e.expression,n=this.startNodeAt(t.start,t.loc.start),r=this.startNodeAt(e.start,e.loc.start),i=this.input.slice(t.start,t.end),a=n.value=i.slice(1,-1);return this.addExtra(n,"raw",i),this.addExtra(n,"rawValue",a),r.value=this.finishNodeAt(n,"DirectiveLiteral",t.end,t.loc.end),this.finishNodeAt(r,"Directive",e.end,e.loc.end)},n.parseInterpreterDirective=function(){if(!this.match(iE.interpreterDirective))return null;var e=this.startNode();return e.value=this.state.value,this.next(),this.finishNode(e,"InterpreterDirective")},n.isLet=function(e){if(!this.isContextual("let"))return!1;var t=this.nextTokenStart(),n=this.input.charCodeAt(t);if(91===n)return!0;if(e)return!1;if(123===n)return!0;if(OE(n)){for(var r=t+1;BE(this.input.charCodeAt(r));)++r;var i=this.input.slice(t,r);if(!TE.test(i))return!0}return!1},n.parseStatement=function(e,t){return this.match(iE.at)&&this.parseDecorators(!0),this.parseStatementContent(e,t)},n.parseStatementContent=function(e,t){var n,r=this.state.type,i=this.startNode();switch(this.isLet(e)&&(r=iE._var,n="let"),r){case iE._break:case iE._continue:return this.parseBreakContinueStatement(i,r.keyword);case iE._debugger:return this.parseDebuggerStatement(i);case iE._do:return this.parseDoStatement(i);case iE._for:return this.parseForStatement(i);case iE._function:if(46===this.lookaheadCharCode())break;return e&&(this.state.strict?this.raise(this.state.start,"In strict mode code, functions can only be declared at top level or inside a block"):"if"!==e&&"label"!==e&&this.raise(this.state.start,"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement")),this.parseFunctionStatement(i,!1,!e);case iE._class:return e&&this.unexpected(),this.parseClass(i,!0);case iE._if:return this.parseIfStatement(i);case iE._return:return this.parseReturnStatement(i);case iE._switch:return this.parseSwitchStatement(i);case iE._throw:return this.parseThrowStatement(i);case iE._try:return this.parseTryStatement(i);case iE._const:case iE._var:return n=n||this.state.value,e&&"var"!==n&&this.raise(this.state.start,"Lexical declaration cannot appear in a single-statement context"),this.parseVarStatement(i,n);case iE._while:return this.parseWhileStatement(i);case iE._with:return this.parseWithStatement(i);case iE.braceL:return this.parseBlock();case iE.semi:return this.parseEmptyStatement(i);case iE._export:case iE._import:var a,o=this.lookaheadCharCode();if(40===o||46===o)break;return this.options.allowImportExportEverywhere||t||this.raise(this.state.start,"'import' and 'export' may only appear at the top level"),this.next(),r===iE._import?"ImportDeclaration"!==(a=this.parseImport(i)).type||a.importKind&&"value"!==a.importKind||(this.sawUnambiguousESM=!0):("ExportNamedDeclaration"!==(a=this.parseExport(i)).type||a.exportKind&&"value"!==a.exportKind)&&("ExportAllDeclaration"!==a.type||a.exportKind&&"value"!==a.exportKind)&&"ExportDefaultDeclaration"!==a.type||(this.sawUnambiguousESM=!0),this.assertModuleNodeAllowed(i),a;default:if(this.isAsyncFunction())return e&&this.raise(this.state.start,"Async functions can only be declared at the top level or inside a block"),this.next(),this.parseFunctionStatement(i,!0,!e)}var s=this.state.value,u=this.parseExpression();return r===iE.name&&"Identifier"===u.type&&this.eat(iE.colon)?this.parseLabeledStatement(i,s,u,e):this.parseExpressionStatement(i,u)},n.assertModuleNodeAllowed=function(e){this.options.allowImportExportEverywhere||this.inModule||this.raise(e.start,"'import' and 'export' may appear only with 'sourceType: \"module\"'",{code:"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED"})},n.takeDecorators=function(e){var t=this.state.decoratorStack[this.state.decoratorStack.length-1];t.length&&(e.decorators=t,this.resetStartLocationFromNode(e,t[0]),this.state.decoratorStack[this.state.decoratorStack.length-1]=[])},n.canHaveLeadingDecorator=function(){return this.match(iE._class)},n.parseDecorators=function(e){for(var t=this.state.decoratorStack[this.state.decoratorStack.length-1];this.match(iE.at);){var n=this.parseDecorator();t.push(n)}if(this.match(iE._export))e||this.unexpected(),this.hasPlugin("decorators")&&!this.getPluginOption("decorators","decoratorsBeforeExport")&&this.raise(this.state.start,"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.");else if(!this.canHaveLeadingDecorator())throw this.raise(this.state.start,"Leading decorators must be attached to a class declaration")},n.parseDecorator=function(){this.expectOnePlugin(["decorators-legacy","decorators"]);var e=this.startNode();if(this.next(),this.hasPlugin("decorators")){this.state.decoratorStack.push([]);var t,n=this.state.start,r=this.state.startLoc;if(this.eat(iE.parenL))t=this.parseExpression(),this.expect(iE.parenR);else for(t=this.parseIdentifier(!1);this.eat(iE.dot);){var i=this.startNodeAt(n,r);i.object=t,i.property=this.parseIdentifier(!0),i.computed=!1,t=this.finishNode(i,"MemberExpression")}e.expression=this.parseMaybeDecoratorArguments(t),this.state.decoratorStack.pop()}else e.expression=this.parseExprSubscripts();return this.finishNode(e,"Decorator")},n.parseMaybeDecoratorArguments=function(e){if(this.eat(iE.parenL)){var t=this.startNodeAtNode(e);return t.callee=e,t.arguments=this.parseCallExpressionArguments(iE.parenR,!1),this.toReferencedList(t.arguments),this.finishNode(t,"CallExpression")}return e},n.parseBreakContinueStatement=function(e,t){var n="break"===t;return this.next(),this.isLineTerminator()?e.label=null:(e.label=this.parseIdentifier(),this.semicolon()),this.verifyBreakContinue(e,t),this.finishNode(e,n?"BreakStatement":"ContinueStatement")},n.verifyBreakContinue=function(e,t){var n,r="break"===t;for(n=0;n<this.state.labels.length;++n){var i=this.state.labels[n];if(null==e.label||i.name===e.label.name){if(null!=i.kind&&(r||"loop"===i.kind))break;if(e.label&&r)break}}n===this.state.labels.length&&this.raise(e.start,"Unsyntactic "+t)},n.parseDebuggerStatement=function(e){return this.next(),this.semicolon(),this.finishNode(e,"DebuggerStatement")},n.parseHeaderExpression=function(){this.expect(iE.parenL);var e=this.parseExpression();return this.expect(iE.parenR),e},n.parseDoStatement=function(e){var t=this;return this.next(),this.state.labels.push(bA),e.body=this.withTopicForbiddingContext((function(){return t.parseStatement("do")})),this.state.labels.pop(),this.expect(iE._while),e.test=this.parseHeaderExpression(),this.eat(iE.semi),this.finishNode(e,"DoWhileStatement")},n.parseForStatement=function(e){this.next(),this.state.labels.push(bA);var t=-1;if(this.isAwaitAllowed()&&this.eatContextual("await")&&(t=this.state.lastTokStart),this.scope.enter(0),this.expect(iE.parenL),this.match(iE.semi))return t>-1&&this.unexpected(t),this.parseFor(e,null);var n=this.isLet();if(this.match(iE._var)||this.match(iE._const)||n){var r=this.startNode(),i=n?"let":this.state.value;return this.next(),this.parseVar(r,!0,i),this.finishNode(r,"VariableDeclaration"),(this.match(iE._in)||this.isContextual("of"))&&1===r.declarations.length?this.parseForIn(e,r,t):(t>-1&&this.unexpected(t),this.parseFor(e,r))}var a={start:0},o=this.parseExpression(!0,a);if(this.match(iE._in)||this.isContextual("of")){var s=this.isContextual("of")?"for-of statement":"for-in statement";return this.toAssignable(o,void 0,s),this.checkLVal(o,void 0,void 0,s),this.parseForIn(e,o,t)}return a.start&&this.unexpected(a.start),t>-1&&this.unexpected(t),this.parseFor(e,o)},n.parseFunctionStatement=function(e,t,n){return this.next(),this.parseFunction(e,1|(n?0:2),t)},n.parseIfStatement=function(e){return this.next(),e.test=this.parseHeaderExpression(),e.consequent=this.parseStatement("if"),e.alternate=this.eat(iE._else)?this.parseStatement("if"):null,this.finishNode(e,"IfStatement")},n.parseReturnStatement=function(e){return this.scope.inFunction||this.options.allowReturnOutsideFunction||this.raise(this.state.start,"'return' outside of function"),this.next(),this.isLineTerminator()?e.argument=null:(e.argument=this.parseExpression(),this.semicolon()),this.finishNode(e,"ReturnStatement")},n.parseSwitchStatement=function(e){this.next(),e.discriminant=this.parseHeaderExpression();var t,n,r=e.cases=[];for(this.expect(iE.braceL),this.state.labels.push(EA),this.scope.enter(0);!this.match(iE.braceR);)if(this.match(iE._case)||this.match(iE._default)){var i=this.match(iE._case);t&&this.finishNode(t,"SwitchCase"),r.push(t=this.startNode()),t.consequent=[],this.next(),i?t.test=this.parseExpression():(n&&this.raise(this.state.lastTokStart,"Multiple default clauses"),n=!0,t.test=null),this.expect(iE.colon)}else t?t.consequent.push(this.parseStatement(null)):this.unexpected();return this.scope.exit(),t&&this.finishNode(t,"SwitchCase"),this.next(),this.state.labels.pop(),this.finishNode(e,"SwitchStatement")},n.parseThrowStatement=function(e){return this.next(),pE.test(this.input.slice(this.state.lastTokEnd,this.state.start))&&this.raise(this.state.lastTokEnd,"Illegal newline after throw"),e.argument=this.parseExpression(),this.semicolon(),this.finishNode(e,"ThrowStatement")},n.parseTryStatement=function(e){var t=this;if(this.next(),e.block=this.parseBlock(),e.handler=null,this.match(iE._catch)){var n=this.startNode();if(this.next(),this.match(iE.parenL)){this.expect(iE.parenL),n.param=this.parseBindingAtom();var r="Identifier"===n.param.type;this.scope.enter(r?32:0),this.checkLVal(n.param,9,null,"catch clause"),this.expect(iE.parenR)}else n.param=null,this.scope.enter(0);n.body=this.withTopicForbiddingContext((function(){return t.parseBlock(!1,!1)})),this.scope.exit(),e.handler=this.finishNode(n,"CatchClause")}return e.finalizer=this.eat(iE._finally)?this.parseBlock():null,e.handler||e.finalizer||this.raise(e.start,"Missing catch or finally clause"),this.finishNode(e,"TryStatement")},n.parseVarStatement=function(e,t){return this.next(),this.parseVar(e,!1,t),this.semicolon(),this.finishNode(e,"VariableDeclaration")},n.parseWhileStatement=function(e){var t=this;return this.next(),e.test=this.parseHeaderExpression(),this.state.labels.push(bA),e.body=this.withTopicForbiddingContext((function(){return t.parseStatement("while")})),this.state.labels.pop(),this.finishNode(e,"WhileStatement")},n.parseWithStatement=function(e){var t=this;return this.state.strict&&this.raise(this.state.start,"'with' in strict mode"),this.next(),e.object=this.parseHeaderExpression(),e.body=this.withTopicForbiddingContext((function(){return t.parseStatement("with")})),this.finishNode(e,"WithStatement")},n.parseEmptyStatement=function(e){return this.next(),this.finishNode(e,"EmptyStatement")},n.parseLabeledStatement=function(e,t,n,r){for(var i=0,a=this.state.labels;i<a.length;i++){a[i].name===t&&this.raise(n.start,"Label '"+t+"' is already declared")}for(var o=this.state.type.isLoop?"loop":this.match(iE._switch)?"switch":null,s=this.state.labels.length-1;s>=0;s--){var u=this.state.labels[s];if(u.statementStart!==e.start)break;u.statementStart=this.state.start,u.kind=o}return this.state.labels.push({name:t,kind:o,statementStart:this.state.start}),e.body=this.parseStatement(r?-1===r.indexOf("label")?r+"label":r:"label"),this.state.labels.pop(),e.label=n,this.finishNode(e,"LabeledStatement")},n.parseExpressionStatement=function(e,t){return e.expression=t,this.semicolon(),this.finishNode(e,"ExpressionStatement")},n.parseBlock=function(e,t){void 0===e&&(e=!1),void 0===t&&(t=!0);var n=this.startNode();return this.expect(iE.braceL),t&&this.scope.enter(0),this.parseBlockBody(n,e,!1,iE.braceR),t&&this.scope.exit(),this.finishNode(n,"BlockStatement")},n.isValidDirective=function(e){return"ExpressionStatement"===e.type&&"StringLiteral"===e.expression.type&&!e.expression.extra.parenthesized},n.parseBlockBody=function(e,t,n,r){var i=e.body=[],a=e.directives=[];this.parseBlockOrModuleBlockBody(i,t?a:void 0,n,r)},n.parseBlockOrModuleBlockBody=function(e,t,n,r){for(var i,a,o=!1;!this.eat(r);){o||!this.state.containsOctal||a||(a=this.state.octalPosition);var s=this.parseStatement(null,n);if(t&&!o&&this.isValidDirective(s)){var u=this.stmtToDirective(s);t.push(u),void 0===i&&"use strict"===u.value.value&&(i=this.state.strict,this.setStrict(!0),a&&this.raise(a,"Octal literal in strict mode"))}else o=!0,e.push(s)}!1===i&&this.setStrict(!1)},n.parseFor=function(e,t){var n=this;return e.init=t,this.expect(iE.semi),e.test=this.match(iE.semi)?null:this.parseExpression(),this.expect(iE.semi),e.update=this.match(iE.parenR)?null:this.parseExpression(),this.expect(iE.parenR),e.body=this.withTopicForbiddingContext((function(){return n.parseStatement("for")})),this.scope.exit(),this.state.labels.pop(),this.finishNode(e,"ForStatement")},n.parseForIn=function(e,t,n){var r=this,i=this.match(iE._in);return this.next(),i?n>-1&&this.unexpected(n):e.await=n>-1,"VariableDeclaration"!==t.type||null==t.declarations[0].init||i&&!this.state.strict&&"var"===t.kind&&"Identifier"===t.declarations[0].id.type?"AssignmentPattern"===t.type&&this.raise(t.start,"Invalid left-hand side in for-loop"):this.raise(t.start,(i?"for-in":"for-of")+" loop variable declaration may not have an initializer"),e.left=t,e.right=i?this.parseExpression():this.parseMaybeAssign(),this.expect(iE.parenR),e.body=this.withTopicForbiddingContext((function(){return r.parseStatement("for")})),this.scope.exit(),this.state.labels.pop(),this.finishNode(e,i?"ForInStatement":"ForOfStatement")},n.parseVar=function(e,t,n){var r=e.declarations=[],i=this.hasPlugin("typescript");for(e.kind=n;;){var a=this.startNode();if(this.parseVarId(a,n),this.eat(iE.eq)?a.init=this.parseMaybeAssign(t):("const"!==n||this.match(iE._in)||this.isContextual("of")?"Identifier"===a.id.type||t&&(this.match(iE._in)||this.isContextual("of"))||this.raise(this.state.lastTokEnd,"Complex binding patterns require an initialization value"):i||this.unexpected(),a.init=null),r.push(this.finishNode(a,"VariableDeclarator")),!this.eat(iE.comma))break}return e},n.parseVarId=function(e,t){e.id=this.parseBindingAtom(),this.checkLVal(e.id,"var"===t?5:9,void 0,"variable declaration","var"!==t)},n.parseFunction=function(e,t,n){var r=this;void 0===t&&(t=0),void 0===n&&(n=!1);var i=1&t,a=2&t,o=!(!i||4&t);this.initFunction(e,n),this.match(iE.star)&&a&&this.raise(this.state.start,"Generators can only be declared at the top level or inside a block"),e.generator=this.eat(iE.star),i&&(e.id=this.parseFunctionId(o));var s=this.state.maybeInArrowParameters,u=this.state.inClassProperty,l=this.state.yieldPos,c=this.state.awaitPos;return this.state.maybeInArrowParameters=!1,this.state.inClassProperty=!1,this.state.yieldPos=-1,this.state.awaitPos=-1,this.scope.enter(lE(e.async,e.generator)),i||(e.id=this.parseFunctionId()),this.parseFunctionParams(e),this.withTopicForbiddingContext((function(){r.parseFunctionBodyAndFinish(e,i?"FunctionDeclaration":"FunctionExpression")})),this.scope.exit(),i&&!a&&this.registerFunctionStatementId(e),this.state.maybeInArrowParameters=s,this.state.inClassProperty=u,this.state.yieldPos=l,this.state.awaitPos=c,e},n.parseFunctionId=function(e){return e||this.match(iE.name)?this.parseIdentifier():null},n.parseFunctionParams=function(e,t){var n=this.state.inParameters;this.state.inParameters=!0,this.expect(iE.parenL),e.params=this.parseBindingList(iE.parenR,41,!1,t),this.state.inParameters=n,this.checkYieldAwaitInDefaultParams()},n.registerFunctionStatementId=function(e){e.id&&this.scope.declareName(e.id.name,this.state.strict||e.generator||e.async?this.scope.treatFunctionsAsVar?5:9:17,e.id.start)},n.parseClass=function(e,t,n){this.next(),this.takeDecorators(e);var r=this.state.strict;return this.state.strict=!0,this.parseClassId(e,t,n),this.parseClassSuper(e),e.body=this.parseClassBody(!!e.superClass),this.state.strict=r,this.finishNode(e,t?"ClassDeclaration":"ClassExpression")},n.isClassProperty=function(){return this.match(iE.eq)||this.match(iE.semi)||this.match(iE.braceR)},n.isClassMethod=function(){return this.match(iE.parenL)},n.isNonstaticConstructor=function(e){return!(e.computed||e.static||"constructor"!==e.key.name&&"constructor"!==e.key.value)},n.parseClassBody=function(e){var t=this;this.state.classLevel++;var n={hadConstructor:!1},r=[],i=this.startNode();if(i.body=[],this.expect(iE.braceL),this.withTopicForbiddingContext((function(){for(;!t.eat(iE.braceR);)if(t.eat(iE.semi)){if(r.length>0)throw t.raise(t.state.lastTokEnd,"Decorators must not be followed by a semicolon")}else if(t.match(iE.at))r.push(t.parseDecorator());else{var a=t.startNode();r.length&&(a.decorators=r,t.resetStartLocationFromNode(a,r[0]),r=[]),t.parseClassMember(i,a,n,e),"constructor"===a.kind&&a.decorators&&a.decorators.length>0&&t.raise(a.start,"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?")}})),r.length)throw this.raise(this.state.start,"You have trailing decorators with no method");return this.state.classLevel--,this.finishNode(i,"ClassBody")},n.parseClassMember=function(e,t,n,r){var i=!1,a=this.state.containsEsc;if(this.match(iE.name)&&"static"===this.state.value){var o=this.parseIdentifier(!0);if(this.isClassMethod()){var s=t;return s.kind="method",s.computed=!1,s.key=o,s.static=!1,void this.pushClassMethod(e,s,!1,!1,!1,!1)}if(this.isClassProperty()){var u=t;return u.computed=!1,u.key=o,u.static=!1,void e.body.push(this.parseClassProperty(u))}if(a)throw this.unexpected();i=!0}this.parseClassMemberWithIsStatic(e,t,n,i,r)},n.parseClassMemberWithIsStatic=function(e,t,n,r,i){var a=t,o=t,s=t,u=t,l=a,c=a;if(t.static=r,this.eat(iE.star))return l.kind="method",this.parseClassPropertyName(l),"PrivateName"===l.key.type?void this.pushClassPrivateMethod(e,o,!0,!1):(this.isNonstaticConstructor(a)&&this.raise(a.key.start,"Constructor can't be a generator"),void this.pushClassMethod(e,a,!0,!1,!1,!1));var p=this.state.containsEsc,h=this.parseClassPropertyName(t),f="PrivateName"===h.type,d="Identifier"===h.type,m=this.state.start;if(this.parsePostMemberNameModifiers(c),this.isClassMethod()){if(l.kind="method",f)return void this.pushClassPrivateMethod(e,o,!1,!1);var y=this.isNonstaticConstructor(a),v=!1;y&&(a.kind="constructor",n.hadConstructor&&!this.hasPlugin("typescript")&&this.raise(h.start,"Duplicate constructor in the same class"),n.hadConstructor=!0,v=i),this.pushClassMethod(e,a,!1,!1,y,v)}else if(this.isClassProperty())f?this.pushClassPrivateProperty(e,u):this.pushClassProperty(e,s);else if(!d||"async"!==h.name||p||this.isLineTerminator())!d||"get"!==h.name&&"set"!==h.name||p||this.match(iE.star)&&this.isLineTerminator()?this.isLineTerminator()?f?this.pushClassPrivateProperty(e,u):this.pushClassProperty(e,s):this.unexpected():(l.kind=h.name,this.parseClassPropertyName(a),"PrivateName"===l.key.type?this.pushClassPrivateMethod(e,o,!1,!1):(this.isNonstaticConstructor(a)&&this.raise(a.key.start,"Constructor can't have get/set modifier"),this.pushClassMethod(e,a,!1,!1,!1,!1)),this.checkGetterSetterParams(a));else{var g=this.eat(iE.star);c.optional&&this.unexpected(m),l.kind="method",this.parseClassPropertyName(l),this.parsePostMemberNameModifiers(c),"PrivateName"===l.key.type?this.pushClassPrivateMethod(e,o,g,!0):(this.isNonstaticConstructor(a)&&this.raise(a.key.start,"Constructor can't be an async function"),this.pushClassMethod(e,a,g,!0,!1,!1))}},n.parseClassPropertyName=function(e){var t=this.parsePropertyName(e);return e.computed||!e.static||"prototype"!==t.name&&"prototype"!==t.value||this.raise(t.start,"Classes may not have static property named prototype"),"PrivateName"===t.type&&"constructor"===t.id.name&&this.raise(t.start,"Classes may not have a private field named '#constructor'"),t},n.pushClassProperty=function(e,t){t.computed||"constructor"!==t.key.name&&"constructor"!==t.key.value||this.raise(t.key.start,"Classes may not have a field named 'constructor'"),e.body.push(this.parseClassProperty(t))},n.pushClassPrivateProperty=function(e,t){this.expectPlugin("classPrivateProperties",t.key.start),e.body.push(this.parseClassPrivateProperty(t))},n.pushClassMethod=function(e,t,n,r,i,a){e.body.push(this.parseMethod(t,n,r,i,a,"ClassMethod",!0))},n.pushClassPrivateMethod=function(e,t,n,r){this.expectPlugin("classPrivateMethods",t.key.start),e.body.push(this.parseMethod(t,n,r,!1,!1,"ClassPrivateMethod",!0))},n.parsePostMemberNameModifiers=function(e){},n.parseAccessModifier=function(){},n.parseClassPrivateProperty=function(e){return this.state.inClassProperty=!0,this.scope.enter(320),e.value=this.eat(iE.eq)?this.parseMaybeAssign():null,this.semicolon(),this.state.inClassProperty=!1,this.scope.exit(),this.finishNode(e,"ClassPrivateProperty")},n.parseClassProperty=function(e){return e.typeAnnotation||this.expectPlugin("classProperties"),this.state.inClassProperty=!0,this.scope.enter(320),this.match(iE.eq)?(this.expectPlugin("classProperties"),this.next(),e.value=this.parseMaybeAssign()):e.value=null,this.semicolon(),this.state.inClassProperty=!1,this.scope.exit(),this.finishNode(e,"ClassProperty")},n.parseClassId=function(e,t,n,r){void 0===r&&(r=139),this.match(iE.name)?(e.id=this.parseIdentifier(),t&&this.checkLVal(e.id,r,void 0,"class name")):n||!t?e.id=null:this.unexpected(null,"A class name is required")},n.parseClassSuper=function(e){e.superClass=this.eat(iE._extends)?this.parseExprSubscripts():null},n.parseExport=function(e){var t=this.maybeParseExportDefaultSpecifier(e),n=!t||this.eat(iE.comma),r=n&&this.eatExportStar(e),i=r&&this.maybeParseExportNamespaceSpecifier(e),a=n&&(!i||this.eat(iE.comma)),o=t||r;if(r&&!i)return t&&this.unexpected(),this.parseExportFrom(e,!0),this.finishNode(e,"ExportAllDeclaration");var s,u=this.maybeParseExportNamedSpecifiers(e);if(t&&n&&!r&&!u||i&&a&&!u)throw this.unexpected(null,iE.braceL);if(o||u?(s=!1,this.parseExportFrom(e,o)):s=this.maybeParseExportDeclaration(e),o||u||s)return this.checkExport(e,!0,!1,!!e.source),this.finishNode(e,"ExportNamedDeclaration");if(this.eat(iE._default))return e.declaration=this.parseExportDefaultExpression(),this.checkExport(e,!0,!0),this.finishNode(e,"ExportDefaultDeclaration");throw this.unexpected(null,iE.braceL)},n.eatExportStar=function(e){return this.eat(iE.star)},n.maybeParseExportDefaultSpecifier=function(e){if(this.isExportDefaultSpecifier()){this.expectPlugin("exportDefaultFrom");var t=this.startNode();return t.exported=this.parseIdentifier(!0),e.specifiers=[this.finishNode(t,"ExportDefaultSpecifier")],!0}return!1},n.maybeParseExportNamespaceSpecifier=function(e){if(this.isContextual("as")){e.specifiers||(e.specifiers=[]);var t=this.startNodeAt(this.state.lastTokStart,this.state.lastTokStartLoc);return this.next(),t.exported=this.parseIdentifier(!0),e.specifiers.push(this.finishNode(t,"ExportNamespaceSpecifier")),!0}return!1},n.maybeParseExportNamedSpecifiers=function(e){var t;return!!this.match(iE.braceL)&&(e.specifiers||(e.specifiers=[]),(t=e.specifiers).push.apply(t,this.parseExportSpecifiers()),e.source=null,e.declaration=null,!0)},n.maybeParseExportDeclaration=function(e){if(this.shouldParseExportDeclaration()){if(this.isContextual("async")){var t=this.nextTokenStart();this.isUnparsedContextual(t,"function")||this.unexpected(t,'Unexpected token, expected "function"')}return e.specifiers=[],e.source=null,e.declaration=this.parseExportDeclaration(e),!0}return!1},n.isAsyncFunction=function(){if(!this.isContextual("async"))return!1;var e=this.nextTokenStart();return!pE.test(this.input.slice(this.state.pos,e))&&this.isUnparsedContextual(e,"function")},n.parseExportDefaultExpression=function(){var e=this.startNode(),t=this.isAsyncFunction();if(this.match(iE._function)||t)return this.next(),t&&this.next(),this.parseFunction(e,5,t);if(this.match(iE._class))return this.parseClass(e,!0,!0);if(this.match(iE.at))return this.hasPlugin("decorators")&&this.getPluginOption("decorators","decoratorsBeforeExport")&&this.raise(this.state.start,"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax"),this.parseDecorators(!1),this.parseClass(e,!0,!0);if(this.match(iE._const)||this.match(iE._var)||this.isLet())throw this.raise(this.state.start,"Only expressions, functions or classes are allowed as the `default` export.");var n=this.parseMaybeAssign();return this.semicolon(),n},n.parseExportDeclaration=function(e){return this.parseStatement(null)},n.isExportDefaultSpecifier=function(){if(this.match(iE.name))return"async"!==this.state.value&&"let"!==this.state.value;if(!this.match(iE._default))return!1;var e=this.nextTokenStart();return 44===this.input.charCodeAt(e)||this.isUnparsedContextual(e,"from")},n.parseExportFrom=function(e,t){this.eatContextual("from")?(e.source=this.parseImportSource(),this.checkExport(e)):t?this.unexpected():e.source=null,this.semicolon()},n.shouldParseExportDeclaration=function(){if(this.match(iE.at)&&(this.expectOnePlugin(["decorators","decorators-legacy"]),this.hasPlugin("decorators"))){if(!this.getPluginOption("decorators","decoratorsBeforeExport"))return!0;this.unexpected(this.state.start,"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax")}return"var"===this.state.type.keyword||"const"===this.state.type.keyword||"function"===this.state.type.keyword||"class"===this.state.type.keyword||this.isLet()||this.isAsyncFunction()},n.checkExport=function(e,t,n,r){if(t)if(n)this.checkDuplicateExports(e,"default");else if(e.specifiers&&e.specifiers.length)for(var i=0,a=e.specifiers;i<a.length;i++){var o=a[i];this.checkDuplicateExports(o,o.exported.name),!r&&o.local&&(this.checkReservedWord(o.local.name,o.local.start,!0,!1),this.scope.checkLocalExport(o.local))}else if(e.declaration)if("FunctionDeclaration"===e.declaration.type||"ClassDeclaration"===e.declaration.type){var s=e.declaration.id;if(!s)throw new Error("Assertion failure");this.checkDuplicateExports(e,s.name)}else if("VariableDeclaration"===e.declaration.type)for(var u=0,l=e.declaration.declarations;u<l.length;u++){var c=l[u];this.checkDeclaration(c.id)}if(this.state.decoratorStack[this.state.decoratorStack.length-1].length){var p=e.declaration&&("ClassDeclaration"===e.declaration.type||"ClassExpression"===e.declaration.type);if(!e.declaration||!p)throw this.raise(e.start,"You can only use decorators on an export when exporting a class");this.takeDecorators(e.declaration)}},n.checkDeclaration=function(e){if("Identifier"===e.type)this.checkDuplicateExports(e,e.name);else if("ObjectPattern"===e.type)for(var t=0,n=e.properties;t<n.length;t++){var r=n[t];this.checkDeclaration(r)}else if("ArrayPattern"===e.type)for(var i=0,a=e.elements;i<a.length;i++){var o=a[i];o&&this.checkDeclaration(o)}else"ObjectProperty"===e.type?this.checkDeclaration(e.value):"RestElement"===e.type?this.checkDeclaration(e.argument):"AssignmentPattern"===e.type&&this.checkDeclaration(e.left)},n.checkDuplicateExports=function(e,t){this.state.exportedIdentifiers.indexOf(t)>-1&&this.raise(e.start,"default"===t?"Only one default export allowed per module.":"`"+t+"` has already been exported. Exported identifiers must be unique."),this.state.exportedIdentifiers.push(t)},n.parseExportSpecifiers=function(){var e=[],t=!0;for(this.expect(iE.braceL);!this.eat(iE.braceR);){if(t)t=!1;else if(this.expect(iE.comma),this.eat(iE.braceR))break;var n=this.startNode();n.local=this.parseIdentifier(!0),n.exported=this.eatContextual("as")?this.parseIdentifier(!0):n.local.__clone(),e.push(this.finishNode(n,"ExportSpecifier"))}return e},n.parseImport=function(e){if(e.specifiers=[],!this.match(iE.string)){var t=!this.maybeParseDefaultImportSpecifier(e)||this.eat(iE.comma),n=t&&this.maybeParseStarImportSpecifier(e);t&&!n&&this.parseNamedImportSpecifiers(e),this.expectContextual("from")}return e.source=this.parseImportSource(),this.semicolon(),this.finishNode(e,"ImportDeclaration")},n.parseImportSource=function(){return this.match(iE.string)||this.unexpected(),this.parseExprAtom()},n.shouldParseDefaultImport=function(e){return this.match(iE.name)},n.parseImportSpecifierLocal=function(e,t,n,r){t.local=this.parseIdentifier(),this.checkLVal(t.local,9,void 0,r),e.specifiers.push(this.finishNode(t,n))},n.maybeParseDefaultImportSpecifier=function(e){return!!this.shouldParseDefaultImport(e)&&(this.parseImportSpecifierLocal(e,this.startNode(),"ImportDefaultSpecifier","default import specifier"),!0)},n.maybeParseStarImportSpecifier=function(e){if(this.match(iE.star)){var t=this.startNode();return this.next(),this.expectContextual("as"),this.parseImportSpecifierLocal(e,t,"ImportNamespaceSpecifier","import namespace specifier"),!0}return!1},n.parseNamedImportSpecifiers=function(e){var t=!0;for(this.expect(iE.braceL);!this.eat(iE.braceR);){if(t)t=!1;else{if(this.eat(iE.colon))throw this.raise(this.state.start,"ES2015 named imports do not destructure. Use another statement for destructuring after the import.");if(this.expect(iE.comma),this.eat(iE.braceR))break}this.parseImportSpecifier(e)}},n.parseImportSpecifier=function(e){var t=this.startNode();t.imported=this.parseIdentifier(!0),this.eatContextual("as")?t.local=this.parseIdentifier():(this.checkReservedWord(t.imported.name,t.start,!0,!0),t.local=t.imported.__clone()),this.checkLVal(t.local,9,void 0,"import specifier"),e.specifiers.push(this.finishNode(t,"ImportSpecifier"))},t}(gA));function DA(e,t){if(!t||"unambiguous"!==t.sourceType)return SA(t,e).parse();t=Object.assign({},t);try{t.sourceType="module";var n=SA(t,e),r=n.parse();if(n.sawUnambiguousESM)return r;if(n.ambiguousScriptDifferentAst)try{return t.sourceType="script",SA(t,e).parse()}catch(e){}else r.program.sourceType="script";return r}catch(n){try{return t.sourceType="script",SA(t,e).parse()}catch(e){}throw n}}function SA(e,t){var n=AA;return e&&e.plugins&&(!function(e){if($E(e,"decorators")){if($E(e,"decorators-legacy"))throw new Error("Cannot use the decorators and decorators-legacy plugin together");var t=QE(e,"decorators","decoratorsBeforeExport");if(null==t)throw new Error("The 'decorators' plugin requires a 'decoratorsBeforeExport' option, whose value must be a boolean. If you are migrating from Babylon/Babel 6 or want to use the old decorators proposal, you should use the 'decorators-legacy' plugin instead of 'decorators'.");if("boolean"!=typeof t)throw new Error("'decoratorsBeforeExport' must be a boolean.")}if($E(e,"flow")&&$E(e,"typescript"))throw new Error("Cannot combine flow and typescript plugins.");if($E(e,"placeholders")&&$E(e,"v8intrinsic"))throw new Error("Cannot combine placeholders and v8intrinsic plugins.");if($E(e,"pipelineOperator")&&!ZE.includes(QE(e,"pipelineOperator","proposal")))throw new Error("'pipelineOperator' requires 'proposal' option whose value should be one of: "+ZE.map((function(e){return"'"+e+"'"})).join(", "))}(e.plugins),n=function(e){var t=tA.filter((function(t){return $E(e,t)})),n=t.join("/"),r=xA[n];if(!r){r=AA;for(var i=0;i<t.length;i++){var a=t[i];r=eA[a](r)}xA[n]=r}return r}(e.plugins)),new n(e,t)}var xA={};var TA={Function:function(e){e.skip()},VariableDeclaration:function(e){if("var"===e.node.kind){for(var t=e.getBindingIdentifiers(),n=0,r=Object.keys(t);n<r.length;n++){var i=r[n];e.scope.push({id:t[i]})}for(var a=[],o=0,s=e.node.declarations;o<s.length;o++){var u=s[o];u.init&&a.push(es(Uo("=",u.id,u.init)))}e.replaceWithMultiple(a)}}};var CA=Object.freeze({__proto__:null,replaceWithMultiple:function(e){this.resync(),Wp((e=this._verifyNodeList(e))[0],this.node),Gp(e[e.length-1],this.node),this.node=this.container[this.key]=null;var t=this.insertAfter(e);return this.node?this.requeue():this.remove(),t},replaceWithSourceString:function(e){this.resync();try{e=DA(e="("+e+")")}catch(n){var t=n.loc;throw t&&(n.message+=" - make sure this is an expression.\n"+Qb(e,{start:{line:t.line,column:t.column+1}}),n.code="BABEL_REPLACE_SOURCE_ERROR"),n}return e=e.program.body[0].expression,JD.removeProperties(e),this.replaceWith(e)},replaceWith:function(e){if(this.resync(),this.removed)throw new Error("You can't replace this node, we've already removed it");if(e instanceof ID&&(e=e.node),!e)throw new Error("You passed `path.replaceWith()` a falsy node, use `path.remove()` instead");if(this.node===e)return[this];if(this.isProgram()&&!O(e))throw new Error("You can only replace a Program root node with another Program node");if(Array.isArray(e))throw new Error("Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`");if("string"==typeof e)throw new Error("Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`");var t="";if(this.isNodeType("Statement")&&tt(e)&&(this.canHaveVariableDeclarationOrExpression()||this.canSwapBetweenExpressionAndStatement(e)||this.parentPath.isExportDefaultDeclaration()||(e=es(e),t="expression")),this.isNodeType("Expression")&&it(e)&&!this.canHaveVariableDeclarationOrExpression()&&!this.canSwapBetweenExpressionAndStatement(e))return this.replaceExpressionWithStatements([e]);var n=this.node;return n&&(Hp(e,n),qp(n)),this._replaceWith(e),this.type=e.type,this.setScope(),this.requeue(),[t?this.get(t):this]},_replaceWith:function(e){if(!this.container)throw new ReferenceError("Container is falsy");this.inList?Va(this.parent,this.key,[e]):Va(this.parent,this.key,e),this.debug("Replace with "+(e&&e.type)),this.node=this.container[this.key]=e},replaceExpressionWithStatements:function(e){this.resync();var t=Jh(e,this.scope);if(t)return this.replaceWith(t)[0].get("expressions");var n=this.getFunctionParent(),r=n&&n.is("async"),i=Ls([],qo(e));this.replaceWith(Xo(i,[])),this.traverse(TA);var a=this.get("callee").getCompletionRecords(),o=Array.isArray(a),s=0;for(a=o?a:a[Symbol.iterator]();;){var u;if(o){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}var l=u;if(l.isExpressionStatement()){var c=l.findParent((function(e){return e.isLoop()}));if(c){var p=c.getData("expressionReplacementReturnUid");if(p)p=os(p.name);else{var h=this.get("callee");p=h.scope.generateDeclaredUidIdentifier("ret"),h.get("body").pushContainer("body",Ds(gp(p))),c.setData("expressionReplacementReturnUid",p)}l.get("expression").replaceWith(Uo("=",gp(p),l.node.expression))}else l.replaceWith(Ds(l.node.expression))}}var f=this.get("callee");return f.arrowFunctionToExpression(),r&&JD.hasType(this.get("callee.body").node,"AwaitExpression",oh)&&(f.set("async",!0),this.replaceWith(Ol(this.node))),f.get("body.body")},replaceInline:function(e){if(this.resync(),Array.isArray(e)){if(Array.isArray(this.container)){e=this._verifyNodeList(e);var t=this._containerInsertAfter(e);return this.remove(),t}return this.replaceWithMultiple(e)}return this.replaceWith(e)}}),wA=["String","Number","Math"],PA=["random"];function FA(e,t){t.confident&&(t.deoptPath=e,t.confident=!1)}function kA(e,t){var n=e.node,r=t.seen;if(r.has(n)){var i=r.get(n);return i.resolved?i.value:void FA(e,t)}var a={resolved:!1};r.set(n,a);var o=function(e,t){if(!t.confident)return;var n=e.node;if(e.isSequenceExpression()){var r=e.get("expressions");return kA(r[r.length-1],t)}if(e.isStringLiteral()||e.isNumericLiteral()||e.isBooleanLiteral())return n.value;if(e.isNullLiteral())return null;if(e.isTemplateLiteral())return _A(e,n.quasis,t);if(e.isTaggedTemplateExpression()&&e.get("tag").isMemberExpression()){var i=e.get("tag.object"),a=i.node.name,o=e.get("tag.property");if(i.isIdentifier()&&"String"===a&&!e.scope.getBinding(a,!0)&&o.isIdentifier&&"raw"===o.node.name)return _A(e,n.quasi.quasis,t,!0)}if(e.isConditionalExpression()){var s=kA(e.get("test"),t);if(!t.confident)return;return kA(s?e.get("consequent"):e.get("alternate"),t)}if(e.isExpressionWrapper())return kA(e.get("expression"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:n})){var u=e.get("property"),l=e.get("object");if(l.isLiteral()&&u.isIdentifier()){var c=l.node.value,p=typeof c;if("number"===p||"string"===p)return c[u.node.name]}}if(e.isReferencedIdentifier()){var h=e.scope.getBinding(n.name);if(h&&h.constantViolations.length>0)return FA(h.path,t);if(h&&e.node.start<h.path.node.end)return FA(h.path,t);if(h&&h.hasValue)return h.value;if("undefined"===n.name)return h?FA(h.path,t):void 0;if("Infinity"===n.name)return h?FA(h.path,t):1/0;if("NaN"===n.name)return h?FA(h.path,t):NaN;var f=e.resolve();return f===e?FA(e,t):kA(f,t)}if(e.isUnaryExpression({prefix:!0})){if("void"===n.operator)return;var d=e.get("argument");if("typeof"===n.operator&&(d.isFunction()||d.isClass()))return"function";var m=kA(d,t);if(!t.confident)return;switch(n.operator){case"!":return!m;case"+":return+m;case"-":return-m;case"~":return~m;case"typeof":return typeof m}}if(e.isArrayExpression()){var y=[],v=e.get("elements"),g=Array.isArray(v),b=0;for(v=g?v:v[Symbol.iterator]();;){var E;if(g){if(b>=v.length)break;E=v[b++]}else{if((b=v.next()).done)break;E=b.value}var A=E,D=A.evaluate();if(!D.confident)return FA(A,t);y.push(D.value)}return y}if(e.isObjectExpression()){var S={},x=e.get("properties"),T=Array.isArray(x),C=0;for(x=T?x:x[Symbol.iterator]();;){var w;if(T){if(C>=x.length)break;w=x[C++]}else{if((C=x.next()).done)break;w=C.value}var P=w;if(P.isObjectMethod()||P.isSpreadElement())return FA(P,t);var F=P.get("key"),k=F;if(P.node.computed){if(!(k=k.evaluate()).confident)return FA(F,t);k=k.value}else k=k.isIdentifier()?k.node.name:k.node.value;var _=P.get("value"),I=_.evaluate();if(!I.confident)return FA(_,t);I=I.value,S[k]=I}return S}if(e.isLogicalExpression()){var O=t.confident,B=kA(e.get("left"),t),N=t.confident;t.confident=O;var M=kA(e.get("right"),t),R=t.confident;switch(n.operator){case"||":if(t.confident=N&&(!!B||R),!t.confident)return;return B||M;case"&&":if(t.confident=N&&(!B||R),!t.confident)return;return B&&M}}if(e.isBinaryExpression()){var L=kA(e.get("left"),t);if(!t.confident)return;var j=kA(e.get("right"),t);if(!t.confident)return;switch(n.operator){case"-":return L-j;case"+":return L+j;case"/":return L/j;case"*":return L*j;case"%":return L%j;case"**":return Math.pow(L,j);case"<":return L<j;case">":return L>j;case"<=":return L<=j;case">=":return L>=j;case"==":return L==j;case"!=":return L!=j;case"===":return L===j;case"!==":return L!==j;case"|":return L|j;case"&":return L&j;case"^":return L^j;case"<<":return L<<j;case">>":return L>>j;case">>>":return L>>>j}}if(e.isCallExpression()){var U,V,W=e.get("callee");if(W.isIdentifier()&&!e.scope.getBinding(W.node.name,!0)&&wA.indexOf(W.node.name)>=0&&(V=Nf[n.callee.name]),W.isMemberExpression()){var G=W.get("object"),H=W.get("property");if(G.isIdentifier()&&H.isIdentifier()&&wA.indexOf(G.node.name)>=0&&PA.indexOf(H.node.name)<0&&(U=Nf[G.node.name],V=U[H.node.name]),G.isLiteral()&&H.isIdentifier()){var q=typeof G.node.value;"string"!==q&&"number"!==q||(U=G.node.value,V=U[H.node.name])}}if(V){var K=e.get("arguments").map((function(e){return kA(e,t)}));if(!t.confident)return;return V.apply(U,K)}}FA(e,t)}(e,t);return t.confident&&(a.resolved=!0,a.value=o),o}function _A(e,t,n,r){void 0===r&&(r=!1);var i="",a=0,o=e.get("expressions"),s=t,u=Array.isArray(s),l=0;for(s=u?s:s[Symbol.iterator]();;){var c;if(u){if(l>=s.length)break;c=s[l++]}else{if((l=s.next()).done)break;c=l.value}var p=c;if(!n.confident)break;i+=r?p.value.raw:p.value.cooked;var h=o[a++];h&&(i+=String(kA(h,n)))}if(n.confident)return i}var IA=Object.freeze({__proto__:null,evaluateTruthy:function(){var e=this.evaluate();if(e.confident)return!!e.value},evaluate:function(){var e={confident:!0,deoptPath:null,seen:new Map},t=kA(this,e);return e.confident||(t=void 0),{confident:e.confident,deopt:e.deoptPath,value:t}}});function OA(e){return{code:function(e){return"/* @babel/template */;\n"+e},validate:function(){},unwrap:function(t){return e(t.program.body.slice(1))}}}var BA=OA((function(e){return e.length>1?e:e[0]})),NA=OA((function(e){return e})),MA=OA((function(e){if(0===e.length)throw new Error("Found nothing to return.");if(e.length>1)throw new Error("Found multiple statements but wanted one");return e[0]})),RA={code:function(e){return"(\n"+e+"\n)"},validate:function(e){var t=e.program;if(t.body.length>1)throw new Error("Found multiple statements but wanted one");if(0===t.body[0].expression.start)throw new Error("Parse result included parens.")},unwrap:function(e){return e.program.body[0].expression}};function LA(e,t){var n=t.placeholderWhitelist,r=void 0===n?e.placeholderWhitelist:n,i=t.placeholderPattern,a=void 0===i?e.placeholderPattern:i,o=t.preserveComments,s=void 0===o?e.preserveComments:o,u=t.syntacticPlaceholders,l=void 0===u?e.syntacticPlaceholders:u;return{parser:Object.assign({},e.parser,{},t.parser),placeholderWhitelist:r,placeholderPattern:a,preserveComments:s,syntacticPlaceholders:l}}function jA(e){if(null!=e&&"object"!=typeof e)throw new Error("Unknown template options.");var t=e||{},n=t.placeholderWhitelist,r=t.placeholderPattern,i=t.preserveComments,a=t.syntacticPlaceholders,o=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(t,["placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders"]);if(null!=n&&!(n instanceof Set))throw new Error("'.placeholderWhitelist' must be a Set, null, or undefined");if(null!=r&&!(r instanceof RegExp)&&!1!==r)throw new Error("'.placeholderPattern' must be a RegExp, false, null, or undefined");if(null!=i&&"boolean"!=typeof i)throw new Error("'.preserveComments' must be a boolean, null, or undefined");if(null!=a&&"boolean"!=typeof a)throw new Error("'.syntacticPlaceholders' must be a boolean, null, or undefined");if(!0===a&&(null!=n||null!=r))throw new Error("'.placeholderWhitelist' and '.placeholderPattern' aren't compatible with '.syntacticPlaceholders: true'");return{parser:o,placeholderWhitelist:n||void 0,placeholderPattern:null==r?void 0:r,preserveComments:null!=i&&i,syntacticPlaceholders:null==a?void 0:a}}function UA(e){if(Array.isArray(e))return e.reduce((function(e,t,n){return e["$"+n]=t,e}),{});if("object"==typeof e||null==e)return e||void 0;throw new Error("Template replacements must be an array, object, null, or undefined")}var VA=/^[_$A-Z0-9]+$/;function WA(e,t,n){var r=function(e,t){t=Object.assign({allowReturnOutsideFunction:!0,allowSuperOutsideMethod:!0,sourceType:"module"},t,{plugins:(t.plugins||[]).concat("placeholders")});try{return DA(e,t)}catch(t){var n=t.loc;throw n&&(t.message+="\n"+Qb(e,{start:n}),t.code="BABEL_TEMPLATE_PARSE_ERROR"),t}}(t,n.parser),i=n.placeholderWhitelist,a=n.placeholderPattern,o=n.preserveComments,s=n.syntacticPlaceholders;Kh(r,{preserveComments:o}),e.validate(r);var u={placeholders:[],placeholderNames:new Set},l={placeholders:[],placeholderNames:new Set},c={value:void 0};return ff(r,GA,{syntactic:u,legacy:l,isLegacyRef:c,placeholderWhitelist:i,placeholderPattern:a,syntacticPlaceholders:s}),Object.assign({ast:r},c.value?l:u)}function GA(e,t,n){var r;if(Le(e)){if(!1===n.syntacticPlaceholders)throw new Error("%%foo%%-style placeholders can't be used when '.syntacticPlaceholders' is false.");r=e.name.name,n.isLegacyRef.value=!1}else{if(!1===n.isLegacyRef.value||n.syntacticPlaceholders)return;if(S(e)||Oe(e))r=e.name,n.isLegacyRef.value=!0;else{if(!C(e))return;r=e.value,n.isLegacyRef.value=!0}}if(!n.isLegacyRef.value&&(null!=n.placeholderPattern||null!=n.placeholderWhitelist))throw new Error("'.placeholderWhitelist' and '.placeholderPattern' aren't compatible with '.syntacticPlaceholders: true'");if(!n.isLegacyRef.value||!1!==n.placeholderPattern&&(n.placeholderPattern||VA).test(r)||n.placeholderWhitelist&&n.placeholderWhitelist.has(r)){var i,a=(t=t.slice())[t.length-1],o=a.node,s=a.key;C(e)||Le(e,{expectedNode:"StringLiteral"})?i="string":I(o)&&"arguments"===s||h(o)&&"arguments"===s||lt(o)&&"params"===s?i="param":v(o)&&!Le(e)?(i="statement",t=t.slice(0,-1)):i=it(e)&&Le(e)?"statement":"other";var u=n.isLegacyRef.value?n.legacy:n.syntactic,l=u.placeholders,c=u.placeholderNames;l.push({name:r,type:i,resolve:function(e){return function(e,t){for(var n=e,r=0;r<t.length-1;r++){var i=t[r],a=i.key,o=i.index;n=void 0===o?n[a]:n[a][o]}var s=t[t.length-1],u=s.key,l=s.index;return{parent:n,key:u,index:l}}(e,t)},isDuplicate:c.has(r)}),c.add(r)}}function HA(e,t){var n=gp(e.ast);return t&&(e.placeholders.forEach((function(e){if(!Object.prototype.hasOwnProperty.call(t,e.name)){var n=e.name;throw new Error('Error: No substitution given for "'+n+"\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['"+n+"'])}\n            - { placeholderPattern: /^"+n+"$/ }")}})),Object.keys(t).forEach((function(t){if(!e.placeholderNames.has(t))throw new Error('Unknown substitution "'+t+'" given')}))),e.placeholders.slice().reverse().forEach((function(e){try{!function(e,t,n){e.isDuplicate&&(Array.isArray(n)?n=n.map((function(e){return gp(e)})):"object"==typeof n&&(n=gp(n)));var r=e.resolve(t),i=r.parent,a=r.key,o=r.index;if("string"===e.type){if("string"==typeof n&&(n=ls(n)),!n||!C(n))throw new Error("Expected string substitution")}else if("statement"===e.type)void 0===o?n?Array.isArray(n)?n=qo(n):"string"==typeof n?n=es(os(n)):it(n)||(n=es(n)):n=Zo():n&&!Array.isArray(n)&&("string"==typeof n&&(n=os(n)),it(n)||(n=es(n)));else if("param"===e.type){if("string"==typeof n&&(n=os(n)),void 0===o)throw new Error("Assertion failure.")}else if("string"==typeof n&&(n=os(n)),Array.isArray(n))throw new Error("Cannot replace single expression with an array.");if(void 0===o)Va(i,a,n),i[a]=n;else{var s=i[a].slice();"statement"===e.type||"param"===e.type?null==n?s.splice(o,1):Array.isArray(n)?s.splice.apply(s,[o,1].concat(n)):s[o]=n:s[o]=n,Va(i,a,s),i[a]=s}}(e,n,t&&t[e.name]||null)}catch(t){throw t.message='@babel/template placeholder "'+e.name+'": '+t.message,t}})),n}function qA(e,t,n){var r;return t=e.code(t),function(i){var a=UA(i);return r||(r=WA(e,t,n)),e.unwrap(HA(r,a))}}function KA(e,t,n){var r=function(e,t,n){var r,i,a,o="";do{var s=XA(t,o+="$");r=s.names,i=new Set(r),a=WA(e,e.code(s.code),{parser:n.parser,placeholderWhitelist:new Set(s.names.concat(n.placeholderWhitelist?Array.from(n.placeholderWhitelist):[])),placeholderPattern:n.placeholderPattern,preserveComments:n.preserveComments,syntacticPlaceholders:n.syntacticPlaceholders})}while(a.placeholders.some((function(e){return e.isDuplicate&&i.has(e.name)})));return{metadata:a,names:r}}(e,t,n),i=r.metadata,a=r.names;return function(t){var n=t.reduce((function(e,t,n){return e[a[n]]=t,e}),{});return function(t){var r=UA(t);return r&&Object.keys(r).forEach((function(e){if(Object.prototype.hasOwnProperty.call(n,e))throw new Error("Unexpected replacement overlap.")})),e.unwrap(HA(i,r?Object.assign(r,n):n))}}}function XA(e,t){for(var n=[],r=e[0],i=1;i<e.length;i++){var a=""+t+(i-1);n.push(a),r+=a+e[i]}return{names:n,code:r}}var zA=jA({placeholderPattern:!1});function JA(e,t){var n=new WeakMap,r=new WeakMap,i=t||jA(null);return Object.assign((function(t){for(var r=arguments.length,a=new Array(r>1?r-1:0),o=1;o<r;o++)a[o-1]=arguments[o];if("string"==typeof t){if(a.length>1)throw new Error("Unexpected extra params.");return YA(qA(e,t,LA(i,jA(a[0]))))}if(Array.isArray(t)){var s=n.get(t);return s||(s=KA(e,t,i),n.set(t,s)),YA(s(a))}if("object"==typeof t&&t){if(a.length>0)throw new Error("Unexpected extra params.");return JA(e,LA(i,jA(t)))}throw new Error("Unexpected template param "+typeof t)}),{ast:function(t){for(var n=arguments.length,a=new Array(n>1?n-1:0),o=1;o<n;o++)a[o-1]=arguments[o];if("string"==typeof t){if(a.length>1)throw new Error("Unexpected extra params.");return qA(e,t,LA(LA(i,jA(a[0])),zA))()}if(Array.isArray(t)){var s=r.get(t);return s||(s=KA(e,t,LA(i,zA)),r.set(t,s)),s(a)()}throw new Error("Unexpected template param "+typeof t)}})}function YA(e){var t="";try{throw new Error}catch(e){e.stack&&(t=e.stack.split("\n").slice(3).join("\n"))}return function(n){try{return e(n)}catch(e){throw e.stack+="\n    =============\n"+t,e}}}var $A=JA(BA),QA=JA(MA),ZA=JA(NA),eD=JA(RA),tD=JA({code:function(e){return e},validate:function(){},unwrap:function(e){return e.program}}),nD=Object.assign($A.bind(void 0),{smart:$A,statement:QA,statements:ZA,expression:eD,program:tD,ast:$A.ast}),rD=nD("\n  (function (FUNCTION_KEY) {\n    function FUNCTION_ID() {\n      return FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    }\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"),iD=nD("\n  (function (FUNCTION_KEY) {\n    function* FUNCTION_ID() {\n      return yield* FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    };\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"),aD={"ReferencedIdentifier|BindingIdentifier":function(e,t){e.node.name===t.name&&(e.scope.getBindingIdentifier(t.name)===t.outerDeclar&&(t.selfReference=!0,e.stop()))}};function oD(e,t,n,r){if(e.selfReference){if(!r.hasBinding(n.name)||r.hasGlobal(n.name)){if(!lt(t))return;var i=rD;t.generator&&(i=iD);for(var a=i({FUNCTION:t,FUNCTION_ID:n,FUNCTION_KEY:r.generateUidIdentifier(n.name)}).expression,o=a.callee.body.body[0].params,s=0,u=function(e){for(var t=e.params,n=0;n<t.length;n++){var r=t[n];if(X(r)||R(r))return n}return t.length}(t);s<u;s++)o.push(r.generateUidIdentifier("x"));return a}r.rename(n.name)}t.id=n,r.getProgramParent().references[n.name]=!0}function sD(e,t){var n=e.node,r=e.parent,i=e.scope,a=e.id;if(void 0===t&&(t=!1),!n.id){if(!M(r)&&!N(r,{kind:"method"})||r.computed&&!ht(r.key)){if(q(r)){if(S(a=r.id)&&!t){var o=i.parent.getBinding(a.name);if(o&&o.constant&&i.getBinding(a.name)===o)return n.id=gp(a),void(n.id[Ra]=!0)}}else if(u(r))a=r.left;else if(!a)return}else a=r.key;var s;if(a&&ht(a)?s=function(e){return P(e)?"null":F(e)?"_"+e.pattern+"_"+e.flags:he(e)?e.quasis.map((function(e){return e.value.raw})).join(""):void 0!==e.value?e.value+"":""}(a):a&&S(a)&&(s=a.name),void 0!==s)return(a=os(s=jh(s)))[Ra]=!0,oD(function(e,t,n){var r={selfAssignment:!1,selfReference:!1,outerDeclar:n.getBindingIdentifier(t),references:[],name:t},i=n.getOwnBinding(t);return i?"param"===i.kind&&(r.selfReference=!0):(r.outerDeclar||n.hasGlobal(t))&&n.traverse(e,aD,r),r}(n,s,i),n,a,i)||n}}function uD(e,t,n){void 0===t&&(t=!1),void 0===n&&(n=!0);var r=e.findParent((function(e){return e.isFunction()&&!e.isArrowFunctionExpression()||e.isProgram()||e.isClassProperty({static:!1})})),i=r&&"constructor"===r.node.kind;if(r.isClassProperty())throw e.buildCodeFrameError("Unable to transform arrow inside class property");var a,o=function(e){var t=[],n=[],r=[],i=[],a=[];return e.traverse({ClassProperty:function(e){e.skip()},Function:function(e){e.isArrowFunctionExpression()||e.skip()},ThisExpression:function(e){t.push(e)},JSXIdentifier:function(e){"this"===e.node.name&&(e.parentPath.isJSXMemberExpression({object:e.node})||e.parentPath.isJSXOpeningElement({name:e.node}))&&t.push(e)},CallExpression:function(e){e.get("callee").isSuper()&&a.push(e)},MemberExpression:function(e){e.get("object").isSuper()&&i.push(e)},ReferencedIdentifier:function(e){"arguments"===e.node.name&&n.push(e)},MetaProperty:function(e){e.get("meta").isIdentifier({name:"new"})&&e.get("property").isIdentifier({name:"target"})&&r.push(e)}}),{thisPaths:t,argumentsPaths:n,newTargetPaths:r,superProps:i,superCalls:a}}(e),s=o.thisPaths,u=o.argumentsPaths,l=o.newTargetPaths,c=o.superProps,p=o.superCalls;if(i&&p.length>0){if(!n)throw p[0].buildCodeFrameError("Unable to handle nested super() usage in arrow");var h=[];r.traverse({Function:function(e){e.isArrowFunctionExpression()||e.skip()},ClassProperty:function(e){e.skip()},CallExpression:function(e){e.get("callee").isSuper()&&h.push(e)}});var f=function(e){return cD(e,"supercall",(function(){var t=e.scope.generateUidIdentifier("args");return Ls([As(t)],Xo(tu(),[eu(os(t.name))]))}))}(r);h.forEach((function(e){var t=os(f);t.loc=e.node.callee.loc,e.get("callee").replaceWith(t)}))}if(u.length>0){var d=cD(r,"arguments",(function(){return os("arguments")}));u.forEach((function(e){var t=os(d);t.loc=e.node.loc,e.replaceWith(t)}))}if(l.length>0){var m=cD(r,"newtarget",(function(){return $s(os("new"),os("target"))}));l.forEach((function(e){var t=os(m);t.loc=e.node.loc,e.replaceWith(t)}))}if(c.length>0){if(!n)throw c[0].buildCodeFrameError("Unable to handle nested super.prop usage");c.reduce((function(e,t){return e.concat(function(e){if(e.parentPath.isAssignmentExpression()&&"="!==e.parentPath.node.operator){var t=e.parentPath,n=t.node.operator.slice(0,-1),r=t.node.right;if(t.node.operator="=",e.node.computed){var i=e.scope.generateDeclaredUidIdentifier("tmp");t.get("left").replaceWith(ms(e.node.object,Uo("=",i,e.node.property),!0)),t.get("right").replaceWith(Vo(n,ms(e.node.object,os(i.name),!0),r))}else t.get("left").replaceWith(ms(e.node.object,e.node.property)),t.get("right").replaceWith(Vo(n,ms(e.node.object,os(e.node.property.name)),r));return[t.get("left"),t.get("right").get("left")]}if(e.parentPath.isUpdateExpression()){var a=e.parentPath,o=e.scope.generateDeclaredUidIdentifier("tmp"),s=e.node.computed?e.scope.generateDeclaredUidIdentifier("prop"):null,u=[Uo("=",o,ms(e.node.object,s?Uo("=",s,e.node.property):e.node.property,e.node.computed)),Uo("=",ms(e.node.object,s?os(s.name):e.node.property,e.node.computed),Vo("+",os(o.name),cs(1)))];e.parentPath.node.prefix||u.push(os(o.name)),a.replaceWith(Ss(u));var l=a.get("expressions.0.right"),c=a.get("expressions.1.left");return[l,c]}return[e]}(t))}),[]).forEach((function(e){var t=e.node.computed?"":e.get("property").node.name,n=e.parentPath.isAssignmentExpression({left:e.node}),i=e.parentPath.isCallExpression({callee:e.node}),a=function(e,t,n){return cD(e,"superprop_"+(t?"set":"get")+":"+(n||""),(function(){var r,i=[];if(n)r=ms(tu(),os(n));else{var a=e.scope.generateUidIdentifier("prop");i.unshift(a),r=ms(tu(),os(a.name),!0)}if(t){var o=e.scope.generateUidIdentifier("value");i.push(o),r=Uo("=",r,os(o.name))}return Ls(i,r)}))}(r,n,t),o=[];if(e.node.computed&&o.push(e.get("property").node),n){var u=e.parentPath.node.right;o.push(u)}var l=Xo(os(a),o);i?(e.parentPath.unshiftContainer("arguments",ws()),e.replaceWith(ms(l,os("call"))),s.push(e.parentPath.get("arguments.0"))):n?e.parentPath.replaceWith(l):e.replaceWith(l)}))}return(s.length>0||t)&&(a=function(e,t){return cD(e,"this",(function(n){if(!t||!lD(e))return ws();var r=new WeakSet;e.traverse({Function:function(e){e.isArrowFunctionExpression()||e.skip()},ClassProperty:function(e){e.skip()},CallExpression:function(e){e.get("callee").isSuper()&&(r.has(e.node)||(r.add(e.node),e.replaceWithMultiple([e.node,Uo("=",os(n),os("this"))])))}})}))}(r,i),(!t||i&&lD(r))&&(s.forEach((function(e){var t=e.isJSX()?El(a):os(a);t.loc=e.node.loc,e.replaceWith(t)})),t&&(a=null))),a}function lD(e){return e.isClassMethod()&&!!e.parentPath.parentPath.node.superClass}function cD(e,t,n){var r="binding:"+t,i=e.getData(r);if(!i){var a=e.scope.generateUidIdentifier(t);i=a.name,e.setData(r,i),e.scope.push({id:a,init:n(i)})}return i}var pD=Object.freeze({__proto__:null,toComputedKey:function(){var e,t=this.node;if(this.isMemberExpression())e=t.property;else{if(!this.isProperty()&&!this.isMethod())throw new ReferenceError("todo");e=t.key}return t.computed||S(e)&&(e=ls(e.name)),e},ensureBlock:function(){var e=this.get("body"),t=e.node;if(Array.isArray(e))throw new Error("Can't convert array path to a block statement");if(!t)throw new Error("Can't convert node without a body");if(e.isBlockStatement())return t;var n,r,i=[],a="body";e.isStatement()?(r="body",n=0,i.push(e.node)):(a+=".body.0",this.isFunction()?(n="argument",i.push(Ds(e.node))):(n="expression",i.push(es(e.node)))),this.node.body=qo(i);var o=this.get(a);return e.setup(o,r?o.node[r]:o.node,r,n),this.node},arrowFunctionToShadowed:function(){this.isArrowFunctionExpression()&&this.arrowFunctionToExpression()},unwrapFunctionEnvironment:function(){if(!this.isArrowFunctionExpression()&&!this.isFunctionExpression()&&!this.isFunctionDeclaration())throw this.buildCodeFrameError("Can only unwrap the environment of a function.");uD(this)},arrowFunctionToExpression:function(e){var t=void 0===e?{}:e,n=t.allowInsertArrow,r=void 0===n||n,i=t.specCompliant,a=void 0!==i&&i;if(!this.isArrowFunctionExpression())throw this.buildCodeFrameError("Cannot convert non-arrow function to a function expression.");var o=uD(this,a,r);if(this.ensureBlock(),this.node.type="FunctionExpression",a){var s=o?null:this.parentPath.scope.generateUidIdentifier("arrowCheckId");s&&this.parentPath.scope.push({id:s,init:gs([])}),this.get("body").unshiftContainer("body",es(Xo(this.hub.addHelper("newArrowCheck"),[ws(),os(s?s.name:o)]))),this.replaceWith(Xo(ms(sD(this,!0)||this.node,os("bind")),[s?os(s.name):ws()]))}}});function hD(e){var t=this.node&&this.node[e];return t&&Array.isArray(t)?!!t.length:!!t}var fD=hD;function dD(e){return(e.scope.getFunctionParent()||e.scope.getProgramParent()).path}function mD(e,t){switch(e){case"LogicalExpression":return"right"===t;case"ConditionalExpression":case"IfStatement":return"consequent"===t||"alternate"===t;case"WhileStatement":case"DoWhileStatement":case"ForInStatement":case"ForOfStatement":return"body"===t;case"ForStatement":return"body"===t||"update"===t;case"SwitchStatement":return"cases"===t;case"TryStatement":return"handler"===t;case"AssignmentPattern":return"right"===t;case"OptionalMemberExpression":return"property"===t;case"OptionalCallExpression":return"arguments"===t;default:return!1}}function yD(e,t){for(var n=0;n<t;n++){var r=e[n];if(mD(r.parent.type,r.parentKey))return!0}return!1}var vD=new WeakSet;var gD=Object.freeze({__proto__:null,matchesPattern:function(e,t){return Dt(this.node,e,t)},has:hD,isStatic:function(){return this.scope.isStatic(this.node)},is:fD,isnt:function(e){return!this.has(e)},equals:function(e,t){return this.node[e]===t},isNodeType:function(e){return La(this.type,e)},canHaveVariableDeclarationOrExpression:function(){return("init"===this.key||"left"===this.key)&&this.parentPath.isFor()},canSwapBetweenExpressionAndStatement:function(e){return!("body"!==this.key||!this.parentPath.isArrowFunctionExpression())&&(this.isExpression()?c(e):!!this.isBlockStatement()&&tt(e))},isCompletionRecord:function(e){var t=this,n=!0;do{var r=t.container;if(t.isFunction()&&!n)return!!e;if(n=!1,Array.isArray(r)&&t.key!==r.length-1)return!1}while((t=t.parentPath)&&!t.isProgram());return!0},isStatementOrBlock:function(){return!this.parentPath.isLabeledStatement()&&!c(this.container)&&Md(Ea,this.key)},referencesImport:function(e,t){if(!this.isReferencedIdentifier())return!1;var n=this.scope.getBinding(this.node.name);if(!n||"module"!==n.kind)return!1;var r=n.path,i=r.parentPath;return!!i.isImportDeclaration()&&(i.node.source.value===e&&(!t||(!(!r.isImportDefaultSpecifier()||"default"!==t)||(!(!r.isImportNamespaceSpecifier()||"*"!==t)||!(!r.isImportSpecifier()||r.node.imported.name!==t)))))},getSource:function(){var e=this.node;if(e.end){var t=this.hub.getCode();if(t)return t.slice(e.start,e.end)}return""},willIMaybeExecuteBefore:function(e){return"after"!==this._guessExecutionStatusRelativeTo(e)},_guessExecutionStatusRelativeTo:function(e){var t={this:dD(this),target:dD(e)};if(t.target.node!==t.this.node)return this._guessExecutionStatusRelativeToDifferentFunctions(t.target);var n,r={target:e.getAncestry(),this:this.getAncestry()};if(r.target.indexOf(this)>=0)return"after";if(r.this.indexOf(e)>=0)return"before";for(var i={target:0,this:0};!n&&i.this<r.this.length;){var a=r.this[i.this];i.target=r.target.indexOf(a),i.target>=0?n=a:i.this++}if(!n)throw new Error("Internal Babel error - The two compared nodes don't appear to belong to the same program.");if(yD(r.this,i.this-1)||yD(r.target,i.target-1))return"unknown";var o={this:r.this[i.this-1],target:r.target[i.target-1]};if(o.target.listKey&&o.this.listKey&&o.target.container===o.this.container)return o.target.key>o.this.key?"before":"after";var s=Ga[n.type],u=s.indexOf(o.this.parentKey);return s.indexOf(o.target.parentKey)>u?"before":"after"},_guessExecutionStatusRelativeToDifferentFunctions:function(e){if(!e.isFunctionDeclaration()||e.parentPath.isExportDeclaration())return"unknown";var t=e.scope.getBinding(e.node.id.name);if(!t.references)return"before";var n,r=t.referencePaths,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}var s=o;if(!!!s.find((function(t){return t.node===e.node}))){if("callee"!==s.key||!s.parentPath.isCallExpression())return"unknown";if(!vD.has(s.node)){vD.add(s.node);var u=this._guessExecutionStatusRelativeTo(s);if(vD.delete(s.node),n&&n!==u)return"unknown";n=u}}}return n},resolve:function(e,t){return this._resolve(e,t)||this},_resolve:function(e,t){if(!(t&&t.indexOf(this)>=0))if((t=t||[]).push(this),this.isVariableDeclarator()){if(this.get("id").isIdentifier())return this.get("init").resolve(e,t)}else if(this.isReferencedIdentifier()){var n=this.scope.getBinding(this.node.name);if(!n)return;if(!n.constant)return;if("module"===n.kind)return;if(n.path!==this){var r=n.path.resolve(e,t);if(this.find((function(e){return e.node===r.node})))return;return r}}else{if(this.isTypeCastExpression())return this.get("expression").resolve(e,t);if(e&&this.isMemberExpression()){var i=this.toComputedKey();if(!ht(i))return;var a=i.value,o=this.get("object").resolve(e,t);if(o.isObjectExpression())for(var s=0,u=o.get("properties");s<u.length;s++){var l=u[s];if(l.isProperty()){var c=l.get("key"),p=l.isnt("computed")&&c.isIdentifier({name:a});if(p=p||c.isLiteral({value:a}))return l.get("value").resolve(e,t)}}else if(o.isArrayExpression()&&!isNaN(+a)){var h=o.get("elements")[a];if(h)return h.resolve(e,t)}}}},isConstantExpression:function(){if(this.isIdentifier()){var e=this.scope.getBinding(this.node.name);return!!e&&e.constant}return this.isLiteral()?!this.isRegExpLiteral()&&(!this.isTemplateLiteral()||this.get("expressions").every((function(e){return e.isConstantExpression()}))):this.isUnaryExpression()?"void"===this.get("operator").node&&this.get("argument").isConstantExpression():!!this.isBinaryExpression()&&(this.get("left").isConstantExpression()&&this.get("right").isConstantExpression())},isInStrictMode:function(){return!!(this.isProgram()?this:this.parentPath).find((function(e){if(e.isProgram({sourceType:"module"}))return!0;if(e.isClass())return!0;if(!e.isProgram()&&!e.isFunction())return!1;if(e.isArrowFunctionExpression()&&!e.get("body").isBlockStatement())return!1;var t=e.node;e.isFunction()&&(t=t.body);var n=t.directives,r=Array.isArray(n),i=0;for(n=r?n:n[Symbol.iterator]();;){var a;if(r){if(i>=n.length)break;a=n[i++]}else{if((i=n.next()).done)break;a=i.value}if("use strict"===a.value.value)return!0}}))}});var bD=Object.freeze({__proto__:null,call:function(e){var t=this.opts;return this.debug(e),!(!this.node||!this._call(t[e]))||!!this.node&&this._call(t[this.node.type]&&t[this.node.type][e])},_call:function(e){if(!e)return!1;var t=e,n=Array.isArray(t),r=0;for(t=n?t:t[Symbol.iterator]();;){var i;if(n){if(r>=t.length)break;i=t[r++]}else{if((r=t.next()).done)break;i=r.value}var a=i;if(a){var o=this.node;if(!o)return!0;var s=a.call(this.state,this,this.state);if(s&&"object"==typeof s&&"function"==typeof s.then)throw new Error("You appear to be using a plugin with an async traversal visitor, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.");if(s)throw new Error("Unexpected return value from visitor method "+a);if(this.node!==o)return!0;if(this._traverseFlags>0)return!0}}return!1},isBlacklisted:function(){var e=this.opts.blacklist;return e&&e.indexOf(this.node.type)>-1},visit:function(){return!!this.node&&(!this.isBlacklisted()&&((!this.opts.shouldSkip||!this.opts.shouldSkip(this))&&(this.shouldSkip||this.call("enter")||this.shouldSkip?(this.debug("Skip..."),this.shouldStop):(this.debug("Recursing into..."),JD.node(this.node,this.opts,this.scope,this.state,this,this.skipKeys),this.call("exit"),this.shouldStop))))},skip:function(){this.shouldSkip=!0},skipKey:function(e){null==this.skipKeys&&(this.skipKeys={}),this.skipKeys[e]=!0},stop:function(){this._traverseFlags|=_D|kD},setScope:function(){if(!this.opts||!this.opts.noScope){for(var e,t=this.parentPath;t&&!e;){if(t.opts&&t.opts.noScope)return;e=t.scope,t=t.parentPath}this.scope=this.getScope(e),this.scope&&this.scope.init()}},setContext:function(e){return null!=this.skipKeys&&(this.skipKeys={}),this._traverseFlags=0,e&&(this.context=e,this.state=e.state,this.opts=e.opts),this.setScope(),this},resync:function(){this.removed||(this._resyncParent(),this._resyncList(),this._resyncKey())},_resyncParent:function(){this.parentPath&&(this.parent=this.parentPath.node)},_resyncKey:function(){if(this.container&&this.node!==this.container[this.key]){if(Array.isArray(this.container)){for(var e=0;e<this.container.length;e++)if(this.container[e]===this.node)return this.setKey(e)}else for(var t=0,n=Object.keys(this.container);t<n.length;t++){var r=n[t];if(this.container[r]===this.node)return this.setKey(r)}this.key=null}},_resyncList:function(){if(this.parent&&this.inList){var e=this.parent[this.listKey];this.container!==e&&(this.container=e||null)}},_resyncRemoved:function(){null!=this.key&&this.container&&this.container[this.key]===this.node||this._markRemoved()},popContext:function(){this.contexts.pop(),this.contexts.length>0?this.setContext(this.contexts[this.contexts.length-1]):this.setContext(void 0)},pushContext:function(e){this.contexts.push(e),this.setContext(e)},setup:function(e,t,n,r){this.listKey=n,this.container=t,this.parentPath=e||this.parentPath,this.setKey(r)},setKey:function(e){this.key=e,this.node=this.container[this.key],this.type=this.node&&this.node.type},requeue:function(e){if(void 0===e&&(e=this),!e.removed){var t=this.contexts,n=Array.isArray(t),r=0;for(t=n?t:t[Symbol.iterator]();;){var i;if(n){if(r>=t.length)break;i=t[r++]}else{if((r=t.next()).done)break;i=r.value}i.maybeQueue(e)}}},_getQueueContexts:function(){for(var e=this,t=this.contexts;!t.length&&(e=e.parentPath);)t=e.contexts;return t}}),ED=[function(e,t){if("test"===e.key&&(t.isWhile()||t.isSwitchCase())||"declaration"===e.key&&t.isExportDeclaration()||"body"===e.key&&t.isLabeledStatement()||"declarations"===e.listKey&&t.isVariableDeclaration()&&1===t.node.declarations.length||"expression"===e.key&&t.isExpressionStatement())return t.remove(),!0},function(e,t){if(t.isSequenceExpression()&&1===t.node.expressions.length)return t.replaceWith(t.node.expressions[0]),!0},function(e,t){if(t.isBinary())return"left"===e.key?t.replaceWith(t.node.right):t.replaceWith(t.node.left),!0},function(e,t){if(t.isIfStatement()&&("consequent"===e.key||"alternate"===e.key)||"body"===e.key&&(t.isLoop()||t.isArrowFunctionExpression()))return e.replaceWith({type:"BlockStatement",body:[]}),!0}];var AD=Object.freeze({__proto__:null,remove:function(){this._assertUnremoved(),this.resync(),this._removeFromScope(),this._callRemovalHooks()?this._markRemoved():(this.shareCommentsWithSiblings(),this._remove(),this._markRemoved())},_removeFromScope:function(){var e=this,t=this.getBindingIdentifiers();Object.keys(t).forEach((function(t){return e.scope.removeBinding(t)}))},_callRemovalHooks:function(){for(var e=0,t=ED;e<t.length;e++){if((0,t[e])(this,this.parentPath))return!0}},_remove:function(){Array.isArray(this.container)?(this.container.splice(this.key,1),this.updateSiblingKeys(this.key,-1)):this._replaceWith(null)},_markRemoved:function(){this._traverseFlags|=_D|FD,this.node=null},_assertUnremoved:function(){if(this.removed)throw this.buildCodeFrameError("NodePath has been removed so is read-only.")}}),DD={ReferencedIdentifier:function(e,t){if(!e.isJSXIdentifier()||!Df.isCompatTag(e.node.name)||e.parentPath.isJSXMemberExpression()){if("this"===e.node.name){var n=e.scope;do{if(n.path.isFunction()&&!n.path.isArrowFunctionExpression())break}while(n=n.parent);n&&t.breakOnScopePaths.push(n.path)}var r=e.scope.getBinding(e.node.name);if(r){var i=r.constantViolations,a=Array.isArray(i),o=0;for(i=a?i:i[Symbol.iterator]();;){var s;if(a){if(o>=i.length)break;s=i[o++]}else{if((o=i.next()).done)break;s=o.value}if(s.scope!==r.path.scope)return t.mutableBinding=!0,void e.stop()}r===t.scope.getBinding(e.node.name)&&(t.bindings[e.node.name]=r)}}}},SD=function(){function e(e,t){this.breakOnScopePaths=[],this.bindings={},this.mutableBinding=!1,this.scopes=[],this.scope=t,this.path=e,this.attachAfter=!1}var t=e.prototype;return t.isCompatibleScope=function(e){for(var t=0,n=Object.keys(this.bindings);t<n.length;t++){var r=n[t],i=this.bindings[r];if(!e.bindingIdentifierEquals(r,i.identifier))return!1}return!0},t.getCompatibleScopes=function(){var e=this.path.scope;do{if(!this.isCompatibleScope(e))break;if(this.scopes.push(e),this.breakOnScopePaths.indexOf(e.path)>=0)break}while(e=e.parent)},t.getAttachmentPath=function(){var e=this._getAttachmentPath();if(e){var t=e.scope;if(t.path===e&&(t=e.scope.parent),t.path.isProgram()||t.path.isFunction())for(var n=0,r=Object.keys(this.bindings);n<r.length;n++){var i=r[n];if(t.hasOwnBinding(i)){var a=this.bindings[i];if("param"!==a.kind&&"params"!==a.path.parentKey)if(this.getAttachmentParentForPath(a.path).key>=e.key){this.attachAfter=!0,e=a.path;for(var o=0,s=a.constantViolations;o<s.length;o++){var u=s[o];this.getAttachmentParentForPath(u).key>e.key&&(e=u)}}}}return e}},t._getAttachmentPath=function(){var e=this.scopes.pop();if(e)if(e.path.isFunction()){if(!this.hasOwnParamBindings(e))return this.getNextScopeAttachmentParent();if(this.scope===e)return;for(var t=e.path.get("body").get("body"),n=0;n<t.length;n++)if(!t[n].node._blockHoist)return t[n]}else if(e.path.isProgram())return this.getNextScopeAttachmentParent()},t.getNextScopeAttachmentParent=function(){var e=this.scopes.pop();if(e)return this.getAttachmentParentForPath(e.path)},t.getAttachmentParentForPath=function(e){do{if(!e.parentPath||Array.isArray(e.container)&&e.isStatement())return e}while(e=e.parentPath)},t.hasOwnParamBindings=function(e){for(var t=0,n=Object.keys(this.bindings);t<n.length;t++){var r=n[t];if(e.hasOwnBinding(r)){var i=this.bindings[r];if("param"===i.kind&&i.constant)return!0}}return!1},t.run=function(){if(this.path.traverse(DD,this),!this.mutableBinding){this.getCompatibleScopes();var e=this.getAttachmentPath();if(e&&e.getFunctionParent()!==this.path.getFunctionParent()){var t=e.scope.generateUidIdentifier("ref"),n=Os(t,this.path.node),r=e[this.attachAfter?"insertAfter":"insertBefore"]([e.isVariableDeclarator()?n:Is("var",[n])])[0],i=this.path.parentPath;return i.isJSXElement()&&this.path.container===i.node.children&&(t=gl(t)),this.path.replaceWith(gp(t)),e.isVariableDeclarator()?r.get("init"):r.get("declarations.0.init")}}},e}();var xD=Object.freeze({__proto__:null,insertBefore:function(e){this._assertUnremoved(),e=this._verifyNodeList(e);var t=this.parentPath;if(t.isExpressionStatement()||t.isLabeledStatement()||t.isExportNamedDeclaration()||t.isExportDefaultDeclaration()&&this.isDeclaration())return t.insertBefore(e);if(this.isNodeType("Expression")&&!this.isJSXElement()||t.isForStatement()&&"init"===this.key)return this.node&&e.push(this.node),this.replaceExpressionWithStatements(e);if(Array.isArray(this.container))return this._containerInsertBefore(e);if(this.isStatementOrBlock()){var n=this.node&&(!this.isExpressionStatement()||null!=this.node.expression);return this.replaceWith(qo(n?[this.node]:[])),this.unshiftContainer("body",e)}throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?")},_containerInsert:function(e,t){var n;this.updateSiblingKeys(e,t.length);var r=[];(n=this.container).splice.apply(n,[e,0].concat(t));for(var i=0;i<t.length;i++){var a=e+i,o=this.getSibling(a);r.push(o),this.context&&this.context.queue&&o.pushContext(this.context)}for(var s=this._getQueueContexts(),u=0,l=r;u<l.length;u++){var c=l[u];c.setScope(),c.debug("Inserted.");var p=s,h=Array.isArray(p),f=0;for(p=h?p:p[Symbol.iterator]();;){var d;if(h){if(f>=p.length)break;d=p[f++]}else{if((f=p.next()).done)break;d=f.value}d.maybeQueue(c,!0)}}return r},_containerInsertBefore:function(e){return this._containerInsert(this.key,e)},_containerInsertAfter:function(e){return this._containerInsert(this.key+1,e)},insertAfter:function(e){this._assertUnremoved(),e=this._verifyNodeList(e);var t=this.parentPath;if(t.isExpressionStatement()||t.isLabeledStatement()||t.isExportNamedDeclaration()||t.isExportDefaultDeclaration()&&this.isDeclaration())return t.insertAfter(e.map((function(e){return tt(e)?es(e):e})));if(this.isNodeType("Expression")&&!this.isJSXElement()&&!t.isJSXElement()||t.isForStatement()&&"init"===this.key){if(this.node){var n=this.scope;t.isMethod({computed:!0,key:this.node})&&(n=n.parent);var r=n.generateDeclaredUidIdentifier();e.unshift(es(Uo("=",gp(r),this.node))),e.push(es(gp(r)))}return this.replaceExpressionWithStatements(e)}if(Array.isArray(this.container))return this._containerInsertAfter(e);if(this.isStatementOrBlock()){var i=this.node&&(!this.isExpressionStatement()||null!=this.node.expression);return this.replaceWith(qo(i?[this.node]:[])),this.pushContainer("body",e)}throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?")},updateSiblingKeys:function(e,t){if(this.parent)for(var n=qm.get(this.parent),r=0;r<n.length;r++){var i=n[r];i.key>=e&&(i.key+=t)}},_verifyNodeList:function(e){if(!e)return[];e.constructor!==Array&&(e=[e]);for(var t=0;t<e.length;t++){var n=e[t],r=void 0;if(n?"object"!=typeof n?r="contains a non-object node":n.type?n instanceof ID&&(r="has a NodePath when it expected a raw object"):r="without a type":r="has falsy node",r){var i=Array.isArray(n)?"array":typeof n;throw new Error("Node list "+r+" with the index of "+t+" and type of "+i)}}return e},unshiftContainer:function(e,t){return this._assertUnremoved(),t=this._verifyNodeList(t),ID.get({parentPath:this,parent:this.node,container:this.node[e],listKey:e,key:0})._containerInsertBefore(t)},pushContainer:function(e,t){this._assertUnremoved(),t=this._verifyNodeList(t);var n=this.node[e];return ID.get({parentPath:this,parent:this.node,container:n,listKey:e,key:n.length}).replaceWithMultiple(t)},hoist:function(e){return void 0===e&&(e=this.scope),new SD(this,e).run()}});function TD(e,t){return e?t.concat(e.getCompletionRecords()):t}var CD=Object.freeze({__proto__:null,getOpposite:function(){return"left"===this.key?this.getSibling("right"):"right"===this.key?this.getSibling("left"):void 0},getCompletionRecords:function(){var e=[];if(this.isIfStatement())e=TD(this.get("consequent"),e),e=TD(this.get("alternate"),e);else if(this.isDoExpression()||this.isFor()||this.isWhile())e=TD(this.get("body"),e);else if(this.isProgram()||this.isBlockStatement())e=TD(this.get("body").pop(),e);else{if(this.isFunction())return this.get("body").getCompletionRecords();this.isTryStatement()?(e=TD(this.get("block"),e),e=TD(this.get("handler"),e)):this.isCatchClause()?e=TD(this.get("body"),e):this.isSwitchStatement()?e=function(e,t){for(var n=!0,r=e.length-1;r>=0;r--){var i=e[r].get("consequent"),a=void 0;var o=i,s=Array.isArray(o),u=0;e:for(o=s?o:o[Symbol.iterator]();;){var l;if(s){if(u>=o.length)break;l=o[u++]}else{if((u=o.next()).done)break;l=u.value}var c=l;if(c.isBlockStatement()){var p=c.get("body"),h=Array.isArray(p),f=0;for(p=h?p:p[Symbol.iterator]();;){var d;if(h){if(f>=p.length)break;d=p[f++]}else{if((f=p.next()).done)break;d=f.value}var m=d;if(m.isBreakStatement()){a=m;break e}}}else if(c.isBreakStatement()){a=c;break}}if(a){for(;0===a.key&&a.parentPath.isBlockStatement();)a=a.parentPath;var y=a.getPrevSibling();a.key>0&&(y.isExpressionStatement()||y.isBlockStatement())?(t=TD(y,t),a.remove()):(a.replaceWith(a.scope.buildUndefinedNode()),t=TD(a,t))}else n&&i.some((function e(t){return!t.isBlockStatement()||t.get("body").some(e)}))&&(t=TD(i[i.length-1],t),n=!1)}return t}(this.get("cases"),e):e.push(this)}return e},getSibling:function(e){return ID.get({parentPath:this.parentPath,parent:this.parent,container:this.container,listKey:this.listKey,key:e})},getPrevSibling:function(){return this.getSibling(this.key-1)},getNextSibling:function(){return this.getSibling(this.key+1)},getAllNextSiblings:function(){for(var e=this.key,t=this.getSibling(++e),n=[];t.node;)n.push(t),t=this.getSibling(++e);return n},getAllPrevSiblings:function(){for(var e=this.key,t=this.getSibling(--e),n=[];t.node;)n.push(t),t=this.getSibling(--e);return n},get:function(e,t){!0===t&&(t=this.context);var n=e.split(".");return 1===n.length?this._getKey(e,t):this._getPattern(n,t)},_getKey:function(e,t){var n=this,r=this.node,i=r[e];return Array.isArray(i)?i.map((function(a,o){return ID.get({listKey:e,parentPath:n,parent:r,container:i,key:o}).setContext(t)})):ID.get({parentPath:this,parent:r,container:r,key:e}).setContext(t)},_getPattern:function(e,t){var n=this,r=e,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}var s=o;n="."===s?n.parentPath:Array.isArray(n)?n[s]:n.get(s,t)}return n},getBindingIdentifiers:function(e){return zh(this.node,e)},getOuterBindingIdentifiers:function(e){return hf(this.node,e)},getBindingIdentifierPaths:function(e,t){void 0===e&&(e=!1),void 0===t&&(t=!1);for(var n=[].concat(this),r=Object.create(null);n.length;){var i=n.shift();if(i&&i.node){var a=zh.keys[i.node.type];if(i.isIdentifier())e?(r[i.node.name]=r[i.node.name]||[]).push(i):r[i.node.name]=i;else if(i.isExportDeclaration()){var o=i.get("declaration");o.isDeclaration()&&n.push(o)}else{if(t){if(i.isFunctionDeclaration()){n.push(i.get("id"));continue}if(i.isFunctionExpression())continue}if(a)for(var s=0;s<a.length;s++){var u=a[s],l=i.get(u);(Array.isArray(l)||l.node)&&(n=n.concat(l))}}}}return r},getOuterBindingIdentifierPaths:function(e){return this.getBindingIdentifierPaths(e,!0)}});var wD=Object.freeze({__proto__:null,shareCommentsWithSiblings:function(){if("string"!=typeof this.key){var e=this.node;if(e){var t=e.trailingComments,n=e.leadingComments;if(t||n){var r=this.getSibling(this.key-1),i=this.getSibling(this.key+1),a=Boolean(r.node),o=Boolean(i.node);a&&o||(a?r.addComments("trailing",t):o&&i.addComments("leading",n))}}}},addComment:function(e,t,n){Ap(this.node,e,t,n)},addComments:function(e,t){Ep(this.node,e,t)}}),PD=yd("babel"),FD=1,kD=2,_D=4,ID=function(){function e(e,t){this.parent=t,this.hub=e,this.contexts=[],this.data=null,this._traverseFlags=0,this.state=null,this.opts=null,this.skipKeys=null,this.parentPath=null,this.context=null,this.container=null,this.listKey=null,this.key=null,this.node=null,this.scope=null,this.type=null}e.get=function(t){var n=t.hub,r=t.parentPath,i=t.parent,a=t.container,o=t.listKey,s=t.key;if(!n&&r&&(n=r.hub),!i)throw new Error("To get a node path the parent needs to exist");var u,l=a[s],c=qm.get(i)||[];qm.has(i)||qm.set(i,c);for(var p=0;p<c.length;p++){var h=c[p];if(h.node===l){u=h;break}}return u||(u=new e(n,i),c.push(u)),u.setup(r,a,o,s),u};var t=e.prototype;return t.getScope=function(e){return this.isScope()?new Qm(this):e},t.setData=function(e,t){return null==this.data&&(this.data=Object.create(null)),this.data[e]=t},t.getData=function(e,t){null==this.data&&(this.data=Object.create(null));var n=this.data[e];return void 0===n&&void 0!==t&&(n=this.data[e]=t),n},t.buildCodeFrameError=function(e,t){return void 0===t&&(t=SyntaxError),this.hub.buildError(this.node,e,t)},t.traverse=function(e,t){JD(this.node,e,this.scope,t,this)},t.set=function(e,t){Va(this.node,e,t),this.node[e]=t},t.getPathLocation=function(){var e=[],t=this;do{var n=t.key;t.inList&&(n=t.listKey+"["+n+"]"),e.unshift(n)}while(t=t.parentPath);return e.join(".")},t.debug=function(e){PD.enabled&&PD(this.getPathLocation()+" "+this.type+": "+e)},t.toString=function(){return rb(this.node).code},r(e,[{key:"inList",get:function(){return!!this.listKey},set:function(e){e||(this.listKey=null)}},{key:"parentKey",get:function(){return this.listKey||this.key}},{key:"shouldSkip",get:function(){return!!(this._traverseFlags&_D)},set:function(e){e?this._traverseFlags|=_D:this._traverseFlags&=~_D}},{key:"shouldStop",get:function(){return!!(this._traverseFlags&kD)},set:function(e){e?this._traverseFlags|=kD:this._traverseFlags&=~kD}},{key:"removed",get:function(){return!!(this._traverseFlags&FD)},set:function(e){e?this._traverseFlags|=FD:this._traverseFlags&=~FD}}]),e}();Object.assign(ID.prototype,ib,gb,CA,IA,pD,gD,bD,AD,xD,CD,wD);for(var OD=function(){var e=ND[BD],t="is"+e,n=Sf[t];ID.prototype[t]=function(e){return n(this.node,e)},ID.prototype["assert"+e]=function(t){if(!n(this.node,t))throw new TypeError("Expected node path of type "+e)}},BD=0,ND=Ro;BD<ND.length;BD++)OD();for(var MD=function(){var e=LD[RD];if("_"===e[0])return"continue";Ro.indexOf(e)<0&&Ro.push(e);var t=Bf[e];ID.prototype["is"+e]=function(e){return t.checkPath(this,e)}},RD=0,LD=Object.keys(Bf);RD<LD.length;RD++)MD();var jD=function(){function e(e,t,n,r){this.queue=null,this.parentPath=r,this.scope=e,this.state=n,this.opts=t}var t=e.prototype;return t.shouldVisit=function(e){var t=this.opts;if(t.enter||t.exit)return!0;if(t[e.type])return!0;var n=Ga[e.type];if(!n||!n.length)return!1;var r=n,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}if(e[o])return!0}return!1},t.create=function(e,t,n,r){return ID.get({parentPath:this.parentPath,parent:e,container:t,key:n,listKey:r})},t.maybeQueue=function(e,t){if(this.trap)throw new Error("Infinite cycle detected");this.queue&&(t?this.queue.push(e):this.priorityQueue.push(e))},t.visitMultiple=function(e,t,n){if(0===e.length)return!1;for(var r=[],i=0;i<e.length;i++){var a=e[i];a&&this.shouldVisit(a)&&r.push(this.create(t,e,i,n))}return this.visitQueue(r)},t.visitSingle=function(e,t){return!!this.shouldVisit(e[t])&&this.visitQueue([this.create(e,e,t)])},t.visitQueue=function(e){this.queue=e,this.priorityQueue=[];var t=[],n=!1,r=e,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}var s=o;if(s.resync(),0!==s.contexts.length&&s.contexts[s.contexts.length-1]===this||s.pushContext(this),null!==s.key&&!(t.indexOf(s.node)>=0)){if(t.push(s.node),s.visit()){n=!0;break}if(this.priorityQueue.length&&(n=this.visitQueue(this.priorityQueue),this.priorityQueue=[],this.queue=e,n))break}}var u=e,l=Array.isArray(u),c=0;for(u=l?u:u[Symbol.iterator]();;){var p;if(l){if(c>=u.length)break;p=u[c++]}else{if((c=u.next()).done)break;p=c.value}p.popContext()}return this.queue=null,n},t.visit=function(e,t){var n=e[t];return!!n&&(Array.isArray(n)?this.visitMultiple(n,e,t):this.visitSingle(e,t))},e}();function UD(e){if(e._exploded)return e;e._exploded=!0;for(var t=0,n=Object.keys(e);t<n.length;t++){var r=n[t];if(!KD(r)){var i=r.split("|");if(1!==i.length){var a=e[r];delete e[r];var o=i,s=Array.isArray(o),u=0;for(o=s?o:o[Symbol.iterator]();;){var l;if(s){if(u>=o.length)break;l=o[u++]}else{if((u=o.next()).done)break;l=u.value}e[l]=a}}}}VD(e),delete e.__esModule,function(e){for(var t=0,n=Object.keys(e);t<n.length;t++){var r=n[t];if(!KD(r)){var i=e[r];"function"==typeof i&&(e[r]={enter:i})}}}(e),HD(e);for(var c=0,p=Object.keys(e);c<p.length;c++){var h=p[c];if(!KD(h)){var f=Bf[h];if(f){for(var d=e[h],m=0,y=Object.keys(d);m<y.length;m++){var v=y[m];d[v]=qD(f,d[v])}if(delete e[h],f.types)for(var g=0,b=f.types;g<b.length;g++){var E=b[g];e[E]?XD(e[E],d):e[E]=d}else XD(e,d)}}}for(var A=0,D=Object.keys(e);A<D.length;A++){var S=D[A];if(!KD(S)){var x=e[S],T=qa[S],C=za[S];if(C&&(console.trace("Visitor defined for "+S+" but it has been renamed to "+C),T=[C]),T){delete e[S];var w=T,P=Array.isArray(w),F=0;for(w=P?w:w[Symbol.iterator]();;){var k;if(P){if(F>=w.length)break;k=w[F++]}else{if((F=w.next()).done)break;k=F.value}var _=k,I=e[_];I?XD(I,x):e[_]=pa(x)}}}}for(var O=0,B=Object.keys(e);O<B.length;O++){var N=B[O];KD(N)||HD(e[N])}return e}function VD(e){if(!e._verified){if("function"==typeof e)throw new Error("You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?");for(var t=0,n=Object.keys(e);t<n.length;t++){var r=n[t];if("enter"!==r&&"exit"!==r||WD(r,e[r]),!KD(r)){if(Ro.indexOf(r)<0)throw new Error("You gave us a visitor for the node type "+r+" but it's not a valid type");var i=e[r];if("object"==typeof i)for(var a=0,o=Object.keys(i);a<o.length;a++){var s=o[a];if("enter"!==s&&"exit"!==s)throw new Error("You passed `traverse()` a visitor object with the property "+r+" that has the invalid property "+s);WD(r+"."+s,i[s])}}}e._verified=!0}}function WD(e,t){var n=[].concat(t),r=Array.isArray(n),i=0;for(n=r?n:n[Symbol.iterator]();;){var a;if(r){if(i>=n.length)break;a=n[i++]}else{if((i=n.next()).done)break;a=i.value}if("function"!=typeof a)throw new TypeError("Non-function found defined in "+e+" with type "+typeof a)}}function GD(e,t,n){for(var r={},i=function(){var i=o[a],s=e[i];if(!Array.isArray(s))return"continue";s=s.map((function(e){var r=e;return t&&(r=function(n){return e.call(t,n,t)}),n&&(r=n(t.key,i,r)),r})),r[i]=s},a=0,o=Object.keys(e);a<o.length;a++)i();return r}function HD(e){e.enter&&!Array.isArray(e.enter)&&(e.enter=[e.enter]),e.exit&&!Array.isArray(e.exit)&&(e.exit=[e.exit])}function qD(e,t){var n=function(n){if(e.checkPath(n))return t.apply(this,arguments)};return n.toString=function(){return t.toString()},n}function KD(e){return"_"===e[0]||("enter"===e||"exit"===e||"shouldSkip"===e||("blacklist"===e||"noScope"===e||"skipKeys"===e))}function XD(e,t){for(var n=0,r=Object.keys(t);n<r.length;n++){var i=r[n];e[i]=[].concat(e[i]||[],t[i])}}var zD=Object.freeze({__proto__:null,explode:UD,verify:VD,merge:function(e,t,n){void 0===t&&(t=[]);for(var r={},i=0;i<e.length;i++){var a=e[i],o=t[i];UD(a);for(var s=0,u=Object.keys(a);s<u.length;s++){var l=u[s],c=a[l];(o||n)&&(c=GD(c,o,n)),XD(r[l]=r[l]||{},c)}}return r}});function JD(e,t,n,r,i){if(e){if(t||(t={}),!t.noScope&&!n&&"Program"!==e.type&&"File"!==e.type)throw new Error("You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a "+e.type+" node without passing scope and parentPath.");Ga[e.type]&&(UD(t),JD.node(e,t,n,r,i))}}function YD(e,t){e.node.type===t.type&&(t.has=!0,e.stop())}function $D(){var e=a(['\n  import wrapNativeSuper from "wrapNativeSuper";\n  import getPrototypeOf from "getPrototypeOf";\n  import possibleConstructorReturn from "possibleConstructorReturn";\n  import inherits from "inherits";\n\n  export default function _wrapRegExp(re, groups) {\n    _wrapRegExp = function(re, groups) {\n      return new BabelRegExp(re, undefined, groups);\n    };\n\n    var _RegExp = wrapNativeSuper(RegExp);\n    var _super = RegExp.prototype;\n    var _groups = new WeakMap();\n\n    function BabelRegExp(re, flags, groups) {\n      var _this = _RegExp.call(this, re, flags);\n      // if the regex is recreated with \'g\' flag\n      _groups.set(_this, groups || _groups.get(re));\n      return _this;\n    }\n    inherits(BabelRegExp, _RegExp);\n\n    BabelRegExp.prototype.exec = function(str) {\n      var result = _super.exec.call(this, str);\n      if (result) result.groups = buildGroups(result, this);\n      return result;\n    };\n    BabelRegExp.prototype[Symbol.replace] = function(str, substitution) {\n      if (typeof substitution === "string") {\n        var groups = _groups.get(this);\n        return _super[Symbol.replace].call(\n          this,\n          str,\n          substitution.replace(/\\$<([^>]+)>/g, function(_, name) {\n            return "$" + groups[name];\n          })\n        );\n      } else if (typeof substitution === "function") {\n        var _this = this;\n        return _super[Symbol.replace].call(\n          this,\n          str,\n          function() {\n            var args = [];\n            args.push.apply(args, arguments);\n            if (typeof args[args.length - 1] !== "object") {\n              // Modern engines already pass result.groups as the last arg.\n              args.push(buildGroups(args, _this));\n            }\n            return substitution.apply(this, args);\n          }\n        );\n      } else {\n        return _super[Symbol.replace].call(this, str, substitution);\n      }\n    }\n\n    function buildGroups(result, re) {\n      // NOTE: This function should return undefined if there are no groups,\n      // but in that case Babel doesn\'t add the wrapper anyway.\n\n      var g = _groups.get(re);\n      return Object.keys(g).reduce(function(groups, name) {\n        groups[name] = result[g[name]];\n        return groups;\n      }, Object.create(null));\n    }\n\n    return _wrapRegExp.apply(this, arguments);\n  }\n'],['\n  import wrapNativeSuper from "wrapNativeSuper";\n  import getPrototypeOf from "getPrototypeOf";\n  import possibleConstructorReturn from "possibleConstructorReturn";\n  import inherits from "inherits";\n\n  export default function _wrapRegExp(re, groups) {\n    _wrapRegExp = function(re, groups) {\n      return new BabelRegExp(re, undefined, groups);\n    };\n\n    var _RegExp = wrapNativeSuper(RegExp);\n    var _super = RegExp.prototype;\n    var _groups = new WeakMap();\n\n    function BabelRegExp(re, flags, groups) {\n      var _this = _RegExp.call(this, re, flags);\n      // if the regex is recreated with \'g\' flag\n      _groups.set(_this, groups || _groups.get(re));\n      return _this;\n    }\n    inherits(BabelRegExp, _RegExp);\n\n    BabelRegExp.prototype.exec = function(str) {\n      var result = _super.exec.call(this, str);\n      if (result) result.groups = buildGroups(result, this);\n      return result;\n    };\n    BabelRegExp.prototype[Symbol.replace] = function(str, substitution) {\n      if (typeof substitution === "string") {\n        var groups = _groups.get(this);\n        return _super[Symbol.replace].call(\n          this,\n          str,\n          substitution.replace(/\\\\$<([^>]+)>/g, function(_, name) {\n            return "$" + groups[name];\n          })\n        );\n      } else if (typeof substitution === "function") {\n        var _this = this;\n        return _super[Symbol.replace].call(\n          this,\n          str,\n          function() {\n            var args = [];\n            args.push.apply(args, arguments);\n            if (typeof args[args.length - 1] !== "object") {\n              // Modern engines already pass result.groups as the last arg.\n              args.push(buildGroups(args, _this));\n            }\n            return substitution.apply(this, args);\n          }\n        );\n      } else {\n        return _super[Symbol.replace].call(this, str, substitution);\n      }\n    }\n\n    function buildGroups(result, re) {\n      // NOTE: This function should return undefined if there are no groups,\n      // but in that case Babel doesn\'t add the wrapper anyway.\n\n      var g = _groups.get(re);\n      return Object.keys(g).reduce(function(groups, name) {\n        groups[name] = result[g[name]];\n        return groups;\n      }, Object.create(null));\n    }\n\n    return _wrapRegExp.apply(this, arguments);\n  }\n']);return $D=function(){return e},e}function QD(){var e=a(['\n  export default function _classPrivateMethodSet() {\n    throw new TypeError("attempted to reassign private method");\n  }\n']);return QD=function(){return e},e}function ZD(){var e=a(['\n  export default function _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n      throw new TypeError("attempted to get private field on non-instance");\n    }\n    return fn;\n  }\n']);return ZD=function(){return e},e}function eS(){var e=a(['\n  import toArray from "toArray";\n  import toPropertyKey from "toPropertyKey";\n\n  // These comments are stripped by @babel/template\n  /*::\n  type PropertyDescriptor =\n    | {\n        value: any,\n        writable: boolean,\n        configurable: boolean,\n        enumerable: boolean,\n      }\n    | {\n        get?: () => any,\n        set?: (v: any) => void,\n        configurable: boolean,\n        enumerable: boolean,\n      };\n\n  type FieldDescriptor ={\n    writable: boolean,\n    configurable: boolean,\n    enumerable: boolean,\n  };\n\n  type Placement = "static" | "prototype" | "own";\n  type Key = string | symbol; // PrivateName is not supported yet.\n\n  type ElementDescriptor =\n    | {\n        kind: "method",\n        key: Key,\n        placement: Placement,\n        descriptor: PropertyDescriptor\n      }\n    | {\n        kind: "field",\n        key: Key,\n        placement: Placement,\n        descriptor: FieldDescriptor,\n        initializer?: () => any,\n      };\n\n  // This is exposed to the user code\n  type ElementObjectInput = ElementDescriptor & {\n    [@@toStringTag]?: "Descriptor"\n  };\n\n  // This is exposed to the user code\n  type ElementObjectOutput = ElementDescriptor & {\n    [@@toStringTag]?: "Descriptor"\n    extras?: ElementDescriptor[],\n    finisher?: ClassFinisher,\n  };\n\n  // This is exposed to the user code\n  type ClassObject = {\n    [@@toStringTag]?: "Descriptor",\n    kind: "class",\n    elements: ElementDescriptor[],\n  };\n\n  type ElementDecorator = (descriptor: ElementObjectInput) => ?ElementObjectOutput;\n  type ClassDecorator = (descriptor: ClassObject) => ?ClassObject;\n  type ClassFinisher = <A, B>(cl: Class<A>) => Class<B>;\n\n  // Only used by Babel in the transform output, not part of the spec.\n  type ElementDefinition =\n    | {\n        kind: "method",\n        value: any,\n        key: Key,\n        static?: boolean,\n        decorators?: ElementDecorator[],\n      }\n    | {\n        kind: "field",\n        value: () => any,\n        key: Key,\n        static?: boolean,\n        decorators?: ElementDecorator[],\n    };\n\n  declare function ClassFactory<C>(initialize: (instance: C) => void): {\n    F: Class<C>,\n    d: ElementDefinition[]\n  }\n\n  */\n\n  /*::\n  // Various combinations with/without extras and with one or many finishers\n\n  type ElementFinisherExtras = {\n    element: ElementDescriptor,\n    finisher?: ClassFinisher,\n    extras?: ElementDescriptor[],\n  };\n\n  type ElementFinishersExtras = {\n    element: ElementDescriptor,\n    finishers: ClassFinisher[],\n    extras: ElementDescriptor[],\n  };\n\n  type ElementsFinisher = {\n    elements: ElementDescriptor[],\n    finisher?: ClassFinisher,\n  };\n\n  type ElementsFinishers = {\n    elements: ElementDescriptor[],\n    finishers: ClassFinisher[],\n  };\n\n  */\n\n  /*::\n\n  type Placements = {\n    static: Key[],\n    prototype: Key[],\n    own: Key[],\n  };\n\n  */\n\n  // ClassDefinitionEvaluation (Steps 26-*)\n  export default function _decorate(\n    decorators /*: ClassDecorator[] */,\n    factory /*: ClassFactory */,\n    superClass /*: ?Class<*> */,\n    mixins /*: ?Array<Function> */,\n  ) /*: Class<*> */ {\n    var api = _getDecoratorsApi();\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        api = mixins[i](api);\n      }\n    }\n\n    var r = factory(function initialize(O) {\n      api.initializeInstanceElements(O, decorated.elements);\n    }, superClass);\n    var decorated = api.decorateClass(\n      _coalesceClassElements(r.d.map(_createElementDescriptor)),\n      decorators,\n    );\n\n    api.initializeClassElements(r.F, decorated.elements);\n\n    return api.runClassFinishers(r.F, decorated.finishers);\n  }\n\n  function _getDecoratorsApi() {\n    _getDecoratorsApi = function() {\n      return api;\n    };\n\n    var api = {\n      elementsDefinitionOrder: [["method"], ["field"]],\n\n      // InitializeInstanceElements\n      initializeInstanceElements: function(\n        /*::<C>*/ O /*: C */,\n        elements /*: ElementDescriptor[] */,\n      ) {\n        ["method", "field"].forEach(function(kind) {\n          elements.forEach(function(element /*: ElementDescriptor */) {\n            if (element.kind === kind && element.placement === "own") {\n              this.defineClassElement(O, element);\n            }\n          }, this);\n        }, this);\n      },\n\n      // InitializeClassElements\n      initializeClassElements: function(\n        /*::<C>*/ F /*: Class<C> */,\n        elements /*: ElementDescriptor[] */,\n      ) {\n        var proto = F.prototype;\n\n        ["method", "field"].forEach(function(kind) {\n          elements.forEach(function(element /*: ElementDescriptor */) {\n            var placement = element.placement;\n            if (\n              element.kind === kind &&\n              (placement === "static" || placement === "prototype")\n            ) {\n              var receiver = placement === "static" ? F : proto;\n              this.defineClassElement(receiver, element);\n            }\n          }, this);\n        }, this);\n      },\n\n      // DefineClassElement\n      defineClassElement: function(\n        /*::<C>*/ receiver /*: C | Class<C> */,\n        element /*: ElementDescriptor */,\n      ) {\n        var descriptor /*: PropertyDescriptor */ = element.descriptor;\n        if (element.kind === "field") {\n          var initializer = element.initializer;\n          descriptor = {\n            enumerable: descriptor.enumerable,\n            writable: descriptor.writable,\n            configurable: descriptor.configurable,\n            value: initializer === void 0 ? void 0 : initializer.call(receiver),\n          };\n        }\n        Object.defineProperty(receiver, element.key, descriptor);\n      },\n\n      // DecorateClass\n      decorateClass: function(\n        elements /*: ElementDescriptor[] */,\n        decorators /*: ClassDecorator[] */,\n      ) /*: ElementsFinishers */ {\n        var newElements /*: ElementDescriptor[] */ = [];\n        var finishers /*: ClassFinisher[] */ = [];\n        var placements /*: Placements */ = {\n          static: [],\n          prototype: [],\n          own: [],\n        };\n\n        elements.forEach(function(element /*: ElementDescriptor */) {\n          this.addElementPlacement(element, placements);\n        }, this);\n\n        elements.forEach(function(element /*: ElementDescriptor */) {\n          if (!_hasDecorators(element)) return newElements.push(element);\n\n          var elementFinishersExtras /*: ElementFinishersExtras */ = this.decorateElement(\n            element,\n            placements,\n          );\n          newElements.push(elementFinishersExtras.element);\n          newElements.push.apply(newElements, elementFinishersExtras.extras);\n          finishers.push.apply(finishers, elementFinishersExtras.finishers);\n        }, this);\n\n        if (!decorators) {\n          return { elements: newElements, finishers: finishers };\n        }\n\n        var result /*: ElementsFinishers */ = this.decorateConstructor(\n          newElements,\n          decorators,\n        );\n        finishers.push.apply(finishers, result.finishers);\n        result.finishers = finishers;\n\n        return result;\n      },\n\n      // AddElementPlacement\n      addElementPlacement: function(\n        element /*: ElementDescriptor */,\n        placements /*: Placements */,\n        silent /*: boolean */,\n      ) {\n        var keys = placements[element.placement];\n        if (!silent && keys.indexOf(element.key) !== -1) {\n          throw new TypeError("Duplicated element (" + element.key + ")");\n        }\n        keys.push(element.key);\n      },\n\n      // DecorateElement\n      decorateElement: function(\n        element /*: ElementDescriptor */,\n        placements /*: Placements */,\n      ) /*: ElementFinishersExtras */ {\n        var extras /*: ElementDescriptor[] */ = [];\n        var finishers /*: ClassFinisher[] */ = [];\n\n        for (\n          var decorators = element.decorators, i = decorators.length - 1;\n          i >= 0;\n          i--\n        ) {\n          // (inlined) RemoveElementPlacement\n          var keys = placements[element.placement];\n          keys.splice(keys.indexOf(element.key), 1);\n\n          var elementObject /*: ElementObjectInput */ = this.fromElementDescriptor(\n            element,\n          );\n          var elementFinisherExtras /*: ElementFinisherExtras */ = this.toElementFinisherExtras(\n            (0, decorators[i])(elementObject) /*: ElementObjectOutput */ ||\n              elementObject,\n          );\n\n          element = elementFinisherExtras.element;\n          this.addElementPlacement(element, placements);\n\n          if (elementFinisherExtras.finisher) {\n            finishers.push(elementFinisherExtras.finisher);\n          }\n\n          var newExtras /*: ElementDescriptor[] | void */ =\n            elementFinisherExtras.extras;\n          if (newExtras) {\n            for (var j = 0; j < newExtras.length; j++) {\n              this.addElementPlacement(newExtras[j], placements);\n            }\n            extras.push.apply(extras, newExtras);\n          }\n        }\n\n        return { element: element, finishers: finishers, extras: extras };\n      },\n\n      // DecorateConstructor\n      decorateConstructor: function(\n        elements /*: ElementDescriptor[] */,\n        decorators /*: ClassDecorator[] */,\n      ) /*: ElementsFinishers */ {\n        var finishers /*: ClassFinisher[] */ = [];\n\n        for (var i = decorators.length - 1; i >= 0; i--) {\n          var obj /*: ClassObject */ = this.fromClassDescriptor(elements);\n          var elementsAndFinisher /*: ElementsFinisher */ = this.toClassDescriptor(\n            (0, decorators[i])(obj) /*: ClassObject */ || obj,\n          );\n\n          if (elementsAndFinisher.finisher !== undefined) {\n            finishers.push(elementsAndFinisher.finisher);\n          }\n\n          if (elementsAndFinisher.elements !== undefined) {\n            elements = elementsAndFinisher.elements;\n\n            for (var j = 0; j < elements.length - 1; j++) {\n              for (var k = j + 1; k < elements.length; k++) {\n                if (\n                  elements[j].key === elements[k].key &&\n                  elements[j].placement === elements[k].placement\n                ) {\n                  throw new TypeError(\n                    "Duplicated element (" + elements[j].key + ")",\n                  );\n                }\n              }\n            }\n          }\n        }\n\n        return { elements: elements, finishers: finishers };\n      },\n\n      // FromElementDescriptor\n      fromElementDescriptor: function(\n        element /*: ElementDescriptor */,\n      ) /*: ElementObject */ {\n        var obj /*: ElementObject */ = {\n          kind: element.kind,\n          key: element.key,\n          placement: element.placement,\n          descriptor: element.descriptor,\n        };\n\n        var desc = {\n          value: "Descriptor",\n          configurable: true,\n        };\n        Object.defineProperty(obj, Symbol.toStringTag, desc);\n\n        if (element.kind === "field") obj.initializer = element.initializer;\n\n        return obj;\n      },\n\n      // ToElementDescriptors\n      toElementDescriptors: function(\n        elementObjects /*: ElementObject[] */,\n      ) /*: ElementDescriptor[] */ {\n        if (elementObjects === undefined) return;\n        return toArray(elementObjects).map(function(elementObject) {\n          var element = this.toElementDescriptor(elementObject);\n          this.disallowProperty(elementObject, "finisher", "An element descriptor");\n          this.disallowProperty(elementObject, "extras", "An element descriptor");\n          return element;\n        }, this);\n      },\n\n      // ToElementDescriptor\n      toElementDescriptor: function(\n        elementObject /*: ElementObject */,\n      ) /*: ElementDescriptor */ {\n        var kind = String(elementObject.kind);\n        if (kind !== "method" && kind !== "field") {\n          throw new TypeError(\n            \'An element descriptor\\\'s .kind property must be either "method" or\' +\n              \' "field", but a decorator created an element descriptor with\' +\n              \' .kind "\' +\n              kind +\n              \'"\',\n          );\n        }\n\n        var key = toPropertyKey(elementObject.key);\n\n        var placement = String(elementObject.placement);\n        if (\n          placement !== "static" &&\n          placement !== "prototype" &&\n          placement !== "own"\n        ) {\n          throw new TypeError(\n            \'An element descriptor\\\'s .placement property must be one of "static",\' +\n              \' "prototype" or "own", but a decorator created an element descriptor\' +\n              \' with .placement "\' +\n              placement +\n              \'"\',\n          );\n        }\n\n        var descriptor /*: PropertyDescriptor */ = elementObject.descriptor;\n\n        this.disallowProperty(elementObject, "elements", "An element descriptor");\n\n        var element /*: ElementDescriptor */ = {\n          kind: kind,\n          key: key,\n          placement: placement,\n          descriptor: Object.assign({}, descriptor),\n        };\n\n        if (kind !== "field") {\n          this.disallowProperty(elementObject, "initializer", "A method descriptor");\n        } else {\n          this.disallowProperty(\n            descriptor,\n            "get",\n            "The property descriptor of a field descriptor",\n          );\n          this.disallowProperty(\n            descriptor,\n            "set",\n            "The property descriptor of a field descriptor",\n          );\n          this.disallowProperty(\n            descriptor,\n            "value",\n            "The property descriptor of a field descriptor",\n          );\n\n          element.initializer = elementObject.initializer;\n        }\n\n        return element;\n      },\n\n      toElementFinisherExtras: function(\n        elementObject /*: ElementObject */,\n      ) /*: ElementFinisherExtras */ {\n        var element /*: ElementDescriptor */ = this.toElementDescriptor(\n          elementObject,\n        );\n        var finisher /*: ClassFinisher */ = _optionalCallableProperty(\n          elementObject,\n          "finisher",\n        );\n        var extras /*: ElementDescriptors[] */ = this.toElementDescriptors(\n          elementObject.extras,\n        );\n\n        return { element: element, finisher: finisher, extras: extras };\n      },\n\n      // FromClassDescriptor\n      fromClassDescriptor: function(\n        elements /*: ElementDescriptor[] */,\n      ) /*: ClassObject */ {\n        var obj = {\n          kind: "class",\n          elements: elements.map(this.fromElementDescriptor, this),\n        };\n\n        var desc = { value: "Descriptor", configurable: true };\n        Object.defineProperty(obj, Symbol.toStringTag, desc);\n\n        return obj;\n      },\n\n      // ToClassDescriptor\n      toClassDescriptor: function(\n        obj /*: ClassObject */,\n      ) /*: ElementsFinisher */ {\n        var kind = String(obj.kind);\n        if (kind !== "class") {\n          throw new TypeError(\n            \'A class descriptor\\\'s .kind property must be "class", but a decorator\' +\n              \' created a class descriptor with .kind "\' +\n              kind +\n              \'"\',\n          );\n        }\n\n        this.disallowProperty(obj, "key", "A class descriptor");\n        this.disallowProperty(obj, "placement", "A class descriptor");\n        this.disallowProperty(obj, "descriptor", "A class descriptor");\n        this.disallowProperty(obj, "initializer", "A class descriptor");\n        this.disallowProperty(obj, "extras", "A class descriptor");\n\n        var finisher = _optionalCallableProperty(obj, "finisher");\n        var elements = this.toElementDescriptors(obj.elements);\n\n        return { elements: elements, finisher: finisher };\n      },\n\n      // RunClassFinishers\n      runClassFinishers: function(\n        constructor /*: Class<*> */,\n        finishers /*: ClassFinisher[] */,\n      ) /*: Class<*> */ {\n        for (var i = 0; i < finishers.length; i++) {\n          var newConstructor /*: ?Class<*> */ = (0, finishers[i])(constructor);\n          if (newConstructor !== undefined) {\n            // NOTE: This should check if IsConstructor(newConstructor) is false.\n            if (typeof newConstructor !== "function") {\n              throw new TypeError("Finishers must return a constructor.");\n            }\n            constructor = newConstructor;\n          }\n        }\n        return constructor;\n      },\n\n      disallowProperty: function(obj, name, objectType) {\n        if (obj[name] !== undefined) {\n          throw new TypeError(objectType + " can\'t have a ." + name + " property.");\n        }\n      }\n    };\n\n    return api;\n  }\n\n  // ClassElementEvaluation\n  function _createElementDescriptor(\n    def /*: ElementDefinition */,\n  ) /*: ElementDescriptor */ {\n    var key = toPropertyKey(def.key);\n\n    var descriptor /*: PropertyDescriptor */;\n    if (def.kind === "method") {\n      descriptor = {\n        value: def.value,\n        writable: true,\n        configurable: true,\n        enumerable: false,\n      };\n    } else if (def.kind === "get") {\n      descriptor = { get: def.value, configurable: true, enumerable: false };\n    } else if (def.kind === "set") {\n      descriptor = { set: def.value, configurable: true, enumerable: false };\n    } else if (def.kind === "field") {\n      descriptor = { configurable: true, writable: true, enumerable: true };\n    }\n\n    var element /*: ElementDescriptor */ = {\n      kind: def.kind === "field" ? "field" : "method",\n      key: key,\n      placement: def.static\n        ? "static"\n        : def.kind === "field"\n        ? "own"\n        : "prototype",\n      descriptor: descriptor,\n    };\n    if (def.decorators) element.decorators = def.decorators;\n    if (def.kind === "field") element.initializer = def.value;\n\n    return element;\n  }\n\n  // CoalesceGetterSetter\n  function _coalesceGetterSetter(\n    element /*: ElementDescriptor */,\n    other /*: ElementDescriptor */,\n  ) {\n    if (element.descriptor.get !== undefined) {\n      other.descriptor.get = element.descriptor.get;\n    } else {\n      other.descriptor.set = element.descriptor.set;\n    }\n  }\n\n  // CoalesceClassElements\n  function _coalesceClassElements(\n    elements /*: ElementDescriptor[] */,\n  ) /*: ElementDescriptor[] */ {\n    var newElements /*: ElementDescriptor[] */ = [];\n\n    var isSameElement = function(\n      other /*: ElementDescriptor */,\n    ) /*: boolean */ {\n      return (\n        other.kind === "method" &&\n        other.key === element.key &&\n        other.placement === element.placement\n      );\n    };\n\n    for (var i = 0; i < elements.length; i++) {\n      var element /*: ElementDescriptor */ = elements[i];\n      var other /*: ElementDescriptor */;\n\n      if (\n        element.kind === "method" &&\n        (other = newElements.find(isSameElement))\n      ) {\n        if (\n          _isDataDescriptor(element.descriptor) ||\n          _isDataDescriptor(other.descriptor)\n        ) {\n          if (_hasDecorators(element) || _hasDecorators(other)) {\n            throw new ReferenceError(\n              "Duplicated methods (" + element.key + ") can\'t be decorated.",\n            );\n          }\n          other.descriptor = element.descriptor;\n        } else {\n          if (_hasDecorators(element)) {\n            if (_hasDecorators(other)) {\n              throw new ReferenceError(\n                "Decorators can\'t be placed on different accessors with for " +\n                  "the same property (" +\n                  element.key +\n                  ").",\n              );\n            }\n            other.decorators = element.decorators;\n          }\n          _coalesceGetterSetter(element, other);\n        }\n      } else {\n        newElements.push(element);\n      }\n    }\n\n    return newElements;\n  }\n\n  function _hasDecorators(element /*: ElementDescriptor */) /*: boolean */ {\n    return element.decorators && element.decorators.length;\n  }\n\n  function _isDataDescriptor(desc /*: PropertyDescriptor */) /*: boolean */ {\n    return (\n      desc !== undefined &&\n      !(desc.value === undefined && desc.writable === undefined)\n    );\n  }\n\n  function _optionalCallableProperty /*::<T>*/(\n    obj /*: T */,\n    name /*: $Keys<T> */,\n  ) /*: ?Function */ {\n    var value = obj[name];\n    if (value !== undefined && typeof value !== "function") {\n      throw new TypeError("Expected \'" + name + "\' to be a function");\n    }\n    return value;\n  }\n\n'],['\n  import toArray from "toArray";\n  import toPropertyKey from "toPropertyKey";\n\n  // These comments are stripped by @babel/template\n  /*::\n  type PropertyDescriptor =\n    | {\n        value: any,\n        writable: boolean,\n        configurable: boolean,\n        enumerable: boolean,\n      }\n    | {\n        get?: () => any,\n        set?: (v: any) => void,\n        configurable: boolean,\n        enumerable: boolean,\n      };\n\n  type FieldDescriptor ={\n    writable: boolean,\n    configurable: boolean,\n    enumerable: boolean,\n  };\n\n  type Placement = "static" | "prototype" | "own";\n  type Key = string | symbol; // PrivateName is not supported yet.\n\n  type ElementDescriptor =\n    | {\n        kind: "method",\n        key: Key,\n        placement: Placement,\n        descriptor: PropertyDescriptor\n      }\n    | {\n        kind: "field",\n        key: Key,\n        placement: Placement,\n        descriptor: FieldDescriptor,\n        initializer?: () => any,\n      };\n\n  // This is exposed to the user code\n  type ElementObjectInput = ElementDescriptor & {\n    [@@toStringTag]?: "Descriptor"\n  };\n\n  // This is exposed to the user code\n  type ElementObjectOutput = ElementDescriptor & {\n    [@@toStringTag]?: "Descriptor"\n    extras?: ElementDescriptor[],\n    finisher?: ClassFinisher,\n  };\n\n  // This is exposed to the user code\n  type ClassObject = {\n    [@@toStringTag]?: "Descriptor",\n    kind: "class",\n    elements: ElementDescriptor[],\n  };\n\n  type ElementDecorator = (descriptor: ElementObjectInput) => ?ElementObjectOutput;\n  type ClassDecorator = (descriptor: ClassObject) => ?ClassObject;\n  type ClassFinisher = <A, B>(cl: Class<A>) => Class<B>;\n\n  // Only used by Babel in the transform output, not part of the spec.\n  type ElementDefinition =\n    | {\n        kind: "method",\n        value: any,\n        key: Key,\n        static?: boolean,\n        decorators?: ElementDecorator[],\n      }\n    | {\n        kind: "field",\n        value: () => any,\n        key: Key,\n        static?: boolean,\n        decorators?: ElementDecorator[],\n    };\n\n  declare function ClassFactory<C>(initialize: (instance: C) => void): {\n    F: Class<C>,\n    d: ElementDefinition[]\n  }\n\n  */\n\n  /*::\n  // Various combinations with/without extras and with one or many finishers\n\n  type ElementFinisherExtras = {\n    element: ElementDescriptor,\n    finisher?: ClassFinisher,\n    extras?: ElementDescriptor[],\n  };\n\n  type ElementFinishersExtras = {\n    element: ElementDescriptor,\n    finishers: ClassFinisher[],\n    extras: ElementDescriptor[],\n  };\n\n  type ElementsFinisher = {\n    elements: ElementDescriptor[],\n    finisher?: ClassFinisher,\n  };\n\n  type ElementsFinishers = {\n    elements: ElementDescriptor[],\n    finishers: ClassFinisher[],\n  };\n\n  */\n\n  /*::\n\n  type Placements = {\n    static: Key[],\n    prototype: Key[],\n    own: Key[],\n  };\n\n  */\n\n  // ClassDefinitionEvaluation (Steps 26-*)\n  export default function _decorate(\n    decorators /*: ClassDecorator[] */,\n    factory /*: ClassFactory */,\n    superClass /*: ?Class<*> */,\n    mixins /*: ?Array<Function> */,\n  ) /*: Class<*> */ {\n    var api = _getDecoratorsApi();\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        api = mixins[i](api);\n      }\n    }\n\n    var r = factory(function initialize(O) {\n      api.initializeInstanceElements(O, decorated.elements);\n    }, superClass);\n    var decorated = api.decorateClass(\n      _coalesceClassElements(r.d.map(_createElementDescriptor)),\n      decorators,\n    );\n\n    api.initializeClassElements(r.F, decorated.elements);\n\n    return api.runClassFinishers(r.F, decorated.finishers);\n  }\n\n  function _getDecoratorsApi() {\n    _getDecoratorsApi = function() {\n      return api;\n    };\n\n    var api = {\n      elementsDefinitionOrder: [["method"], ["field"]],\n\n      // InitializeInstanceElements\n      initializeInstanceElements: function(\n        /*::<C>*/ O /*: C */,\n        elements /*: ElementDescriptor[] */,\n      ) {\n        ["method", "field"].forEach(function(kind) {\n          elements.forEach(function(element /*: ElementDescriptor */) {\n            if (element.kind === kind && element.placement === "own") {\n              this.defineClassElement(O, element);\n            }\n          }, this);\n        }, this);\n      },\n\n      // InitializeClassElements\n      initializeClassElements: function(\n        /*::<C>*/ F /*: Class<C> */,\n        elements /*: ElementDescriptor[] */,\n      ) {\n        var proto = F.prototype;\n\n        ["method", "field"].forEach(function(kind) {\n          elements.forEach(function(element /*: ElementDescriptor */) {\n            var placement = element.placement;\n            if (\n              element.kind === kind &&\n              (placement === "static" || placement === "prototype")\n            ) {\n              var receiver = placement === "static" ? F : proto;\n              this.defineClassElement(receiver, element);\n            }\n          }, this);\n        }, this);\n      },\n\n      // DefineClassElement\n      defineClassElement: function(\n        /*::<C>*/ receiver /*: C | Class<C> */,\n        element /*: ElementDescriptor */,\n      ) {\n        var descriptor /*: PropertyDescriptor */ = element.descriptor;\n        if (element.kind === "field") {\n          var initializer = element.initializer;\n          descriptor = {\n            enumerable: descriptor.enumerable,\n            writable: descriptor.writable,\n            configurable: descriptor.configurable,\n            value: initializer === void 0 ? void 0 : initializer.call(receiver),\n          };\n        }\n        Object.defineProperty(receiver, element.key, descriptor);\n      },\n\n      // DecorateClass\n      decorateClass: function(\n        elements /*: ElementDescriptor[] */,\n        decorators /*: ClassDecorator[] */,\n      ) /*: ElementsFinishers */ {\n        var newElements /*: ElementDescriptor[] */ = [];\n        var finishers /*: ClassFinisher[] */ = [];\n        var placements /*: Placements */ = {\n          static: [],\n          prototype: [],\n          own: [],\n        };\n\n        elements.forEach(function(element /*: ElementDescriptor */) {\n          this.addElementPlacement(element, placements);\n        }, this);\n\n        elements.forEach(function(element /*: ElementDescriptor */) {\n          if (!_hasDecorators(element)) return newElements.push(element);\n\n          var elementFinishersExtras /*: ElementFinishersExtras */ = this.decorateElement(\n            element,\n            placements,\n          );\n          newElements.push(elementFinishersExtras.element);\n          newElements.push.apply(newElements, elementFinishersExtras.extras);\n          finishers.push.apply(finishers, elementFinishersExtras.finishers);\n        }, this);\n\n        if (!decorators) {\n          return { elements: newElements, finishers: finishers };\n        }\n\n        var result /*: ElementsFinishers */ = this.decorateConstructor(\n          newElements,\n          decorators,\n        );\n        finishers.push.apply(finishers, result.finishers);\n        result.finishers = finishers;\n\n        return result;\n      },\n\n      // AddElementPlacement\n      addElementPlacement: function(\n        element /*: ElementDescriptor */,\n        placements /*: Placements */,\n        silent /*: boolean */,\n      ) {\n        var keys = placements[element.placement];\n        if (!silent && keys.indexOf(element.key) !== -1) {\n          throw new TypeError("Duplicated element (" + element.key + ")");\n        }\n        keys.push(element.key);\n      },\n\n      // DecorateElement\n      decorateElement: function(\n        element /*: ElementDescriptor */,\n        placements /*: Placements */,\n      ) /*: ElementFinishersExtras */ {\n        var extras /*: ElementDescriptor[] */ = [];\n        var finishers /*: ClassFinisher[] */ = [];\n\n        for (\n          var decorators = element.decorators, i = decorators.length - 1;\n          i >= 0;\n          i--\n        ) {\n          // (inlined) RemoveElementPlacement\n          var keys = placements[element.placement];\n          keys.splice(keys.indexOf(element.key), 1);\n\n          var elementObject /*: ElementObjectInput */ = this.fromElementDescriptor(\n            element,\n          );\n          var elementFinisherExtras /*: ElementFinisherExtras */ = this.toElementFinisherExtras(\n            (0, decorators[i])(elementObject) /*: ElementObjectOutput */ ||\n              elementObject,\n          );\n\n          element = elementFinisherExtras.element;\n          this.addElementPlacement(element, placements);\n\n          if (elementFinisherExtras.finisher) {\n            finishers.push(elementFinisherExtras.finisher);\n          }\n\n          var newExtras /*: ElementDescriptor[] | void */ =\n            elementFinisherExtras.extras;\n          if (newExtras) {\n            for (var j = 0; j < newExtras.length; j++) {\n              this.addElementPlacement(newExtras[j], placements);\n            }\n            extras.push.apply(extras, newExtras);\n          }\n        }\n\n        return { element: element, finishers: finishers, extras: extras };\n      },\n\n      // DecorateConstructor\n      decorateConstructor: function(\n        elements /*: ElementDescriptor[] */,\n        decorators /*: ClassDecorator[] */,\n      ) /*: ElementsFinishers */ {\n        var finishers /*: ClassFinisher[] */ = [];\n\n        for (var i = decorators.length - 1; i >= 0; i--) {\n          var obj /*: ClassObject */ = this.fromClassDescriptor(elements);\n          var elementsAndFinisher /*: ElementsFinisher */ = this.toClassDescriptor(\n            (0, decorators[i])(obj) /*: ClassObject */ || obj,\n          );\n\n          if (elementsAndFinisher.finisher !== undefined) {\n            finishers.push(elementsAndFinisher.finisher);\n          }\n\n          if (elementsAndFinisher.elements !== undefined) {\n            elements = elementsAndFinisher.elements;\n\n            for (var j = 0; j < elements.length - 1; j++) {\n              for (var k = j + 1; k < elements.length; k++) {\n                if (\n                  elements[j].key === elements[k].key &&\n                  elements[j].placement === elements[k].placement\n                ) {\n                  throw new TypeError(\n                    "Duplicated element (" + elements[j].key + ")",\n                  );\n                }\n              }\n            }\n          }\n        }\n\n        return { elements: elements, finishers: finishers };\n      },\n\n      // FromElementDescriptor\n      fromElementDescriptor: function(\n        element /*: ElementDescriptor */,\n      ) /*: ElementObject */ {\n        var obj /*: ElementObject */ = {\n          kind: element.kind,\n          key: element.key,\n          placement: element.placement,\n          descriptor: element.descriptor,\n        };\n\n        var desc = {\n          value: "Descriptor",\n          configurable: true,\n        };\n        Object.defineProperty(obj, Symbol.toStringTag, desc);\n\n        if (element.kind === "field") obj.initializer = element.initializer;\n\n        return obj;\n      },\n\n      // ToElementDescriptors\n      toElementDescriptors: function(\n        elementObjects /*: ElementObject[] */,\n      ) /*: ElementDescriptor[] */ {\n        if (elementObjects === undefined) return;\n        return toArray(elementObjects).map(function(elementObject) {\n          var element = this.toElementDescriptor(elementObject);\n          this.disallowProperty(elementObject, "finisher", "An element descriptor");\n          this.disallowProperty(elementObject, "extras", "An element descriptor");\n          return element;\n        }, this);\n      },\n\n      // ToElementDescriptor\n      toElementDescriptor: function(\n        elementObject /*: ElementObject */,\n      ) /*: ElementDescriptor */ {\n        var kind = String(elementObject.kind);\n        if (kind !== "method" && kind !== "field") {\n          throw new TypeError(\n            \'An element descriptor\\\\\'s .kind property must be either "method" or\' +\n              \' "field", but a decorator created an element descriptor with\' +\n              \' .kind "\' +\n              kind +\n              \'"\',\n          );\n        }\n\n        var key = toPropertyKey(elementObject.key);\n\n        var placement = String(elementObject.placement);\n        if (\n          placement !== "static" &&\n          placement !== "prototype" &&\n          placement !== "own"\n        ) {\n          throw new TypeError(\n            \'An element descriptor\\\\\'s .placement property must be one of "static",\' +\n              \' "prototype" or "own", but a decorator created an element descriptor\' +\n              \' with .placement "\' +\n              placement +\n              \'"\',\n          );\n        }\n\n        var descriptor /*: PropertyDescriptor */ = elementObject.descriptor;\n\n        this.disallowProperty(elementObject, "elements", "An element descriptor");\n\n        var element /*: ElementDescriptor */ = {\n          kind: kind,\n          key: key,\n          placement: placement,\n          descriptor: Object.assign({}, descriptor),\n        };\n\n        if (kind !== "field") {\n          this.disallowProperty(elementObject, "initializer", "A method descriptor");\n        } else {\n          this.disallowProperty(\n            descriptor,\n            "get",\n            "The property descriptor of a field descriptor",\n          );\n          this.disallowProperty(\n            descriptor,\n            "set",\n            "The property descriptor of a field descriptor",\n          );\n          this.disallowProperty(\n            descriptor,\n            "value",\n            "The property descriptor of a field descriptor",\n          );\n\n          element.initializer = elementObject.initializer;\n        }\n\n        return element;\n      },\n\n      toElementFinisherExtras: function(\n        elementObject /*: ElementObject */,\n      ) /*: ElementFinisherExtras */ {\n        var element /*: ElementDescriptor */ = this.toElementDescriptor(\n          elementObject,\n        );\n        var finisher /*: ClassFinisher */ = _optionalCallableProperty(\n          elementObject,\n          "finisher",\n        );\n        var extras /*: ElementDescriptors[] */ = this.toElementDescriptors(\n          elementObject.extras,\n        );\n\n        return { element: element, finisher: finisher, extras: extras };\n      },\n\n      // FromClassDescriptor\n      fromClassDescriptor: function(\n        elements /*: ElementDescriptor[] */,\n      ) /*: ClassObject */ {\n        var obj = {\n          kind: "class",\n          elements: elements.map(this.fromElementDescriptor, this),\n        };\n\n        var desc = { value: "Descriptor", configurable: true };\n        Object.defineProperty(obj, Symbol.toStringTag, desc);\n\n        return obj;\n      },\n\n      // ToClassDescriptor\n      toClassDescriptor: function(\n        obj /*: ClassObject */,\n      ) /*: ElementsFinisher */ {\n        var kind = String(obj.kind);\n        if (kind !== "class") {\n          throw new TypeError(\n            \'A class descriptor\\\\\'s .kind property must be "class", but a decorator\' +\n              \' created a class descriptor with .kind "\' +\n              kind +\n              \'"\',\n          );\n        }\n\n        this.disallowProperty(obj, "key", "A class descriptor");\n        this.disallowProperty(obj, "placement", "A class descriptor");\n        this.disallowProperty(obj, "descriptor", "A class descriptor");\n        this.disallowProperty(obj, "initializer", "A class descriptor");\n        this.disallowProperty(obj, "extras", "A class descriptor");\n\n        var finisher = _optionalCallableProperty(obj, "finisher");\n        var elements = this.toElementDescriptors(obj.elements);\n\n        return { elements: elements, finisher: finisher };\n      },\n\n      // RunClassFinishers\n      runClassFinishers: function(\n        constructor /*: Class<*> */,\n        finishers /*: ClassFinisher[] */,\n      ) /*: Class<*> */ {\n        for (var i = 0; i < finishers.length; i++) {\n          var newConstructor /*: ?Class<*> */ = (0, finishers[i])(constructor);\n          if (newConstructor !== undefined) {\n            // NOTE: This should check if IsConstructor(newConstructor) is false.\n            if (typeof newConstructor !== "function") {\n              throw new TypeError("Finishers must return a constructor.");\n            }\n            constructor = newConstructor;\n          }\n        }\n        return constructor;\n      },\n\n      disallowProperty: function(obj, name, objectType) {\n        if (obj[name] !== undefined) {\n          throw new TypeError(objectType + " can\'t have a ." + name + " property.");\n        }\n      }\n    };\n\n    return api;\n  }\n\n  // ClassElementEvaluation\n  function _createElementDescriptor(\n    def /*: ElementDefinition */,\n  ) /*: ElementDescriptor */ {\n    var key = toPropertyKey(def.key);\n\n    var descriptor /*: PropertyDescriptor */;\n    if (def.kind === "method") {\n      descriptor = {\n        value: def.value,\n        writable: true,\n        configurable: true,\n        enumerable: false,\n      };\n    } else if (def.kind === "get") {\n      descriptor = { get: def.value, configurable: true, enumerable: false };\n    } else if (def.kind === "set") {\n      descriptor = { set: def.value, configurable: true, enumerable: false };\n    } else if (def.kind === "field") {\n      descriptor = { configurable: true, writable: true, enumerable: true };\n    }\n\n    var element /*: ElementDescriptor */ = {\n      kind: def.kind === "field" ? "field" : "method",\n      key: key,\n      placement: def.static\n        ? "static"\n        : def.kind === "field"\n        ? "own"\n        : "prototype",\n      descriptor: descriptor,\n    };\n    if (def.decorators) element.decorators = def.decorators;\n    if (def.kind === "field") element.initializer = def.value;\n\n    return element;\n  }\n\n  // CoalesceGetterSetter\n  function _coalesceGetterSetter(\n    element /*: ElementDescriptor */,\n    other /*: ElementDescriptor */,\n  ) {\n    if (element.descriptor.get !== undefined) {\n      other.descriptor.get = element.descriptor.get;\n    } else {\n      other.descriptor.set = element.descriptor.set;\n    }\n  }\n\n  // CoalesceClassElements\n  function _coalesceClassElements(\n    elements /*: ElementDescriptor[] */,\n  ) /*: ElementDescriptor[] */ {\n    var newElements /*: ElementDescriptor[] */ = [];\n\n    var isSameElement = function(\n      other /*: ElementDescriptor */,\n    ) /*: boolean */ {\n      return (\n        other.kind === "method" &&\n        other.key === element.key &&\n        other.placement === element.placement\n      );\n    };\n\n    for (var i = 0; i < elements.length; i++) {\n      var element /*: ElementDescriptor */ = elements[i];\n      var other /*: ElementDescriptor */;\n\n      if (\n        element.kind === "method" &&\n        (other = newElements.find(isSameElement))\n      ) {\n        if (\n          _isDataDescriptor(element.descriptor) ||\n          _isDataDescriptor(other.descriptor)\n        ) {\n          if (_hasDecorators(element) || _hasDecorators(other)) {\n            throw new ReferenceError(\n              "Duplicated methods (" + element.key + ") can\'t be decorated.",\n            );\n          }\n          other.descriptor = element.descriptor;\n        } else {\n          if (_hasDecorators(element)) {\n            if (_hasDecorators(other)) {\n              throw new ReferenceError(\n                "Decorators can\'t be placed on different accessors with for " +\n                  "the same property (" +\n                  element.key +\n                  ").",\n              );\n            }\n            other.decorators = element.decorators;\n          }\n          _coalesceGetterSetter(element, other);\n        }\n      } else {\n        newElements.push(element);\n      }\n    }\n\n    return newElements;\n  }\n\n  function _hasDecorators(element /*: ElementDescriptor */) /*: boolean */ {\n    return element.decorators && element.decorators.length;\n  }\n\n  function _isDataDescriptor(desc /*: PropertyDescriptor */) /*: boolean */ {\n    return (\n      desc !== undefined &&\n      !(desc.value === undefined && desc.writable === undefined)\n    );\n  }\n\n  function _optionalCallableProperty /*::<T>*/(\n    obj /*: T */,\n    name /*: $Keys<T> */,\n  ) /*: ?Function */ {\n    var value = obj[name];\n    if (value !== undefined && typeof value !== "function") {\n      throw new TypeError("Expected \'" + name + "\' to be a function");\n    }\n    return value;\n  }\n\n']);return eS=function(){return e},e}function tS(){var e=a(['\n  export default function _classStaticPrivateMethodSet() {\n    throw new TypeError("attempted to set read only static private field");\n  }\n']);return tS=function(){return e},e}function nS(){var e=a(['\n  export default function _classStaticPrivateMethodGet(receiver, classConstructor, method) {\n    if (receiver !== classConstructor) {\n      throw new TypeError("Private static access of wrong provenance");\n    }\n    return method;\n  }\n']);return nS=function(){return e},e}function rS(){var e=a(['\n  export default function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) {\n    if (receiver !== classConstructor) {\n      throw new TypeError("Private static access of wrong provenance");\n    }\n    if (descriptor.set) {\n      descriptor.set.call(receiver, value);\n    } else {\n      if (!descriptor.writable) {\n        // This should only throw in strict mode, but class bodies are\n        // always strict and private fields can only be used inside\n        // class bodies.\n        throw new TypeError("attempted to set read only private field");\n      }\n      descriptor.value = value;\n    }\n\n    return value;\n  }\n']);return rS=function(){return e},e}function iS(){var e=a(['\n  export default function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) {\n    if (receiver !== classConstructor) {\n      throw new TypeError("Private static access of wrong provenance");\n    }\n    if (descriptor.get) {\n      return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n  }\n']);return iS=function(){return e},e}function aS(){var e=a(['\n  export default function _classPrivateFieldDestructureSet(receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n      throw new TypeError("attempted to set private field on non-instance");\n    }\n    var descriptor = privateMap.get(receiver);\n    if (descriptor.set) {\n      if (!("__destrObj" in descriptor)) {\n        descriptor.__destrObj = {\n          set value(v) {\n            descriptor.set.call(receiver, v)\n          },\n        };\n      }\n      return descriptor.__destrObj;\n    } else {\n      if (!descriptor.writable) {\n        // This should only throw in strict mode, but class bodies are\n        // always strict and private fields can only be used inside\n        // class bodies.\n        throw new TypeError("attempted to set read only private field");\n      }\n\n      return descriptor;\n    }\n  }\n']);return aS=function(){return e},e}function oS(){var e=a(['\n  export default function _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = privateMap.get(receiver);\n    if (!descriptor) {\n      throw new TypeError("attempted to set private field on non-instance");\n    }\n    if (descriptor.set) {\n      descriptor.set.call(receiver, value);\n    } else {\n      if (!descriptor.writable) {\n        // This should only throw in strict mode, but class bodies are\n        // always strict and private fields can only be used inside\n        // class bodies.\n        throw new TypeError("attempted to set read only private field");\n      }\n\n      descriptor.value = value;\n    }\n\n    return value;\n  }\n']);return oS=function(){return e},e}function sS(){var e=a(['\n  export default function _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = privateMap.get(receiver);\n    if (!descriptor) {\n      throw new TypeError("attempted to get private field on non-instance");\n    }\n    if (descriptor.get) {\n      return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n  }\n']);return sS=function(){return e},e}function uS(){var e=a(['\n  export default function _classPrivateFieldBase(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n      throw new TypeError("attempted to use private field on non-instance");\n    }\n    return receiver;\n  }\n']);return uS=function(){return e},e}function lS(){var e=a(['\n  var id = 0;\n  export default function _classPrivateFieldKey(name) {\n    return "__private_" + (id++) + "_" + name;\n  }\n']);return lS=function(){return e},e}function cS(){var e=a(["\n    export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context){\n        var desc = {};\n        Object.keys(descriptor).forEach(function(key){\n            desc[key] = descriptor[key];\n        });\n        desc.enumerable = !!desc.enumerable;\n        desc.configurable = !!desc.configurable;\n        if ('value' in desc || desc.initializer){\n            desc.writable = true;\n        }\n\n        desc = decorators.slice().reverse().reduce(function(desc, decorator){\n            return decorator(target, property, desc) || desc;\n        }, desc);\n\n        if (context && desc.initializer !== void 0){\n            desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n            desc.initializer = undefined;\n        }\n\n        if (desc.initializer === void 0){\n            // This is a hack to avoid this being processed by 'transform-runtime'.\n            // See issue #9.\n            Object.defineProperty(target, property, desc);\n            desc = null;\n        }\n\n        return desc;\n    }\n"]);return cS=function(){return e},e}function pS(){var e=a(["\n    export default function _initializerDefineProperty(target, property, descriptor, context){\n        if (!descriptor) return;\n\n        Object.defineProperty(target, property, {\n            enumerable: descriptor.enumerable,\n            configurable: descriptor.configurable,\n            writable: descriptor.writable,\n            value: descriptor.initializer ? descriptor.initializer.call(context) : void 0,\n        });\n    }\n"]);return pS=function(){return e},e}function hS(){var e=a(["\n    export default function _initializerWarningHelper(descriptor, context){\n        throw new Error(\n          'Decorating class property failed. Please ensure that ' +\n          'proposal-class-properties is enabled and runs after the decorators transform.'\n        );\n    }\n"]);return hS=function(){return e},e}function fS(){var e=a(['\n  import toPrimitive from "toPrimitive";\n\n  export default function _toPropertyKey(arg) {\n    var key = toPrimitive(arg, "string");\n    return typeof key === "symbol" ? key : String(key);\n  }\n']);return fS=function(){return e},e}function dS(){var e=a(['\n  export default function _toPrimitive(\n    input,\n    hint /*: "default" | "string" | "number" | void */\n  ) {\n    if (typeof input !== "object" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || "default");\n      if (typeof res !== "object") return res;\n      throw new TypeError("@@toPrimitive must return a primitive value.");\n    }\n    return (hint === "string" ? String : Number)(input);\n  }\n']);return dS=function(){return e},e}function mS(){var e=a(["\n  export default function _skipFirstGeneratorNext(fn) {\n    return function () {\n      var it = fn.apply(this, arguments);\n      it.next();\n      return it;\n    }\n  }\n"]);return mS=function(){return e},e}function yS(){var e=a(['\n  export default function _nonIterableRest() {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance");\n  }\n']);return yS=function(){return e},e}function vS(){var e=a(['\n  export default function _nonIterableSpread() {\n    throw new TypeError("Invalid attempt to spread non-iterable instance");\n  }\n']);return vS=function(){return e},e}function gS(){var e=a(['\n  export default function _iterableToArrayLimitLoose(arr, i) {\n    if (!(\n      Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]"\n    )) { return }\n    var _arr = [];\n    for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\n      _arr.push(_step.value);\n      if (i && _arr.length === i) break;\n    }\n    return _arr;\n  }\n']);return gS=function(){return e},e}function bS(){var e=a(['\n  export default function _iterableToArrayLimit(arr, i) {\n    // this is an expanded form of `for...of` that properly supports abrupt completions of\n    // iterators etc. variable names have been minimised to reduce the size of this massive\n    // helper. sometimes spec compliance is annoying :(\n    //\n    // _n = _iteratorNormalCompletion\n    // _d = _didIteratorError\n    // _e = _iteratorError\n    // _i = _iterator\n    // _s = _step\n    if (!(\n      Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]"\n    )) { return }\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i["return"] != null) _i["return"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n'],['\n  export default function _iterableToArrayLimit(arr, i) {\n    // this is an expanded form of \\`for...of\\` that properly supports abrupt completions of\n    // iterators etc. variable names have been minimised to reduce the size of this massive\n    // helper. sometimes spec compliance is annoying :(\n    //\n    // _n = _iteratorNormalCompletion\n    // _d = _didIteratorError\n    // _e = _iteratorError\n    // _i = _iterator\n    // _s = _step\n    if (!(\n      Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]"\n    )) { return }\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i["return"] != null) _i["return"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n']);return bS=function(){return e},e}function ES(){var e=a(['\n  export default function _iterableToArray(iter) {\n    if (\n      Symbol.iterator in Object(iter) ||\n      Object.prototype.toString.call(iter) === "[object Arguments]"\n    ) return Array.from(iter);\n  }\n']);return ES=function(){return e},e}function AS(){var e=a(["\n  export default function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n"]);return AS=function(){return e},e}function DS(){var e=a(["\n  export default function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n      return arr2;\n    }\n  }\n"]);return DS=function(){return e},e}function SS(){var e=a(['\n  import arrayWithoutHoles from "arrayWithoutHoles";\n  import iterableToArray from "iterableToArray";\n  import nonIterableSpread from "nonIterableSpread";\n\n  export default function _toConsumableArray(arr) {\n    return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n  }\n']);return SS=function(){return e},e}function xS(){var e=a(['\n  import arrayWithHoles from "arrayWithHoles";\n  import iterableToArray from "iterableToArray";\n  import nonIterableRest from "nonIterableRest";\n\n  export default function _toArray(arr) {\n    return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n  }\n']);return xS=function(){return e},e}function TS(){var e=a(['\n  import arrayWithHoles from "arrayWithHoles";\n  import iterableToArrayLimitLoose from "iterableToArrayLimitLoose";\n  import nonIterableRest from "nonIterableRest";\n\n  export default function _slicedToArrayLoose(arr, i) {\n    return arrayWithHoles(arr) || iterableToArrayLimitLoose(arr, i) || nonIterableRest();\n  }\n']);return TS=function(){return e},e}function CS(){var e=a(['\n  import arrayWithHoles from "arrayWithHoles";\n  import iterableToArrayLimit from "iterableToArrayLimit";\n  import nonIterableRest from "nonIterableRest";\n\n  export default function _slicedToArray(arr, i) {\n    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n  }\n']);return CS=function(){return e},e}function wS(){var e=a(['\n  import undef from "temporalUndefined";\n  import err from "tdz";\n\n  export default function _temporalRef(val, name) {\n    return val === undef ? err(name) : val;\n  }\n']);return wS=function(){return e},e}function PS(){var e=a(['\n  export default function _tdzError(name) {\n    throw new ReferenceError(name + " is not defined - temporal dead zone");\n  }\n']);return PS=function(){return e},e}function FS(){var e=a(["\n  // This function isn't mean to be called, but to be used as a reference.\n  // We can't use a normal object because it isn't hoisted.\n  export default function _temporalUndefined() {}\n"]);return FS=function(){return e},e}function kS(){var e=a(['\n  export default function _classNameTDZError(name) {\n    throw new Error("Class \\"" + name + "\\" cannot be referenced in computed property keys.");\n  }\n'],['\n  export default function _classNameTDZError(name) {\n    throw new Error("Class \\\\"" + name + "\\\\" cannot be referenced in computed property keys.");\n  }\n']);return kS=function(){return e},e}function _S(){var e=a(['\n  export default function _readOnlyError(name) {\n    throw new Error("\\"" + name + "\\" is read-only");\n  }\n'],['\n  export default function _readOnlyError(name) {\n    throw new Error("\\\\"" + name + "\\\\" is read-only");\n  }\n']);return _S=function(){return e},e}function IS(){var e=a(["\n  export default function _taggedTemplateLiteralLoose(strings, raw) {\n    if (!raw) { raw = strings.slice(0); }\n    strings.raw = raw;\n    return strings;\n  }\n"]);return IS=function(){return e},e}function OS(){var e=a(["\n  export default function _taggedTemplateLiteral(strings, raw) {\n    if (!raw) { raw = strings.slice(0); }\n    return Object.freeze(Object.defineProperties(strings, {\n        raw: { value: Object.freeze(raw) }\n    }));\n  }\n"]);return OS=function(){return e},e}function BS(){var e=a(['\n  import superPropBase from "superPropBase";\n  import defineProperty from "defineProperty";\n\n  function set(target, property, value, receiver) {\n    if (typeof Reflect !== "undefined" && Reflect.set) {\n      set = Reflect.set;\n    } else {\n      set = function set(target, property, value, receiver) {\n        var base = superPropBase(target, property);\n        var desc;\n\n        if (base) {\n          desc = Object.getOwnPropertyDescriptor(base, property);\n          if (desc.set) {\n            desc.set.call(receiver, value);\n            return true;\n          } else if (!desc.writable) {\n            // Both getter and non-writable fall into this.\n            return false;\n          }\n        }\n\n        // Without a super that defines the property, spec boils down to\n        // "define on receiver" for some reason.\n        desc = Object.getOwnPropertyDescriptor(receiver, property);\n        if (desc) {\n          if (!desc.writable) {\n            // Setter, getter, and non-writable fall into this.\n            return false;\n          }\n\n          desc.value = value;\n          Object.defineProperty(receiver, property, desc);\n        } else {\n          // Avoid setters that may be defined on Sub\'s prototype, but not on\n          // the instance.\n          defineProperty(receiver, property, value);\n        }\n\n        return true;\n      };\n    }\n\n    return set(target, property, value, receiver);\n  }\n\n  export default function _set(target, property, value, receiver, isStrict) {\n    var s = set(target, property, value, receiver || target);\n    if (!s && isStrict) {\n      throw new Error(\'failed to set property\');\n    }\n\n    return value;\n  }\n']);return BS=function(){return e},e}function NS(){var e=a(['\n  import superPropBase from "superPropBase";\n\n  export default function _get(target, property, receiver) {\n    if (typeof Reflect !== "undefined" && Reflect.get) {\n      _get = Reflect.get;\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = superPropBase(target, property);\n\n        if (!base) return;\n\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n        if (desc.get) {\n          return desc.get.call(receiver);\n        }\n\n        return desc.value;\n      };\n    }\n    return _get(target, property, receiver || target);\n  }\n']);return NS=function(){return e},e}function MS(){var e=a(['\n  import getPrototypeOf from "getPrototypeOf";\n\n  export default function _superPropBase(object, property) {\n    // Yes, this throws if object is null to being with, that\'s on purpose.\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = getPrototypeOf(object);\n      if (object === null) break;\n    }\n    return object;\n  }\n']);return MS=function(){return e},e}function RS(){var e=a(['\n  import assertThisInitialized from "assertThisInitialized";\n\n  export default function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === "object" || typeof call === "function")) {\n      return call;\n    }\n    return assertThisInitialized(self);\n  }\n']);return RS=function(){return e},e}function LS(){var e=a(["\n  export default function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n  }\n"]);return LS=function(){return e},e}function jS(){var e=a(['\n  import objectWithoutPropertiesLoose from "objectWithoutPropertiesLoose";\n\n  export default function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n\n    var target = objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  }\n']);return jS=function(){return e},e}function US(){var e=a(["\n  export default function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n"]);return US=function(){return e},e}function VS(){var e=a(['\n  export default function _objectDestructuringEmpty(obj) {\n    if (obj == null) throw new TypeError("Cannot destructure undefined");\n  }\n']);return VS=function(){return e},e}function WS(){var e=a(['\n  export default function _newArrowCheck(innerThis, boundThis) {\n    if (innerThis !== boundThis) {\n      throw new TypeError("Cannot instantiate an arrow function");\n    }\n  }\n']);return WS=function(){return e},e}function GS(){var e=a(['\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== "function") return null;\n\n    var cache = new WeakMap();\n    _getRequireWildcardCache = function () { return cache; };\n    return cache;\n  }\n\n  export default function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || (typeof obj !== "object" && typeof obj !== "function")) {\n      return { default: obj }\n    }\n\n    var cache = _getRequireWildcardCache();\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor\n          ? Object.getOwnPropertyDescriptor(obj, key)\n          : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n']);return GS=function(){return e},e}function HS(){var e=a(["\n  export default function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n  }\n"]);return HS=function(){return e},e}function qS(){var e=a(['\n  export default function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {\n      return !!right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n']);return qS=function(){return e},e}function KS(){var e=a(['\n  import getPrototypeOf from "getPrototypeOf";\n  import setPrototypeOf from "setPrototypeOf";\n  import isNativeFunction from "isNativeFunction";\n  import construct from "construct";\n\n  export default function _wrapNativeSuper(Class) {\n    var _cache = typeof Map === "function" ? new Map() : undefined;\n\n    _wrapNativeSuper = function _wrapNativeSuper(Class) {\n      if (Class === null || !isNativeFunction(Class)) return Class;\n      if (typeof Class !== "function") {\n        throw new TypeError("Super expression must either be null or a function");\n      }\n      if (typeof _cache !== "undefined") {\n        if (_cache.has(Class)) return _cache.get(Class);\n        _cache.set(Class, Wrapper);\n      }\n      function Wrapper() {\n        return construct(Class, arguments, getPrototypeOf(this).constructor)\n      }\n      Wrapper.prototype = Object.create(Class.prototype, {\n        constructor: {\n          value: Wrapper,\n          enumerable: false,\n          writable: true,\n          configurable: true,\n        }\n      });\n\n      return setPrototypeOf(Wrapper, Class);\n    }\n\n    return _wrapNativeSuper(Class)\n  }\n']);return KS=function(){return e},e}function XS(){var e=a(['\n  export default function _isNativeFunction(fn) {\n    // Note: This function returns "true" for core-js functions.\n    return Function.toString.call(fn).indexOf("[native code]") !== -1;\n  }\n']);return XS=function(){return e},e}function zS(){var e=a(["\n  import setPrototypeOf from \"setPrototypeOf\";\n\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n    // core-js@3\n    if (Reflect.construct.sham) return false;\n\n    // Proxy can't be polyfilled. Every browser implemented\n    // proxies before or at the same time as Reflect.construct,\n    // so if they support Proxy they also support Reflect.construct.\n    if (typeof Proxy === \"function\") return true;\n\n    // Since Reflect.construct can't be properly polyfilled, some\n    // implementations (e.g. core-js@2) don't set the correct internal slots.\n    // Those polyfills don't allow us to subclass built-ins, so we need to\n    // use our fallback implementation.\n    try {\n      // If the internal slots aren't set, this throws an error similar to\n      //   TypeError: this is not a Date object.\n      Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  export default function _construct(Parent, args, Class) {\n    if (isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      // NOTE: If Parent !== Class, the correct __proto__ is set *after*\n      //       calling the constructor.\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n    // Avoid issues with Class being present but undefined when it wasn't\n    // present in the original call.\n    return _construct.apply(null, arguments);\n  }\n"]);return zS=function(){return e},e}function JS(){var e=a(["\n  export default function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n    return _setPrototypeOf(o, p);\n  }\n"]);return JS=function(){return e},e}function YS(){var e=a(["\n  export default function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf\n      ? Object.getPrototypeOf\n      : function _getPrototypeOf(o) {\n          return o.__proto__ || Object.getPrototypeOf(o);\n        };\n    return _getPrototypeOf(o);\n  }\n"]);return YS=function(){return e},e}function $S(){var e=a(["\n  export default function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n"]);return $S=function(){return e},e}function QS(){var e=a(['\n  import setPrototypeOf from "setPrototypeOf";\n\n  export default function _inherits(subClass, superClass) {\n    if (typeof superClass !== "function" && superClass !== null) {\n      throw new TypeError("Super expression must either be null or a function");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) setPrototypeOf(subClass, superClass);\n  }\n']);return QS=function(){return e},e}function ZS(){var e=a(['\n  import defineProperty from "defineProperty";\n\n  // This function is different to "Reflect.ownKeys". The enumerableOnly\n  // filters on symbol properties only. Returned string properties are always\n  // enumerable. It is good to use in objectSpread.\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n\n  export default function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = (arguments[i] != null) ? arguments[i] : {};\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(\n            target,\n            key,\n            Object.getOwnPropertyDescriptor(source, key)\n          );\n        });\n      }\n    }\n    return target;\n  }\n']);return ZS=function(){return e},e}function ex(){var e=a(["\n  import defineProperty from \"defineProperty\";\n\n  export default function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = (arguments[i] != null) ? arguments[i] : {};\n      var ownKeys = Object.keys(Object(source));\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n      ownKeys.forEach(function(key) {\n        defineProperty(target, key, source[key]);\n      });\n    }\n    return target;\n  }\n"]);return ex=function(){return e},e}function tx(){var e=a(["\n  export default function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n"]);return tx=function(){return e},e}function nx(){var e=a(["\n  export default function _defineProperty(obj, key, value) {\n    // Shortcircuit the slow defineProperty path when possible.\n    // We are trying to avoid issues where setters defined on the\n    // prototype cause side effects under the fast path of simple\n    // assignment. By checking for existence of the property with\n    // the in operator, we can optimize most of this overhead away.\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n"]);return nx=function(){return e},e}function rx(){var e=a(["\n  export default function _defaults(obj, defaults) {\n    var keys = Object.getOwnPropertyNames(defaults);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = Object.getOwnPropertyDescriptor(defaults, key);\n      if (value && value.configurable && obj[key] === undefined) {\n        Object.defineProperty(obj, key, value);\n      }\n    }\n    return obj;\n  }\n"]);return rx=function(){return e},e}function ix(){var e=a(['\n  export default function _defineEnumerableProperties(obj, descs) {\n    for (var key in descs) {\n      var desc = descs[key];\n      desc.configurable = desc.enumerable = true;\n      if ("value" in desc) desc.writable = true;\n      Object.defineProperty(obj, key, desc);\n    }\n\n    // Symbols are not enumerated over by for-in loops. If native\n    // Symbols are available, fetch all of the descs object\'s own\n    // symbol properties and define them on our target object too.\n    if (Object.getOwnPropertySymbols) {\n      var objectSymbols = Object.getOwnPropertySymbols(descs);\n      for (var i = 0; i < objectSymbols.length; i++) {\n        var sym = objectSymbols[i];\n        var desc = descs[sym];\n        desc.configurable = desc.enumerable = true;\n        if ("value" in desc) desc.writable = true;\n        Object.defineProperty(obj, sym, desc);\n      }\n    }\n    return obj;\n  }\n']);return ix=function(){return e},e}function ax(){var e=a(['\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i ++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ("value" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  export default function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n']);return ax=function(){return e},e}function ox(){var e=a(['\n  export default function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError("Cannot call a class as a function");\n    }\n  }\n']);return ox=function(){return e},e}function sx(){var e=a(['\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n      var info = gen[key](arg);\n      var value = info.value;\n    } catch (error) {\n      reject(error);\n      return;\n    }\n\n    if (info.done) {\n      resolve(value);\n    } else {\n      Promise.resolve(value).then(_next, _throw);\n    }\n  }\n\n  export default function _asyncToGenerator(fn) {\n    return function () {\n      var self = this, args = arguments;\n      return new Promise(function (resolve, reject) {\n        var gen = fn.apply(self, args);\n        function _next(value) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n        }\n        function _throw(err) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n        }\n\n        _next(undefined);\n      });\n    };\n  }\n']);return sx=function(){return e},e}function ux(){var e=a(['\n  export default function _asyncGeneratorDelegate(inner, awaitWrap) {\n    var iter = {}, waiting = false;\n\n    function pump(key, value) {\n      waiting = true;\n      value = new Promise(function (resolve) { resolve(inner[key](value)); });\n      return { done: false, value: awaitWrap(value) };\n    };\n\n    if (typeof Symbol === "function" && Symbol.iterator) {\n      iter[Symbol.iterator] = function () { return this; };\n    }\n\n    iter.next = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n      return pump("next", value);\n    };\n\n    if (typeof inner.throw === "function") {\n      iter.throw = function (value) {\n        if (waiting) {\n          waiting = false;\n          throw value;\n        }\n        return pump("throw", value);\n      };\n    }\n\n    if (typeof inner.return === "function") {\n      iter.return = function (value) {\n        if (waiting) {\n          waiting = false;\n          return value;\n        }\n        return pump("return", value);\n      };\n    }\n\n    return iter;\n  }\n']);return ux=function(){return e},e}function lx(){var e=a(['\n  import AwaitValue from "AwaitValue";\n\n  export default function _awaitAsyncGenerator(value) {\n    return new AwaitValue(value);\n  }\n']);return lx=function(){return e},e}function cx(){var e=a(['\n  import AsyncGenerator from "AsyncGenerator";\n\n  export default function _wrapAsyncGenerator(fn) {\n    return function () {\n      return new AsyncGenerator(fn.apply(this, arguments));\n    };\n  }\n']);return cx=function(){return e},e}function px(){var e=a(['\n  import AwaitValue from "AwaitValue";\n\n  export default function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null,\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg)\n        var value = result.value;\n        var wrappedAwait = value instanceof AwaitValue;\n\n        Promise.resolve(wrappedAwait ? value.wrapped : value).then(\n          function (arg) {\n            if (wrappedAwait) {\n              resume(key === "return" ? "return" : "next", arg);\n              return\n            }\n\n            settle(result.done ? "return" : "normal", arg);\n          },\n          function (err) { resume("throw", err); });\n      } catch (err) {\n        settle("throw", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case "return":\n          front.resolve({ value: value, done: true });\n          break;\n        case "throw":\n          front.reject(value);\n          break;\n        default:\n          front.resolve({ value: value, done: false });\n          break;\n      }\n\n      front = front.next;\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    // Hide "return" method if generator return is not supported\n    if (typeof gen.return !== "function") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === "function" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () { return this; };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) { return this._invoke("next", arg); };\n  AsyncGenerator.prototype.throw = function (arg) { return this._invoke("throw", arg); };\n  AsyncGenerator.prototype.return = function (arg) { return this._invoke("return", arg); };\n']);return px=function(){return e},e}function hx(){var e=a(["\n  export default function _AwaitValue(value) {\n    this.wrapped = value;\n  }\n"]);return hx=function(){return e},e}function fx(){var e=a(['\n  export default function _asyncIterator(iterable) {\n    var method\n    if (typeof Symbol !== "undefined") {\n      if (Symbol.asyncIterator) {\n        method = iterable[Symbol.asyncIterator]\n        if (method != null) return method.call(iterable);\n      }\n      if (Symbol.iterator) {\n        method = iterable[Symbol.iterator]\n        if (method != null) return method.call(iterable);\n      }\n    }\n    throw new TypeError("Object is not async iterable");\n  }\n']);return fx=function(){return e},e}function dx(){var e=a(['\n  var REACT_ELEMENT_TYPE;\n\n  export default function _createRawReactElement(type, props, key, children) {\n    if (!REACT_ELEMENT_TYPE) {\n      REACT_ELEMENT_TYPE = (\n        typeof Symbol === "function" && Symbol["for"] && Symbol["for"]("react.element")\n      ) || 0xeac7;\n    }\n\n    var defaultProps = type && type.defaultProps;\n    var childrenLength = arguments.length - 3;\n\n    if (!props && childrenLength !== 0) {\n      // If we\'re going to assign props.children, we create a new object now\n      // to avoid mutating defaultProps.\n      props = {\n        children: void 0,\n      };\n    }\n\n    if (childrenLength === 1) {\n      props.children = children;\n    } else if (childrenLength > 1) {\n      var childArray = new Array(childrenLength);\n      for (var i = 0; i < childrenLength; i++) {\n        childArray[i] = arguments[i + 3];\n      }\n      props.children = childArray;\n    }\n\n    if (props && defaultProps) {\n      for (var propName in defaultProps) {\n        if (props[propName] === void 0) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    } else if (!props) {\n      props = defaultProps || {};\n    }\n\n    return {\n      $$typeof: REACT_ELEMENT_TYPE,\n      type: type,\n      key: key === undefined ? null : \'\' + key,\n      ref: null,\n      props: props,\n      _owner: null,\n    };\n  }\n']);return dx=function(){return e},e}function mx(){var e=a(['\n  export default function _typeof(obj) {\n    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n      _typeof = function (obj) { return typeof obj; };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype\n          ? "symbol"\n          : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n']);return mx=function(){return e},e}JD.visitors=zD,JD.verify=VD,JD.explode=UD,JD.cheap=function(e,t){return Wh(e,t)},JD.node=function(e,t,n,r,i,a){var o=Ga[e.type];if(o){var s=new jD(n,t,r,i),u=o,l=Array.isArray(u),c=0;for(u=l?u:u[Symbol.iterator]();;){var p;if(l){if(c>=u.length)break;p=u[c++]}else{if((c=u.next()).done)break;p=c.value}var h=p;if((!a||!a[h])&&s.visit(e,h))return}}},JD.clearNode=function(e,t){qh(e,t),qm.delete(e)},JD.removeProperties=function(e,t){return Wh(e,JD.clearNode,t),e},JD.hasType=function(e,t,n){if(Md(n,e.type))return!1;if(e.type===t)return!0;var r={has:!1,type:t};return JD(e,{noScope:!0,blacklist:n,enter:YD},null,r),r.has},JD.cache=Jm;var yx=Object.create(null),vx=function(e){return function(t){return{minVersion:e,ast:function(){return nD.program.ast(t)}}}};function gx(e){for(var t=[];e.parentPath;e=e.parentPath)t.push(e.key),e.inList&&t.push(e.listKey);return t.reverse().join(".")}yx.typeof=vx("7.0.0-beta.0")(mx()),yx.jsx=vx("7.0.0-beta.0")(dx()),yx.asyncIterator=vx("7.0.0-beta.0")(fx()),yx.AwaitValue=vx("7.0.0-beta.0")(hx()),yx.AsyncGenerator=vx("7.0.0-beta.0")(px()),yx.wrapAsyncGenerator=vx("7.0.0-beta.0")(cx()),yx.awaitAsyncGenerator=vx("7.0.0-beta.0")(lx()),yx.asyncGeneratorDelegate=vx("7.0.0-beta.0")(ux()),yx.asyncToGenerator=vx("7.0.0-beta.0")(sx()),yx.classCallCheck=vx("7.0.0-beta.0")(ox()),yx.createClass=vx("7.0.0-beta.0")(ax()),yx.defineEnumerableProperties=vx("7.0.0-beta.0")(ix()),yx.defaults=vx("7.0.0-beta.0")(rx()),yx.defineProperty=vx("7.0.0-beta.0")(nx()),yx.extends=vx("7.0.0-beta.0")(tx()),yx.objectSpread=vx("7.0.0-beta.0")(ex()),yx.objectSpread2=vx("7.5.0")(ZS()),yx.inherits=vx("7.0.0-beta.0")(QS()),yx.inheritsLoose=vx("7.0.0-beta.0")($S()),yx.getPrototypeOf=vx("7.0.0-beta.0")(YS()),yx.setPrototypeOf=vx("7.0.0-beta.0")(JS()),yx.construct=vx("7.0.0-beta.0")(zS()),yx.isNativeFunction=vx("7.0.0-beta.0")(XS()),yx.wrapNativeSuper=vx("7.0.0-beta.0")(KS()),yx.instanceof=vx("7.0.0-beta.0")(qS()),yx.interopRequireDefault=vx("7.0.0-beta.0")(HS()),yx.interopRequireWildcard=vx("7.0.0-beta.0")(GS()),yx.newArrowCheck=vx("7.0.0-beta.0")(WS()),yx.objectDestructuringEmpty=vx("7.0.0-beta.0")(VS()),yx.objectWithoutPropertiesLoose=vx("7.0.0-beta.0")(US()),yx.objectWithoutProperties=vx("7.0.0-beta.0")(jS()),yx.assertThisInitialized=vx("7.0.0-beta.0")(LS()),yx.possibleConstructorReturn=vx("7.0.0-beta.0")(RS()),yx.superPropBase=vx("7.0.0-beta.0")(MS()),yx.get=vx("7.0.0-beta.0")(NS()),yx.set=vx("7.0.0-beta.0")(BS()),yx.taggedTemplateLiteral=vx("7.0.0-beta.0")(OS()),yx.taggedTemplateLiteralLoose=vx("7.0.0-beta.0")(IS()),yx.readOnlyError=vx("7.0.0-beta.0")(_S()),yx.classNameTDZError=vx("7.0.0-beta.0")(kS()),yx.temporalUndefined=vx("7.0.0-beta.0")(FS()),yx.tdz=vx("7.5.5")(PS()),yx.temporalRef=vx("7.0.0-beta.0")(wS()),yx.slicedToArray=vx("7.0.0-beta.0")(CS()),yx.slicedToArrayLoose=vx("7.0.0-beta.0")(TS()),yx.toArray=vx("7.0.0-beta.0")(xS()),yx.toConsumableArray=vx("7.0.0-beta.0")(SS()),yx.arrayWithoutHoles=vx("7.0.0-beta.0")(DS()),yx.arrayWithHoles=vx("7.0.0-beta.0")(AS()),yx.iterableToArray=vx("7.0.0-beta.0")(ES()),yx.iterableToArrayLimit=vx("7.0.0-beta.0")(bS()),yx.iterableToArrayLimitLoose=vx("7.0.0-beta.0")(gS()),yx.nonIterableSpread=vx("7.0.0-beta.0")(vS()),yx.nonIterableRest=vx("7.0.0-beta.0")(yS()),yx.skipFirstGeneratorNext=vx("7.0.0-beta.0")(mS()),yx.toPrimitive=vx("7.1.5")(dS()),yx.toPropertyKey=vx("7.1.5")(fS()),yx.initializerWarningHelper=vx("7.0.0-beta.0")(hS()),yx.initializerDefineProperty=vx("7.0.0-beta.0")(pS()),yx.applyDecoratedDescriptor=vx("7.0.0-beta.0")(cS()),yx.classPrivateFieldLooseKey=vx("7.0.0-beta.0")(lS()),yx.classPrivateFieldLooseBase=vx("7.0.0-beta.0")(uS()),yx.classPrivateFieldGet=vx("7.0.0-beta.0")(sS()),yx.classPrivateFieldSet=vx("7.0.0-beta.0")(oS()),yx.classPrivateFieldDestructureSet=vx("7.4.4")(aS()),yx.classStaticPrivateFieldSpecGet=vx("7.0.2")(iS()),yx.classStaticPrivateFieldSpecSet=vx("7.0.2")(rS()),yx.classStaticPrivateMethodGet=vx("7.3.2")(nS()),yx.classStaticPrivateMethodSet=vx("7.3.2")(tS()),yx.decorate=vx("7.1.5")(eS()),yx.classPrivateMethodGet=vx("7.1.6")(ZD()),yx.classPrivateMethodSet=vx("7.1.6")(QD()),yx.wrapRegExp=vx("7.2.6")($D());var bx=Object.create(null);function Ex(e){if(!bx[e]){var t=yx[e];if(!t)throw Object.assign(new ReferenceError("Unknown helper "+e),{code:"BABEL_HELPER_UNKNOWN",helper:e});var n=function(){return ts(t.ast())},r=function(e){var t,n,r=new Set,i=new Set,a=new Map,o=[],s=[],u=[];if(JD(e,{ImportDeclaration:function(e){var t=e.node.source.value;if(!yx[t])throw e.buildCodeFrameError("Unknown helper "+t);if(1!==e.get("specifiers").length||!e.get("specifiers.0").isImportDefaultSpecifier())throw e.buildCodeFrameError("Helpers can only import a default value");var n=e.node.specifiers[0].local;a.set(n,t),s.push(gx(e))},ExportDefaultDeclaration:function(e){var r=e.get("declaration");if(r.isFunctionDeclaration()){if(!r.node.id)throw r.buildCodeFrameError("Helpers should give names to their exported func declaration");t=r.node.id.name}n=gx(e)},ExportAllDeclaration:function(e){throw e.buildCodeFrameError("Helpers can only export default")},ExportNamedDeclaration:function(e){throw e.buildCodeFrameError("Helpers can only export default")},Statement:function(e){e.isModuleDeclaration()||e.skip()}}),JD(e,{Program:function(e){var n=e.scope.getAllBindings();Object.keys(n).forEach((function(e){e!==t&&(a.has(n[e].identifier)||i.add(e))}))},ReferencedIdentifier:function(e){var t=e.node.name,n=e.scope.getBinding(t,!0);n?a.has(n.identifier)&&u.push(gx(e)):r.add(t)},AssignmentExpression:function(e){var n=e.get("left");if(t in n.getBindingIdentifiers()){if(!n.isIdentifier())throw n.buildCodeFrameError("Only simple assignments to exports are allowed in helpers");var r=e.scope.getBinding(t);r&&r.scope.path.isProgram()&&o.push(gx(e))}}}),!n)throw new Error("Helpers must default-export something.");return o.reverse(),{globals:Array.from(r),localBindingNames:Array.from(i),dependencies:a,exportBindingAssignments:o,exportPath:n,exportName:t,importBindingsReferences:u,importPaths:s}}(n());bx[e]={build:function(e,t,i){var a=n();return function(e,t,n,r,i){if(r&&!n)throw new Error("Unexpected local bindings for module-based helpers.");if(n){var a=t.localBindingNames,o=t.dependencies,s=t.exportBindingAssignments,u=t.exportPath,l=t.exportName,c=t.importBindingsReferences,p=t.importPaths,h={};o.forEach((function(e,t){h[t.name]="function"==typeof i&&i(e)||t}));var f={},d=new Set(r||[]);a.forEach((function(e){for(var t=e;d.has(t);)t="_"+t;t!==e&&(f[e]=t)})),"Identifier"===n.type&&l!==n.name&&(f[l]=n.name),JD(e,{Program:function(e){var t=e.get(u),r=p.map((function(t){return e.get(t)})),i=c.map((function(t){return e.get(t)})),a=t.get("declaration");if("Identifier"===n.type)a.isFunctionDeclaration()?t.replaceWith(a):t.replaceWith(Is("var",[Os(n,a.node)]));else{if("MemberExpression"!==n.type)throw new Error("Unexpected helper format.");a.isFunctionDeclaration()?(s.forEach((function(t){var r=e.get(t);r.replaceWith(Uo("=",n,r.node))})),t.replaceWith(a),e.pushContainer("body",es(Uo("=",n,os(l))))):t.replaceWith(es(Uo("=",n,a.node)))}Object.keys(f).forEach((function(t){e.scope.rename(t,f[t])}));var o=r,d=Array.isArray(o),m=0;for(o=d?o:o[Symbol.iterator]();;){var y;if(d){if(m>=o.length)break;y=o[m++]}else{if((m=o.next()).done)break;y=m.value}y.remove()}var v=i,g=Array.isArray(v),b=0;for(v=g?v:v[Symbol.iterator]();;){var E;if(g){if(b>=v.length)break;E=v[b++]}else{if((b=v.next()).done)break;E=b.value}var A=E,D=gp(h[A.node.name]);A.replaceWith(D)}e.stop()}})}}(a,r,t,i,e),{nodes:a.program.body,globals:r.globals}},minVersion:function(){return t.minVersion},dependencies:r.dependencies}}return bx[e]}function Ax(e,t,n,r){return Ex(e).build(t,n,r)}var Dx=Object.keys(yx).map((function(e){return e.replace(/^_/,"")})).filter((function(e){return"__esModule"!==e})),Sx=Vt((function(e,t){var n;t=e.exports=h,n="object"==typeof od&&od.env&&od.env.NODE_DEBUG&&/\bsemver\b/i.test(od.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments,0);e.unshift("SEMVER"),console.log.apply(console,e)}:function(){},t.SEMVER_SPEC_VERSION="2.0.0";var r=256,i=Number.MAX_SAFE_INTEGER||9007199254740991,a=t.re=[],o=t.src=[],s=t.tokens={},u=0;function l(e){s[e]=u++}l("NUMERICIDENTIFIER"),o[s.NUMERICIDENTIFIER]="0|[1-9]\\d*",l("NUMERICIDENTIFIERLOOSE"),o[s.NUMERICIDENTIFIERLOOSE]="[0-9]+",l("NONNUMERICIDENTIFIER"),o[s.NONNUMERICIDENTIFIER]="\\d*[a-zA-Z-][a-zA-Z0-9-]*",l("MAINVERSION"),o[s.MAINVERSION]="("+o[s.NUMERICIDENTIFIER]+")\\.("+o[s.NUMERICIDENTIFIER]+")\\.("+o[s.NUMERICIDENTIFIER]+")",l("MAINVERSIONLOOSE"),o[s.MAINVERSIONLOOSE]="("+o[s.NUMERICIDENTIFIERLOOSE]+")\\.("+o[s.NUMERICIDENTIFIERLOOSE]+")\\.("+o[s.NUMERICIDENTIFIERLOOSE]+")",l("PRERELEASEIDENTIFIER"),o[s.PRERELEASEIDENTIFIER]="(?:"+o[s.NUMERICIDENTIFIER]+"|"+o[s.NONNUMERICIDENTIFIER]+")",l("PRERELEASEIDENTIFIERLOOSE"),o[s.PRERELEASEIDENTIFIERLOOSE]="(?:"+o[s.NUMERICIDENTIFIERLOOSE]+"|"+o[s.NONNUMERICIDENTIFIER]+")",l("PRERELEASE"),o[s.PRERELEASE]="(?:-("+o[s.PRERELEASEIDENTIFIER]+"(?:\\."+o[s.PRERELEASEIDENTIFIER]+")*))",l("PRERELEASELOOSE"),o[s.PRERELEASELOOSE]="(?:-?("+o[s.PRERELEASEIDENTIFIERLOOSE]+"(?:\\."+o[s.PRERELEASEIDENTIFIERLOOSE]+")*))",l("BUILDIDENTIFIER"),o[s.BUILDIDENTIFIER]="[0-9A-Za-z-]+",l("BUILD"),o[s.BUILD]="(?:\\+("+o[s.BUILDIDENTIFIER]+"(?:\\."+o[s.BUILDIDENTIFIER]+")*))",l("FULL"),l("FULLPLAIN"),o[s.FULLPLAIN]="v?"+o[s.MAINVERSION]+o[s.PRERELEASE]+"?"+o[s.BUILD]+"?",o[s.FULL]="^"+o[s.FULLPLAIN]+"$",l("LOOSEPLAIN"),o[s.LOOSEPLAIN]="[v=\\s]*"+o[s.MAINVERSIONLOOSE]+o[s.PRERELEASELOOSE]+"?"+o[s.BUILD]+"?",l("LOOSE"),o[s.LOOSE]="^"+o[s.LOOSEPLAIN]+"$",l("GTLT"),o[s.GTLT]="((?:<|>)?=?)",l("XRANGEIDENTIFIERLOOSE"),o[s.XRANGEIDENTIFIERLOOSE]=o[s.NUMERICIDENTIFIERLOOSE]+"|x|X|\\*",l("XRANGEIDENTIFIER"),o[s.XRANGEIDENTIFIER]=o[s.NUMERICIDENTIFIER]+"|x|X|\\*",l("XRANGEPLAIN"),o[s.XRANGEPLAIN]="[v=\\s]*("+o[s.XRANGEIDENTIFIER]+")(?:\\.("+o[s.XRANGEIDENTIFIER]+")(?:\\.("+o[s.XRANGEIDENTIFIER]+")(?:"+o[s.PRERELEASE]+")?"+o[s.BUILD]+"?)?)?",l("XRANGEPLAINLOOSE"),o[s.XRANGEPLAINLOOSE]="[v=\\s]*("+o[s.XRANGEIDENTIFIERLOOSE]+")(?:\\.("+o[s.XRANGEIDENTIFIERLOOSE]+")(?:\\.("+o[s.XRANGEIDENTIFIERLOOSE]+")(?:"+o[s.PRERELEASELOOSE]+")?"+o[s.BUILD]+"?)?)?",l("XRANGE"),o[s.XRANGE]="^"+o[s.GTLT]+"\\s*"+o[s.XRANGEPLAIN]+"$",l("XRANGELOOSE"),o[s.XRANGELOOSE]="^"+o[s.GTLT]+"\\s*"+o[s.XRANGEPLAINLOOSE]+"$",l("COERCE"),o[s.COERCE]="(^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])",l("COERCERTL"),a[s.COERCERTL]=new RegExp(o[s.COERCE],"g"),l("LONETILDE"),o[s.LONETILDE]="(?:~>?)",l("TILDETRIM"),o[s.TILDETRIM]="(\\s*)"+o[s.LONETILDE]+"\\s+",a[s.TILDETRIM]=new RegExp(o[s.TILDETRIM],"g");l("TILDE"),o[s.TILDE]="^"+o[s.LONETILDE]+o[s.XRANGEPLAIN]+"$",l("TILDELOOSE"),o[s.TILDELOOSE]="^"+o[s.LONETILDE]+o[s.XRANGEPLAINLOOSE]+"$",l("LONECARET"),o[s.LONECARET]="(?:\\^)",l("CARETTRIM"),o[s.CARETTRIM]="(\\s*)"+o[s.LONECARET]+"\\s+",a[s.CARETTRIM]=new RegExp(o[s.CARETTRIM],"g");l("CARET"),o[s.CARET]="^"+o[s.LONECARET]+o[s.XRANGEPLAIN]+"$",l("CARETLOOSE"),o[s.CARETLOOSE]="^"+o[s.LONECARET]+o[s.XRANGEPLAINLOOSE]+"$",l("COMPARATORLOOSE"),o[s.COMPARATORLOOSE]="^"+o[s.GTLT]+"\\s*("+o[s.LOOSEPLAIN]+")$|^$",l("COMPARATOR"),o[s.COMPARATOR]="^"+o[s.GTLT]+"\\s*("+o[s.FULLPLAIN]+")$|^$",l("COMPARATORTRIM"),o[s.COMPARATORTRIM]="(\\s*)"+o[s.GTLT]+"\\s*("+o[s.LOOSEPLAIN]+"|"+o[s.XRANGEPLAIN]+")",a[s.COMPARATORTRIM]=new RegExp(o[s.COMPARATORTRIM],"g");l("HYPHENRANGE"),o[s.HYPHENRANGE]="^\\s*("+o[s.XRANGEPLAIN]+")\\s+-\\s+("+o[s.XRANGEPLAIN]+")\\s*$",l("HYPHENRANGELOOSE"),o[s.HYPHENRANGELOOSE]="^\\s*("+o[s.XRANGEPLAINLOOSE]+")\\s+-\\s+("+o[s.XRANGEPLAINLOOSE]+")\\s*$",l("STAR"),o[s.STAR]="(<|>)?=?\\s*\\*";for(var c=0;c<u;c++)n(c,o[c]),a[c]||(a[c]=new RegExp(o[c]));function p(e,t){if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof h)return e;if("string"!=typeof e)return null;if(e.length>r)return null;if(!(t.loose?a[s.LOOSE]:a[s.FULL]).test(e))return null;try{return new h(e,t)}catch(e){return null}}function h(e,t){if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof h){if(e.loose===t.loose)return e;e=e.version}else if("string"!=typeof e)throw new TypeError("Invalid Version: "+e);if(e.length>r)throw new TypeError("version is longer than "+r+" characters");if(!(this instanceof h))return new h(e,t);n("SemVer",e,t),this.options=t,this.loose=!!t.loose;var o=e.trim().match(t.loose?a[s.LOOSE]:a[s.FULL]);if(!o)throw new TypeError("Invalid Version: "+e);if(this.raw=e,this.major=+o[1],this.minor=+o[2],this.patch=+o[3],this.major>i||this.major<0)throw new TypeError("Invalid major version");if(this.minor>i||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>i||this.patch<0)throw new TypeError("Invalid patch version");o[4]?this.prerelease=o[4].split(".").map((function(e){if(/^[0-9]+$/.test(e)){var t=+e;if(t>=0&&t<i)return t}return e})):this.prerelease=[],this.build=o[5]?o[5].split("."):[],this.format()}t.parse=p,t.valid=function(e,t){var n=p(e,t);return n?n.version:null},t.clean=function(e,t){var n=p(e.trim().replace(/^[=v]+/,""),t);return n?n.version:null},t.SemVer=h,h.prototype.format=function(){return this.version=this.major+"."+this.minor+"."+this.patch,this.prerelease.length&&(this.version+="-"+this.prerelease.join(".")),this.version},h.prototype.toString=function(){return this.version},h.prototype.compare=function(e){return n("SemVer.compare",this.version,this.options,e),e instanceof h||(e=new h(e,this.options)),this.compareMain(e)||this.comparePre(e)},h.prototype.compareMain=function(e){return e instanceof h||(e=new h(e,this.options)),d(this.major,e.major)||d(this.minor,e.minor)||d(this.patch,e.patch)},h.prototype.comparePre=function(e){if(e instanceof h||(e=new h(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;var t=0;do{var r=this.prerelease[t],i=e.prerelease[t];if(n("prerelease compare",t,r,i),void 0===r&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===r)return-1;if(r!==i)return d(r,i)}while(++t)},h.prototype.compareBuild=function(e){e instanceof h||(e=new h(e,this.options));var t=0;do{var r=this.build[t],i=e.build[t];if(n("prerelease compare",t,r,i),void 0===r&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===r)return-1;if(r!==i)return d(r,i)}while(++t)},h.prototype.inc=function(e,t){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t),this.inc("pre",t);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t),this.inc("pre",t);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{for(var n=this.prerelease.length;--n>=0;)"number"==typeof this.prerelease[n]&&(this.prerelease[n]++,n=-2);-1===n&&this.prerelease.push(0)}t&&(this.prerelease[0]===t?isNaN(this.prerelease[1])&&(this.prerelease=[t,0]):this.prerelease=[t,0]);break;default:throw new Error("invalid increment argument: "+e)}return this.format(),this.raw=this.version,this},t.inc=function(e,t,n,r){"string"==typeof n&&(r=n,n=void 0);try{return new h(e,n).inc(t,r).version}catch(e){return null}},t.diff=function(e,t){if(g(e,t))return null;var n=p(e),r=p(t),i="";if(n.prerelease.length||r.prerelease.length){i="pre";var a="prerelease"}for(var o in n)if(("major"===o||"minor"===o||"patch"===o)&&n[o]!==r[o])return i+o;return a},t.compareIdentifiers=d;var f=/^[0-9]+$/;function d(e,t){var n=f.test(e),r=f.test(t);return n&&r&&(e=+e,t=+t),e===t?0:n&&!r?-1:r&&!n?1:e<t?-1:1}function m(e,t,n){return new h(e,n).compare(new h(t,n))}function y(e,t,n){return m(e,t,n)>0}function v(e,t,n){return m(e,t,n)<0}function g(e,t,n){return 0===m(e,t,n)}function b(e,t,n){return 0!==m(e,t,n)}function E(e,t,n){return m(e,t,n)>=0}function A(e,t,n){return m(e,t,n)<=0}function D(e,t,n,r){switch(t){case"===":return"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),e===n;case"!==":return"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),e!==n;case"":case"=":case"==":return g(e,n,r);case"!=":return b(e,n,r);case">":return y(e,n,r);case">=":return E(e,n,r);case"<":return v(e,n,r);case"<=":return A(e,n,r);default:throw new TypeError("Invalid operator: "+t)}}function S(e,t){if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof S){if(e.loose===!!t.loose)return e;e=e.value}if(!(this instanceof S))return new S(e,t);n("comparator",e,t),this.options=t,this.loose=!!t.loose,this.parse(e),this.semver===x?this.value="":this.value=this.operator+this.semver.version,n("comp",this)}t.rcompareIdentifiers=function(e,t){return d(t,e)},t.major=function(e,t){return new h(e,t).major},t.minor=function(e,t){return new h(e,t).minor},t.patch=function(e,t){return new h(e,t).patch},t.compare=m,t.compareLoose=function(e,t){return m(e,t,!0)},t.compareBuild=function(e,t,n){var r=new h(e,n),i=new h(t,n);return r.compare(i)||r.compareBuild(i)},t.rcompare=function(e,t,n){return m(t,e,n)},t.sort=function(e,n){return e.sort((function(e,r){return t.compareBuild(e,r,n)}))},t.rsort=function(e,n){return e.sort((function(e,r){return t.compareBuild(r,e,n)}))},t.gt=y,t.lt=v,t.eq=g,t.neq=b,t.gte=E,t.lte=A,t.cmp=D,t.Comparator=S;var x={};function T(e,t){if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof T)return e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease?e:new T(e.raw,t);if(e instanceof S)return new T(e.value,t);if(!(this instanceof T))return new T(e,t);if(this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease,this.raw=e,this.set=e.split(/\s*\|\|\s*/).map((function(e){return this.parseRange(e.trim())}),this).filter((function(e){return e.length})),!this.set.length)throw new TypeError("Invalid SemVer Range: "+e);this.format()}function C(e,t){for(var n=!0,r=e.slice(),i=r.pop();n&&r.length;)n=r.every((function(e){return i.intersects(e,t)})),i=r.pop();return n}function w(e){return!e||"x"===e.toLowerCase()||"*"===e}function P(e,t,n,r,i,a,o,s,u,l,c,p,h){return((t=w(n)?"":w(r)?">="+n+".0.0":w(i)?">="+n+"."+r+".0":">="+t)+" "+(s=w(u)?"":w(l)?"<"+(+u+1)+".0.0":w(c)?"<"+u+"."+(+l+1)+".0":p?"<="+u+"."+l+"."+c+"-"+p:"<="+s)).trim()}function F(e,t,r){for(var i=0;i<e.length;i++)if(!e[i].test(t))return!1;if(t.prerelease.length&&!r.includePrerelease){for(i=0;i<e.length;i++)if(n(e[i].semver),e[i].semver!==x&&e[i].semver.prerelease.length>0){var a=e[i].semver;if(a.major===t.major&&a.minor===t.minor&&a.patch===t.patch)return!0}return!1}return!0}function k(e,t,n){try{t=new T(t,n)}catch(e){return!1}return t.test(e)}function _(e,t,n,r){var i,a,o,s,u;switch(e=new h(e,r),t=new T(t,r),n){case">":i=y,a=A,o=v,s=">",u=">=";break;case"<":i=v,a=E,o=y,s="<",u="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(k(e,t,r))return!1;for(var l=0;l<t.set.length;++l){var c=t.set[l],p=null,f=null;if(c.forEach((function(e){e.semver===x&&(e=new S(">=0.0.0")),p=p||e,f=f||e,i(e.semver,p.semver,r)?p=e:o(e.semver,f.semver,r)&&(f=e)})),p.operator===s||p.operator===u)return!1;if((!f.operator||f.operator===s)&&a(e,f.semver))return!1;if(f.operator===u&&o(e,f.semver))return!1}return!0}S.prototype.parse=function(e){var t=this.options.loose?a[s.COMPARATORLOOSE]:a[s.COMPARATOR],n=e.match(t);if(!n)throw new TypeError("Invalid comparator: "+e);this.operator=void 0!==n[1]?n[1]:"","="===this.operator&&(this.operator=""),n[2]?this.semver=new h(n[2],this.options.loose):this.semver=x},S.prototype.toString=function(){return this.value},S.prototype.test=function(e){if(n("Comparator.test",e,this.options.loose),this.semver===x||e===x)return!0;if("string"==typeof e)try{e=new h(e,this.options)}catch(e){return!1}return D(e,this.operator,this.semver,this.options)},S.prototype.intersects=function(e,t){if(!(e instanceof S))throw new TypeError("a Comparator is required");var n;if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),""===this.operator)return""===this.value||(n=new T(e.value,t),k(this.value,n,t));if(""===e.operator)return""===e.value||(n=new T(this.value,t),k(e.semver,n,t));var r=!(">="!==this.operator&&">"!==this.operator||">="!==e.operator&&">"!==e.operator),i=!("<="!==this.operator&&"<"!==this.operator||"<="!==e.operator&&"<"!==e.operator),a=this.semver.version===e.semver.version,o=!(">="!==this.operator&&"<="!==this.operator||">="!==e.operator&&"<="!==e.operator),s=D(this.semver,"<",e.semver,t)&&(">="===this.operator||">"===this.operator)&&("<="===e.operator||"<"===e.operator),u=D(this.semver,">",e.semver,t)&&("<="===this.operator||"<"===this.operator)&&(">="===e.operator||">"===e.operator);return r||i||a&&o||s||u},t.Range=T,T.prototype.format=function(){return this.range=this.set.map((function(e){return e.join(" ").trim()})).join("||").trim(),this.range},T.prototype.toString=function(){return this.range},T.prototype.parseRange=function(e){var t=this.options.loose;e=e.trim();var r=t?a[s.HYPHENRANGELOOSE]:a[s.HYPHENRANGE];e=e.replace(r,P),n("hyphen replace",e),e=e.replace(a[s.COMPARATORTRIM],"$1$2$3"),n("comparator trim",e,a[s.COMPARATORTRIM]),e=(e=(e=e.replace(a[s.TILDETRIM],"$1~")).replace(a[s.CARETTRIM],"$1^")).split(/\s+/).join(" ");var i=t?a[s.COMPARATORLOOSE]:a[s.COMPARATOR],o=e.split(" ").map((function(e){return function(e,t){return n("comp",e,t),e=function(e,t){return e.trim().split(/\s+/).map((function(e){return function(e,t){n("caret",e,t);var r=t.loose?a[s.CARETLOOSE]:a[s.CARET];return e.replace(r,(function(t,r,i,a,o){var s;return n("caret",e,t,r,i,a,o),w(r)?s="":w(i)?s=">="+r+".0.0 <"+(+r+1)+".0.0":w(a)?s="0"===r?">="+r+"."+i+".0 <"+r+"."+(+i+1)+".0":">="+r+"."+i+".0 <"+(+r+1)+".0.0":o?(n("replaceCaret pr",o),s="0"===r?"0"===i?">="+r+"."+i+"."+a+"-"+o+" <"+r+"."+i+"."+(+a+1):">="+r+"."+i+"."+a+"-"+o+" <"+r+"."+(+i+1)+".0":">="+r+"."+i+"."+a+"-"+o+" <"+(+r+1)+".0.0"):(n("no pr"),s="0"===r?"0"===i?">="+r+"."+i+"."+a+" <"+r+"."+i+"."+(+a+1):">="+r+"."+i+"."+a+" <"+r+"."+(+i+1)+".0":">="+r+"."+i+"."+a+" <"+(+r+1)+".0.0"),n("caret return",s),s}))}(e,t)})).join(" ")}(e,t),n("caret",e),e=function(e,t){return e.trim().split(/\s+/).map((function(e){return function(e,t){var r=t.loose?a[s.TILDELOOSE]:a[s.TILDE];return e.replace(r,(function(t,r,i,a,o){var s;return n("tilde",e,t,r,i,a,o),w(r)?s="":w(i)?s=">="+r+".0.0 <"+(+r+1)+".0.0":w(a)?s=">="+r+"."+i+".0 <"+r+"."+(+i+1)+".0":o?(n("replaceTilde pr",o),s=">="+r+"."+i+"."+a+"-"+o+" <"+r+"."+(+i+1)+".0"):s=">="+r+"."+i+"."+a+" <"+r+"."+(+i+1)+".0",n("tilde return",s),s}))}(e,t)})).join(" ")}(e,t),n("tildes",e),e=function(e,t){return n("replaceXRanges",e,t),e.split(/\s+/).map((function(e){return function(e,t){e=e.trim();var r=t.loose?a[s.XRANGELOOSE]:a[s.XRANGE];return e.replace(r,(function(r,i,a,o,s,u){n("xRange",e,r,i,a,o,s,u);var l=w(a),c=l||w(o),p=c||w(s),h=p;return"="===i&&h&&(i=""),u=t.includePrerelease?"-0":"",l?r=">"===i||"<"===i?"<0.0.0-0":"*":i&&h?(c&&(o=0),s=0,">"===i?(i=">=",c?(a=+a+1,o=0,s=0):(o=+o+1,s=0)):"<="===i&&(i="<",c?a=+a+1:o=+o+1),r=i+a+"."+o+"."+s+u):c?r=">="+a+".0.0"+u+" <"+(+a+1)+".0.0"+u:p&&(r=">="+a+"."+o+".0"+u+" <"+a+"."+(+o+1)+".0"+u),n("xRange return",r),r}))}(e,t)})).join(" ")}(e,t),n("xrange",e),e=function(e,t){return n("replaceStars",e,t),e.trim().replace(a[s.STAR],"")}(e,t),n("stars",e),e}(e,this.options)}),this).join(" ").split(/\s+/);return this.options.loose&&(o=o.filter((function(e){return!!e.match(i)}))),o=o.map((function(e){return new S(e,this.options)}),this)},T.prototype.intersects=function(e,t){if(!(e instanceof T))throw new TypeError("a Range is required");return this.set.some((function(n){return C(n,t)&&e.set.some((function(e){return C(e,t)&&n.every((function(n){return e.every((function(e){return n.intersects(e,t)}))}))}))}))},t.toComparators=function(e,t){return new T(e,t).set.map((function(e){return e.map((function(e){return e.value})).join(" ").trim().split(" ")}))},T.prototype.test=function(e){if(!e)return!1;if("string"==typeof e)try{e=new h(e,this.options)}catch(e){return!1}for(var t=0;t<this.set.length;t++)if(F(this.set[t],e,this.options))return!0;return!1},t.satisfies=k,t.maxSatisfying=function(e,t,n){var r=null,i=null;try{var a=new T(t,n)}catch(e){return null}return e.forEach((function(e){a.test(e)&&(r&&-1!==i.compare(e)||(i=new h(r=e,n)))})),r},t.minSatisfying=function(e,t,n){var r=null,i=null;try{var a=new T(t,n)}catch(e){return null}return e.forEach((function(e){a.test(e)&&(r&&1!==i.compare(e)||(i=new h(r=e,n)))})),r},t.minVersion=function(e,t){e=new T(e,t);var n=new h("0.0.0");if(e.test(n))return n;if(n=new h("0.0.0-0"),e.test(n))return n;n=null;for(var r=0;r<e.set.length;++r){e.set[r].forEach((function(e){var t=new h(e.semver.version);switch(e.operator){case">":0===t.prerelease.length?t.patch++:t.prerelease.push(0),t.raw=t.format();case"":case">=":n&&!y(n,t)||(n=t);break;case"<":case"<=":break;default:throw new Error("Unexpected operation: "+e.operator)}}))}if(n&&e.test(n))return n;return null},t.validRange=function(e,t){try{return new T(e,t).range||"*"}catch(e){return null}},t.ltr=function(e,t,n){return _(e,t,"<",n)},t.gtr=function(e,t,n){return _(e,t,">",n)},t.outside=_,t.prerelease=function(e,t){var n=p(e,t);return n&&n.prerelease.length?n.prerelease:null},t.intersects=function(e,t,n){return e=new T(e,n),t=new T(t,n),e.intersects(t)},t.coerce=function(e,t){if(e instanceof h)return e;"number"==typeof e&&(e=String(e));if("string"!=typeof e)return null;var n=null;if((t=t||{}).rtl){for(var r;(r=a[s.COERCERTL].exec(e))&&(!n||n.index+n[0].length!==e.length);)n&&r.index+r[0].length===n.index+n[0].length||(n=r),a[s.COERCERTL].lastIndex=r.index+r[1].length+r[2].length;a[s.COERCERTL].lastIndex=-1}else n=e.match(a[s.COERCE]);if(null===n)return null;return p(n[2]+"."+(n[3]||"0")+"."+(n[4]||"0"),t)}})),xx=(Sx.SEMVER_SPEC_VERSION,Sx.re,Sx.src,Sx.tokens,Sx.parse,Sx.valid,Sx.clean,Sx.SemVer,Sx.inc,Sx.diff,Sx.compareIdentifiers,Sx.rcompareIdentifiers,Sx.major,Sx.minor,Sx.patch,Sx.compare,Sx.compareLoose,Sx.compareBuild,Sx.rcompare,Sx.sort,Sx.rsort,Sx.gt,Sx.lt,Sx.eq,Sx.neq,Sx.gte,Sx.lte,Sx.cmp,Sx.Comparator,Sx.Range,Sx.toComparators,Sx.satisfies,Sx.maxSatisfying,Sx.minSatisfying,Sx.minVersion,Sx.validRange,Sx.ltr,Sx.gtr,Sx.outside,Sx.prerelease,Sx.intersects,Sx.coerce,{enter:function(e,t){var n=e.node.loc;n&&(t.loc=n,e.stop())}}),Tx=function(){function e(e,t){var n=this,r=t.code,i=t.ast,a=t.inputMap;this._map=new Map,this.declarations={},this.path=null,this.ast={},this.metadata={},this.code="",this.inputMap=null,this.hub={file:this,getCode:function(){return n.code},getScope:function(){return n.scope},addHelper:this.addHelper.bind(this),buildError:this.buildCodeFrameError.bind(this)},this.opts=e,this.code=r,this.ast=i,this.inputMap=a,this.path=ID.get({hub:this.hub,parentPath:null,parent:this.ast,container:this.ast,key:"program"}).setContext(),this.scope=this.path.scope}var t=e.prototype;return t.set=function(e,t){if("helpersNamespace"===e)throw new Error("Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.If you are using @babel/plugin-external-helpers you will need to use a newer version than the one you currently have installed. If you have your own implementation, you'll want to explore using 'helperGenerator' alongside 'file.availableHelper()'.");this._map.set(e,t)},t.get=function(e){return this._map.get(e)},t.has=function(e){return this._map.has(e)},t.getModuleName=function(){var e=this.opts,t=e.filename,n=e.filenameRelative,r=void 0===n?t:n,i=e.moduleId,a=e.moduleIds,o=void 0===a?!!i:a,s=e.getModuleId,u=e.sourceRoot,l=e.moduleRoot,c=void 0===l?u:l,p=e.sourceRoot,h=void 0===p?c:p;if(!o)return null;if(null!=i&&!s)return i;var f=null!=c?c+"/":"";if(r){var d=null!=h?new RegExp("^"+h+"/?"):"";f+=r.replace(d,"").replace(/\.(\w*?)$/,"")}return f=f.replace(/\\/g,"/"),s&&s(f)||f},t.addImport=function(){throw new Error("This API has been removed. If you're looking for this functionality in Babel 7, you should import the '@babel/helper-module-imports' module and use the functions exposed  from that module, such as 'addNamed' or 'addDefault'.")},t.availableHelper=function(e,t){var n;try{n=function(e){return Ex(e).minVersion()}(e)}catch(e){if("BABEL_HELPER_UNKNOWN"!==e.code)throw e;return!1}return"string"!=typeof t||(Sx.valid(t)&&(t="^"+t),!Sx.intersects("<"+n,t)&&!Sx.intersects(">=8.0.0",t))},t.addHelper=function(e){var t=this,n=this.declarations[e];if(n)return gp(n);var r=this.get("helperGenerator");if(r){var i=r(e);if(i)return i}!function(e){Ex(e)}(e);var a=this.declarations[e]=this.scope.generateUidIdentifier(e),o={},s=function(e){return Array.from(Ex(e).dependencies.values())}(e),u=Array.isArray(s),l=0;for(s=u?s:s[Symbol.iterator]();;){var c;if(u){if(l>=s.length)break;c=s[l++]}else{if((l=s.next()).done)break;c=l.value}var p=c;o[p]=this.addHelper(p)}var h=Ax(e,(function(e){return o[e]}),a,Object.keys(this.scope.getAllBindings())),f=h.nodes;return h.globals.forEach((function(e){t.path.scope.hasBinding(e,!0)&&t.path.scope.rename(e)})),f.forEach((function(e){e._compact=!0})),this.path.unshiftContainer("body",f),this.path.get("body").forEach((function(e){-1!==f.indexOf(e.node)&&e.isVariableDeclaration()&&t.scope.registerDeclaration(e)})),a},t.addTemplateObject=function(){throw new Error("This function has been moved into the template literal transform itself.")},t.buildCodeFrameError=function(e,t,n){void 0===n&&(n=SyntaxError);var r=e&&(e.loc||e._loc);if(!r&&e){var i={loc:null};JD(e,xx,this.scope,i);var a="This is an error on an internal node. Probably an internal error.";(r=i.loc)&&(a+=" Location has been estimated."),t+=" ("+a+")"}if(r){var o=this.opts.highlightCode,s=void 0===o||o;t+="\n"+Qb(this.code,{start:{line:r.start.line,column:r.start.column+1},end:r.end&&r.start.line===r.end.line?{line:r.end.line,column:r.end.column+1}:void 0},{highlightCode:s})}return new n(t)},r(e,[{key:"shebang",get:function(){var e=this.path.node.interpreter;return e?e.value:""},set:function(e){e?this.path.get("interpreter").replaceWith(Wo(e)):this.path.get("interpreter").remove()}}]),e}();function Cx(){var e=a(['\n    (function (root, factory) {\n      if (typeof define === "function" && define.amd) {\n        define(AMD_ARGUMENTS, factory);\n      } else if (typeof exports === "object") {\n        factory(COMMON_ARGUMENTS);\n      } else {\n        factory(BROWSER_ARGUMENTS);\n      }\n    })(UMD_ROOT, function (FACTORY_PARAMETERS) {\n      FACTORY_BODY\n    });\n  ']);return Cx=function(){return e},e}var wx=function(e){return nD(Cx())(e)};function Px(e){var t=os("babelHelpers"),n=[],r=vs([es(Xo(as(null,[os("global")],qo(n)),[Jo(Vo("===",ks("typeof",os("global")),ls("undefined")),os("self"),os("global"))]))]);return n.push(Is("var",[Os(t,Uo("=",ms(os("global"),t),gs([])))])),Ix(n,t,e),r}function Fx(e){var t=[],n=Ix(t,null,e);return t.unshift(Hs(null,Object.keys(n).map((function(e){return qs(gp(n[e]),os(e))})))),vs(t,[],"module")}function kx(e){var t=os("babelHelpers"),n=[];return n.push(Is("var",[Os(t,os("global"))])),Ix(n,t,e),vs([wx({FACTORY_PARAMETERS:os("global"),BROWSER_ARGUMENTS:Uo("=",ms(os("root"),t),gs([])),COMMON_ARGUMENTS:os("exports"),AMD_ARGUMENTS:jo([ls("exports")]),FACTORY_BODY:n,UMD_ROOT:os("this")})])}function _x(e){var t=os("babelHelpers"),n=[];n.push(Is("var",[Os(t,gs([]))]));var r=vs(n);return Ix(n,t,e),n.push(es(t)),r}function Ix(e,t,n){var r=function(e){return t?ms(t,os(e)):os("_"+e)},i={};return Dx.forEach((function(t){if(!(n&&n.indexOf(t)<0)){var a=i[t]=r(t),o=Ax(t,r,a).nodes;e.push.apply(e,o)}})),i}function Ox(e,t){void 0===t&&(t="global");var n={global:Px,module:Fx,umd:kx,var:_x}[t];if(!n)throw new Error("Unsupported output type "+t);return rb(n(e)).code}function Bx(e,t,n,r){throw new Error("Cannot load "+e+" relative to "+t+" in a browser")}var Nx=[];function Mx(e,t){return null}function Rx(e,t){return null}function Lx(e,t){throw new Error("Cannot load plugin "+e+" relative to "+t+" in a browser")}function jx(e,t){throw new Error("Cannot load preset "+e+" relative to "+t+" in a browser")}var Ux="7.7.5";function Vx(e){return void 0===e&&(e="development"),e}function Wx(e,t){for(var n=0,r=e.length-1;r>=0;r--){var i=e[r];"."===i?e.splice(r,1):".."===i?(e.splice(r,1),n++):n&&(e.splice(r,1),n--)}if(t)for(;n--;n)e.unshift("..");return e}var Gx=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,Hx=function(e){return Gx.exec(e).slice(1)};function qx(){for(var e="",t=!1,n=arguments.length-1;n>=-1&&!t;n--){var r=n>=0?arguments[n]:"/";if("string"!=typeof r)throw new TypeError("Arguments to path.resolve must be strings");r&&(e=r+"/"+e,t="/"===r.charAt(0))}return(t?"/":"")+(e=Wx($x(e.split("/"),(function(e){return!!e})),!t).join("/"))||"."}function Kx(e){var t=Xx(e),n="/"===Qx(e,-1);return(e=Wx($x(e.split("/"),(function(e){return!!e})),!t).join("/"))||t||(e="."),e&&n&&(e+="/"),(t?"/":"")+e}function Xx(e){return"/"===e.charAt(0)}function zx(e,t){var n=Hx(e)[2];return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n}function Jx(e){return Hx(e)[3]}var Yx={extname:Jx,basename:zx,dirname:function(e){var t=Hx(e),n=t[0],r=t[1];return n||r?(r&&(r=r.substr(0,r.length-1)),n+r):"."},sep:"/",delimiter:":",relative:function(e,t){function n(e){for(var t=0;t<e.length&&""===e[t];t++);for(var n=e.length-1;n>=0&&""===e[n];n--);return t>n?[]:e.slice(t,n-t+1)}e=qx(e).substr(1),t=qx(t).substr(1);for(var r=n(e.split("/")),i=n(t.split("/")),a=Math.min(r.length,i.length),o=a,s=0;s<a;s++)if(r[s]!==i[s]){o=s;break}var u=[];for(s=o;s<r.length;s++)u.push("..");return(u=u.concat(i.slice(o))).join("/")},join:function(){return Kx($x(Array.prototype.slice.call(arguments,0),(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},isAbsolute:Xx,normalize:Kx,resolve:qx};function $x(e,t){if(e.filter)return e.filter(t);for(var n=[],r=0;r<e.length;r++)t(e[r],r,e)&&n.push(e[r]);return n}var Qx="b"==="ab".substr(-1)?function(e,t,n){return e.substr(t,n)}:function(e,t,n){return t<0&&(t=e.length+t),e.substr(t,n)};function Zx(e){return tT(new Map,e)}function eT(e){return tT(new WeakMap,e)}function tT(e,t){return function(n,r){var i=e.get(n);if(i){var a=i,o=Array.isArray(a),s=0;for(a=o?a:a[Symbol.iterator]();;){var u;if(o){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}var l=u,c=l.value;if((0,l.valid)(r))return c}}var p=new nT(r),h=t(n,p);switch(p.configured()||p.forever(),p.deactivate(),p.mode()){case"forever":i=[{value:h,valid:function(){return!0}}],e.set(n,i);break;case"invalidate":i=[{value:h,valid:p.validator()}],e.set(n,i);break;case"valid":i?i.push({value:h,valid:p.validator()}):(i=[{value:h,valid:p.validator()}],e.set(n,i))}return h}}var nT=function(){function e(e){this._active=!0,this._never=!1,this._forever=!1,this._invalidate=!1,this._configured=!1,this._pairs=[],this._data=e}var t=e.prototype;return t.simple=function(){return function(e){function t(t){if("boolean"!=typeof t)return e.using((function(){return rT(t())}));t?e.forever():e.never()}return t.forever=function(){return e.forever()},t.never=function(){return e.never()},t.using=function(t){return e.using((function(){return rT(t())}))},t.invalidate=function(t){return e.invalidate((function(){return rT(t())}))},t}(this)},t.mode=function(){return this._never?"never":this._forever?"forever":this._invalidate?"invalidate":"valid"},t.forever=function(){if(!this._active)throw new Error("Cannot change caching after evaluation has completed.");if(this._never)throw new Error("Caching has already been configured with .never()");this._forever=!0,this._configured=!0},t.never=function(){if(!this._active)throw new Error("Cannot change caching after evaluation has completed.");if(this._forever)throw new Error("Caching has already been configured with .forever()");this._never=!0,this._configured=!0},t.using=function(e){if(!this._active)throw new Error("Cannot change caching after evaluation has completed.");if(this._never||this._forever)throw new Error("Caching has already been configured with .never or .forever()");this._configured=!0;var t=e(this._data);return this._pairs.push([t,e]),t},t.invalidate=function(e){if(!this._active)throw new Error("Cannot change caching after evaluation has completed.");if(this._never||this._forever)throw new Error("Caching has already been configured with .never or .forever()");this._invalidate=!0,this._configured=!0;var t=e(this._data);return this._pairs.push([t,e]),t},t.validator=function(){var e=this._pairs;return function(t){return e.every((function(e){return e[0]===(0,e[1])(t)}))}},t.deactivate=function(){this._active=!1},t.configured=function(){return this._configured},e}();function rT(e){if(null!=e&&"string"!=typeof e&&"boolean"!=typeof e&&"number"!=typeof e)throw new Error("Cache keys must be either string, boolean, number, null, or undefined.");return e}function iT(e,t,n){var r=t.plugins,i=t.presets,a=t.passPerPreset;return{options:t,plugins:r?function(){return lT(r,e)(n)}:function(){return[]},presets:i?function(){return sT(i,e)(n)(!!a)}:function(){return[]}}}function aT(e,t,n){var r,i;return{options:t,plugins:function(){return r||(r=fT(t.plugins||[],e,n)),r},presets:function(){return i||(i=hT(t.presets||[],e,n,!!t.passPerPreset)),i}}}var oT=new WeakMap,sT=eT((function(e,t){var n=t.using((function(e){return e}));return Zx((function(t){return Zx((function(r){return hT(e,n,t,r).map((function(e){return pT(oT,e)}))}))}))})),uT=new WeakMap,lT=eT((function(e,t){var n=t.using((function(e){return e}));return Zx((function(t){return fT(e,n,t).map((function(e){return pT(uT,e)}))}))})),cT={};function pT(e,t){var n=t.value,r=t.options,i=void 0===r?cT:r;if(!1===i)return t;var a=e.get(n);a||(a=new WeakMap,e.set(n,a));var o=a.get(i);if(o||(o=[],a.set(i,o)),-1===o.indexOf(t)){var s=o.filter((function(e){return r=t,(n=e).name===r.name&&n.value===r.value&&n.options===r.options&&n.dirname===r.dirname&&n.alias===r.alias&&n.ownPass===r.ownPass&&(n.file&&n.file.request)===(r.file&&r.file.request)&&(n.file&&n.file.resolved)===(r.file&&r.file.resolved);var n,r}));if(s.length>0)return s[0];o.push(t)}return t}function hT(e,t,n,r){return dT("preset",e,t,n,r)}function fT(e,t,n){return dT("plugin",e,t,n)}function dT(e,t,n,r,i){var a=t.map((function(t,a){return mT(t,n,{type:e,alias:r+"$"+a,ownPass:!!i})}));return function(e){var t=new Map,n=function(){if(i){if(a>=r.length)return"break";o=r[a++]}else{if((a=r.next()).done)return"break";o=a.value}var n=o;if("function"!=typeof n.value)return"continue";var s=t.get(n.value);if(s||(s=new Set,t.set(n.value,s)),s.has(n.name)){var u=e.filter((function(e){return e.value===n.value}));throw new Error(["Duplicate plugin/preset detected.","If you'd like to use two separate instances of a plugin,","they need separate names, e.g.","","  plugins: [","    ['some-plugin', {}],","    ['some-plugin', {}, 'some unique name'],","  ]","","Duplicates detected are:",""+JSON.stringify(u,null,2)].join("\n"))}s.add(n.name)};var r=e,i=Array.isArray(r),a=0;e:for(r=i?r:r[Symbol.iterator]();;){var o;switch(n()){case"break":break e;case"continue":continue}}}(a),a}function mT(e,t,n){var r,i,a=n.type,o=n.alias,s=n.ownPass,u=gT(e);if(u)return u;var l=e;if(Array.isArray(l))if(3===l.length){var c=l;l=c[0],i=c[1],r=c[2]}else{var p=l;l=p[0],i=p[1]}var h=void 0,f=null;if("string"==typeof l){if("string"!=typeof a)throw new Error("To resolve a string-based item, the type of item must be given");var d=l,m=("plugin"===a?Lx:jx)(l,t);f=m.filepath,l=m.value,h={request:d,resolved:f}}if(!l)throw new Error("Unexpected falsy value: "+String(l));if("object"==typeof l&&l.__esModule){if(!l.default)throw new Error("Must export a default export when using ES6 modules.");l=l.default}if("object"!=typeof l&&"function"!=typeof l)throw new Error("Unsupported format: "+typeof l+". Expected an object or a function.");if(null!==f&&"object"==typeof l&&l)throw new Error("Plugin/Preset files are not allowed to export objects, only functions. In "+f);return{name:r,alias:f||o,value:l,options:i,dirname:t,ownPass:s,file:h}}function yT(e){return new bT(e)}function vT(e,t){var n=void 0===t?{}:t,r=n.dirname,i=void 0===r?".":r,a=n.type;return yT(mT(e,Yx.resolve(i),{type:a,alias:"programmatic item"}))}function gT(e){if(e instanceof bT)return e._descriptor}var bT=function(e){this._descriptor=e,Object.defineProperty(this,"_descriptor",{enumerable:!1}),this.value=this._descriptor.value,this.options=this._descriptor.options,this.dirname=this._descriptor.dirname,this.name=this._descriptor.name,this.file=this._descriptor.file?{request:this._descriptor.file.request,resolved:this._descriptor.file.resolved}:void 0,Object.freeze(this)};function ET(e,t){for(var n=0,r=Object.keys(t);n<r.length;n++){var i=r[n];if("parserOpts"===i&&t.parserOpts){var a=t.parserOpts;AT(e.parserOpts=e.parserOpts||{},a)}else if("generatorOpts"===i&&t.generatorOpts){var o=t.generatorOpts;AT(e.generatorOpts=e.generatorOpts||{},o)}else{var s=t[i];void 0!==s&&(e[i]=s)}}}function AT(e,t){for(var n=0,r=Object.keys(t);n<r.length;n++){var i=r[n],a=t[i];void 0!==a&&(e[i]=a)}}Object.freeze(bT.prototype);var DT=function(e,t,n){this.key=e.name||n,this.manipulateOptions=e.manipulateOptions,this.post=e.post,this.pre=e.pre,this.visitor=e.visitor||{},this.parserOverride=e.parserOverride,this.generatorOverride=e.generatorOverride,this.options=t},ST=1e3,xT=60*ST,TT=60*xT,CT=24*TT,wT=7*CT,PT=365.25*CT,FT=function(e,t){t=t||{};var n=typeof e;if("string"===n&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!t)return;var n=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return n*PT;case"weeks":case"week":case"w":return n*wT;case"days":case"day":case"d":return n*CT;case"hours":case"hour":case"hrs":case"hr":case"h":return n*TT;case"minutes":case"minute":case"mins":case"min":case"m":return n*xT;case"seconds":case"second":case"secs":case"sec":case"s":return n*ST;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return n;default:return}}(e);if("number"===n&&isFinite(e))return t.long?function(e){var t=Math.abs(e);if(t>=CT)return kT(e,t,CT,"day");if(t>=TT)return kT(e,t,TT,"hour");if(t>=xT)return kT(e,t,xT,"minute");if(t>=ST)return kT(e,t,ST,"second");return e+" ms"}(e):function(e){var t=Math.abs(e);if(t>=CT)return Math.round(e/CT)+"d";if(t>=TT)return Math.round(e/TT)+"h";if(t>=xT)return Math.round(e/xT)+"m";if(t>=ST)return Math.round(e/ST)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function kT(e,t,n,r){var i=t>=1.5*n;return Math.round(e/n)+" "+r+(i?"s":"")}var _T=function(e){function t(e){for(var t=0,r=0;r<e.length;r++)t=(t<<5)-t+e.charCodeAt(r),t|=0;return n.colors[Math.abs(t)%n.colors.length]}function n(e){var a;function o(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(o.enabled){var i=o,s=Number(new Date),u=s-(a||s);i.diff=u,i.prev=a,i.curr=s,a=s,t[0]=n.coerce(t[0]),"string"!=typeof t[0]&&t.unshift("%O");var l=0;t[0]=t[0].replace(/%([a-zA-Z%])/g,(function(e,r){if("%%"===e)return e;l++;var a=n.formatters[r];if("function"==typeof a){var o=t[l];e=a.call(i,o),t.splice(l,1),l--}return e})),n.formatArgs.call(i,t),(i.log||n.log).apply(i,t)}}return o.namespace=e,o.enabled=n.enabled(e),o.useColors=n.useColors(),o.color=t(e),o.destroy=r,o.extend=i,"function"==typeof n.init&&n.init(o),n.instances.push(o),o}function r(){var e=n.instances.indexOf(this);return-1!==e&&(n.instances.splice(e,1),!0)}function i(e,t){var r=n(this.namespace+(void 0===t?":":t)+e);return r.log=this.log,r}function a(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return n.debug=n,n.default=n,n.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},n.disable=function(){var e=[].concat(n.names.map(a),n.skips.map(a).map((function(e){return"-"+e}))).join(",");return n.enable(""),e},n.enable=function(e){var t;n.save(e),n.names=[],n.skips=[];var r=("string"==typeof e?e:"").split(/[\s,]+/),i=r.length;for(t=0;t<i;t++)r[t]&&("-"===(e=r[t].replace(/\*/g,".*?"))[0]?n.skips.push(new RegExp("^"+e.substr(1)+"$")):n.names.push(new RegExp("^"+e+"$")));for(t=0;t<n.instances.length;t++){var a=n.instances[t];a.enabled=n.enabled(a.namespace)}},n.enabled=function(e){if("*"===e[e.length-1])return!0;var t,r;for(t=0,r=n.skips.length;t<r;t++)if(n.skips[t].test(e))return!1;for(t=0,r=n.names.length;t<r;t++)if(n.names[t].test(e))return!0;return!1},n.humanize=FT,Object.keys(e).forEach((function(t){n[t]=e[t]})),n.instances=[],n.names=[],n.skips=[],n.formatters={},n.selectColor=t,n.enable(n.load()),n},IT=Vt((function(e,t){t.log=function(){var e;return"object"==typeof console&&console.log&&(e=console).log.apply(e,arguments)},t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;var n="color: "+this.color;t.splice(1,0,n,"color: inherit");var r=0,i=0;t[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(r++,"%c"===e&&(i=r))})),t.splice(i,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){var e;try{e=t.storage.getItem("debug")}catch(e){}!e&&void 0!==od&&"env"in od&&(e=od.env.DEBUG);return e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.exports=_T(t),e.exports.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}})),OT=(IT.log,IT.formatArgs,IT.save,IT.load,IT.useColors,IT.storage,IT.colors,{auxiliaryComment:{message:"Use `auxiliaryCommentBefore` or `auxiliaryCommentAfter`"},blacklist:{message:"Put the specific transforms you want in the `plugins` option"},breakConfig:{message:"This is not a necessary option in Babel 6"},experimental:{message:"Put the specific transforms you want in the `plugins` option"},externalHelpers:{message:"Use the `external-helpers` plugin instead. Check out http://babeljs.io/docs/plugins/external-helpers/"},extra:{message:""},jsxPragma:{message:"use the `pragma` option in the `react-jsx` plugin. Check out http://babeljs.io/docs/plugins/transform-react-jsx/"},loose:{message:"Specify the `loose` option for the relevant plugin you are using or use a preset that sets the option."},metadataUsedHelpers:{message:"Not required anymore as this is enabled by default"},modules:{message:"Use the corresponding module transform plugin in the `plugins` option. Check out http://babeljs.io/docs/plugins/#modules"},nonStandard:{message:"Use the `react-jsx` and `flow-strip-types` plugins to support JSX and Flow. Also check out the react preset http://babeljs.io/docs/plugins/preset-react/"},optional:{message:"Put the specific transforms you want in the `plugins` option"},sourceMapName:{message:"The `sourceMapName` option has been removed because it makes more sense for the tooling that calls Babel to assign `map.file` themselves."},stage:{message:"Check out the corresponding stage-x presets http://babeljs.io/docs/plugins/#presets"},whitelist:{message:"Put the specific transforms you want in the `plugins` option"},resolveModuleSource:{version:6,message:"Use `babel-plugin-module-resolver@3`'s 'resolvePath' options"},metadata:{version:6,message:"Generated plugin metadata is always included in the output result"},sourceMapTarget:{version:6,message:"The `sourceMapTarget` option has been removed because it makes more sense for the tooling that calls Babel to assign `map.file` themselves."}});function BT(e){switch(e.type){case"root":return"";case"env":return BT(e.parent)+'.env["'+e.name+'"]';case"overrides":return BT(e.parent)+".overrides["+e.index+"]";case"option":return BT(e.parent)+"."+e.name;case"access":return BT(e.parent)+"["+JSON.stringify(e.name)+"]";default:throw new Error("Assertion failure: Unknown type "+e.type)}}function NT(e,t){return{type:"access",name:t,parent:e}}function MT(e,t){if(void 0!==t&&"boolean"!=typeof t&&"inline"!==t&&"both"!==t)throw new Error(BT(e)+' must be a boolean, "inline", "both", or undefined');return t}function RT(e,t){if(void 0!==t&&"string"!=typeof t)throw new Error(BT(e)+" must be a string, or undefined");return t}function LT(e,t){if(void 0!==t&&"function"!=typeof t)throw new Error(BT(e)+" must be a function, or undefined");return t}function jT(e,t){if(void 0!==t&&"boolean"!=typeof t)throw new Error(BT(e)+" must be a boolean, or undefined");return t}function UT(e,t){if(void 0!==t&&("object"!=typeof t||Array.isArray(t)||!t))throw new Error(BT(e)+" must be an object, or undefined");return t}function VT(e,t){if(null!=t&&!Array.isArray(t))throw new Error(BT(e)+" must be an array, or undefined");return t}function WT(e,t){var n=VT(e,t);return n&&n.forEach((function(t,n){return function(e,t){if("string"!=typeof t&&"function"!=typeof t&&!(t instanceof RegExp))throw new Error(BT(e)+" must be an array of string/Function/RegExp values, or undefined");return t}(NT(e,n),t)})),n}function GT(e,t){if(void 0===t)return t;if(Array.isArray(t))t.forEach((function(t,n){if(!HT(t))throw new Error(BT(NT(e,n))+" must be a string/Function/RegExp.")}));else if(!HT(t))throw new Error(BT(e)+" must be a string/Function/RegExp, or an array of those");return t}function HT(e){return"string"==typeof e||"function"==typeof e||e instanceof RegExp}function qT(e,t){var n=VT(e,t);return n&&n.forEach((function(t,n){return function(e,t){if(Array.isArray(t)){if(0===t.length)throw new Error(BT(e)+" must include an object");if(t.length>3)throw new Error(BT(e)+" may only be a two-tuple or three-tuple");if(KT(NT(e,0),t[0]),t.length>1){var n=t[1];if(void 0!==n&&!1!==n&&("object"!=typeof n||Array.isArray(n)||null===n))throw new Error(BT(NT(e,1))+" must be an object, false, or undefined")}if(3===t.length){var r=t[2];if(void 0!==r&&"string"!=typeof r)throw new Error(BT(NT(e,2))+" must be a string, or undefined")}}else KT(e,t);return t}(NT(e,n),t)})),n}function KT(e,t){if(("object"!=typeof t||!t)&&"string"!=typeof t&&"function"!=typeof t)throw new Error(BT(e)+" must be a string, object, function");return t}var XT={cwd:RT,root:RT,rootMode:function(e,t){if(void 0!==t&&"root"!==t&&"upward"!==t&&"upward-optional"!==t)throw new Error(BT(e)+' must be a "root", "upward", "upward-optional" or undefined');return t},configFile:function(e,t){if(void 0!==t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error(BT(e)+" must be a undefined, a boolean, a string, got "+JSON.stringify(t));return t},caller:function(e,t){var n=UT(e,t);if(n){if("string"!=typeof n.name)throw new Error(BT(e)+' set but does not contain "name" property string');for(var r=0,i=Object.keys(n);r<i.length;r++){var a=i[r],o=NT(e,a),s=n[a];if(null!=s&&"boolean"!=typeof s&&"string"!=typeof s&&"number"!=typeof s)throw new Error(BT(o)+" must be null, undefined, a boolean, a string, or a number.")}}return t},filename:RT,filenameRelative:RT,code:jT,ast:jT,envName:RT},zT={babelrc:jT,babelrcRoots:function(e,t){if(void 0===t||"boolean"==typeof t)return t;if(Array.isArray(t))t.forEach((function(t,n){if(!HT(t))throw new Error(BT(NT(e,n))+" must be a string/Function/RegExp.")}));else if(!HT(t))throw new Error(BT(e)+" must be a undefined, a boolean, a string/Function/RegExp or an array of those, got "+JSON.stringify(t));return t}},JT={extends:RT,ignore:WT,only:WT},YT={inputSourceMap:function(e,t){if(void 0!==t&&"boolean"!=typeof t&&("object"!=typeof t||!t))throw new Error(BT(e)+" must be a boolean, object, or undefined");return t},presets:qT,plugins:qT,passPerPreset:jT,env:function(e,t){if("env"===e.parent.type)throw new Error(BT(e)+" is not allowed inside of another .env block");var n=e.parent,r=UT(e,t);if(r)for(var i=0,a=Object.keys(r);i<a.length;i++){var o=a[i],s=UT(NT(e,o),r[o]);if(s)QT({type:"env",name:o,parent:n},s)}return r},overrides:function(e,t){if("env"===e.parent.type)throw new Error(BT(e)+" is not allowed inside an .env block");if("overrides"===e.parent.type)throw new Error(BT(e)+" is not allowed inside an .overrides block");var n=e.parent,r=VT(e,t);if(r){var i=r.entries(),a=Array.isArray(i),o=0;for(i=a?i:i[Symbol.iterator]();;){var s;if(a){if(o>=i.length)break;s=i[o++]}else{if((o=i.next()).done)break;s=o.value}var u=s,l=u[0],c=u[1],p=NT(e,l),h=UT(p,c);if(!h)throw new Error(BT(p)+" must be an object");QT({type:"overrides",index:l,parent:n},h)}}return r},test:GT,include:GT,exclude:GT,retainLines:jT,comments:jT,shouldPrintComment:LT,compact:function(e,t){if(void 0!==t&&"boolean"!=typeof t&&"auto"!==t)throw new Error(BT(e)+' must be a boolean, "auto", or undefined');return t},minified:jT,auxiliaryCommentBefore:RT,auxiliaryCommentAfter:RT,sourceType:function(e,t){if(void 0!==t&&"module"!==t&&"script"!==t&&"unambiguous"!==t)throw new Error(BT(e)+' must be "module", "script", "unambiguous", or undefined');return t},wrapPluginVisitorMethod:LT,highlightCode:jT,sourceMaps:MT,sourceMap:MT,sourceFileName:RT,sourceRoot:RT,getModuleId:LT,moduleRoot:RT,moduleIds:jT,moduleId:RT,parserOpts:UT,generatorOpts:UT};function $T(e,t){return QT({type:"root",source:e},t)}function QT(e,t){var n=function e(t){return"root"===t.type?t.source:e(t.parent)}(e);return function(e){if(eC(e,"sourceMap")&&eC(e,"sourceMaps"))throw new Error(".sourceMap is an alias for .sourceMaps, cannot use both")}(t),Object.keys(t).forEach((function(r){var i={type:"option",name:r,parent:e};if("preset"===n&&JT[r])throw new Error(BT(i)+" is not allowed in preset options");if("arguments"!==n&&XT[r])throw new Error(BT(i)+" is only allowed in root programmatic options");if("arguments"!==n&&"configfile"!==n&&zT[r]){if("babelrcfile"===n||"extendsfile"===n)throw new Error(BT(i)+' is not allowed in .babelrc or "extends"ed files, only in root programmatic options, or babel.config.js/config file options');throw new Error(BT(i)+" is only allowed in root programmatic options, or babel.config.js/config file options")}(YT[r]||JT[r]||zT[r]||XT[r]||ZT)(i,t[r])})),t}function ZT(e){var t=e.name;if(OT[t]){var n=OT[t],r=n.message,i=n.version;throw new ReferenceError("Using removed Babel "+(void 0===i?5:i)+" option: "+BT(e)+" - "+r)}var a="Unknown option: "+BT(e)+". Check out https://babeljs.io/docs/en/babel-core/#options for more information about options.";throw new ReferenceError(a)}function eC(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var tC=/[\\^$.*+?()[\]{}|]/g,nC=RegExp(tC.source);var rC=function(e){return(e=qd(e))&&nC.test(e)?e.replace(tC,"\\$&"):e},iC="\\"+Yx.sep,aC="(?:"+iC+"|$)",oC="[^"+iC+"]+",sC="(?:"+oC+iC+")",uC="(?:"+oC+aC+")",lC=sC+"*?",cC=sC+"*?"+uC+"?";function pC(e,t){var n=Yx.resolve(t,e).split(Yx.sep);return new RegExp(["^"].concat(n.map((function(e,t){var r=t===n.length-1;return"**"===e?r?cC:lC:"*"===e?r?uC:sC:0===e.indexOf("*.")?oC+rC(e.slice(1))+(r?aC:iC):rC(e)+(r?aC:iC)}))).join(""))}var hC=IT("babel:config:config-chain");var fC=IC({init:function(e){return e},root:function(e){return dC(e)},env:function(e,t){return mC(e)(t)},overrides:function(e,t){return yC(e)(t)},overridesEnv:function(e,t,n){return vC(e)(t)(n)}}),dC=eT((function(e){return PC(e,e.alias,aT)})),mC=eT((function(e){return Zx((function(t){return FC(e,e.alias,aT,t)}))})),yC=eT((function(e){return Zx((function(t){return kC(e,e.alias,aT,t)}))})),vC=eT((function(e){return Zx((function(t){return Zx((function(n){return _C(e,e.alias,aT,t,n)}))}))}));function gC(e,t){var n,r=DC({options:e,dirname:t.cwd},t);if(!r)return null;"string"==typeof e.configFile?n=Bx(e.configFile,t.cwd,t.envName,t.caller):!1!==e.configFile&&(t.root,t.envName,t.caller,n=null);var i=e.babelrc,a=e.babelrcRoots,o=t.cwd,s={options:[],presets:[],plugins:[]};if(n){var u=bC(n),l=SC(u,t);if(!l)return null;void 0===i&&(i=u.options.babelrc),void 0===a&&(o=u.dirname,a=u.options.babelrcRoots),BC(s,l)}var c,p,h="string"==typeof t.filename?{filepath:t.filename,directories:[],pkg:null,isPackage:!1}:null,f={options:[],presets:[],plugins:[]};if((!0===i||void 0===i)&&h&&function(e,t,n,r){if("boolean"==typeof n)return n;var i=e.root;if(void 0===n)return-1!==t.directories.indexOf(i);var a=n;Array.isArray(a)||(a=[a]);if(1===(a=a.map((function(e){return"string"==typeof e?Yx.resolve(r,e):e}))).length&&a[0]===i)return-1!==t.directories.indexOf(i);return a.some((function(n){return"string"==typeof n&&(n=pC(n,r)),t.directories.some((function(t){return WC(n,r,t,e)}))}))}(t,h,a,o)){var d=(t.envName,t.caller,{pkg:null,config:null,ignore:null});if(p=d.config,(c=d.ignore)&&UC(t,c.ignore,null,c.dirname))return null;if(p){var m=SC(EC(p),t);if(!m)return null;BC(f,m)}}var y=BC(BC(BC({options:[],presets:[],plugins:[]},s),f),r);return{plugins:RC(y.plugins),presets:RC(y.presets),options:y.options.map((function(e){return MC(e)})),ignore:c||void 0,babelrc:p||void 0,config:n||void 0}}var bC=eT((function(e){return{filepath:e.filepath,dirname:e.dirname,options:$T("configfile",e.options)}})),EC=eT((function(e){return{filepath:e.filepath,dirname:e.dirname,options:$T("babelrcfile",e.options)}})),AC=eT((function(e){return{filepath:e.filepath,dirname:e.dirname,options:$T("extendsfile",e.options)}})),DC=IC({root:function(e){return PC(e,"base",iT)},env:function(e,t){return FC(e,"base",iT,t)},overrides:function(e,t){return kC(e,"base",iT,t)},overridesEnv:function(e,t,n){return _C(e,"base",iT,t,n)}}),SC=IC({root:function(e){return xC(e)},env:function(e,t){return TC(e)(t)},overrides:function(e,t){return CC(e)(t)},overridesEnv:function(e,t,n){return wC(e)(t)(n)}}),xC=eT((function(e){return PC(e,e.filepath,aT)})),TC=eT((function(e){return Zx((function(t){return FC(e,e.filepath,aT,t)}))})),CC=eT((function(e){return Zx((function(t){return kC(e,e.filepath,aT,t)}))})),wC=eT((function(e){return Zx((function(t){return Zx((function(n){return _C(e,e.filepath,aT,t,n)}))}))}));function PC(e,t,n){return n(e.dirname,e.options,t)}function FC(e,t,n,r){var i=e.dirname,a=e.options,o=a.env&&a.env[r];return o?n(i,o,t+'.env["'+r+'"]'):null}function kC(e,t,n,r){var i=e.dirname,a=e.options,o=a.overrides&&a.overrides[r];if(!o)throw new Error("Assertion failure - missing override");return n(i,o,t+".overrides["+r+"]")}function _C(e,t,n,r,i){var a=e.dirname,o=e.options,s=o.overrides&&o.overrides[r];if(!s)throw new Error("Assertion failure - missing override");var u=s.env&&s.env[i];return u?n(a,u,t+".overrides["+r+'].env["'+i+'"]'):null}function IC(e){var t=e.root,n=e.env,r=e.overrides,i=e.overridesEnv;return function(e,a,o){void 0===o&&(o=new Set);var s=e.dirname,u=[],l=t(e);if(LC(l,s,a)){u.push(l);var c=n(e,a.envName);c&&LC(c,s,a)&&u.push(c),(l.options.overrides||[]).forEach((function(t,n){var o=r(e,n);if(LC(o,s,a)){u.push(o);var l=i(e,n,a.envName);l&&LC(l,s,a)&&u.push(l)}}))}if(u.some((function(e){var t=e.options,n=t.ignore,r=t.only;return UC(a,n,r,s)})))return null;for(var p={options:[],presets:[],plugins:[]},h=0,f=u;h<f.length;h++){var d=f[h];if(!OC(p,d.options,s,a,o))return null;NC(p,d)}return p}}function OC(e,t,n,r,i){if(void 0===t.extends)return!0;var a=Bx(t.extends,n,r.envName,r.caller);if(i.has(a))throw new Error("Configuration cycle detected loading "+a.filepath+".\nFile already loaded following the config chain:\n"+Array.from(i,(function(e){return" - "+e.filepath})).join("\n"));i.add(a);var o=SC(AC(a),r,i);return i.delete(a),!!o&&(BC(e,o),!0)}function BC(e,t){var n,r,i;return(n=e.options).push.apply(n,t.options),(r=e.plugins).push.apply(r,t.plugins),(i=e.presets).push.apply(i,t.presets),e}function NC(e,t){var n,r,i=t.options,a=t.plugins,o=t.presets;return e.options.push(i),(n=e.plugins).push.apply(n,a()),(r=e.presets).push.apply(r,o()),e}function MC(e){var t=Object.assign({},e);return delete t.extends,delete t.env,delete t.overrides,delete t.plugins,delete t.presets,delete t.passPerPreset,delete t.ignore,delete t.only,delete t.test,delete t.include,delete t.exclude,Object.prototype.hasOwnProperty.call(t,"sourceMap")&&(t.sourceMaps=t.sourceMap,delete t.sourceMap),t}function RC(e){var t=new Map,n=[],r=e,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}var s=o;if("function"==typeof s.value){var u=s.value,l=t.get(u);l||(l=new Map,t.set(u,l));var c=l.get(s.name);c?c.value=s:(c={value:s},n.push(c),s.ownPass||l.set(s.name,c))}else n.push({value:s})}return n.reduce((function(e,t){return e.push(t.value),e}),[])}function LC(e,t,n){var r=e.options;return(void 0===r.test||jC(n,r.test,t))&&(void 0===r.include||jC(n,r.include,t))&&(void 0===r.exclude||!jC(n,r.exclude,t))}function jC(e,t,n){return VC(e,Array.isArray(t)?t:[t],n)}function UC(e,t,n,r){return t&&VC(e,t,r)?(hC("Ignored %o because it matched one of %O from %o",e.filename,t,r),!0):!(!n||VC(e,n,r))&&(hC("Ignored %o because it failed to match one of %O from %o",e.filename,n,r),!0)}function VC(e,t,n){return t.some((function(t){return WC(t,n,e.filename,e)}))}function WC(e,t,n,r){if("function"==typeof e)return!!e(n,{dirname:t,envName:r.envName,caller:r.caller});if("string"!=typeof n)throw new Error("Configuration contains string/RegExp pattern, but no filename was passed to Babel");return"string"==typeof e&&(e=pC(e,t)),e.test(n)}var GC={name:RT,manipulateOptions:LT,pre:LT,post:LT,inherits:LT,visitor:function(e,t){var n=UT(e,t);if(n&&(Object.keys(n).forEach((function(e){return function(e,t){if(t&&"object"==typeof t)Object.keys(t).forEach((function(t){if("enter"!==t&&"exit"!==t)throw new Error('.visitor["'+e+'"] may only have .enter and/or .exit handlers.')}));else if("function"!=typeof t)throw new Error('.visitor["'+e+'"] must be a function');return t}(e,n[e])})),n.enter||n.exit))throw new Error("."+e+' cannot contain catch-all "enter" or "exit" handlers. Please target individual nodes.');return n},parserOverride:LT,generatorOverride:LT};function HC(e){if("number"==typeof e){if(!Number.isInteger(e))throw new Error("Expected string or integer value.");e="^"+e+".0.0-0"}if("string"!=typeof e)throw new Error("Expected string or integer value.");if(!Sx.satisfies(Ux,e)){var t=Error.stackTraceLimit;"number"==typeof t&&t<25&&(Error.stackTraceLimit=25);var n=new Error('Requires Babel "'+e+'", but was loaded with "'+Ux+'". If you are sure you have a compatible version of @babel/core, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for the first entry that doesn\'t mention "@babel/core" or "babel-core" to see what is calling Babel.');throw"number"==typeof t&&(Error.stackTraceLimit=t),Object.assign(n,{code:"BABEL_VERSION_UNSUPPORTED",version:Ux,range:e})}}function qC(e){if(null!=e&&("object"!=typeof e||Array.isArray(e)))throw new Error("Babel options must be an object, null, or undefined");var t=e?$T("arguments",e):{},n=t.envName,r=void 0===n?Vx():n,i=t.cwd,a=void 0===i?".":i,o=t.root,s=void 0===o?".":o,u=t.rootMode,l=void 0===u?"root":u,c=t.caller,p=Yx.resolve(a),h=function(e,t){switch(t){case"root":return e;case"upward-optional":return e;case"upward":throw Object.assign(new Error('Babel was run with rootMode:"upward" but a root could not be found when searching upward from "'+e+'".\nOne of the following config files must be in the directory tree: "'+Nx.join(", ")+'".'),{code:"BABEL_ROOT_NOT_FOUND",dirname:e});default:throw new Error("Assertion failure - unknown rootMode value.")}}(Yx.resolve(p,s),l),f={filename:"string"==typeof t.filename?Yx.resolve(a,t.filename):void 0,cwd:p,root:h,envName:r,caller:c},d=gC(t,f);if(!d)return null;var m={};return d.options.forEach((function(e){ET(m,e)})),m.babelrc=!1,m.configFile=!1,m.passPerPreset=!1,m.envName=f.envName,m.cwd=f.cwd,m.root=f.root,m.filename="string"==typeof f.filename?f.filename:void 0,m.plugins=d.plugins.map((function(e){return yT(e)})),m.presets=d.presets.map((function(e){return yT(e)})),{options:m,context:f,ignore:d.ignore,babelrc:d.babelrc,config:d.config}}function KC(e){var t=qC(e);if(!t)return null;var n=t.options,r=t.babelrc,i=t.ignore,a=t.config;return(n.plugins||[]).forEach((function(e){if(e.value instanceof DT)throw new Error("Passing cached plugin instances is not supported in babel.loadPartialConfig()")})),new XC(n,r?r.filepath:void 0,i?i.filepath:void 0,a?a.filepath:void 0)}var XC=function(){function e(e,t,n,r){this.options=e,this.babelignore=n,this.babelrc=t,this.config=r,Object.freeze(this)}return e.prototype.hasFilesystemConfig=function(){return void 0!==this.babelrc||void 0!==this.config},e}();function zC(e){var t=qC(e);if(!t)return null;var n=t.options,r=t.context,i={},a=[[]];try{var o=n.plugins,s=n.presets;if(!o||!s)throw new Error("Assertion failure - plugins and presets exist");if(function e(t,n){var o=t.plugins.reduce((function(e,t){return!1!==t.options&&e.push(YC(t,r)),e}),[]),s=t.presets.reduce((function(e,t){return!1!==t.options&&e.push({preset:ZC(t,r),pass:t.ownPass?[]:n}),e}),[]);if(s.length>0){a.splice.apply(a,[1,0].concat(s.map((function(e){return e.pass})).filter((function(e){return e!==n}))));var u=s,l=Array.isArray(u),c=0;for(u=l?u:u[Symbol.iterator]();;){var p;if(l){if(c>=u.length)break;p=u[c++]}else{if((c=u.next()).done)break;p=c.value}var h=p,f=h.preset,d=h.pass;if(!f)return!0;if(e({plugins:f.plugins,presets:f.presets},d))return!0;f.options.forEach((function(e){ET(i,e)}))}}o.length>0&&n.unshift.apply(n,o)}({plugins:o.map((function(e){var t=gT(e);if(!t)throw new Error("Assertion failure - must be config item");return t})),presets:s.map((function(e){var t=gT(e);if(!t)throw new Error("Assertion failure - must be config item");return t}))},a[0]))return null}catch(e){throw/^\[BABEL\]/.test(e.message)||(e.message="[BABEL] "+(r.filename||"unknown")+": "+e.message),e}var u=i;return ET(u,n),u.plugins=a[0],u.presets=a.slice(1).filter((function(e){return e.length>0})).map((function(e){return{plugins:e}})),u.passPerPreset=u.presets.length>0,{options:u,passes:a}}Object.freeze(XC.prototype);var JC=eT((function(e,n){var r=e.value,i=e.options,a=e.dirname,o=e.alias;if(!1===i)throw new Error("Assertion failure");i=i||{};var s=r;if("function"==typeof r){var u=Object.assign({},t,{},function(e){return{version:Ux,cache:e.simple(),env:function(t){return e.using((function(e){return void 0===t?e.envName:"function"==typeof t?rT(t(e.envName)):(Array.isArray(t)||(t=[t]),t.some((function(t){if("string"!=typeof t)throw new Error("Unexpected non-string value");return t===e.envName})))}))},async:function(){return!1},caller:function(t){return e.using((function(e){return rT(t(e.caller))}))},assertVersion:HC,tokTypes:void 0}}(n));try{s=r(u,i,a)}catch(e){throw o&&(e.message+=" (While processing: "+JSON.stringify(o)+")"),e}}if(!s||"object"!=typeof s)throw new Error("Plugin/Preset did not return an object.");if("function"==typeof s.then)throw new Error("You appear to be using an async plugin, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.");return{value:s,options:i,dirname:a,alias:o}}));function YC(e,t){if(e.value instanceof DT){if(e.options)throw new Error("Passed options to an existing Plugin instance will not work.");return e.value}return $C(JC(e,t),t)}var $C=eT((function(e,t){var n,r,i=e.value,a=e.options,o=e.dirname,s=e.alias,u=(n=i,r={type:"root",source:"plugin"},Object.keys(n).forEach((function(e){var t=GC[e],i={type:"option",name:e,parent:r};if(!t)throw new Error("."+e+" is not a valid Plugin property");t(i,n[e])})),n),l=Object.assign({},u);if(l.visitor&&(l.visitor=JD.explode(Object.assign({},l.visitor))),l.inherits){var c={name:void 0,alias:s+"$inherits",value:l.inherits,options:a,dirname:o},p=t.invalidate((function(e){return YC(c,e)}));l.pre=tw(p.pre,l.pre),l.post=tw(p.post,l.post),l.manipulateOptions=tw(p.manipulateOptions,l.manipulateOptions),l.visitor=JD.visitors.merge([p.visitor||{},l.visitor||{}])}return new DT(l,a,s)})),QC=function(e,t){if(e.test||e.include||e.exclude){var n=t.name?'"'+t.name+'"':"/* your preset */";throw new Error(["Preset "+n+" requires a filename to be set when babel is called directly,","```","babel.transform(code, { filename: 'file.ts', presets: ["+n+"] });","```","See https://babeljs.io/docs/en/options#filename for more information."].join("\n"))}},ZC=function(e,t){var n=ew(JC(e,t));return function(e,t,n){if(!t.filename){var r=e.options;QC(r,n),r.overrides&&r.overrides.forEach((function(e){return QC(e,n)}))}}(n,t,e),function(e,t){var n=fC(e,t);return n?{plugins:RC(n.plugins),presets:RC(n.presets),options:n.options.map((function(e){return MC(e)}))}:null}(n,t)},ew=eT((function(e){var t=e.value,n=e.dirname,r=e.alias;return{options:$T("preset",t),alias:r,dirname:n}}));function tw(e,t){var n=[e,t].filter(Boolean);return n.length<=1?n[0]:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var i=n,a=Array.isArray(i),o=0;for(i=a?i:i[Symbol.iterator]();;){var s;if(a){if(o>=i.length)break;s=i[o++]}else{if((o=i.next()).done)break;s=o.value}var u=s;u.apply(this,t)}}}function nw(e){var t=zC(e);return t?t.options:null}var rw=function(){function e(e,t,n){this._map=new Map,this.key=t,this.file=e,this.opts=n||{},this.cwd=e.opts.cwd,this.filename=e.opts.filename}var t=e.prototype;return t.set=function(e,t){this._map.set(e,t)},t.get=function(e){return this._map.get(e)},t.availableHelper=function(e,t){return this.file.availableHelper(e,t)},t.addHelper=function(e){return this.file.addHelper(e)},t.addImport=function(){return this.file.addImport()},t.getModuleName=function(){return this.file.getModuleName()},t.buildCodeFrameError=function(e,t,n){return this.file.buildCodeFrameError(e,t,n)},e}(),iw=Kt?Kt.isConcatSpreadable:void 0;var aw=function(e){return pr(e)||cr(e)||!!(iw&&e&&e[iw])};var ow=function e(t,n,r,i,a){var o=-1,s=t.length;for(r||(r=aw),a||(a=[]);++o<s;){var u=t[o];n>0&&r(u)?n>1?e(u,n-1,r,i,a):Jr(a,u):i||(a[a.length]=u)}return a};var sw=function(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1},uw=1,lw=2;var cw=function(e,t,n,r,i,a){var o=n&uw,s=e.length,u=t.length;if(s!=u&&!(o&&u>s))return!1;var l=a.get(e);if(l&&a.get(t))return l==t;var c=-1,p=!0,h=n&lw?new Cp:void 0;for(a.set(e,t),a.set(t,e);++c<s;){var f=e[c],d=t[c];if(r)var m=o?r(d,f,c,t,e,a):r(f,d,c,e,t,a);if(void 0!==m){if(m)continue;p=!1;break}if(h){if(!sw(t,(function(e,t){if(!Op(h,t)&&(f===e||i(f,e,n,r,a)))return h.push(t)}))){p=!1;break}}else if(f!==d&&!i(f,d,n,r,a)){p=!1;break}}return a.delete(e),a.delete(t),p};var pw=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n},hw=1,fw=2,dw="[object Boolean]",mw="[object Date]",yw="[object Error]",vw="[object Map]",gw="[object Number]",bw="[object RegExp]",Ew="[object Set]",Aw="[object String]",Dw="[object Symbol]",Sw="[object ArrayBuffer]",xw="[object DataView]",Tw=Kt?Kt.prototype:void 0,Cw=Tw?Tw.valueOf:void 0;var ww=function(e,t,n,r,i,a,o){switch(n){case xw:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case Sw:return!(e.byteLength!=t.byteLength||!a(new mi(e),new mi(t)));case dw:case mw:case gw:return Ct(+e,+t);case yw:return e.name==t.name&&e.message==t.message;case bw:case Aw:return e==t+"";case vw:var s=pw;case Ew:var u=r&hw;if(s||(s=Np),e.size!=t.size&&!u)return!1;var l=o.get(e);if(l)return l==t;r|=fw,o.set(e,t);var c=cw(s(e),s(t),r,i,a,o);return o.delete(e),c;case Dw:if(Cw)return Cw.call(e)==Cw.call(t)}return!1},Pw=1,Fw=Object.prototype.hasOwnProperty;var kw=function(e,t,n,r,i,a){var o=n&Pw,s=ei(e),u=s.length;if(u!=ei(t).length&&!o)return!1;for(var l=u;l--;){var c=s[l];if(!(o?c in t:Fw.call(t,c)))return!1}var p=a.get(e);if(p&&a.get(t))return p==t;var h=!0;a.set(e,t),a.set(t,e);for(var f=o;++l<u;){var d=e[c=s[l]],m=t[c];if(r)var y=o?r(m,d,c,t,e,a):r(d,m,c,e,t,a);if(!(void 0===y?d===m||i(d,m,n,r,a):y)){h=!1;break}f||(f="constructor"==c)}if(h&&!f){var v=e.constructor,g=t.constructor;v!=g&&"constructor"in e&&"constructor"in t&&!("function"==typeof v&&v instanceof v&&"function"==typeof g&&g instanceof g)&&(h=!1)}return a.delete(e),a.delete(t),h},_w=1,Iw="[object Arguments]",Ow="[object Array]",Bw="[object Object]",Nw=Object.prototype.hasOwnProperty;var Mw=function(e,t,n,r,i,a){var o=pr(e),s=pr(t),u=o?Ow:hi(e),l=s?Ow:hi(t),c=(u=u==Iw?Bw:u)==Bw,p=(l=l==Iw?Bw:l)==Bw,h=u==l;if(h&&fr(e)){if(!fr(t))return!1;o=!0,c=!1}if(h&&!c)return a||(a=new Yn),o||xr(e)?cw(e,t,n,r,i,a):ww(e,t,u,n,r,i,a);if(!(n&_w)){var f=c&&Nw.call(e,"__wrapped__"),d=p&&Nw.call(t,"__wrapped__");if(f||d){var m=f?e.value():e,y=d?t.value():t;return a||(a=new Yn),i(m,y,n,r,a)}}return!!h&&(a||(a=new Yn),kw(e,t,n,r,i,a))};var Rw=function e(t,n,r,i,a){return t===n||(null==t||null==n||!ir(t)&&!ir(n)?t!=t&&n!=n:Mw(t,n,r,i,e,a))},Lw=1,jw=2;var Uw=function(e,t,n,r){var i=n.length,a=i,o=!r;if(null==e)return!a;for(e=Object(e);i--;){var s=n[i];if(o&&s[2]?s[1]!==e[s[0]]:!(s[0]in e))return!1}for(;++i<a;){var u=(s=n[i])[0],l=e[u],c=s[1];if(o&&s[2]){if(void 0===l&&!(u in e))return!1}else{var p=new Yn;if(r)var h=r(l,c,u,e,t,p);if(!(void 0===h?Rw(c,l,Lw|jw,r,p):h))return!1}}return!0};var Vw=function(e){return e==e&&!an(e)};var Ww=function(e){for(var t=Br(e),n=t.length;n--;){var r=t[n],i=e[r];t[n]=[r,i,Vw(i)]}return t};var Gw=function(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in Object(n)))}};var Hw=function(e){var t=Ww(e);return 1==t.length&&t[0][2]?Gw(t[0][0],t[0][1]):function(n){return n===e||Uw(n,e,t)}},qw=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Kw=/^\w*$/;var Xw=function(e,t){if(pr(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!Ed(e))||(Kw.test(e)||!qw.test(e)||null!=t&&e in Object(t))},zw="Expected a function";function Jw(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError(zw);var n=function n(){var r=arguments,i=t?t.apply(this,r):r[0],a=n.cache;if(a.has(i))return a.get(i);var o=e.apply(this,r);return n.cache=a.set(i,o)||a,o};return n.cache=new(Jw.Cache||Kn),n}Jw.Cache=Kn;var Yw=Jw,$w=500;var Qw=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Zw=/\\(\\)?/g,eP=function(e){var t=Yw(e,(function(e){return n.size===$w&&n.clear(),e})),n=t.cache;return t}((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(Qw,(function(e,n,r,i){t.push(r?i.replace(Zw,"$1"):n||e)})),t}));var tP=function(e,t){return pr(e)?e:Xw(e,t)?[e]:eP(qd(e))},nP=1/0;var rP=function(e){if("string"==typeof e||Ed(e))return e;var t=e+"";return"0"==t&&1/e==-nP?"-0":t};var iP=function(e,t){for(var n=0,r=(t=tP(t,e)).length;null!=e&&n<r;)e=e[rP(t[n++])];return n&&n==r?e:void 0};var aP=function(e,t,n){var r=null==e?void 0:iP(e,t);return void 0===r?n:r};var oP=function(e,t){return null!=e&&t in Object(e)};var sP=function(e,t,n){for(var r=-1,i=(t=tP(t,e)).length,a=!1;++r<i;){var o=rP(t[r]);if(!(a=null!=e&&n(e,o)))break;e=e[o]}return a||++r!=i?a:!!(i=null==e?0:e.length)&&gr(i)&&yr(o,i)&&(pr(e)||cr(e))};var uP=function(e,t){return null!=e&&sP(e,t,oP)},lP=1,cP=2;var pP=function(e,t){return Xw(e)&&Vw(t)?Gw(rP(e),t):function(n){var r=aP(n,e);return void 0===r&&r===t?uP(n,e):Rw(t,r,lP|cP)}};var hP=function(e){return function(t){return null==t?void 0:t[e]}};var fP=function(e){return function(t){return iP(t,e)}};var dP=function(e){return Xw(e)?hP(rP(e)):fP(e)};var mP=function(e){return"function"==typeof e?e:null==e?$d:"object"==typeof e?pr(e)?pP(e[0],e[1]):Hw(e):dP(e)};var yP=function(e){return function(t,n,r){for(var i=-1,a=Object(t),o=r(t),s=o.length;s--;){var u=o[e?s:++i];if(!1===n(a[u],u,a))break}return t}}();var vP=function(e,t){return function(n,r){if(null==n)return n;if(!Or(n))return e(n,r);for(var i=n.length,a=t?i:-1,o=Object(n);(t?a--:++a<i)&&!1!==r(o[a],a,o););return n}}((function(e,t){return e&&yP(e,t,Br)}));var gP=function(e,t){var n=-1,r=Or(e)?Array(e.length):[];return vP(e,(function(e,i,a){r[++n]=t(e,i,a)})),r};var bP=function(e,t){var n=e.length;for(e.sort(t);n--;)e[n]=e[n].value;return e};var EP=function(e,t){if(e!==t){var n=void 0!==e,r=null===e,i=e==e,a=Ed(e),o=void 0!==t,s=null===t,u=t==t,l=Ed(t);if(!s&&!l&&!a&&e>t||a&&o&&u&&!s&&!l||r&&o&&u||!n&&u||!i)return 1;if(!r&&!a&&!l&&e<t||l&&n&&i&&!r&&!a||s&&n&&i||!o&&i||!u)return-1}return 0};var AP=function(e,t,n){for(var r=-1,i=e.criteria,a=t.criteria,o=i.length,s=n.length;++r<o;){var u=EP(i[r],a[r]);if(u)return r>=s?u:u*("desc"==n[r]?-1:1)}return e.index-t.index};var DP,SP=function(e,t,n){var r=-1;t=Id(t.length?t:[$d],Ar(mP));var i=gP(e,(function(e,n,i){return{criteria:Id(t,(function(t){return t(e)})),index:++r,value:e}}));return bP(i,(function(e,t){return AP(e,t,n)}))},xP=sm((function(e,t){if(null==e)return[];var n=t.length;return n>1&&Ud(e,t[0],t[1])?t=[]:n>2&&Ud(t[0],t[1],t[2])&&(t=[t[0]]),SP(e,ow(t,1),[])}));function TP(){if(!DP){var e=zC({babelrc:!1,configFile:!1,plugins:[CP]});if(!(DP=e?e.passes[0][0]:void 0))throw new Error("Assertion failure")}return DP}var CP={name:"internal.blockHoist",visitor:{Block:{exit:function(e){for(var t=e.node,n=!1,r=0;r<t.body.length;r++){var i=t.body[r];if(i&&null!=i._blockHoist){n=!0;break}}n&&(t.body=xP(t.body,(function(e){var t=e&&e._blockHoist;return null==t&&(t=1),!0===t&&(t=2),-1*t})))}}}};function wP(e){var t=e.options,n=t.filename,r=t.cwd,i=t.filenameRelative,a=void 0===i?"string"==typeof n?Yx.relative(r,n):"unknown":i,o=t.sourceType,s=void 0===o?"module":o,u=t.inputSourceMap,l=t.sourceMaps,c=void 0===l?!!u:l,p=t.moduleRoot,h=t.sourceRoot,f=void 0===h?p:h,d=t.sourceFileName,m=void 0===d?Yx.basename(a):d,y=t.comments,v=void 0===y||y,g=t.compact,b=void 0===g?"auto":g,E=e.options,A=Object.assign({},E,{parserOpts:Object.assign({sourceType:".mjs"===Yx.extname(a)?"module":s,sourceFileName:n,plugins:[]},E.parserOpts),generatorOpts:Object.assign({filename:n,auxiliaryCommentBefore:E.auxiliaryCommentBefore,auxiliaryCommentAfter:E.auxiliaryCommentAfter,retainLines:E.retainLines,comments:v,shouldPrintComment:E.shouldPrintComment,compact:b,minified:E.minified,sourceMaps:c,sourceRoot:f,sourceFileName:m},E.generatorOpts)}),D=e.passes,S=Array.isArray(D),x=0;for(D=S?D:D[Symbol.iterator]();;){var T;if(S){if(x>=D.length)break;T=D[x++]}else{if((x=D.next()).done)break;T=x.value}var C=T,w=Array.isArray(C),P=0;for(C=w?C:C[Symbol.iterator]();;){var F;if(w){if(P>=C.length)break;F=C[P++]}else{if((P=C.next()).done)break;F=P.value}var k=F;k.manipulateOptions&&k.manipulateOptions(A,A.parserOpts)}}return A}var PP=1,FP=4;var kP=function(e){return la(e,PP|FP)},_P=Object.freeze({__proto__:null,default:{}}),IP=Vt((function(e,t){var n=bg.Buffer;function r(e,t){for(var n in e)t[n]=e[n]}function i(e,t,r){return n(e,t,r)}n.from&&n.alloc&&n.allocUnsafe&&n.allocUnsafeSlow?e.exports=bg:(r(bg,t),t.Buffer=i),r(n,i),i.from=function(e,t,r){if("number"==typeof e)throw new TypeError("Argument must not be a number");return n(e,t,r)},i.alloc=function(e,t,r){if("number"!=typeof e)throw new TypeError("Argument must be a number");var i=n(e);return void 0!==t?"string"==typeof r?i.fill(t,r):i.fill(t):i.fill(0),i},i.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return n(e)},i.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return bg.SlowBuffer(e)}})),OP=(IP.Buffer,Wt(_P)),BP=Vt((function(e,t){function n(e,n){(n=n||{}).isFileComment&&(e=function(e,n){var r=t.mapFileCommentRegex.exec(e),i=r[1]||r[2],a=Yx.resolve(n,i);try{return OP.readFileSync(a,"utf8")}catch(e){throw new Error("An error occurred while trying to read the map file at "+a+"\n"+e)}}(e,n.commentFileDir)),n.hasComment&&(e=function(e){return e.split(",").pop()}(e)),n.isEncoded&&(e=function(e){return IP.Buffer.from(e,"base64").toString()}(e)),(n.isJSON||n.isEncoded)&&(e=JSON.parse(e)),this.sourcemap=e}Object.defineProperty(t,"commentRegex",{get:function(){return/^\s*\/(?:\/|\*)[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+?;)?base64,(?:.*)$/gm}}),Object.defineProperty(t,"mapFileCommentRegex",{get:function(){return/(?:\/\/[@#][ \t]+sourceMappingURL=([^\s'"`]+?)[ \t]*$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^\*]+?)[ \t]*(?:\*\/){1}[ \t]*$)/gm}}),n.prototype.toJSON=function(e){return JSON.stringify(this.sourcemap,null,e)},n.prototype.toBase64=function(){var e=this.toJSON();return IP.Buffer.from(e,"utf8").toString("base64")},n.prototype.toComment=function(e){var t="sourceMappingURL=data:application/json;charset=utf-8;base64,"+this.toBase64();return e&&e.multiline?"/*# "+t+" */":"//# "+t},n.prototype.toObject=function(){return JSON.parse(this.toJSON())},n.prototype.addProperty=function(e,t){if(this.sourcemap.hasOwnProperty(e))throw new Error('property "'+e+'" already exists on the sourcemap, use set property instead');return this.setProperty(e,t)},n.prototype.setProperty=function(e,t){return this.sourcemap[e]=t,this},n.prototype.getProperty=function(e){return this.sourcemap[e]},t.fromObject=function(e){return new n(e)},t.fromJSON=function(e){return new n(e,{isJSON:!0})},t.fromBase64=function(e){return new n(e,{isEncoded:!0})},t.fromComment=function(e){return new n(e=e.replace(/^\/\*/g,"//").replace(/\*\/$/g,""),{isEncoded:!0,hasComment:!0})},t.fromMapFileComment=function(e,t){return new n(e,{commentFileDir:t,isFileComment:!0,isJSON:!0})},t.fromSource=function(e){var n=e.match(t.commentRegex);return n?t.fromComment(n.pop()):null},t.fromMapFileSource=function(e,n){var r=e.match(t.mapFileCommentRegex);return r?t.fromMapFileComment(r.pop(),n):null},t.removeComments=function(e){return e.replace(t.commentRegex,"")},t.removeMapFileComments=function(e){return e.replace(t.mapFileCommentRegex,"")},t.generateMapFileComment=function(e,t){var n="sourceMappingURL="+e;return t&&t.multiline?"/*# "+n+" */":"//# "+n}})),NP=(BP.fromObject,BP.fromJSON,BP.fromBase64,BP.fromComment,BP.fromMapFileComment,BP.fromSource,BP.fromMapFileSource,BP.removeComments,BP.removeMapFileComments,BP.generateMapFileComment,{classProperties:{syntax:{name:"@babel/plugin-syntax-class-properties",url:"https://git.io/vb4yQ"},transform:{name:"@babel/plugin-proposal-class-properties",url:"https://git.io/vb4SL"}},decorators:{syntax:{name:"@babel/plugin-syntax-decorators",url:"https://git.io/vb4y9"},transform:{name:"@babel/plugin-proposal-decorators",url:"https://git.io/vb4ST"}},doExpressions:{syntax:{name:"@babel/plugin-syntax-do-expressions",url:"https://git.io/vb4yh"},transform:{name:"@babel/plugin-proposal-do-expressions",url:"https://git.io/vb4S3"}},dynamicImport:{syntax:{name:"@babel/plugin-syntax-dynamic-import",url:"https://git.io/vb4Sv"}},exportDefaultFrom:{syntax:{name:"@babel/plugin-syntax-export-default-from",url:"https://git.io/vb4SO"},transform:{name:"@babel/plugin-proposal-export-default-from",url:"https://git.io/vb4yH"}},exportNamespaceFrom:{syntax:{name:"@babel/plugin-syntax-export-namespace-from",url:"https://git.io/vb4Sf"},transform:{name:"@babel/plugin-proposal-export-namespace-from",url:"https://git.io/vb4SG"}},flow:{syntax:{name:"@babel/plugin-syntax-flow",url:"https://git.io/vb4yb"},transform:{name:"@babel/plugin-transform-flow-strip-types",url:"https://git.io/vb49g"}},functionBind:{syntax:{name:"@babel/plugin-syntax-function-bind",url:"https://git.io/vb4y7"},transform:{name:"@babel/plugin-proposal-function-bind",url:"https://git.io/vb4St"}},functionSent:{syntax:{name:"@babel/plugin-syntax-function-sent",url:"https://git.io/vb4yN"},transform:{name:"@babel/plugin-proposal-function-sent",url:"https://git.io/vb4SZ"}},importMeta:{syntax:{name:"@babel/plugin-syntax-import-meta",url:"https://git.io/vbKK6"}},jsx:{syntax:{name:"@babel/plugin-syntax-jsx",url:"https://git.io/vb4yA"},transform:{name:"@babel/plugin-transform-react-jsx",url:"https://git.io/vb4yd"}},logicalAssignment:{syntax:{name:"@babel/plugin-syntax-logical-assignment-operators",url:"https://git.io/vAlBp"},transform:{name:"@babel/plugin-proposal-logical-assignment-operators",url:"https://git.io/vAlRe"}},nullishCoalescingOperator:{syntax:{name:"@babel/plugin-syntax-nullish-coalescing-operator",url:"https://git.io/vb4yx"},transform:{name:"@babel/plugin-proposal-nullish-coalescing-operator",url:"https://git.io/vb4Se"}},numericSeparator:{syntax:{name:"@babel/plugin-syntax-numeric-separator",url:"https://git.io/vb4Sq"},transform:{name:"@babel/plugin-proposal-numeric-separator",url:"https://git.io/vb4yS"}},optionalChaining:{syntax:{name:"@babel/plugin-syntax-optional-chaining",url:"https://git.io/vb4Sc"},transform:{name:"@babel/plugin-proposal-optional-chaining",url:"https://git.io/vb4Sk"}},pipelineOperator:{syntax:{name:"@babel/plugin-syntax-pipeline-operator",url:"https://git.io/vb4yj"},transform:{name:"@babel/plugin-proposal-pipeline-operator",url:"https://git.io/vb4SU"}},throwExpressions:{syntax:{name:"@babel/plugin-syntax-throw-expressions",url:"https://git.io/vb4SJ"},transform:{name:"@babel/plugin-proposal-throw-expressions",url:"https://git.io/vb4yF"}},typescript:{syntax:{name:"@babel/plugin-syntax-typescript",url:"https://git.io/vb4SC"},transform:{name:"@babel/plugin-transform-typescript",url:"https://git.io/vb4Sm"}},asyncGenerators:{syntax:{name:"@babel/plugin-syntax-async-generators",url:"https://git.io/vb4SY"},transform:{name:"@babel/plugin-proposal-async-generator-functions",url:"https://git.io/vb4yp"}},objectRestSpread:{syntax:{name:"@babel/plugin-syntax-object-rest-spread",url:"https://git.io/vb4y5"},transform:{name:"@babel/plugin-proposal-object-rest-spread",url:"https://git.io/vb4Ss"}},optionalCatchBinding:{syntax:{name:"@babel/plugin-syntax-optional-catch-binding",url:"https://git.io/vb4Sn"},transform:{name:"@babel/plugin-proposal-optional-catch-binding",url:"https://git.io/vb4SI"}}}),MP=function(e){return e.name+" ("+e.url+")"};var RP=IT("babel:transform:file");function LP(e,t,n,r){if(n=""+(n||""),r){if("Program"===r.type)r=ts(r,[],[]);else if("File"!==r.type)throw new Error("AST root must be a Program or File node");r=kP(r)}else r=function(e,t,n){var r=t.parserOpts,i=t.highlightCode,a=void 0===i||i,o=t.filename,s=void 0===o?"unknown":o;try{var u=[],l=e,c=Array.isArray(l),p=0;for(l=c?l:l[Symbol.iterator]();;){var h;if(c){if(p>=l.length)break;h=l[p++]}else{if((p=l.next()).done)break;h=p.value}var f=h,d=Array.isArray(f),m=0;for(f=d?f:f[Symbol.iterator]();;){var y;if(d){if(m>=f.length)break;y=f[m++]}else{if((m=f.next()).done)break;y=m.value}var v=y.parserOverride;if(v){var g=v(n,r,DA);void 0!==g&&u.push(g)}}}if(0===u.length)return DA(n,r);if(1===u.length){if("function"==typeof u[0].then)throw new Error("You appear to be using an async parser plugin, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.");return u[0]}throw new Error("More than one plugin attempted to override parsing.")}catch(e){"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED"===e.code&&(e.message+="\nConsider renaming the file to '.mjs', or setting sourceType:module or sourceType:unambiguous in your Babel config for this file.");var b=e.loc,E=e.missingPlugin;if(b){var A=Qb(n,{start:{line:b.line,column:b.column+1}},{highlightCode:a});e.message=E?s+": "+function(e,t,n){var r="Support for the experimental syntax '"+e+"' isn't currently enabled ("+t.line+":"+(t.column+1)+"):\n\n"+n,i=NP[e];if(i){var a=i.syntax,o=i.transform;if(a)if(o)r+="\n\nAdd "+MP(o)+" to the 'plugins' section of your Babel config to enable transformation.";else r+="\n\nAdd "+MP(a)+" to the 'plugins' section of your Babel config to enable parsing."}return r}(E[0],b,A):s+": "+e.message+"\n\n"+A,e.code="BABEL_PARSE_ERROR"}throw e}}(e,t,n);var i=null;if(!1!==t.inputSourceMap){if("object"==typeof t.inputSourceMap&&(i=BP.fromObject(t.inputSourceMap)),!i){var a=WP(jP,r);if(a)try{i=BP.fromComment(a)}catch(e){RP("discarding unknown inline input sourcemap",e)}}if(!i){var o=WP(UP,r);if("string"==typeof t.filename&&o)try{i=BP.fromMapFileComment("//"+o,Yx.dirname(t.filename))}catch(e){RP("discarding unknown file input sourcemap",e)}else o&&RP("discarding un-loadable file input sourcemap")}}return new Tx(t,{code:n,ast:r,inputMap:i})}var jP=/^[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+?;)?base64,(?:.*)$/,UP=/^[@#][ \t]+sourceMappingURL=(?:[^\s'"`]+?)[ \t]*$/;function VP(e,t,n){return t&&(t=t.filter((function(t){var r=t.value;return!e.test(r)||(n=r,!1)}))),[t,n]}function WP(e,t){var n=null;return Wh(t,(function(t){var r=VP(e,t.leadingComments,n);t.leadingComments=r[0],n=r[1];var i=VP(e,t.innerComments,n);t.innerComments=i[0],n=i[1];var a=VP(e,t.trailingComments,n);t.trailingComments=a[0],n=a[1]})),n}function GP(e,t){var n=qP(e),r=qP(t),i=new ky.SourceMapGenerator,a=n.sources,o=Array.isArray(a),s=0;for(a=o?a:a[Symbol.iterator]();;){var u;if(o){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}var l=u.source;"string"==typeof l.content&&i.setSourceContent(l.path,l.content)}if(1===r.sources.length){var c=r.sources[0],p=new Map;!function(e,t){var n=e.sources,r=Array.isArray(n),i=0;for(n=r?n:n[Symbol.iterator]();;){var a;if(r){if(i>=n.length)break;a=n[i++]}else{if((i=n.next()).done)break;a=i.value}var o=a,s=o.source,u=o.mappings,l=Array.isArray(u),c=0;for(u=l?u:u[Symbol.iterator]();;){var p;if(l){if(c>=u.length)break;p=u[c++]}else{if((c=u.next()).done)break;p=c.value}var h=p,f=h.original,d=h.generated,m=Array.isArray(d),y=0;for(d=m?d:d[Symbol.iterator]();;){var v;if(m){if(y>=d.length)break;v=d[y++]}else{if((y=d.next()).done)break;v=y.value}t(v,f,s)}}}}(n,(function(e,t,n){!function(e,t,n){var r=function(e,t){var n=e.mappings,r=t.line,i=t.columnStart,a=t.columnEnd;return function(e,t){for(var n=function(e,t){var n=0,r=e.length;for(;n<r;){var i=Math.floor((n+r)/2),a=e[i],o=t(a);if(0===o){n=i;break}o>=0?r=i:n=i+1}var s=n;if(s<e.length){for(;s>=0&&t(e[s])>=0;)s--;return s+1}return s}(e,t),r=[],i=n;i<e.length&&0===t(e[i]);i++)r.push(e[i]);return r}(n,(function(e){var t=e.original;return r>t.line?-1:r<t.line?1:i>=t.columnEnd?-1:a<=t.columnStart?1:0}))}(e,t),i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}var s=o.generated,u=Array.isArray(s),l=0;for(s=u?s:s[Symbol.iterator]();;){var c;if(u){if(l>=s.length)break;c=s[l++]}else{if((l=s.next()).done)break;c=l.value}n(c)}}}(c,e,(function(e){var r=HP(e);p.has(r)||(p.set(r,e),i.addMapping({source:n.path,original:{line:t.line,column:t.columnStart},generated:{line:e.line,column:e.columnStart},name:t.name}))}))}));var h=p.values(),f=Array.isArray(h),d=0;for(h=f?h:h[Symbol.iterator]();;){var m;if(f){if(d>=h.length)break;m=h[d++]}else{if((d=h.next()).done)break;m=d.value}var y=m;if(y.columnEnd!==1/0){var v={line:y.line,columnStart:y.columnEnd},g=HP(v);p.has(g)||i.addMapping({generated:{line:v.line,column:v.columnStart}})}}}var b=i.toJSON();return"string"==typeof n.sourceRoot&&(b.sourceRoot=n.sourceRoot),b}function HP(e){return e.line+"/"+e.columnStart}function qP(e){var t=new ky.SourceMapConsumer(Object.assign({},e,{sourceRoot:null})),n=new Map,r=new Map,i=null;return t.computeColumnSpans(),t.eachMapping((function(e){if(null!==e.originalLine){var a=n.get(e.source);a||(a={path:e.source,content:t.sourceContentFor(e.source,!0)},n.set(e.source,a));var o=r.get(a);o||(o={source:a,mappings:[]},r.set(a,o));var s={line:e.originalLine,columnStart:e.originalColumn,columnEnd:1/0,name:e.name};i&&i.source===a&&i.mapping.line===e.originalLine&&(i.mapping.columnEnd=e.originalColumn),i={source:a,mapping:s},o.mappings.push({original:s,generated:t.allGeneratedPositionsFor({source:e.source,line:e.originalLine,column:e.originalColumn}).map((function(e){return{line:e.line,columnStart:e.column,columnEnd:e.lastColumn+1}}))})}}),null,ky.SourceMapConsumer.ORIGINAL_ORDER),{file:e.file,sourceRoot:e.sourceRoot,sources:Array.from(r.values())}}function KP(e,t,n,r){var i;try{i=XP(e,t,n)}catch(e){return r(e)}return r(null,i)}function XP(e,t,n){var r,i,a=LP(e.passes,wP(e),t,n),o=a.opts;try{!function(e,t){var n=t,r=Array.isArray(n),i=0;for(n=r?n:n[Symbol.iterator]();;){var a;if(r){if(i>=n.length)break;a=n[i++]}else{if((i=n.next()).done)break;a=i.value}var o=[],s=[],u=[],l=a.concat([TP()]),c=Array.isArray(l),p=0;for(l=c?l:l[Symbol.iterator]();;){var h;if(c){if(p>=l.length)break;h=l[p++]}else{if((p=l.next()).done)break;h=p.value}var f=h,d=new rw(e,f.key,f.options);o.push([f,d]),s.push(d),u.push(f.visitor)}for(var m=0,y=o;m<y.length;m++){var v=y[m],g=v[0],b=v[1],E=g.pre;if(E)if(zP(E.call(b,e)))throw new Error("You appear to be using an plugin with an async .pre, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.")}var A=JD.visitors.merge(u,s,e.opts.wrapPluginVisitorMethod);JD(e.ast,A,e.scope);for(var D=0,S=o;D<S.length;D++){var x=S[D],T=x[0],C=x[1],w=T.post;if(w)if(zP(w.call(C,e)))throw new Error("You appear to be using an plugin with an async .post, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.")}}}(a,e.passes)}catch(e){var s;throw e.message=(null!=(s=o.filename)?s:"unknown")+": "+e.message,e.code||(e.code="BABEL_TRANSFORM_ERROR"),e}try{if(!1!==o.code){var u=function(e,t){var n,r=t.opts,i=t.ast,a=t.code,o=t.inputMap,s=[],u=e,l=Array.isArray(u),c=0;for(u=l?u:u[Symbol.iterator]();;){var p;if(l){if(c>=u.length)break;p=u[c++]}else{if((c=u.next()).done)break;p=c.value}var h=p,f=Array.isArray(h),d=0;for(h=f?h:h[Symbol.iterator]();;){var m;if(f){if(d>=h.length)break;m=h[d++]}else{if((d=h.next()).done)break;m=d.value}var y=m.generatorOverride;if(y){var v=y(i,r.generatorOpts,a,rb);void 0!==v&&s.push(v)}}}if(0===s.length)n=rb(i,r.generatorOpts,a);else{if(1!==s.length)throw new Error("More than one plugin attempted to override codegen.");if("function"==typeof(n=s[0]).then)throw new Error("You appear to be using an async codegen plugin, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @babel/core version.")}var g=n,b=g.code,E=g.map;return E&&o&&(E=GP(o.toObject(),E)),"inline"!==r.sourceMaps&&"both"!==r.sourceMaps||(b+="\n"+BP.fromObject(E).toComment()),"inline"===r.sourceMaps&&(E=null),{outputCode:b,outputMap:E}}(e.passes,a);r=u.outputCode,i=u.outputMap}}catch(e){var l;throw e.message=(null!=(l=o.filename)?l:"unknown")+": "+e.message,e.code||(e.code="BABEL_GENERATE_ERROR"),e}return{metadata:a.metadata,options:o,ast:!0===o.ast?a.ast:null,code:void 0===r?null:r,map:void 0===i?null:i,sourceType:a.ast.program.sourceType}}function zP(e){return!(!e||"object"!=typeof e&&"function"!=typeof e||!e.then||"function"!=typeof e.then)}var JP=function(e,t,n){if("function"==typeof t&&(n=t,t=void 0),void 0===n)return YP(e,t);var r=n;Xf((function(){var n;try{if(null===(n=zC(t)))return r(null,null)}catch(e){return r(e)}KP(n,e,null,r)}))};function YP(e,t){var n=zC(t);return null===n?null:XP(n,e)}function $P(e,t){return new Promise((function(n,r){JP(e,t,(function(e,t){null==e?n(t):r(e)}))}))}var QP=function(e,t,n){"function"==typeof t&&(n=t),n(new Error("Transforming files is not supported in browsers"),null)};function ZP(){throw new Error("Transforming files is not supported in browsers")}function eF(){return Promise.reject(new Error("Transforming files is not supported in browsers"))}var tF=function(e,t,n,r){if("function"==typeof n&&(r=n,n=void 0),void 0===r)return nF(e,t,n);var i=r;Xf((function(){var r;try{if(null===(r=zC(n)))return i(null,null)}catch(e){return i(e)}if(!e)return i(new Error("No AST given"));KP(r,t,e,i)}))};function nF(e,t,n){var r=zC(n);if(null===r)return null;if(!e)throw new Error("No AST given");return XP(r,t,e)}function rF(e,t,n){return new Promise((function(r,i){tF(e,t,n,(function(e,t){null==e?r(t):i(e)}))}))}var iF=function(e,t,n){if("function"==typeof t&&(n=t,t=void 0),void 0===n)return aF(e,t);if(null===zC(t))return null;var r=n;Xf((function(){var n=null;try{var i=zC(t);if(null===i)return r(null,null);n=LP(i.passes,wP(i),e).ast}catch(e){return r(e)}r(null,n)}))};function aF(e,t){var n=zC(t);return null===n?null:LP(n.passes,wP(n),e).ast}function oF(e,t){return new Promise((function(n,r){iF(e,t,(function(e,t){null==e?n(t):r(e)}))}))}var sF=Object.freeze([".js",".jsx",".es6",".es",".mjs"]),uF=function(){function e(){}return e.prototype.init=function(e){return nw(e)},e}();function lF(e){throw new Error("The ("+e+") Babel 5 plugin is being run with an unsupported Babel version.")}function cF(e){return function(t,n,r){return t.assertVersion||(t=Object.assign(function(e){var t=null;"string"==typeof e.version&&/^7\./.test(e.version)&&(!(t=Object.getPrototypeOf(e))||pF(t,"version")&&pF(t,"transform")&&pF(t,"template")&&pF(t,"types")||(t=null));return Object.assign({},t,{},e)}(t),{assertVersion:function(e){!function(e,t){if("number"==typeof e){if(!Number.isInteger(e))throw new Error("Expected string or integer value.");e="^"+e+".0.0-0"}if("string"!=typeof e)throw new Error("Expected string or integer value.");var n,r=Error.stackTraceLimit;"number"==typeof r&&r<25&&(Error.stackTraceLimit=25);n="7."===t.slice(0,2)?new Error('Requires Babel "^7.0.0-beta.41", but was loaded with "'+t+"\". You'll need to update your @babel/core version."):new Error('Requires Babel "'+e+'", but was loaded with "'+t+'". If you are sure you have a compatible version of @babel/core, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for the first entry that doesn\'t mention "@babel/core" or "babel-core" to see what is calling Babel.');"number"==typeof r&&(Error.stackTraceLimit=r);throw Object.assign(n,{code:"BABEL_VERSION_UNSUPPORTED",version:t,range:e})}(e,t.version)}})),e(t,n||{},r)}}function pF(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var hF=cF((function(e,t){e.assertVersion(7);var n=t.helperVersion,r=void 0===n?"7.0.0-beta.0":n,i=t.whitelist,a=void 0!==i&&i;if(!1!==a&&(!Array.isArray(a)||a.some((function(e){return"string"!=typeof e}))))throw new Error(".whitelist must be undefined, false, or an array of strings");var o=a?new Set(a):null;return{name:"external-helpers",pre:function(e){e.set("helperGenerator",(function(t){if((!e.availableHelper||e.availableHelper(t,r))&&(!o||o.has(t)))return ms(os("babelHelpers"),os(t))}))}}})),fF=cF((function(e){return e.assertVersion(7),{name:"syntax-async-generators",manipulateOptions:function(e,t){t.plugins.push("asyncGenerators")}}})),dF=cF((function(e){return e.assertVersion(7),{name:"syntax-class-properties",manipulateOptions:function(e,t){t.plugins.push("classProperties","classPrivateProperties","classPrivateMethods")}}})),mF=cF((function(e,t){e.assertVersion(7);var n=t.legacy,r=void 0!==n&&n;if("boolean"!=typeof r)throw new Error("'legacy' must be a boolean.");var i=t.decoratorsBeforeExport;if(void 0===i){if(!r)throw new Error("The '@babel/plugin-syntax-decorators' plugin requires a 'decoratorsBeforeExport' option, whose value must be a boolean. If you want to use the legacy decorators semantics, you can set the 'legacy: true' option.")}else{if(r)throw new Error("'decoratorsBeforeExport' can't be used with legacy decorators.");if("boolean"!=typeof i)throw new Error("'decoratorsBeforeExport' must be a boolean.")}return{name:"syntax-decorators",manipulateOptions:function(e,t){t.plugins.push(r?"decorators-legacy":["decorators",{decoratorsBeforeExport:i}])}}})),yF=cF((function(e){return e.assertVersion(7),{name:"syntax-do-expressions",manipulateOptions:function(e,t){t.plugins.push("doExpressions")}}})),vF=cF((function(e){return e.assertVersion(7),{name:"syntax-dynamic-import",manipulateOptions:function(e,t){t.plugins.push("dynamicImport")}}})),gF=cF((function(e){return e.assertVersion(7),{name:"syntax-export-default-from",manipulateOptions:function(e,t){t.plugins.push("exportDefaultFrom")}}})),bF=cF((function(e){return e.assertVersion(7),{name:"syntax-export-namespace-from",manipulateOptions:function(e,t){t.plugins.push("exportNamespaceFrom")}}})),EF=cF((function(e,t){e.assertVersion(7);var n=t.all,r=t.enums;if("boolean"!=typeof n&&void 0!==n)throw new Error(".all must be a boolean, or undefined");if("boolean"!=typeof r&&void 0!==r)throw new Error(".enums must be a boolean, or undefined");return{name:"syntax-flow",manipulateOptions:function(e,t){t.plugins.some((function(e){return"typescript"===(Array.isArray(e)?e[0]:e)}))||t.plugins.push(["flow",{all:n,enums:r}])}}})),AF=cF((function(e){return e.assertVersion(7),{name:"syntax-function-bind",manipulateOptions:function(e,t){t.plugins.push("functionBind")}}})),DF=cF((function(e){return e.assertVersion(7),{name:"syntax-function-sent",manipulateOptions:function(e,t){t.plugins.push("functionSent")}}})),SF=cF((function(e){return e.assertVersion(7),{name:"syntax-import-meta",manipulateOptions:function(e,t){t.plugins.push("importMeta")}}})),xF=cF((function(e){return e.assertVersion(7),{name:"syntax-jsx",manipulateOptions:function(e,t){t.plugins.some((function(e){return"typescript"===(Array.isArray(e)?e[0]:e)}))||t.plugins.push("jsx")}}})),TF=cF((function(e){return e.assertVersion(7),{name:"syntax-object-rest-spread",manipulateOptions:function(e,t){t.plugins.push("objectRestSpread")}}})),CF=cF((function(e){return e.assertVersion(7),{name:"syntax-optional-catch-binding",manipulateOptions:function(e,t){t.plugins.push("optionalCatchBinding")}}})),wF=["minimal","smart","fsharp"],PF=cF((function(e,t){var n=t.proposal;if(e.assertVersion(7),"string"!=typeof n||!wF.includes(n))throw new Error("The pipeline operator plugin requires a 'proposal' option.'proposal' must be one of: "+wF.join(", ")+". More details: https://babeljs.io/docs/en/next/babel-plugin-proposal-pipeline-operator");return{name:"syntax-pipeline-operator",manipulateOptions:function(e,t){t.plugins.push(["pipelineOperator",{proposal:n}])}}}));function FF(e,t){var n=[];e.forEach((function(e,r){(Array.isArray(e)?e[0]:e)===t&&n.unshift(r)}));for(var r=0,i=n;r<i.length;r++){var a=i[r];e.splice(a,1)}}var kF=cF((function(e,t){var n=t.isTSX;return e.assertVersion(7),{name:"syntax-typescript",manipulateOptions:function(e,t){var r=t.plugins;FF(r,"flow"),FF(r,"jsx"),t.plugins.push("typescript","classProperties","objectRestSpread"),n&&t.plugins.push("jsx")}}})),_F=nD.expression("\n  (function () {\n    var REF = FUNCTION;\n    return function NAME(PARAMS) {\n      return REF.apply(this, arguments);\n    };\n  })()\n"),IF=nD.expression("\n  (function () {\n    var REF = FUNCTION;\n    function NAME(PARAMS) {\n      return REF.apply(this, arguments);\n    }\n    return NAME;\n  })()\n"),OF=nD("\n  function NAME(PARAMS) { return REF.apply(this, arguments); }\n  function REF() {\n    REF = FUNCTION;\n    return REF.apply(this, arguments);\n  }\n");function BF(e,t){e.isClassMethod()||e.isObjectMethod()?function(e,t){var n=e.node,r=n.body,i=as(null,[],qo(r.body),!0);r.body=[Ds(Xo(Xo(t,[i]),[]))],n.async=!1,n.generator=!1,e.get("body.body.0.argument.callee.arguments.0").unwrapFunctionEnvironment()}(e,t):function(e,t){var n=e.node,r=e.isFunctionDeclaration(),i=n.id,a=r?OF:i?IF:_F;e.isArrowFunctionExpression()&&e.arrowFunctionToExpression(),n.id=null,r&&(n.type="FunctionExpression");var o=Xo(t,[n]),s=a({NAME:i||null,REF:e.scope.generateUidIdentifier(i?i.name:"ref"),FUNCTION:o,PARAMS:n.params.reduce((function(t,n){return t.done=t.done||X(n)||R(n),t.done||t.params.push(e.scope.generateUidIdentifier("x")),t}),{params:[],done:!1}).params});if(r)e.replaceWith(s[0]),e.insertAfter(s[1]);else{var u=s.callee.body.body[1].argument;i||sD({node:u,parent:e.parent,scope:e.scope}),!u||u.id||n.params.length?e.replaceWith(s):e.replaceWith(o)}}(e,t)}var NF="#__PURE__",MF=function(e){var t=e.leadingComments;return!!t&&t.some((function(e){return/[@#]__PURE__/.test(e.value)}))};function RF(e){var t=e.node||e;MF(t)||Ap(t,"leading",NF)}var LF={Function:function(e){e.skip()},AwaitExpression:function(e,t){var n=t.wrapAwait,r=e.get("argument");e.parentPath.isYieldExpression()?e.replaceWith(r.node):e.replaceWith(au(n?Xo(gp(n),[r.node]):r.node))}};function jF(e,t){e.traverse(LF,{wrapAwait:t.wrapAwait});var n=function(e){if(e.parentPath.isCallExpression({callee:e.node}))return!0;var t=e.parentPath;if(t.isMemberExpression()&&S(t.node.property,{name:"bind"})){var n=t.parentPath;return n.isCallExpression()&&1===n.node.arguments.length&&V(n.node.arguments[0])&&n.parentPath.isCallExpression({callee:n.node})}return!1}(e);e.node.async=!1,e.node.generator=!0,BF(e,gp(t.wrapAsync)),e.isObjectMethod()||e.isClassMethod()||e.parentPath.isObjectProperty()||e.parentPath.isClassProperty()||n||!e.isExpression()||RF(e)}var UF=nD("\n  async function wrapper() {\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY;\n    try {\n      for (\n        var ITERATOR_KEY = GET_ITERATOR(OBJECT), STEP_KEY, STEP_VALUE;\n        (\n          STEP_KEY = await ITERATOR_KEY.next(),\n          ITERATOR_COMPLETION = STEP_KEY.done,\n          STEP_VALUE = await STEP_KEY.value,\n          !ITERATOR_COMPLETION\n        );\n        ITERATOR_COMPLETION = true) {\n      }\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return != null) {\n          await ITERATOR_KEY.return();\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  }\n");var VF=cF((function(e){e.assertVersion(7);var t={Function:function(e){e.skip()},YieldExpression:function(e,t){var n=e.node;if(n.delegate){var r=t.addHelper("asyncGeneratorDelegate");n.argument=Xo(r,[Xo(t.addHelper("asyncIterator"),[n.argument]),t.addHelper("awaitAsyncGenerator")])}}},n={Function:function(e){e.skip()},ForOfStatement:function(e,t){var n=t.file,r=e.node;if(r.await){var i=function(e,t){var n,r=t.getAsyncIterator,i=e.node,a=e.scope,o=e.parent,s=a.generateUidIdentifier("step"),u=a.generateUidIdentifier("value"),l=i.left;S(l)||mt(l)||_(l)?n=es(Uo("=",l,u)):H(l)&&(n=Is(l.kind,[Os(l.declarations[0].id,u)]));var c=UF({ITERATOR_HAD_ERROR_KEY:a.generateUidIdentifier("didIteratorError"),ITERATOR_COMPLETION:a.generateUidIdentifier("iteratorNormalCompletion"),ITERATOR_ERROR_KEY:a.generateUidIdentifier("iteratorError"),ITERATOR_KEY:a.generateUidIdentifier("iterator"),GET_ITERATOR:r,OBJECT:i.right,STEP_VALUE:u,STEP_KEY:s});c=c.body.body;var p=T(o),h=c[3].block.body,f=h[0];return p&&(h[0]=us(o.label,f)),{replaceParent:p,node:c,declar:n,loop:f}}(e,{getAsyncIterator:n.addHelper("asyncIterator")}),a=i.declar,o=i.loop,s=o.body;e.ensureBlock(),a&&s.body.push(a),s.body=s.body.concat(r.body.body),pf(o,r),pf(o.body,r.body),i.replaceParent?e.parentPath.replaceWithMultiple(i.node):e.replaceWithMultiple(i.node)}}},r={Function:function(e,r){e.node.async&&(e.traverse(n,r),e.node.generator&&(e.traverse(t,r),jF(e,{wrapAsync:r.addHelper("wrapAsyncGenerator"),wrapAwait:r.addHelper("awaitAsyncGenerator")})))}};return{name:"proposal-async-generator-functions",inherits:fF,visitor:{Program:function(e,t){e.traverse(r,t)}}}})),WF=function(){function e(){this._map=new WeakMap}var t=e.prototype;return t.has=function(e){return this._map.has(e)},t.get=function(e){if(this.has(e)){var t=this._map.get(e),n=t.value;return t.count--,0===t.count?Uo("=",n,e):n}},t.set=function(e,t,n){return this._map.set(e,{count:n,value:t})},e}(),GF={memoise:function(){},handle:function(e){var t=e.node,n=e.parent,r=e.parentPath;if(r.isUpdateExpression({argument:t})){var i=n.operator,a=n.prefix;this.memoise(e,2);var o=Vo(i[0],ks("+",this.get(e)),cs(1));if(a)r.replaceWith(this.set(e,o));else{var s=e.scope,u=s.generateUidIdentifierBasedOnNode(t);s.push({id:u}),o.left=Uo("=",gp(u),o.left),r.replaceWith(Ss([this.set(e,o),gp(u)]))}}else{if(r.isAssignmentExpression({left:t})){var l=n.operator,c=n.right;return"="!==l&&(this.memoise(e,2),c=Vo(l.slice(0,-1),this.get(e),c)),void r.replaceWith(this.set(e,c))}if(r.isCallExpression({callee:t})){var p=n.arguments;r.replaceWith(this.call(e,p))}else r.isObjectProperty({value:t})&&r.parentPath.isObjectPattern()||r.isAssignmentPattern({left:t})&&r.parentPath.isObjectProperty({value:n})&&r.parentPath.parentPath.isObjectPattern()||r.isArrayPattern()||r.isAssignmentPattern({left:t})&&r.parentPath.isArrayPattern()||r.isRestElement()?e.replaceWith(this.destructureSet(e)):e.replaceWith(this.get(e))}}};function HF(e,t,n){e.traverse(t,Object.assign({},GF,{},n,{memoiser:new WF}))}function qF(e,t,n){return 1===n.length&&le(n[0])&&S(n[0].argument,{name:"arguments"})?Xo(ms(e,os("apply")),[t,n[0].argument]):Xo(ms(e,os("call")),[t].concat(n))}function KF(e,t,n,r){e=gp(e);var i=t||r?e:ms(e,os("prototype"));return Xo(n.addHelper("getPrototypeOf"),[i])}var XF={TypeAnnotation:function(e){e.skip()},Function:function(e){e.isMethod()||e.isArrowFunctionExpression()||e.skip()},"Method|ClassProperty|ClassPrivateProperty":function(e){!function(e){if(e.node.computed){var t=Ga[e.type],n=Array.isArray(t),r=0;for(t=n?t:t[Symbol.iterator]();;){var i;if(n){if(r>=t.length)break;i=t[r++]}else{if((r=t.next()).done)break;i=r.value}var a=i;"key"!==a&&e.skipKey(a)}}else e.skip()}(e)}},zF=JD.visitors.merge([XF,{Super:function(e,t){var n=e.node,r=e.parentPath;r.isMemberExpression({object:n})&&t.handle(r)}}]),JF={memoise:function(e,t){var n=e.scope,r=e.node,i=r.computed,a=r.property;if(i){var o=n.maybeGenerateMemoised(a);o&&this.memoiser.set(a,o,t)}},prop:function(e){var t=e.node,n=t.computed,r=t.property;return this.memoiser.has(r)?gp(this.memoiser.get(r)):n?gp(r):ls(r.name)},get:function(e){return Xo(this.file.addHelper("get"),[KF(this.getObjectRef(),this.isStatic,this.file,this.isPrivateMethod),this.prop(e),ws()])},set:function(e,t){return Xo(this.file.addHelper("set"),[KF(this.getObjectRef(),this.isStatic,this.file,this.isPrivateMethod),this.prop(e),t,ws(),hs(e.isInStrictMode())])},destructureSet:function(e){throw e.buildCodeFrameError("Destructuring to a super field is not supported yet.")},call:function(e,t){return qF(this.get(e),ws(),t)}},YF=Object.assign({},JF,{prop:function(e){var t=e.node.property;return this.memoiser.has(t)?gp(this.memoiser.get(t)):gp(t)},get:function(e){var t,n=this.isStatic,r=this.superRef,i=e.node.computed,a=this.prop(e);return t=n?r?gp(r):ms(os("Function"),os("prototype")):ms(r?gp(r):os("Object"),os("prototype")),ms(t,a,i)},set:function(e,t){var n=e.node.computed,r=this.prop(e);return Uo("=",ms(ws(),r,n),t)},destructureSet:function(e){var t=e.node.computed,n=this.prop(e);return ms(ws(),n,t)}}),$F=function(){function e(e){var t=e.methodPath;this.methodPath=t,this.isStatic=t.isObjectMethod()||t.node.static,this.isPrivateMethod=t.isPrivate()&&t.isMethod(),this.file=e.file,this.superRef=e.superRef,this.isLoose=e.isLoose,this.opts=e}var t=e.prototype;return t.getObjectRef=function(){return gp(this.opts.objectRef||this.opts.getObjectRef())},t.replace=function(){var e=this.isLoose?YF:JF;HF(this.methodPath,zF,Object.assign({file:this.file,isStatic:this.isStatic,isPrivateMethod:this.isPrivateMethod,getObjectRef:this.getObjectRef.bind(this),superRef:this.superRef},e))},e}();function QF(e){if(e.node.declare)throw e.buildCodeFrameError("TypeScript 'declare' fields must first be transformed by @babel/plugin-transform-typescript.\nIf you have already enabled that plugin (or '@babel/preset-typescript'), make sure that it runs before any plugin related to additional class features:\n - @babel/plugin-proposal-class-properties\n - @babel/plugin-proposal-private-methods\n - @babel/plugin-proposal-decorators")}function ZF(){var e=a(["\n    Object.defineProperty(",", ",", {\n      // configurable is false by default\n      // enumerable is false by default\n      // writable is false by default\n      value: ","\n    });\n  "]);return ZF=function(){return e},e}function ek(){var e=a(["\n      Object.defineProperty(",", ",", {\n        // configurable is false by default\n        // enumerable is false by default\n        // writable is false by default\n        get: ",",\n        set: ","\n      })\n    "]);return ek=function(){return e},e}function tk(){var e=a(["",".add(",")"]);return tk=function(){return e},e}function nk(){var e=a(["\n      ",".set(",", {\n        get: ",",\n        set: ","\n      });\n    "]);return nk=function(){return e},e}function rk(){var e=a(["\n      Object.defineProperty(",", ",", {\n        // configurable is false by default\n        // enumerable is false by default\n        // writable is false by default\n        get: ",",\n        set: ","\n      });\n    "]);return rk=function(){return e},e}function ik(){var e=a(["\n        Object.defineProperty(",", ",", {\n          // configurable is false by default\n          // enumerable is false by default\n          // writable is false by default\n          value: ","\n        });\n      "]);return ik=function(){return e},e}function ak(){var e=a(["\n    var "," = {\n      // configurable is false by default\n      // enumerable is false by default\n      writable: true,\n      value: ","\n    };\n  "]);return ak=function(){return e},e}function ok(){var e=a(["\n      var "," = {\n        // configurable is false by default\n        // enumerable is false by default\n        // writable is false by default\n        get: ",",\n        set: ","\n      }\n    "]);return ok=function(){return e},e}function sk(){var e=a(["",".set(",", {\n    // configurable is always false for private elements\n    // enumerable is always false for private elements\n    writable: true,\n    value: ",",\n  })"]);return sk=function(){return e},e}function uk(){var e=a(["\n    Object.defineProperty(",", ",", {\n      // configurable is false by default\n      // enumerable is false by default\n      writable: true,\n      value: ","\n    });\n  "]);return uk=function(){return e},e}function lk(){var e=a(["BASE(REF, PROP)[PROP]"]);return lk=function(){return e},e}function ck(){var e=a(["var "," = new WeakMap();"]);return ck=function(){return e},e}function pk(){var e=a(["var "," = new WeakSet();"]);return pk=function(){return e},e}function hk(){var e=a(["var "," = new WeakMap();"]);return hk=function(){return e},e}function fk(){var e=a(["\n          var "," = ",'("','")\n        ']);return fk=function(){return e},e}var dk={PrivateName:function(e){var t=this.privateNamesMap,n=e.node,r=e.parentPath;r.isMemberExpression({property:n})&&t.has(n.id.name)&&this.handle(r)},Class:function(e){var t=this.privateNamesMap,n=e.get("body.body"),r=Array.isArray(n),i=0;for(n=r?n:n[Symbol.iterator]();;){var a;if(r){if(i>=n.length)break;a=n[i++]}else{if((i=n.next()).done)break;a=i.value}var o=a;if(o.isPrivate()&&t.has(o.node.key.id.name)){e.traverse(mk,this),e.skip();break}}}},mk=JD.visitors.merge([{PrivateName:dk.PrivateName},XF]),yk={memoise:function(e,t){var n=e.scope,r=e.node.object,i=n.maybeGenerateMemoised(r);i&&this.memoiser.set(r,i,t)},receiver:function(e){var t=e.node.object;return this.memoiser.has(t)?gp(this.memoiser.get(t)):gp(t)},get:function(e){var t=this.classRef,n=this.privateNamesMap,r=this.file,i=e.node.property.id.name,a=n.get(i),o=a.id,s=a.static,u=a.method,l=a.methodId,c=a.getId,p=a.setId,h=c||p;if(s){var f=u&&!h?"classStaticPrivateMethodGet":"classStaticPrivateFieldSpecGet";return Xo(r.addHelper(f),[this.receiver(e),gp(t),gp(o)])}return u?h?Xo(r.addHelper("classPrivateFieldGet"),[this.receiver(e),gp(o)]):Xo(r.addHelper("classPrivateMethodGet"),[this.receiver(e),gp(o),gp(l)]):Xo(r.addHelper("classPrivateFieldGet"),[this.receiver(e),gp(o)])},set:function(e,t){var n=this.classRef,r=this.privateNamesMap,i=this.file,a=e.node.property.id.name,o=r.get(a),s=o.id,u=o.static,l=o.method,c=o.setId,p=o.getId;if(u){var h=l&&!(p||c)?"classStaticPrivateMethodSet":"classStaticPrivateFieldSpecSet";return Xo(i.addHelper(h),[this.receiver(e),gp(n),gp(s),t])}return l?c?Xo(i.addHelper("classPrivateFieldSet"),[this.receiver(e),gp(s),t]):Xo(i.addHelper("classPrivateMethodSet"),[]):Xo(i.addHelper("classPrivateFieldSet"),[this.receiver(e),gp(s),t])},destructureSet:function(e){var t=this.privateNamesMap,n=this.file,r=e.node.property.id.name,i=t.get(r).id;return ms(Xo(n.addHelper("classPrivateFieldDestructureSet"),[this.receiver(e),gp(i)]),os("value"))},call:function(e,t){return this.memoise(e,1),qF(this.get(e),this.receiver(e),t)}},vk={handle:function(e){var t=this.privateNamesMap,n=this.file,r=e.node.object,i=e.node.property.id.name;e.replaceWith(nD.expression(lk())({BASE:n.addHelper("classPrivateFieldLooseBase"),REF:r,PROP:t.get(i).id}))}};function gk(e,t,n){var r=n.get(t.node.key.id.name).id,i=t.node.value||t.scope.buildUndefinedNode();return nD.statement.ast(uk(),e,r,i)}function bk(e,t,n){var r=n.get(t.node.key.id.name).id,i=t.node.value||t.scope.buildUndefinedNode();return nD.statement.ast(sk(),r,e,i)}function Ek(e,t){var n=t.get(e.node.key.id.name),r=n.id,i=n.getId,a=n.setId,o=n.initAdded,s=i||a;if(e.isProperty()||!o&&s){if(s)return t.set(e.node.key.id.name,Object.assign({},n,{initAdded:!0})),nD.statement.ast(ok(),r.name,i?i.name:e.scope.buildUndefinedNode(),a?a.name:e.scope.buildUndefinedNode());var u=e.node.value||e.scope.buildUndefinedNode();return nD.statement.ast(ak(),r,u)}}function Ak(e,t,n){var r=n.get(t.node.key.id.name),i=r.methodId,a=r.id,o=r.getId,s=r.setId;if(!r.initAdded)return i?nD.statement.ast(ik(),e,a,i.name):o||s?(n.set(t.node.key.id.name,Object.assign({},r,{initAdded:!0})),nD.statement.ast(rk(),e,a,o?o.name:t.scope.buildUndefinedNode(),s?s.name:t.scope.buildUndefinedNode())):void 0}function Dk(e,t,n){var r=n.get(t.node.key.id.name),i=r.id,a=r.getId,o=r.setId;if(!r.initAdded)return a||o?(n.set(t.node.key.id.name,Object.assign({},r,{initAdded:!0})),nD.statement.ast(nk(),i,e,a?a.name:t.scope.buildUndefinedNode(),o?o.name:t.scope.buildUndefinedNode())):nD.statement.ast(tk(),i,e)}function Sk(e,t){var n=t.node,r=n.key,i=n.computed,a=t.node.value||t.scope.buildUndefinedNode();return es(Uo("=",ms(e,r,i||ht(r)),a))}function xk(e,t,n){var r=t.node,i=r.key,a=r.computed,o=t.node.value||t.scope.buildUndefinedNode();return es(Xo(n.addHelper("defineProperty"),[e,a||ht(i)?i:ls(i.name),o]))}function Tk(e,t,n,r){var i=r.get(t.node.key.id.name),a=i.id,o=i.methodId,s=i.getId,u=i.setId;if(!i.initAdded)return s||u?(r.set(t.node.key.id.name,Object.assign({},i,{initAdded:!0})),nD.statement.ast(ek(),e,a,s?s.name:t.scope.buildUndefinedNode(),u?u.name:t.scope.buildUndefinedNode())):nD.statement.ast(ZF(),e,a,o.name)}function Ck(e,t,n){void 0===n&&(n=!1);var r=t.get(e.node.key.id.name),i=r.id,a=r.methodId,o=r.getId,s=r.setId,u=r.getterDeclared,l=r.setterDeclared,c=r.static,p=e.node,h=p.params,f=p.body,d=p.generator,m=p.async,y=as(a,h,f,d,m),v=o&&!u&&0===h.length,g=s&&!l&&h.length>0;return v?(t.set(e.node.key.id.name,Object.assign({},r,{getterDeclared:!0})),Is("var",[Os(o,y)])):g?(t.set(e.node.key.id.name,Object.assign({},r,{setterDeclared:!0})),Is("var",[Os(s,y)])):Is("var",c&&!n?[Os(i,as(i,h,f,d,m))]:[Os(a,y)])}var wk=JD.visitors.merge([{ThisExpression:function(e,t){t.needsClassRef=!0,e.replaceWith(gp(t.classRef))}},XF]);function Pk(e,t,n,r,i){var a={classRef:t,needsClassRef:!1};return new $F({methodPath:e,isLoose:i,superRef:n,file:r,getObjectRef:function(){return a.needsClassRef=!0,e.node.static?t:ms(t,os("prototype"))}}).replace(),e.isProperty()&&e.traverse(wk,a),a.needsClassRef}function Fk(){var e=a(["","(this)"]);return Fk=function(){return e},e}function kk(){var e=a(["let "," = ",""]);return kk=function(){return e},e}function _k(){var e=a(["\n    ","(\n      ",",\n      function (",", ",") {\n        ","\n        return { F: ",", d: "," };\n      },\n      ","\n    )\n  "]);return _k=function(){return e},e}function Ik(){var e=a(["return ",""]);return Ik=function(){return e},e}function Ok(e){return!(!e.decorators||!e.decorators.length)}function Bk(e,t){return t?Es(os(e),t):null}function Nk(e){var t;return e.decorators&&e.decorators.length>0&&(t=jo(e.decorators.map((function(e){return e.expression})))),e.decorators=void 0,t}function Mk(e){return e.computed?e.key:S(e.key)?ls(e.key.name):ls(String(e.key.value))}function Rk(e,t,n){var r=n.node,i=n.scope,a=n.isClassMethod();if(n.isPrivate())throw n.buildCodeFrameError("Private "+(a?"methods":"fields")+" in decorated classes are not supported yet.");new $F({methodPath:n,methodNode:r,objectRef:e,isStatic:r.static,superRef:t,scope:i,file:this},!0).replace();var o,s,u=[Bk("kind",ls(a?r.kind:"field")),Bk("decorators",Nk(r)),Bk("static",r.static&&hs(!0)),Bk("key",Mk(r))].filter(Boolean);if(a){var l=r.computed?null:r.key;Vh(r),u.push(Bk("value",sD({node:r,id:l,scope:i})||r))}else r.value?u.push((o="value",s=nD.statements.ast(Ik(),r.value),bs("method",os(o),[],qo(s)))):u.push(Bk("value",i.buildUndefinedNode()));return n.remove(),gs(u)}function Lk(){var e=a(["super(...args)"]);return Lk=function(){return e},e}var jk=JD.visitors.merge([{Super:function(e){var t=e.node,n=e.parentPath;n.isCallExpression({callee:t})&&this.push(n)}},XF]),Uk={"TSTypeAnnotation|TypeAnnotation":function(e){e.skip()},ReferencedIdentifier:function(e){this.scope.hasOwnBinding(e.node.name)&&(this.scope.rename(e.node.name),e.skip())}},Vk=JD.visitors.merge([{ReferencedIdentifier:function(e){if(this.classBinding&&this.classBinding===e.scope.getBinding(e.node.name)){var t=Xo(this.file.addHelper("classNameTDZError"),[ls(e.node.name)]);e.replaceWith(Ss([t,e.node])),e.skip()}}},XF]);function Wk(e,t,n,r){if(n.length){var i=!!e.node.superClass;if(!t){var a=Qs("constructor",os("constructor"),[],qo([]));i&&(a.params=[As(os("args"))],a.body.body.push(nD.statement.ast(Lk()))),t=e.get("body").unshiftContainer("body",a)[0]}if(r&&r(Uk,{scope:t.scope}),i){var o=[];t.traverse(jk,o);for(var s=0,u=o;s<u.length;s++){u[s].insertAfter(n)}}else t.get("body").unshiftContainer("body",n)}}var Gk=Object.freeze({fields:2,privateMethods:4,decorators:8}),Hk="@babel/plugin-class-features/featuresKey",qk="@babel/plugin-class-features/looseKey";function Kk(e,t){return!!(e.get(Hk)&t)}function Xk(e,t){return!!(e.get(qk)&t)}function zk(e,t){if(Ok(e.node)){if(!Kk(t,Gk.decorators))throw e.buildCodeFrameError('Decorators are not enabled.\nIf you are using ["@babel/plugin-proposal-decorators", { "legacy": true }], make sure it comes *before* "@babel/plugin-proposal-class-properties" and enable loose mode, like so:\n\t["@babel/plugin-proposal-decorators", { "legacy": true }]\n\t["@babel/plugin-proposal-class-properties", { "loose": true }]');if(e.isPrivate())throw e.buildCodeFrameError("Private "+(e.isClassMethod()?"methods":"fields")+" in decorated classes are not supported yet.")}if(e.isPrivate()&&e.isMethod()&&!Kk(t,Gk.privateMethods))throw e.buildCodeFrameError("Class private methods are not enabled.");if(Kk(t,Gk.privateMethods)&&Kk(t,Gk.fields)&&Xk(t,Gk.privateMethods)!==Xk(t,Gk.fields))throw e.buildCodeFrameError("'loose' mode configuration must be the same for both @babel/plugin-proposal-class-properties and @babel/plugin-proposal-private-methods");if(e.isProperty()&&!Kk(t,Gk.fields))throw e.buildCodeFrameError("Class fields are not enabled.")}var Jk={name:"@babel/helper-create-class-features-plugin",version:"7.7.4",author:"The Babel Team (https://babeljs.io/team)",license:"MIT",description:"Compile class public and private fields, private methods and decorators to ES6",repository:"https://github.com/babel/babel/tree/master/packages/babel-helper-create-class-features-plugin",main:"lib/index.js",publishConfig:{access:"public"},keywords:["babel","babel-plugin"],dependencies:{"@babel/helper-function-name":"^7.7.4","@babel/helper-member-expression-to-functions":"^7.7.4","@babel/helper-optimise-call-expression":"^7.7.4","@babel/helper-plugin-utils":"^7.0.0","@babel/helper-replace-supers":"^7.7.4","@babel/helper-split-export-declaration":"^7.7.4"},peerDependencies:{"@babel/core":"^7.0.0"},devDependencies:{"@babel/core":"^7.7.4","@babel/helper-plugin-test-runner":"^7.7.4"}}.version.split(".").reduce((function(e,t){return 1e5*e+ +t}),0),Yk="@babel/plugin-class-features/version";function $k(e){var t=e.name,n=e.feature,r=e.loose;return{name:t,manipulateOptions:e.manipulateOptions,pre:function(){!function(e,t,n){Kk(e,t)||(e.set(Hk,e.get(Hk)|t),n&&e.set(qk,e.get(qk)|t))}(this.file,n,r),(!this.file.get(Yk)||this.file.get(Yk)<Jk)&&this.file.set(Yk,Jk)},visitor:{Class:function(e,t){if(this.file.get(Yk)===Jk){zk(e,this.file);var r,i=Xk(this.file,n),a=Ok(e.node),o=[],s=[],u=[],l=new Set,c=e.get("body").get("body"),p=Array.isArray(c),h=0;for(c=p?c:c[Symbol.iterator]();;){var f;if(p){if(h>=c.length)break;f=c[h++]}else{if((h=c.next()).done)break;f=h.value}var d=f;if(zk(d,this.file),d.node.computed&&u.push(d),d.isPrivate()){var m=d.node.key.id.name,y="get "+m,v="set "+m;if("get"===d.node.kind){if(l.has(y)||l.has(m)&&!l.has(v))throw d.buildCodeFrameError("Duplicate private field");l.add(y).add(m)}else if("set"===d.node.kind){if(l.has(v)||l.has(m)&&!l.has(y))throw d.buildCodeFrameError("Duplicate private field");l.add(v).add(m)}else{if(l.has(m)&&!l.has(y)&&!l.has(v)||l.has(m)&&(l.has(y)||l.has(v)))throw d.buildCodeFrameError("Duplicate private field");l.add(m)}}d.isClassMethod({kind:"constructor"})?r=d:(s.push(d),(d.isProperty()||d.isPrivate())&&o.push(d)),a||(a=Ok(d.node))}if(o.length||a){var g;e.isClassExpression()||!e.node.id?(sD(e),g=e.scope.generateUidIdentifier("class")):g=e.node.id;var b,E,A,D,S=function(e){var t=new Map,n=e,r=Array.isArray(n),i=0;for(n=r?n:n[Symbol.iterator]();;){var a;if(r){if(i>=n.length)break;a=n[i++]}else{if((i=n.next()).done)break;a=i.value}var o=a,s=o.isPrivate(),u=!o.isProperty(),l=!o.node.static;if(s){var c=o.node.key.id.name,p=t.has(c)?t.get(c):{id:o.scope.generateUidIdentifier(c),static:!l,method:u};"get"===o.node.kind?p.getId=o.scope.generateUidIdentifier("get_"+c):"set"===o.node.kind?p.setId=o.scope.generateUidIdentifier("set_"+c):"method"===o.node.kind&&(p.methodId=o.scope.generateUidIdentifier(c)),t.set(c,p)}}return t}(o),x=function(e,t,n){var r=[],i=e,a=Array.isArray(i),o=0;for(i=a?i:i[Symbol.iterator]();;){var s;if(a){if(o>=i.length)break;s=i[o++]}else{if((o=i.next()).done)break;s=o.value}var u=s,l=u[0],c=u[1],p=c.id,h=c.static,f=c.method,d=c.getId,m=c.setId,y=d||m;t?r.push(nD.statement.ast(fk(),p,n.addHelper("classPrivateFieldLooseKey"),l)):f&&!h?y?r.push(nD.statement.ast(hk(),p)):r.push(nD.statement.ast(pk(),p)):h||r.push(nD.statement.ast(ck(),p))}return r}(S,i,t);if(function(e,t,n,r,i){var a=t.get("body");r?a.traverse(dk,Object.assign({privateNamesMap:n,file:i},vk)):HF(a,dk,Object.assign({privateNamesMap:n,classRef:e,file:i},yk))}(g,e,S,i,t),a){E=b=[];var T=function(e,t,n,r){var i,a=t.node,o=t.scope,s=o.generateUidIdentifier("initialize"),u=a.id&&t.isDeclaration(),l=t.isInStrictMode(),c=a.superClass;a.type="ClassDeclaration",a.id||(a.id=gp(e)),c&&(i=o.generateUidIdentifierBasedOnNode(a.superClass,"super"),a.superClass=i);var p=Nk(a),h=jo(n.map(Rk.bind(r,a.id,i))),f=nD.expression.ast(_k(),function(e){try{return e.addHelper("decorate")}catch(e){throw"BABEL_HELPER_UNKNOWN"===e.code&&(e.message+="\n  '@babel/plugin-transform-decorators' in non-legacy mode requires '@babel/core' version ^7.0.2 and you appear to be using an older version."),e}}(r),p||ps(),s,c?i:null,a,gp(a.id),h,c),d="arguments.1.body.body.0";return l||f.arguments[1].body.directives.push(Go(Ho("use strict"))),u&&(f=nD.ast(kk(),e,f),d="declarations.0.init."+d),{instanceNodes:[nD.statement.ast(Fk(),s)],wrapClass:function(e){return e.replaceWith(f),e.get(d)}}}(g,e,s,this.file);A=T.instanceNodes,D=T.wrapClass}else{b=function(e,t,n,r){var i=[],a=n,o=Array.isArray(a),s=0;for(a=o?a:a[Symbol.iterator]();;){var u;if(o){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}var l=u;l.traverse(Vk,{classBinding:t.node.id&&t.scope.getBinding(t.node.id.name),file:r});var c=l.node;if(!l.get("key").isConstantExpression()){var p=t.scope.generateUidIdentifierBasedOnNode(c.key);t.scope.push({id:p,kind:"let"}),i.push(es(Uo("=",gp(p),c.key))),c.key=gp(p)}}return i}(0,e,u,this.file);var C=function(e,t,n,r,i,a){var o=[],s=[],u=!1,l=n,c=Array.isArray(l),p=0;for(l=c?l:l[Symbol.iterator]();;){var h;if(c){if(p>=l.length)break;h=l[p++]}else{if((p=l.next()).done)break;h=p.value}var f=h;QF(f);var d=f.node.static,m=!d,y=f.isPrivate(),v=!y,g=f.isProperty(),b=!g;if(d||b&&y){var E=Pk(f,e,t,i,a);u=u||E}switch(!0){case d&&y&&g&&a:u=!0,o.push(gk(gp(e),f,r));break;case d&&y&&g&&!a:u=!0,o.push(Ek(f,r));break;case d&&v&&g&&a:u=!0,o.push(Sk(gp(e),f));break;case d&&v&&g&&!a:u=!0,o.push(xk(gp(e),f,i));break;case m&&y&&g&&a:s.push(gk(ws(),f,r));break;case m&&y&&g&&!a:s.push(bk(ws(),f,r));break;case m&&y&&b&&a:s.unshift(Ak(ws(),f,r)),o.push(Ck(f,r,a));break;case m&&y&&b&&!a:s.unshift(Dk(ws(),f,r)),o.push(Ck(f,r,a));break;case d&&y&&b&&!a:u=!0,o.push(Ek(f,r)),o.unshift(Ck(f,r,a));break;case d&&y&&b&&a:u=!0,o.push(Tk(gp(e),f,0,r)),o.unshift(Ck(f,r,a));break;case m&&v&&g&&a:s.push(Sk(ws(),f));break;case m&&v&&g&&!a:s.push(xk(ws(),f,i));break;default:throw new Error("Unreachable.")}}return{staticNodes:o.filter(Boolean),instanceNodes:s.filter(Boolean),wrapClass:function(t){var r=n,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}o.remove()}return u?(t.isClassExpression()?(t.scope.push({id:e}),t.replaceWith(Uo("=",gp(e),t.node))):t.node.id||(t.node.id=e),t):t}}}(g,e.node.superClass,o,S,t,i);E=C.staticNodes,A=C.instanceNodes,D=C.wrapClass}A.length>0&&Wk(e,r,A,(function(e,t){if(!a){var n=o,r=Array.isArray(n),i=0;for(n=r?n:n[Symbol.iterator]();;){var s;if(r){if(i>=n.length)break;s=n[i++]}else{if((i=n.next()).done)break;s=i.value}var u=s;u.node.static||u.traverse(e,t)}}})),(e=D(e)).insertBefore(b),e.insertAfter([].concat(x,E))}}},PrivateName:function(e){if(this.file.get(Yk)===Jk)throw e.buildCodeFrameError('Unknown PrivateName "'+e+'"')},ExportDefaultDeclaration:function(e){if(this.file.get(Yk)===Jk){var t=e.get("declaration");t.isClassDeclaration()&&function(e){return Ok(e)||e.body.body.some(Ok)}(t.node)&&(t.node.id?zd(e):t.node.type="ClassExpression")}}}}}var Qk=cF((function(e,t){return e.assertVersion(7),$k({name:"proposal-class-properties",feature:Gk.fields,loose:t.loose,manipulateOptions:function(e,t){t.plugins.push("classProperties","classPrivateProperties")}})})),Zk=nD("\n  DECORATOR(CLASS_REF = INNER) || CLASS_REF;\n"),e_=nD("\n  CLASS_REF.prototype;\n"),t_=nD("\n    Object.getOwnPropertyDescriptor(TARGET, PROPERTY);\n"),n_=nD("\n    (TEMP = Object.getOwnPropertyDescriptor(TARGET, PROPERTY), (TEMP = TEMP ? TEMP.value : undefined), {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        initializer: function(){\n            return TEMP;\n        }\n    })\n"),r_=new WeakSet;function i_(e){var t=(e.isClass()?[e].concat(e.get("body.body")):e.get("properties")).reduce((function(e,t){return e.concat(t.node.decorators||[])}),[]).filter((function(e){return!S(e.expression)}));if(0!==t.length)return Ss(t.map((function(t){var n=t.expression;return Uo("=",t.expression=e.scope.generateDeclaredUidIdentifier("dec"),n)})).concat([e.node]))}function a_(e){return!(!e.decorators||!e.decorators.length)}function o_(e){return e.some((function(e){return e.decorators&&e.decorators.length}))}function s_(e,t,n){var r=e.scope.generateDeclaredUidIdentifier(e.isClass()?"class":"obj"),i=n.reduce((function(n,i){var a=i.decorators||[];if(i.decorators=null,0===a.length)return n;if(i.computed)throw e.buildCodeFrameError("Computed method/property decorators are not yet supported.");var o=ht(i.key)?i.key:ls(i.key.name),s=e.isClass()&&!i.static?e_({CLASS_REF:r}).expression:r;if(Ve(i,{static:!1})){var u=e.scope.generateDeclaredUidIdentifier("descriptor"),l=i.value?as(null,[],qo([Ds(i.value)])):ps();i.value=Xo(t.addHelper("initializerWarningHelper"),[u,ws()]),r_.add(i.value),n=n.concat([Uo("=",u,Xo(t.addHelper("applyDecoratedDescriptor"),[gp(s),gp(o),jo(a.map((function(e){return gp(e.expression)}))),gs([Es(os("configurable"),hs(!0)),Es(os("enumerable"),hs(!0)),Es(os("writable"),hs(!0)),Es(os("initializer"),l)])]))])}else n=n.concat(Xo(t.addHelper("applyDecoratedDescriptor"),[gp(s),gp(o),jo(a.map((function(e){return gp(e.expression)}))),M(i)||Ve(i,{static:!0})?n_({TEMP:e.scope.generateDeclaredUidIdentifier("init"),TARGET:gp(s),PROPERTY:gp(o)}).expression:t_({TARGET:gp(s),PROPERTY:gp(o)}).expression,gp(s)]));return n}),[]);return Ss([Uo("=",gp(r),e.node),Ss(i),gp(r)])}function u_(e){var t=e.node,n=e.scope;if(a_(t)||o_(t.body.body))return Is("let",[Os(t.id?gp(t.id):n.generateUidIdentifier("class"),Vh(t))])}var l_={ExportDefaultDeclaration:function(e){var t=e.get("declaration");if(t.isClassDeclaration()){var n=u_(t);if(n){var r=e.replaceWithMultiple([n,Hs(null,[qs(gp(n.declarations[0].id),os("default"))])])[0];t.node.id||e.scope.registerDeclaration(r)}}},ClassDeclaration:function(e){var t=u_(e);t&&e.replaceWith(t)},ClassExpression:function(e,t){var n=i_(e)||function(e){if(a_(e.node)){var t=e.node.decorators||[];e.node.decorators=null;var n=e.scope.generateDeclaredUidIdentifier("class");return t.map((function(e){return e.expression})).reverse().reduce((function(e,t){return Zk({CLASS_REF:gp(n),DECORATOR:gp(t),INNER:e}).expression}),e.node)}}(e)||function(e,t){if(o_(e.node.body.body))return s_(e,t,e.node.body.body)}(e,t);n&&e.replaceWith(n)},ObjectExpression:function(e,t){var n=i_(e)||function(e,t){if(o_(e.node.properties))return s_(e,t,e.node.properties)}(e,t);n&&e.replaceWith(n)},AssignmentExpression:function(e,t){r_.has(e.node.right)&&e.replaceWith(Xo(t.addHelper("initializerDefineProperty"),[gp(e.get("left.object").node),ls(e.get("left.property").node.name||e.get("left.property").node.value),gp(e.get("right.arguments")[0].node),gp(e.get("right.arguments")[1].node)]))},CallExpression:function(e,t){3===e.node.arguments.length&&r_.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper("defineProperty").name&&e.replaceWith(Xo(t.addHelper("initializerDefineProperty"),[gp(e.get("arguments")[0].node),gp(e.get("arguments")[1].node),gp(e.get("arguments.2.arguments")[0].node),gp(e.get("arguments.2.arguments")[1].node)]))}},c_=cF((function(e,t){e.assertVersion(7);var n=t.legacy,r=void 0!==n&&n;if("boolean"!=typeof r)throw new Error("'legacy' must be a boolean.");var i=t.decoratorsBeforeExport;if(void 0===i){if(!r)throw new Error("The decorators plugin requires a 'decoratorsBeforeExport' option, whose value must be a boolean. If you want to use the legacy decorators semantics, you can set the 'legacy: true' option.")}else{if(r)throw new Error("'decoratorsBeforeExport' can't be used with legacy decorators.");if("boolean"!=typeof i)throw new Error("'decoratorsBeforeExport' must be a boolean.")}return r?{name:"proposal-decorators",inherits:mF,manipulateOptions:function(e){e.generatorOpts.decoratorsBeforeExport=i},visitor:l_}:$k({name:"proposal-decorators",feature:Gk.decorators,manipulateOptions:function(e){var t=e.generatorOpts;e.parserOpts.plugins.push(["decorators",{decoratorsBeforeExport:i}]),t.decoratorsBeforeExport=i}})})),p_=cF((function(e){return e.assertVersion(7),{name:"proposal-do-expressions",inherits:yF,visitor:{DoExpression:{exit:function(e){var t=e.node.body.body;t.length?e.replaceExpressionWithStatements(t):e.replaceWith(e.scope.buildUndefinedNode())}}}}})),h_=cF((function(e){return e.assertVersion(7),{name:"proposal-export-default-from",inherits:gF,visitor:{ExportNamedDeclaration:function(e){var t=e.node,n=e.scope,r=t.specifiers;if(qe(r[0])){var i=r.shift().exported,a=n.generateUidIdentifier(i.name),o=[Xs([zs(a)],gp(t.source)),Hs(null,[qs(gp(a),i)])];r.length>=1&&o.push(t);var s=e.replaceWithMultiple(o)[0];e.scope.registerDeclaration(s)}}}}})),f_=cF((function(e){return e.assertVersion(7),{name:"proposal-export-namespace-from",inherits:bF,visitor:{ExportNamedDeclaration:function(e){var t=e.node,n=e.scope,r=t.specifiers,i=qe(r[0])?1:0;if(Ke(r[i])){var a=[];1===i&&a.push(Hs(null,[r.shift()],t.source));var o=r.shift().exported,s=n.generateUidIdentifier(o.name);a.push(Xs([Js(s)],gp(t.source)),Hs(null,[qs(gp(s),o)])),t.specifiers.length>=1&&a.push(t);var u=e.replaceWithMultiple(a)[0];e.scope.registerDeclaration(u)}}}}})),d_=cF((function(e){function t(e,t){var n=function(e,t){var n=e.object||e.callee.object;return t.isStatic(n)&&n}(e,t);if(n)return gp(n);var r=function(e){var t=e.path.getData("functionBind");return t||(t=e.generateDeclaredUidIdentifier("context"),e.path.setData("functionBind",t))}(t);return e.object?e.callee=Ss([Uo("=",r,e.object),e.callee]):e.callee.object=Uo("=",r,e.callee.object),r}return e.assertVersion(7),{name:"proposal-function-bind",inherits:AF,visitor:{CallExpression:function(e){var n=e.node,r=e.scope,i=n.callee;if(Ue(i)){var a=t(i,r);n.callee=ms(i.callee,os("call")),n.arguments.unshift(a)}},BindExpression:function(e){var n=e.node,r=t(n,e.scope);e.replaceWith(Xo(ms(n.callee,os("bind")),[r]))}}}})),m_=cF((function(e){e.assertVersion(7);var t=function(e){return S(e.meta,{name:"function"})&&S(e.property,{name:"sent"})},n={Function:function(e){e.skip()},YieldExpression:function(e){(function(e,t){return u(e)&&S(e.left,{name:t})})(e.parent,this.sentId)||e.replaceWith(Uo("=",os(this.sentId),e.node))},MetaProperty:function(e){t(e.node)&&e.replaceWith(os(this.sentId))}};return{name:"proposal-function-sent",inherits:DF,visitor:{MetaProperty:function(e,r){if(t(e.node)){var i=e.getFunctionParent();if(!i.node.generator)throw new Error("Parent generator function not found");var a=e.scope.generateUid("function.sent");i.traverse(n,{sentId:a}),i.node.body.body.unshift(Is("let",[Os(os(a),au())])),BF(i,r.addHelper("skipFirstGeneratorNext"))}}}}})),y_=cF((function(e){return e.assertVersion(7),{name:"syntax-json-strings",manipulateOptions:function(e,t){t.plugins.push("jsonStrings")}}})),v_=cF((function(e){e.assertVersion(7);var t=/(\\*)([\u2028\u2029])/g;function n(e,t,n){return t.length%2==1?e:t+"\\u"+n.charCodeAt(0).toString(16)}return{name:"proposal-json-strings",inherits:y_,visitor:{"DirectiveLiteral|StringLiteral":function(e){var r=e.node.extra;r&&r.raw&&(r.raw=r.raw.replace(t,n))}}}})),g_=cF((function(e){return e.assertVersion(7),{name:"syntax-logical-assignment-operators",manipulateOptions:function(e,t){t.plugins.push("logicalAssignment")}}})),b_=cF((function(e){return e.assertVersion(7),{name:"proposal-logical-assignment-operators",inherits:g_,visitor:{AssignmentExpression:function(e){var t=e.node,n=e.scope,r=t.operator,i=t.left,a=t.right;if("||="===r||"&&="===r||"??="===r){var o=gp(i);if(_(i)){var s=i.object,u=i.property,l=i.computed,c=n.maybeGenerateMemoised(s);if(c&&(i.object=c,o.object=Uo("=",gp(c),s)),l){var p=n.maybeGenerateMemoised(u);p&&(i.property=p,o.property=Uo("=",gp(p),u))}}e.replaceWith(ds(r.slice(0,-1),o,Uo("=",i,a)))}}}}})),E_=cF((function(e){return e.assertVersion(7),{name:"syntax-nullish-coalescing-operator",manipulateOptions:function(e,t){t.plugins.push("nullishCoalescingOperator")}}})),A_=cF((function(e,t){var n=t.loose,r=void 0!==n&&n;return e.assertVersion(7),{name:"proposal-nullish-coalescing-operator",inherits:E_,visitor:{LogicalExpression:function(e){var t=e.node,n=e.scope;if("??"===t.operator){var i,a=n.maybeGenerateMemoised(t.left);null===a?(a=t.left,i=gp(t.left)):i=Uo("=",a,t.left),e.replaceWith(Jo(r?Vo("!=",i,ps()):ds("&&",Vo("!==",i,ps()),Vo("!==",gp(a),n.buildUndefinedNode())),gp(a),t.right))}}}}})),D_=cF((function(e){return e.assertVersion(7),{name:"syntax-numeric-separator",manipulateOptions:function(e,t){t.plugins.push("numericSeparator")}}})),S_=cF((function(e){function t(e){var t=e.node;if("Number"===t.callee.name){var n=t.arguments[0];C(n)&&(n.value=n.value.replace(/_/g,""))}}return e.assertVersion(7),{name:"proposal-numeric-separator",inherits:D_,visitor:{CallExpression:t,NewExpression:t,NumericLiteral:function(e){var t=e.node.extra;t&&/_/.test(t.raw)&&(t.raw=t.raw.replace(/_/g,""))}}}})),x_=function(){var e=os("a"),t=Es(os("key"),e);return vf(e,t,Zs([t]))?1:0}(),T_=cF((function(e,t){e.assertVersion(7);var n=t.useBuiltIns,r=void 0!==n&&n,i=t.loose,a=void 0!==i&&i;if("boolean"!=typeof a)throw new Error(".loose must be a boolean, or undefined");function o(e){return r?ms(os("Object"),os("assign")):e.addHelper("extends")}function s(e){var t=!1;return u(e,(function(e){t=!0,e.stop()})),t}function u(e,t){e.traverse({Expression:function(e){var t=e.parent.type;("AssignmentPattern"===t&&"right"===e.key||"ObjectProperty"===t&&e.parent.computed&&"key"===e.key)&&e.skip()},RestElement:t})}function l(e,t,n){var r=e.get("properties"),i=r[r.length-1];pp(i.node);var s=gp(i.node);i.remove();var u,l=function(e){var t=[],n=e.get("properties"),r=Array.isArray(n),i=0;for(n=r?n:n[Symbol.iterator]();;){var a;if(r){if(i>=n.length)break;a=n[i++]}else{if((i=n.next()).done)break;a=i.value}var o=a,s=o.get("key");if(o.node.computed&&!s.isPure()){var u=e.scope.generateUidBasedOnNode(s.node),l=Os(os(u),s.node);t.push(l),s.replaceWith(os(u))}}return t}(e),c=function(e){var t=[],n=!0,r=e.node.properties,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}var s=o;S(s.key)&&!s.computed?t.push(ls(s.key.name)):he(s.key)?t.push(gp(s.key)):ht(s.key)?t.push(ls(String(s.key.value))):(t.push(gp(s.key)),n=!1)}return{keys:t,allLiteral:n}}(e),p=c.keys,h=c.allLiteral;return 0===p.length?[l,s.argument,Xo(o(t),[gs([]),gp(n)])]:(u=h?jo(p):Xo(ms(jo(p),os("map")),[t.addHelper("toPropertyKey")]),[l,s.argument,Xo(t.addHelper("objectWithoutProperties"+(a?"Loose":"")),[gp(n),u])])}function c(e,t){if(t.isAssignmentPattern())c(e,t.get("left"));else{if(t.isArrayPattern()&&s(t))for(var n=t.get("elements"),r=0;r<n.length;r++)c(e,n[r]);if(t.isObjectPattern()&&s(t)){var i=e.scope.generateUidIdentifier("ref"),a=Is("let",[Os(t.node,i)]);e.ensureBlock(),e.get("body").unshiftContainer("body",a),t.replaceWith(gp(i))}}}return{name:"proposal-object-rest-spread",inherits:TF,visitor:{Function:function(e){for(var t=e.get("params"),n=t.length-1;n>=0;n--)c(t[n].parentPath,t[n])},VariableDeclarator:function(e,t){if(e.get("id").isObjectPattern()){var n=e,r=e;u(e.get("id"),(function(e){if(e.parentPath.isObjectPattern()){if(r.node.id.properties.length>1&&!S(r.node.init)){var i=e.scope.generateUidIdentifierBasedOnNode(r.node.init,"ref");return r.insertBefore(Os(i,r.node.init)),void r.replaceWith(Os(r.node.id,gp(i)))}var o,s=r.node.init,u=[];e.findParent((function(e){if(e.isObjectProperty())u.unshift(e.node.key.name);else if(e.isVariableDeclarator())return o=e.parentPath.node.kind,!0})),u.length&&u.forEach((function(e){s=ms(s,os(e))}));var c=e.findParent((function(e){return e.isObjectPattern()})),p=l(c,t,s),h=p[0],f=p[1],d=p[2];a&&function(e){var t=e.getOuterBindingIdentifierPaths();Object.keys(t).forEach((function(n){var r=t[n].parentPath;e.scope.getBinding(n).references>x_||!r.isObjectProperty()||r.remove()}))}(c),cp(f),n.insertBefore(h),n.insertAfter(Os(f,d)),n=n.getSibling(n.key+1),e.scope.registerBinding(o,n),0===c.node.properties.length&&c.findParent((function(e){return e.isObjectProperty()||e.isVariableDeclarator()})).remove()}}))}},ExportNamedDeclaration:function(e){var t=e.get("declaration");if(t.isVariableDeclaration()&&t.get("declarations").some((function(e){return s(e.get("id"))}))){for(var n=[],r=0,i=Object.keys(e.getOuterBindingIdentifiers(e));r<i.length;r++){var a=i[r];n.push(qs(os(a),os(a)))}e.replaceWith(t.node),e.insertAfter(Hs(null,n))}},CatchClause:function(e){var t=e.get("param");c(t.parentPath,t)},AssignmentExpression:function(e,t){var n=e.get("left");if(n.isObjectPattern()&&s(n)){var r=[],i=e.scope.generateUidBasedOnNode(e.node.right,"ref");r.push(Is("var",[Os(os(i),e.node.right)]));var a=l(n,t,os(i)),o=a[0],u=a[1],c=a[2];o.length>0&&r.push(Is("var",o));var p=gp(e.node);p.right=os(i),r.push(es(p)),r.push(Yh(Uo("=",u,c))),r.push(es(os(i))),e.replaceWithMultiple(r)}},ForXStatement:function(e){var t=e.node,n=e.scope,r=e.get("left"),i=t.left;if(function(e){var t=!1;return u(e,(function(e){e.parentPath.isObjectPattern()&&(t=!0,e.stop())})),t}(r))if(H(i)){var a=i.declarations[0].id,o=n.generateUidIdentifier("ref");t.left=Is(i.kind,[Os(o,null)]),e.ensureBlock(),t.body.body.unshift(Is(t.left.kind,[Os(a,gp(o))]))}else{var s=n.generateUidIdentifier("ref");t.left=Is("var",[Os(s)]),e.ensureBlock(),0===t.body.body.length&&e.isCompletionRecord()&&t.body.body.unshift(es(n.buildUndefinedNode())),t.body.body.unshift(es(Uo("=",i,gp(s))))}},ArrayPattern:function(e){var t=[];if(u(e,(function(e){if(e.parentPath.isObjectPattern()){var n=e.parentPath,r=e.scope.generateUidIdentifier("ref");t.push(Os(n.node,r)),n.replaceWith(gp(r)),e.skip()}})),t.length>0){var n=e.getStatementParent();n.insertAfter(Is(n.node.kind||"var",t))}},ObjectExpression:function(e,t){if(function(e){var t=e.properties,n=Array.isArray(t),r=0;for(t=n?t:t[Symbol.iterator]();;){var i;if(n){if(r>=t.length)break;i=t[r++]}else{if((r=t.next()).done)break;i=r.value}if(le(i))return!0}return!1}(e.node)){for(var n,r=[],i=[],s=0,u=e.node.properties;s<u.length;s++){var l=u[s];le(l)?(c(),r.push(l.argument)):i.push(l)}if(i.length&&c(),a)n=o(t);else try{n=t.addHelper("objectSpread2")}catch(e){this.file.declarations.objectSpread2=null,n=t.addHelper("objectSpread")}e.replaceWith(Xo(n,r))}function c(){r.push(gs(i)),i=[]}}}}})),C_=cF((function(e){return e.assertVersion(7),{name:"proposal-optional-catch-binding",inherits:CF,visitor:{CatchClause:function(e){if(!e.node.param){var t=e.scope.generateUidIdentifier("unused");e.get("param").replaceWith(t)}}}}})),w_=cF((function(e){return e.assertVersion(7),{name:"syntax-optional-chaining",manipulateOptions:function(e,t){t.plugins.push("optionalChaining")}}})),P_=cF((function(e,t){e.assertVersion(7);var n=t.loose,r=void 0!==n&&n;return{name:"proposal-optional-chaining",inherits:w_,visitor:{"OptionalCallExpression|OptionalMemberExpression":function(e){for(var t=e.parentPath,n=e.scope,i=!1,a=[],o=e;o.isOptionalMemberExpression()||o.isOptionalCallExpression();){var s=o.node;s.optional&&a.push(s),o.isOptionalMemberExpression()?(o.node.type="MemberExpression",o=o.get("object")):o.isOptionalCallExpression()&&(o.node.type="CallExpression",o=o.get("callee"))}var u=e;t.isUnaryExpression({operator:"delete"})&&(u=t,i=!0);for(var l=a.length-1;l>=0;l--){var c=a[l],p=h(c),f=p?"callee":"object",d=c[f],m=void 0,y=void 0;if(r&&p?y=m=d:(m=n.maybeGenerateMemoised(d))?(y=Uo("=",gp(m),d),c[f]=m):y=m=d,p&&_(d))if(r)c.callee=d;else{var v=d.object,g=n.maybeGenerateMemoised(v);g?d.object=Uo("=",g,v):g=ce(v)?ws():v,c.arguments.unshift(gp(g)),c.callee=ms(c.callee,os("call"))}u.replaceWith(Jo(r?Vo("==",gp(y),ps()):ds("||",Vo("===",gp(y),ps()),Vo("===",gp(m),n.buildUndefinedNode())),i?hs(!0):n.buildUndefinedNode(),u.node)),u=u.get("alternate")}}}}})),F_=function(e){var t,n=e.assign,r=e.call,i=e.path,a=n.left,o=n.right,s=r.callee,u=J(s)&&tt(s.body)&&!s.async&&!s.generator;if(u){var l=s.params;1===l.length&&S(l[0])?t=l[0]:l.length>0&&(u=!1)}else if(S(s,{name:"eval"})){var c=Ss([cs(0),s]);return r.callee=c,i.scope.push({id:a}),Ss([n,r])}return u&&!t?Ss([o,s.body]):(i.scope.push({id:a}),t?(i.get("right").scope.rename(t.name,a.name),Ss([n,s.body])):Ss([n,r]))},k_={PipelinePrimaryTopicReference:function(e){e.replaceWith(this.topicId)},PipelineTopicExpression:function(e){e.skip()}},__={minimal:{BinaryExpression:function(e){var t=e.scope,n=e.node,r=n.operator,i=n.left,a=n.right;if("|>"===r){var o=t.generateUidIdentifierBasedOnNode(i),s=Xo(a,[gp(o)]);e.replaceWith(F_({assign:Uo("=",gp(o),i),call:s,path:e}))}}},smart:{BinaryExpression:function(e){var t=e.scope,n=e.node,r=n.operator,i=n.left,a=n.right;if("|>"===r){var o,s=t.generateUidIdentifierBasedOnNode(i);if(t.push({id:s}),Ge(a))e.get("right").traverse(k_,{topicId:s}),o=a.expression;else{var u=a.callee;S(u,{name:"eval"})&&(u=Ss([cs(0),u])),o=Xo(u,[gp(s)])}e.replaceWith(Ss([Uo("=",gp(s),i),o]))}}},fsharp:{BinaryExpression:function(e){var t=e.scope,n=e.node,r=n.operator,i=n.left,a=n.right;if("|>"===r){var o=t.generateUidIdentifierBasedOnNode(i),s="AwaitExpression"===a.type?Ol(gp(o)):Xo(a,[gp(o)]),u=F_({assign:Uo("=",gp(o),i),call:s,path:e});e.replaceWith(u)}}}},I_=cF((function(e,t){return e.assertVersion(7),{name:"proposal-pipeline-operator",inherits:PF,visitor:__[t.proposal]}})),O_=cF((function(e,t){return e.assertVersion(7),$k({name:"proposal-private-methods",feature:Gk.privateMethods,loose:t.loose,manipulateOptions:function(e,t){t.plugins.push("classPrivateMethods")}})})),B_=cF((function(e){return e.assertVersion(7),{name:"syntax-throw-expressions",manipulateOptions:function(e,t){t.plugins.push("throwExpressions")}}})),N_=cF((function(e){return e.assertVersion(7),{name:"proposal-throw-expressions",inherits:B_,visitor:{UnaryExpression:function(e){var t=e.node,n=t.operator,r=t.argument;if("throw"===n){var i=as(null,[os("e")],qo([Ps(os("e"))]));e.replaceWith(Xo(i,[r]))}}}}})),M_=Vt((function(e,t){(function(){var n={function:!0,object:!0}[typeof window]&&window||this,r=t&&!t.nodeType&&t,i=e&&!e.nodeType,a=r&&i&&"object"==typeof jt&&jt;!a||a.global!==a&&a.window!==a&&a.self!==a||(n=a);var o=Object.prototype.hasOwnProperty;function s(){var e=Number(arguments[0]);if(!isFinite(e)||e<0||e>1114111||Math.floor(e)!=e)throw RangeError("Invalid code point: "+e);if(e<=65535)return String.fromCharCode(e);var t=55296+((e-=65536)>>10),n=e%1024+56320;return String.fromCharCode(t,n)}var u={};function l(e,t){if(-1==t.indexOf("|")){if(e==t)return;throw Error("Invalid node type: "+e+"; expected type: "+t)}if(!(t=o.call(u,t)?u[t]:u[t]=RegExp("^(?:"+t+")$")).test(e))throw Error("Invalid node type: "+e+"; expected types: "+t)}function c(e){var t=e.type;if(o.call(d,t))return d[t](e);throw Error("Invalid node type: "+t)}function p(e){return l(e.type,"anchor|characterClassEscape|characterClassRange|dot|value"),c(e)}function h(e){return l(e.type,"identifier"),e.value}function f(e){return l(e.type,"anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|unicodePropertyEscape|value|dot"),c(e)}var d={alternative:function(e){l(e.type,"alternative");for(var t=e.body,n=-1,r=t.length,i="";++n<r;)i+=f(t[n]);return i},anchor:function(e){switch(l(e.type,"anchor"),e.kind){case"start":return"^";case"end":return"$";case"boundary":return"\\b";case"not-boundary":return"\\B";default:throw Error("Invalid assertion")}},characterClass:function(e){l(e.type,"characterClass");var t=e.body,n=-1,r=t.length,i="";for(e.negative&&(i+="^");++n<r;)i+=p(t[n]);return"["+i+"]"},characterClassEscape:function(e){return l(e.type,"characterClassEscape"),"\\"+e.value},characterClassRange:function(e){l(e.type,"characterClassRange");var t=e.min,n=e.max;if("characterClassRange"==t.type||"characterClassRange"==n.type)throw Error("Invalid character class range");return p(t)+"-"+p(n)},unicodePropertyEscape:function(e){return l(e.type,"unicodePropertyEscape"),"\\"+(e.negative?"P":"p")+"{"+e.value+"}"},disjunction:function(e){l(e.type,"disjunction");for(var t=e.body,n=-1,r=t.length,i="";++n<r;)0!=n&&(i+="|"),i+=c(t[n]);return i},dot:function(e){return l(e.type,"dot"),"."},group:function(e){l(e.type,"group");var t="";switch(e.behavior){case"normal":e.name&&(t+="?<"+h(e.name)+">");break;case"ignore":t+="?:";break;case"lookahead":t+="?=";break;case"negativeLookahead":t+="?!";break;case"lookbehind":t+="?<=";break;case"negativeLookbehind":t+="?<!";break;default:throw Error("Invalid behaviour: "+e.behaviour)}for(var n=e.body,r=-1,i=n.length;++r<i;)t+=c(n[r]);return"("+t+")"},quantifier:function(e){l(e.type,"quantifier");var t="",n=e.min,r=e.max;return t=null==r?0==n?"*":1==n?"+":"{"+n+",}":n==r?"{"+n+"}":0==n&&1==r?"?":"{"+n+","+r+"}",e.greedy||(t+="?"),function(e){return l(e.type,"anchor|characterClass|characterClassEscape|dot|group|reference|value"),c(e)}(e.body[0])+t},reference:function(e){if(l(e.type,"reference"),e.matchIndex)return"\\"+e.matchIndex;if(e.name)return"\\k<"+h(e.name)+">";throw new Error("Unknown reference type")},value:function(e){l(e.type,"value");var t=e.kind,n=e.codePoint;if("number"!=typeof n)throw new Error("Invalid code point: "+n);switch(t){case"controlLetter":return"\\c"+s(n+64);case"hexadecimalEscape":return"\\x"+("00"+n.toString(16).toUpperCase()).slice(-2);case"identifier":return"\\"+s(n);case"null":return"\\"+n;case"octal":return"\\"+n.toString(8);case"singleEscape":switch(n){case 8:return"\\b";case 9:return"\\t";case 10:return"\\n";case 11:return"\\v";case 12:return"\\f";case 13:return"\\r";default:throw Error("Invalid code point: "+n)}case"symbol":return s(n);case"unicodeEscape":return"\\u"+("0000"+n.toString(16).toUpperCase()).slice(-4);case"unicodeCodePointEscape":return"\\u{"+n.toString(16).toUpperCase()+"}";default:throw Error("Unsupported node kind: "+t)}}},m={generate:c};r&&i?r.generate=c:n.regjsgen=m}).call(jt)})),R_=Vt((function(e){var t,n,r,i;r=String.fromCodePoint||(t=String.fromCharCode,n=Math.floor,function(){var e,r,i=16384,a=[],o=-1,s=arguments.length;if(!s)return"";for(var u="";++o<s;){var l=Number(arguments[o]);if(!isFinite(l)||l<0||l>1114111||n(l)!=l)throw RangeError("Invalid code point: "+l);l<=65535?a.push(l):(e=55296+((l-=65536)>>10),r=l%1024+56320,a.push(e,r)),(o+1==s||a.length>i)&&(u+=t.apply(null,a),a.length=0)}return u}),i={parse:function(e,t,n){function i(t){return t.raw=e.substring(t.range[0],t.range[1]),t}function a(e,t){return e.range[0]=t,i(e)}function o(e,t){return i({type:"anchor",kind:e,range:[W-t,W]})}function s(e,t,n,r){return i({type:"value",kind:e,codePoint:t,range:[n,r]})}function u(e,t,n,r){return r=r||0,s(e,t,W-(n.length+r),W)}function l(e){var t,n=e[0],r=n.charCodeAt(0);return V&&1===n.length&&r>=55296&&r<=56319&&(t=v().charCodeAt(0))>=56320&&t<=57343?s("symbol",1024*(r-55296)+t-56320+65536,++W-2,W):s("symbol",r,W-1,W)}function c(e,t,n,r){return null==r&&(n=W-1,r=W),i({type:"quantifier",min:e,max:t,greedy:!0,body:null,range:[n,r]})}function p(e,t,n,r){return i({type:"characterClass",body:e,negative:t,range:[n,r]})}function h(e,t,n,r){return e.codePoint>t.codePoint&&R("invalid range in character class",e.raw+"-"+t.raw,n,r),i({type:"characterClassRange",min:e,max:t,range:[n,r]})}function f(e){return"alternative"===e.type?e.body:[e]}function d(t){t=t||1;var n=e.substring(W,W+t);return W+=t||1,n}function m(e){y(e)||R("character",e)}function y(t){if(e.indexOf(t,W)===W)return d(t.length)}function v(){return e[W]}function g(t){return e.indexOf(t,W)===W}function b(t){return e[W+1]===t}function E(t){var n=e.substring(W).match(t);return n&&(n.range=[],n.range[0]=W,d(n[0].length),n.range[1]=W),n}function A(){var e=[],t=W;for(e.push(D());y("|");)e.push(D());return 1===e.length?e[0]:function(e,t,n){return i({type:"disjunction",body:e,range:[t,n]})}(e,t,W)}function D(){for(var e,t=[],n=W;e=S();)t.push(e);return 1===t.length?t[0]:function(e,t,n){return i({type:"alternative",body:e,range:[t,n]})}(t,n,W)}function S(){if(W>=e.length||g("|")||g(")"))return null;var t=y("^")?o("start",1):y("$")?o("end",1):y("\\b")?o("boundary",2):y("\\B")?o("not-boundary",2):x("(?=","lookahead","(?!","negativeLookahead");if(t)return t;var r=function(){var e;if(e=E(/^[^^$\\.*+?(){[|]/))return l(e);if(y("."))return i({type:"dot",range:[W-1,W]});if(y("\\")){if(!(e=P())){if(!V&&"c"==v())return s("symbol",92,W-1,W);R("atomEscape")}return e}if(e=function(){var e,t=W;return(e=E(/^\[\^/))?(e=B(),m("]"),p(e,!0,t,W)):y("[")?(e=B(),m("]"),p(e,!1,t,W)):null}())return e;if(n.lookbehind&&(e=x("(?<=","lookbehind","(?<!","negativeLookbehind")))return e;if(n.namedGroups&&y("(?<")){var t=_();m(">");var r=T("normal",t.range[0]-3);return r.name=t,r}return x("(?:","ignore","(","normal")}();r||R("Expected atom");var u=function(){var e,t,n,r,i=W;return y("*")?t=c(0):y("+")?t=c(1):y("?")?t=c(0,1):(e=E(/^\{([0-9]+)\}/))?(n=parseInt(e[1],10),t=c(n,n,e.range[0],e.range[1])):(e=E(/^\{([0-9]+),\}/))?(n=parseInt(e[1],10),t=c(n,void 0,e.range[0],e.range[1])):(e=E(/^\{([0-9]+),([0-9]+)\}/))&&(n=parseInt(e[1],10),r=parseInt(e[2],10),n>r&&R("numbers out of order in {} quantifier","",i,W),t=c(n,r,e.range[0],e.range[1])),t&&y("?")&&(t.greedy=!1,t.range[1]+=1),t}()||!1;return u?(u.body=f(r),a(u,r.range[0]),u):r}function x(e,t,n,r){var i=null,a=W;if(y(e))i=t;else{if(!y(n))return!1;i=r}return T(i,a)}function T(e,t){var n=A();n||R("Expected disjunction"),m(")");var r=function(e,t,n,r){return i({type:"group",behavior:e,body:t,range:[n,r]})}(e,f(n),t,W);return"normal"==e&&U&&j++,r}function C(e){var t,n;if(V&&"unicodeEscape"==e.kind&&(t=e.codePoint)>=55296&&t<=56319&&g("\\")&&b("u")){var r=W;W++;var a=w();"unicodeEscape"==a.kind&&(n=a.codePoint)>=56320&&n<=57343?(e.range[1]=a.range[1],e.codePoint=1024*(t-55296)+n-56320+65536,e.type="value",e.kind="unicodeCodePointEscape",i(e)):W=r}return e}function w(){return P(!0)}function P(e){var t,r=W;if(t=function(){var e,t,n;if(e=E(/^(?!0)\d+/)){t=e[0];var r=parseInt(e[0],10);return r<=j?(n=e[0],i({type:"reference",matchIndex:parseInt(n,10),range:[W-1-n.length,W]})):(L.push(r),d(-e[0].length),(e=E(/^[0-7]{1,3}/))?u("octal",parseInt(e[0],8),e[0],1):a(e=l(E(/^[89]/)),e.range[0]-1))}return(e=E(/^[0-7]{1,3}/))?(t=e[0],/^0{1,3}$/.test(t)?u("null",0,"0",t.length+1):u("octal",parseInt(t,8),t,1)):!!(e=E(/^[dDsSwW]/))&&i({type:"characterClassEscape",value:e[0],range:[W-2,W]})}()||function(){if(n.namedGroups&&E(/^k<(?=.*?>)/)){var e=_();return m(">"),function(e){return i({type:"reference",name:e,range:[e.range[0]-3,W]})}(e)}}())return t;if(e){if(y("b"))return u("singleEscape",8,"\\b");if(y("B"))R("\\B not possible inside of CharacterClass","",r);else if(!V&&(t=E(/^c([0-9])/)))return u("controlLetter",t[1]+16,t[1],2)}return t=function(){var e,t,r=W;if(e=E(/^[fnrtv]/)){var a=0;switch(e[0]){case"t":a=9;break;case"n":a=10;break;case"v":a=11;break;case"f":a=12;break;case"r":a=13}return u("singleEscape",a,"\\"+e[0])}return(e=E(/^c([a-zA-Z])/))?u("controlLetter",e[1].charCodeAt(0)%32,e[1],2):(e=E(/^x([0-9a-fA-F]{2})/))?u("hexadecimalEscape",parseInt(e[1],16),e[1],2):(e=F())?((!e||e.codePoint>1114111)&&R("Invalid escape sequence",null,r,W),e):n.unicodePropertyEscape&&V&&(e=E(/^([pP])\{([^\}]+)\}/))?i({type:"unicodePropertyEscape",negative:"P"===e[1],value:e[2],range:[e.range[0]-1,e.range[1]],raw:e[0]}):"c"!==v()?u("identifier",(t=d()).charCodeAt(0),t,1):null}()}function F(){var e;return(e=E(/^u([0-9a-fA-F]{4})/))?C(u("unicodeEscape",parseInt(e[1],16),e[1],2)):V&&(e=E(/^u\{([0-9a-fA-F]+)\}/))?u("unicodeCodePointEscape",parseInt(e[1],16),e[1],4):void 0}function k(t){var n=v(),i=W;if("\\"===n){d();var a=F();return a&&t(a.codePoint)||R("Invalid escape sequence",null,i,W),r(a.codePoint)}var o=n.charCodeAt(0);if(o>=55296&&o<=56319){var s=(n+=e[W+1]).charCodeAt(1);s>=56320&&s<=57343&&(o=1024*(o-55296)+s-56320+65536)}if(t(o))return d(),o>65535&&d(),n}function _(){var e,t=W,n=k(I);for(n||R("Invalid identifier");e=k(O);)n+=e;return i({type:"identifier",value:n,range:[t,W]})}function I(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||e>=128&&/[\$A-Z_a-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEF\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7B9\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDF00-\uDF1C\uDF27\uDF30-\uDF45]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF1A]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDE9D\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFF1]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/.test(r(e))}function O(e){return I(e)||e>=48&&e<=57||e>=128&&/[0-9_\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u200C\u200D\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD801[\uDCA0-\uDCA9]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD803[\uDD24-\uDD27\uDD30-\uDD39\uDF46-\uDF50]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC66-\uDC6F\uDC7F-\uDC82\uDCB0-\uDCBA\uDCF0-\uDCF9\uDD00-\uDD02\uDD27-\uDD34\uDD36-\uDD3F\uDD45\uDD46\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDDC9-\uDDCC\uDDD0-\uDDD9\uDE2C-\uDE37\uDE3E\uDEDF-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF3B\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC35-\uDC46\uDC50-\uDC59\uDC5E\uDCB0-\uDCC3\uDCD0-\uDCD9\uDDAF-\uDDB5\uDDB8-\uDDC0\uDDDC\uDDDD\uDE30-\uDE40\uDE50-\uDE59\uDEAB-\uDEB7\uDEC0-\uDEC9\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDC2C-\uDC3A\uDCE0-\uDCE9\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE3E\uDE47\uDE51-\uDE5B\uDE8A-\uDE99]|\uD807[\uDC2F-\uDC36\uDC38-\uDC3F\uDC50-\uDC59\uDC92-\uDCA7\uDCA9-\uDCB6\uDD31-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD45\uDD47\uDD50-\uDD59\uDD8A-\uDD8E\uDD90\uDD91\uDD93-\uDD97\uDDA0-\uDDA9\uDEF3-\uDEF6]|\uD81A[\uDE60-\uDE69\uDEF0-\uDEF4\uDF30-\uDF36\uDF50-\uDF59]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A\uDD50-\uDD59]|\uDB40[\uDD00-\uDDEF]/.test(r(e))}function B(){var e,t;return g("]")?[]:((t=M())||R("classAtom"),(e=g("]")?[t]:N(t))||R("nonEmptyClassRanges"),e)}function N(e){var t,n,r;if(g("-")&&!b("]")){m("-"),(r=M())||R("classAtom"),n=W;var i=B();return i||R("classRanges"),t=e.range[0],"empty"===i.type?[h(e,r,t,n)]:[h(e,r,t,n)].concat(i)}return(r=function(){var e=M();return e||R("classAtom"),g("]")?e:N(e)}())||R("nonEmptyClassRangesNoDash"),[e].concat(r)}function M(){return y("-")?l("-"):(e=E(/^[^\\\]-]/))?l(e[0]):y("\\")?((e=w())||R("classEscape"),C(e)):void 0;var e}function R(t,n,r,i){r=null==r?W:r,i=null==i?r:i;var a=Math.max(0,r-10),o=Math.min(i+10,e.length),s="    "+e.substring(a,o),u="    "+new Array(r-a+1).join(" ")+"^";throw SyntaxError(t+" at position "+r+(n?": "+n:"")+"\n"+s+"\n"+u)}n||(n={});var L=[],j=0,U=!0,V=-1!==(t||"").indexOf("u"),W=0;""===(e=String(e))&&(e="(?:)");var G=A();G.range[1]!==e.length&&R("Could not parse entire input - got stuck","",G.range[1]);for(var H=0;H<L.length;H++)if(L[H]<=j)return W=0,U=!1,A();return G}},e.exports?e.exports=i:window.regjsparser=i})),L_=Vt((function(e,t){!function(n){var r=t,i=e&&e.exports==r&&e,a="object"==typeof jt&&jt;a.global!==a&&a.window!==a||(n=a);var o="A range’s `stop` value must be greater than or equal to the `start` value.",s="Invalid code point value. Code points range from U+000000 to U+10FFFF.",u=/\\x00([^0123456789]|$)/g,l={},c=l.hasOwnProperty,p=function(e,t){for(var n=-1,r=e.length;++n<r;)t(e[n],n)},h=l.toString,f=function(e){return"[object Array]"==h.call(e)},d=function(e){return"number"==typeof e||"[object Number]"==h.call(e)},m=function(e,t){var n=String(e);return n.length<t?("0000"+n).slice(-t):n},y=function(e){return Number(e).toString(16).toUpperCase()},v=[].slice,g=function(e,t){for(var n,r,i=0,a=e.length;i<a;){if(n=e[i],r=e[i+1],t>=n&&t<r)return t==n?r==n+1?(e.splice(i,2),e):(e[i]=t+1,e):t==r-1?(e[i+1]=t,e):(e.splice(i,2,n,t,t+1,r),e);i+=2}return e},b=function(e,t,n){if(n<t)throw Error(o);for(var r,i,a=0;a<e.length;){if(r=e[a],i=e[a+1]-1,r>n)return e;if(t<=r&&n>=i)e.splice(a,2);else{if(t>=r&&n<i)return t==r?(e[a]=n+1,e[a+1]=i+1,e):(e.splice(a,2,r,t,n+1,i+1),e);if(t>=r&&t<=i)e[a+1]=t;else if(n>=r&&n<=i)return e[a]=n+1,e;a+=2}}return e},E=function(e,t){var n,r,i=0,a=null,o=e.length;if(t<0||t>1114111)throw RangeError(s);for(;i<o;){if(n=e[i],r=e[i+1],t>=n&&t<r)return e;if(t==n-1)return e[i]=t,e;if(n>t)return e.splice(null!=a?a+2:0,0,t,t+1),e;if(t==r)return t+1==e[i+2]?(e.splice(i,4,n,e[i+3]),e):(e[i+1]=t+1,e);a=i,i+=2}return e.push(t,t+1),e},A=function(e,t){for(var n,r,i=0,a=e.slice(),o=t.length;i<o;)a=(n=t[i])==(r=t[i+1]-1)?E(a,n):S(a,n,r),i+=2;return a},D=function(e,t){for(var n,r,i=0,a=e.slice(),o=t.length;i<o;)a=(n=t[i])==(r=t[i+1]-1)?g(a,n):b(a,n,r),i+=2;return a},S=function(e,t,n){if(n<t)throw Error(o);if(t<0||t>1114111||n<0||n>1114111)throw RangeError(s);for(var r,i,a=0,u=!1,l=e.length;a<l;){if(r=e[a],i=e[a+1],u){if(r==n+1)return e.splice(a-1,2),e;if(r>n)return e;r>=t&&r<=n&&(i>t&&i-1<=n?(e.splice(a,2),a-=2):(e.splice(a-1,2),a-=2))}else{if(r==n+1)return e[a]=t,e;if(r>n)return e.splice(a,0,t,n+1),e;if(t>=r&&t<i&&n+1<=i)return e;t>=r&&t<i||i==t?(e[a+1]=n+1,u=!0):t<=r&&n+1>=i&&(e[a]=t,e[a+1]=n+1,u=!0)}a+=2}return u||e.push(t,n+1),e},x=function(e,t){var n=0,r=e.length,i=e[n],a=e[r-1];if(r>=2&&(t<i||t>a))return!1;for(;n<r;){if(i=e[n],a=e[n+1],t>=i&&t<a)return!0;n+=2}return!1},T=function(e){return!e.length},C=function(e){return 2==e.length&&e[0]+1==e[1]},w=function(e){for(var t,n,r=0,i=[],a=e.length;r<a;){for(t=e[r],n=e[r+1];t<n;)i.push(t),++t;r+=2}return i},P=Math.floor,F=function(e){return parseInt(P((e-65536)/1024)+55296,10)},k=function(e){return parseInt((e-65536)%1024+56320,10)},_=String.fromCharCode,I=function(e){return 9==e?"\\t":10==e?"\\n":12==e?"\\f":13==e?"\\r":45==e?"\\x2D":92==e?"\\\\":36==e||e>=40&&e<=43||46==e||47==e||63==e||e>=91&&e<=94||e>=123&&e<=125?"\\"+_(e):e>=32&&e<=126?_(e):e<=255?"\\x"+m(y(e),2):"\\u"+m(y(e),4)},O=function(e){return e<=65535?I(e):"\\u{"+e.toString(16).toUpperCase()+"}"},B=function(e){var t=e.length,n=e.charCodeAt(0);return n>=55296&&n<=56319&&t>1?1024*(n-55296)+e.charCodeAt(1)-56320+65536:n},N=function(e){var t,n,r="",i=0,a=e.length;if(C(e))return I(e[0]);for(;i<a;)r+=(t=e[i])==(n=e[i+1]-1)?I(t):t+1==n?I(t)+I(n):I(t)+"-"+I(n),i+=2;return"["+r+"]"},M=function(e){if(1==e.length)return e;for(var t=-1,n=-1;++t<e.length;){var r=e[t],i=r[1],a=i[0],o=i[1];for(n=t;++n<e.length;){var s=e[n],u=s[1],l=u[0],c=u[1];a==l&&o==c&&(C(s[0])?r[0]=E(r[0],s[0][0]):r[0]=S(r[0],s[0][0],s[0][1]-1),e.splice(n,1),--n)}}return e},R=function(e){if(!e.length)return[];for(var t,n,r,i,a,o,s=0,u=[],l=e.length;s<l;){t=e[s],n=e[s+1]-1,r=F(t),i=k(t),a=F(n);var c=57343==(o=k(n)),p=!1;r==a||56320==i&&c?(u.push([[r,a+1],[i,o+1]]),p=!0):u.push([[r,r+1],[i,57344]]),!p&&r+1<a&&(c?(u.push([[r+1,a+1],[56320,o+1]]),p=!0):u.push([[r+1,a],[56320,57344]])),p||u.push([[a,a+1],[56320,o+1]]),s+=2}return function(e){for(var t,n,r,i,a,o,s=[],u=[],l=!1,c=-1,p=e.length;++c<p;)if(t=e[c],n=e[c+1]){for(r=t[0],i=t[1],a=n[0],o=n[1],u=i;a&&r[0]==a[0]&&r[1]==a[1];)u=C(o)?E(u,o[0]):S(u,o[0],o[1]-1),r=(t=e[++c])[0],i=t[1],a=(n=e[c+1])&&n[0],o=n&&n[1],l=!0;s.push([r,l?u:i]),l=!1}else s.push(t);return M(s)}(u)},L=function(e,t,n){if(n)return function(e){var t,n,r="",i=0,a=e.length;if(C(e))return O(e[0]);for(;i<a;)r+=(t=e[i])==(n=e[i+1]-1)?O(t):t+1==n?O(t)+O(n):O(t)+"-"+O(n),i+=2;return"["+r+"]"}(e);var r=[],i=function(e){for(var t,n,r=[],i=[],a=[],o=[],s=0,u=e.length;s<u;)t=e[s],n=e[s+1]-1,t<55296?(n<55296&&a.push(t,n+1),n>=55296&&n<=56319&&(a.push(t,55296),r.push(55296,n+1)),n>=56320&&n<=57343&&(a.push(t,55296),r.push(55296,56320),i.push(56320,n+1)),n>57343&&(a.push(t,55296),r.push(55296,56320),i.push(56320,57344),n<=65535?a.push(57344,n+1):(a.push(57344,65536),o.push(65536,n+1)))):t>=55296&&t<=56319?(n>=55296&&n<=56319&&r.push(t,n+1),n>=56320&&n<=57343&&(r.push(t,56320),i.push(56320,n+1)),n>57343&&(r.push(t,56320),i.push(56320,57344),n<=65535?a.push(57344,n+1):(a.push(57344,65536),o.push(65536,n+1)))):t>=56320&&t<=57343?(n>=56320&&n<=57343&&i.push(t,n+1),n>57343&&(i.push(t,57344),n<=65535?a.push(57344,n+1):(a.push(57344,65536),o.push(65536,n+1)))):t>57343&&t<=65535?n<=65535?a.push(t,n+1):(a.push(t,65536),o.push(65536,n+1)):o.push(t,n+1),s+=2;return{loneHighSurrogates:r,loneLowSurrogates:i,bmp:a,astral:o}}(e),a=i.loneHighSurrogates,o=i.loneLowSurrogates,s=i.bmp,u=i.astral,l=!T(a),c=!T(o),h=R(u);return t&&(s=A(s,a),l=!1,s=A(s,o),c=!1),T(s)||r.push(N(s)),h.length&&r.push(function(e){var t=[];return p(e,(function(e){var n=e[0],r=e[1];t.push(N(n)+N(r))})),t.join("|")}(h)),l&&r.push(N(a)+"(?![\\uDC00-\\uDFFF])"),c&&r.push("(?:[^\\uD800-\\uDBFF]|^)"+N(o)),r.join("|")},j=function e(t){return arguments.length>1&&(t=v.call(arguments)),this instanceof e?(this.data=[],t?this.add(t):this):(new e).add(t)};j.version="1.3.3";var U=j.prototype;!function(e,t){var n;for(n in t)c.call(t,n)&&(e[n]=t[n])}(U,{add:function(e){var t=this;return null==e?t:e instanceof j?(t.data=A(t.data,e.data),t):(arguments.length>1&&(e=v.call(arguments)),f(e)?(p(e,(function(e){t.add(e)})),t):(t.data=E(t.data,d(e)?e:B(e)),t))},remove:function(e){var t=this;return null==e?t:e instanceof j?(t.data=D(t.data,e.data),t):(arguments.length>1&&(e=v.call(arguments)),f(e)?(p(e,(function(e){t.remove(e)})),t):(t.data=g(t.data,d(e)?e:B(e)),t))},addRange:function(e,t){return this.data=S(this.data,d(e)?e:B(e),d(t)?t:B(t)),this},removeRange:function(e,t){var n=d(e)?e:B(e),r=d(t)?t:B(t);return this.data=b(this.data,n,r),this},intersection:function(e){var t=e instanceof j?w(e.data):e;return this.data=function(e,t){for(var n,r=0,i=t.length,a=[];r<i;)n=t[r],x(e,n)&&a.push(n),++r;return function(e){for(var t,n=-1,r=e.length,i=r-1,a=[],o=!0,s=0;++n<r;)if(t=e[n],o)a.push(t),s=t,o=!1;else if(t==s+1){if(n!=i){s=t;continue}o=!0,a.push(t+1)}else a.push(s+1,t),s=t;return o||a.push(t+1),a}(a)}(this.data,t),this},contains:function(e){return x(this.data,d(e)?e:B(e))},clone:function(){var e=new j;return e.data=this.data.slice(0),e},toString:function(e){var t=L(this.data,!!e&&e.bmpOnly,!!e&&e.hasUnicodeFlag);return t?t.replace(u,"\\0$1"):"[]"},toRegExp:function(e){var t=this.toString(e&&-1!=e.indexOf("u")?{hasUnicodeFlag:!0}:null);return RegExp(t,e||"")},valueOf:function(){return w(this.data)}}),U.toArray=U.valueOf,r&&!r.nodeType?i?i.exports=j:r.regenerate=j:n.regenerate=j}(jt)})),j_=new Set(["General_Category","Script","Script_Extensions","Alphabetic","Any","ASCII","ASCII_Hex_Digit","Assigned","Bidi_Control","Bidi_Mirrored","Case_Ignorable","Cased","Changes_When_Casefolded","Changes_When_Casemapped","Changes_When_Lowercased","Changes_When_NFKC_Casefolded","Changes_When_Titlecased","Changes_When_Uppercased","Dash","Default_Ignorable_Code_Point","Deprecated","Diacritic","Emoji","Emoji_Component","Emoji_Modifier","Emoji_Modifier_Base","Emoji_Presentation","Extended_Pictographic","Extender","Grapheme_Base","Grapheme_Extend","Hex_Digit","ID_Continue","ID_Start","Ideographic","IDS_Binary_Operator","IDS_Trinary_Operator","Join_Control","Logical_Order_Exception","Lowercase","Math","Noncharacter_Code_Point","Pattern_Syntax","Pattern_White_Space","Quotation_Mark","Radical","Regional_Indicator","Sentence_Terminal","Soft_Dotted","Terminal_Punctuation","Unified_Ideograph","Uppercase","Variation_Selector","White_Space","XID_Continue","XID_Start"]),U_=new Map([["scx","Script_Extensions"],["sc","Script"],["gc","General_Category"],["AHex","ASCII_Hex_Digit"],["Alpha","Alphabetic"],["Bidi_C","Bidi_Control"],["Bidi_M","Bidi_Mirrored"],["Cased","Cased"],["CI","Case_Ignorable"],["CWCF","Changes_When_Casefolded"],["CWCM","Changes_When_Casemapped"],["CWKCF","Changes_When_NFKC_Casefolded"],["CWL","Changes_When_Lowercased"],["CWT","Changes_When_Titlecased"],["CWU","Changes_When_Uppercased"],["Dash","Dash"],["Dep","Deprecated"],["DI","Default_Ignorable_Code_Point"],["Dia","Diacritic"],["Ext","Extender"],["Gr_Base","Grapheme_Base"],["Gr_Ext","Grapheme_Extend"],["Hex","Hex_Digit"],["IDC","ID_Continue"],["Ideo","Ideographic"],["IDS","ID_Start"],["IDSB","IDS_Binary_Operator"],["IDST","IDS_Trinary_Operator"],["Join_C","Join_Control"],["LOE","Logical_Order_Exception"],["Lower","Lowercase"],["Math","Math"],["NChar","Noncharacter_Code_Point"],["Pat_Syn","Pattern_Syntax"],["Pat_WS","Pattern_White_Space"],["QMark","Quotation_Mark"],["Radical","Radical"],["RI","Regional_Indicator"],["SD","Soft_Dotted"],["STerm","Sentence_Terminal"],["Term","Terminal_Punctuation"],["UIdeo","Unified_Ideograph"],["Upper","Uppercase"],["VS","Variation_Selector"],["WSpace","White_Space"],["space","White_Space"],["XIDC","XID_Continue"],["XIDS","XID_Start"]]),V_=function(e){if(j_.has(e))return e;if(U_.has(e))return U_.get(e);throw new Error("Unknown property: "+e)},W_=new Map([["General_Category",new Map([["C","Other"],["Cc","Control"],["cntrl","Control"],["Cf","Format"],["Cn","Unassigned"],["Co","Private_Use"],["Cs","Surrogate"],["L","Letter"],["LC","Cased_Letter"],["Ll","Lowercase_Letter"],["Lm","Modifier_Letter"],["Lo","Other_Letter"],["Lt","Titlecase_Letter"],["Lu","Uppercase_Letter"],["M","Mark"],["Combining_Mark","Mark"],["Mc","Spacing_Mark"],["Me","Enclosing_Mark"],["Mn","Nonspacing_Mark"],["N","Number"],["Nd","Decimal_Number"],["digit","Decimal_Number"],["Nl","Letter_Number"],["No","Other_Number"],["P","Punctuation"],["punct","Punctuation"],["Pc","Connector_Punctuation"],["Pd","Dash_Punctuation"],["Pe","Close_Punctuation"],["Pf","Final_Punctuation"],["Pi","Initial_Punctuation"],["Po","Other_Punctuation"],["Ps","Open_Punctuation"],["S","Symbol"],["Sc","Currency_Symbol"],["Sk","Modifier_Symbol"],["Sm","Math_Symbol"],["So","Other_Symbol"],["Z","Separator"],["Zl","Line_Separator"],["Zp","Paragraph_Separator"],["Zs","Space_Separator"],["Other","Other"],["Control","Control"],["Format","Format"],["Unassigned","Unassigned"],["Private_Use","Private_Use"],["Surrogate","Surrogate"],["Letter","Letter"],["Cased_Letter","Cased_Letter"],["Lowercase_Letter","Lowercase_Letter"],["Modifier_Letter","Modifier_Letter"],["Other_Letter","Other_Letter"],["Titlecase_Letter","Titlecase_Letter"],["Uppercase_Letter","Uppercase_Letter"],["Mark","Mark"],["Spacing_Mark","Spacing_Mark"],["Enclosing_Mark","Enclosing_Mark"],["Nonspacing_Mark","Nonspacing_Mark"],["Number","Number"],["Decimal_Number","Decimal_Number"],["Letter_Number","Letter_Number"],["Other_Number","Other_Number"],["Punctuation","Punctuation"],["Connector_Punctuation","Connector_Punctuation"],["Dash_Punctuation","Dash_Punctuation"],["Close_Punctuation","Close_Punctuation"],["Final_Punctuation","Final_Punctuation"],["Initial_Punctuation","Initial_Punctuation"],["Other_Punctuation","Other_Punctuation"],["Open_Punctuation","Open_Punctuation"],["Symbol","Symbol"],["Currency_Symbol","Currency_Symbol"],["Modifier_Symbol","Modifier_Symbol"],["Math_Symbol","Math_Symbol"],["Other_Symbol","Other_Symbol"],["Separator","Separator"],["Line_Separator","Line_Separator"],["Paragraph_Separator","Paragraph_Separator"],["Space_Separator","Space_Separator"]])],["Script",new Map([["Adlm","Adlam"],["Aghb","Caucasian_Albanian"],["Ahom","Ahom"],["Arab","Arabic"],["Armi","Imperial_Aramaic"],["Armn","Armenian"],["Avst","Avestan"],["Bali","Balinese"],["Bamu","Bamum"],["Bass","Bassa_Vah"],["Batk","Batak"],["Beng","Bengali"],["Bhks","Bhaiksuki"],["Bopo","Bopomofo"],["Brah","Brahmi"],["Brai","Braille"],["Bugi","Buginese"],["Buhd","Buhid"],["Cakm","Chakma"],["Cans","Canadian_Aboriginal"],["Cari","Carian"],["Cham","Cham"],["Cher","Cherokee"],["Copt","Coptic"],["Qaac","Coptic"],["Cprt","Cypriot"],["Cyrl","Cyrillic"],["Deva","Devanagari"],["Dogr","Dogra"],["Dsrt","Deseret"],["Dupl","Duployan"],["Egyp","Egyptian_Hieroglyphs"],["Elba","Elbasan"],["Elym","Elymaic"],["Ethi","Ethiopic"],["Geor","Georgian"],["Glag","Glagolitic"],["Gong","Gunjala_Gondi"],["Gonm","Masaram_Gondi"],["Goth","Gothic"],["Gran","Grantha"],["Grek","Greek"],["Gujr","Gujarati"],["Guru","Gurmukhi"],["Hang","Hangul"],["Hani","Han"],["Hano","Hanunoo"],["Hatr","Hatran"],["Hebr","Hebrew"],["Hira","Hiragana"],["Hluw","Anatolian_Hieroglyphs"],["Hmng","Pahawh_Hmong"],["Hmnp","Nyiakeng_Puachue_Hmong"],["Hrkt","Katakana_Or_Hiragana"],["Hung","Old_Hungarian"],["Ital","Old_Italic"],["Java","Javanese"],["Kali","Kayah_Li"],["Kana","Katakana"],["Khar","Kharoshthi"],["Khmr","Khmer"],["Khoj","Khojki"],["Knda","Kannada"],["Kthi","Kaithi"],["Lana","Tai_Tham"],["Laoo","Lao"],["Latn","Latin"],["Lepc","Lepcha"],["Limb","Limbu"],["Lina","Linear_A"],["Linb","Linear_B"],["Lisu","Lisu"],["Lyci","Lycian"],["Lydi","Lydian"],["Mahj","Mahajani"],["Maka","Makasar"],["Mand","Mandaic"],["Mani","Manichaean"],["Marc","Marchen"],["Medf","Medefaidrin"],["Mend","Mende_Kikakui"],["Merc","Meroitic_Cursive"],["Mero","Meroitic_Hieroglyphs"],["Mlym","Malayalam"],["Modi","Modi"],["Mong","Mongolian"],["Mroo","Mro"],["Mtei","Meetei_Mayek"],["Mult","Multani"],["Mymr","Myanmar"],["Nand","Nandinagari"],["Narb","Old_North_Arabian"],["Nbat","Nabataean"],["Newa","Newa"],["Nkoo","Nko"],["Nshu","Nushu"],["Ogam","Ogham"],["Olck","Ol_Chiki"],["Orkh","Old_Turkic"],["Orya","Oriya"],["Osge","Osage"],["Osma","Osmanya"],["Palm","Palmyrene"],["Pauc","Pau_Cin_Hau"],["Perm","Old_Permic"],["Phag","Phags_Pa"],["Phli","Inscriptional_Pahlavi"],["Phlp","Psalter_Pahlavi"],["Phnx","Phoenician"],["Plrd","Miao"],["Prti","Inscriptional_Parthian"],["Rjng","Rejang"],["Rohg","Hanifi_Rohingya"],["Runr","Runic"],["Samr","Samaritan"],["Sarb","Old_South_Arabian"],["Saur","Saurashtra"],["Sgnw","SignWriting"],["Shaw","Shavian"],["Shrd","Sharada"],["Sidd","Siddham"],["Sind","Khudawadi"],["Sinh","Sinhala"],["Sogd","Sogdian"],["Sogo","Old_Sogdian"],["Sora","Sora_Sompeng"],["Soyo","Soyombo"],["Sund","Sundanese"],["Sylo","Syloti_Nagri"],["Syrc","Syriac"],["Tagb","Tagbanwa"],["Takr","Takri"],["Tale","Tai_Le"],["Talu","New_Tai_Lue"],["Taml","Tamil"],["Tang","Tangut"],["Tavt","Tai_Viet"],["Telu","Telugu"],["Tfng","Tifinagh"],["Tglg","Tagalog"],["Thaa","Thaana"],["Thai","Thai"],["Tibt","Tibetan"],["Tirh","Tirhuta"],["Ugar","Ugaritic"],["Vaii","Vai"],["Wara","Warang_Citi"],["Wcho","Wancho"],["Xpeo","Old_Persian"],["Xsux","Cuneiform"],["Yiii","Yi"],["Zanb","Zanabazar_Square"],["Zinh","Inherited"],["Qaai","Inherited"],["Zyyy","Common"],["Zzzz","Unknown"],["Adlam","Adlam"],["Caucasian_Albanian","Caucasian_Albanian"],["Arabic","Arabic"],["Imperial_Aramaic","Imperial_Aramaic"],["Armenian","Armenian"],["Avestan","Avestan"],["Balinese","Balinese"],["Bamum","Bamum"],["Bassa_Vah","Bassa_Vah"],["Batak","Batak"],["Bengali","Bengali"],["Bhaiksuki","Bhaiksuki"],["Bopomofo","Bopomofo"],["Brahmi","Brahmi"],["Braille","Braille"],["Buginese","Buginese"],["Buhid","Buhid"],["Chakma","Chakma"],["Canadian_Aboriginal","Canadian_Aboriginal"],["Carian","Carian"],["Cherokee","Cherokee"],["Coptic","Coptic"],["Cypriot","Cypriot"],["Cyrillic","Cyrillic"],["Devanagari","Devanagari"],["Dogra","Dogra"],["Deseret","Deseret"],["Duployan","Duployan"],["Egyptian_Hieroglyphs","Egyptian_Hieroglyphs"],["Elbasan","Elbasan"],["Elymaic","Elymaic"],["Ethiopic","Ethiopic"],["Georgian","Georgian"],["Glagolitic","Glagolitic"],["Gunjala_Gondi","Gunjala_Gondi"],["Masaram_Gondi","Masaram_Gondi"],["Gothic","Gothic"],["Grantha","Grantha"],["Greek","Greek"],["Gujarati","Gujarati"],["Gurmukhi","Gurmukhi"],["Hangul","Hangul"],["Han","Han"],["Hanunoo","Hanunoo"],["Hatran","Hatran"],["Hebrew","Hebrew"],["Hiragana","Hiragana"],["Anatolian_Hieroglyphs","Anatolian_Hieroglyphs"],["Pahawh_Hmong","Pahawh_Hmong"],["Nyiakeng_Puachue_Hmong","Nyiakeng_Puachue_Hmong"],["Katakana_Or_Hiragana","Katakana_Or_Hiragana"],["Old_Hungarian","Old_Hungarian"],["Old_Italic","Old_Italic"],["Javanese","Javanese"],["Kayah_Li","Kayah_Li"],["Katakana","Katakana"],["Kharoshthi","Kharoshthi"],["Khmer","Khmer"],["Khojki","Khojki"],["Kannada","Kannada"],["Kaithi","Kaithi"],["Tai_Tham","Tai_Tham"],["Lao","Lao"],["Latin","Latin"],["Lepcha","Lepcha"],["Limbu","Limbu"],["Linear_A","Linear_A"],["Linear_B","Linear_B"],["Lycian","Lycian"],["Lydian","Lydian"],["Mahajani","Mahajani"],["Makasar","Makasar"],["Mandaic","Mandaic"],["Manichaean","Manichaean"],["Marchen","Marchen"],["Medefaidrin","Medefaidrin"],["Mende_Kikakui","Mende_Kikakui"],["Meroitic_Cursive","Meroitic_Cursive"],["Meroitic_Hieroglyphs","Meroitic_Hieroglyphs"],["Malayalam","Malayalam"],["Mongolian","Mongolian"],["Mro","Mro"],["Meetei_Mayek","Meetei_Mayek"],["Multani","Multani"],["Myanmar","Myanmar"],["Nandinagari","Nandinagari"],["Old_North_Arabian","Old_North_Arabian"],["Nabataean","Nabataean"],["Nko","Nko"],["Nushu","Nushu"],["Ogham","Ogham"],["Ol_Chiki","Ol_Chiki"],["Old_Turkic","Old_Turkic"],["Oriya","Oriya"],["Osage","Osage"],["Osmanya","Osmanya"],["Palmyrene","Palmyrene"],["Pau_Cin_Hau","Pau_Cin_Hau"],["Old_Permic","Old_Permic"],["Phags_Pa","Phags_Pa"],["Inscriptional_Pahlavi","Inscriptional_Pahlavi"],["Psalter_Pahlavi","Psalter_Pahlavi"],["Phoenician","Phoenician"],["Miao","Miao"],["Inscriptional_Parthian","Inscriptional_Parthian"],["Rejang","Rejang"],["Hanifi_Rohingya","Hanifi_Rohingya"],["Runic","Runic"],["Samaritan","Samaritan"],["Old_South_Arabian","Old_South_Arabian"],["Saurashtra","Saurashtra"],["SignWriting","SignWriting"],["Shavian","Shavian"],["Sharada","Sharada"],["Siddham","Siddham"],["Khudawadi","Khudawadi"],["Sinhala","Sinhala"],["Sogdian","Sogdian"],["Old_Sogdian","Old_Sogdian"],["Sora_Sompeng","Sora_Sompeng"],["Soyombo","Soyombo"],["Sundanese","Sundanese"],["Syloti_Nagri","Syloti_Nagri"],["Syriac","Syriac"],["Tagbanwa","Tagbanwa"],["Takri","Takri"],["Tai_Le","Tai_Le"],["New_Tai_Lue","New_Tai_Lue"],["Tamil","Tamil"],["Tangut","Tangut"],["Tai_Viet","Tai_Viet"],["Telugu","Telugu"],["Tifinagh","Tifinagh"],["Tagalog","Tagalog"],["Thaana","Thaana"],["Tibetan","Tibetan"],["Tirhuta","Tirhuta"],["Ugaritic","Ugaritic"],["Vai","Vai"],["Warang_Citi","Warang_Citi"],["Wancho","Wancho"],["Old_Persian","Old_Persian"],["Cuneiform","Cuneiform"],["Yi","Yi"],["Zanabazar_Square","Zanabazar_Square"],["Inherited","Inherited"],["Common","Common"],["Unknown","Unknown"]])],["Script_Extensions",new Map([["Adlm","Adlam"],["Aghb","Caucasian_Albanian"],["Ahom","Ahom"],["Arab","Arabic"],["Armi","Imperial_Aramaic"],["Armn","Armenian"],["Avst","Avestan"],["Bali","Balinese"],["Bamu","Bamum"],["Bass","Bassa_Vah"],["Batk","Batak"],["Beng","Bengali"],["Bhks","Bhaiksuki"],["Bopo","Bopomofo"],["Brah","Brahmi"],["Brai","Braille"],["Bugi","Buginese"],["Buhd","Buhid"],["Cakm","Chakma"],["Cans","Canadian_Aboriginal"],["Cari","Carian"],["Cham","Cham"],["Cher","Cherokee"],["Copt","Coptic"],["Qaac","Coptic"],["Cprt","Cypriot"],["Cyrl","Cyrillic"],["Deva","Devanagari"],["Dogr","Dogra"],["Dsrt","Deseret"],["Dupl","Duployan"],["Egyp","Egyptian_Hieroglyphs"],["Elba","Elbasan"],["Elym","Elymaic"],["Ethi","Ethiopic"],["Geor","Georgian"],["Glag","Glagolitic"],["Gong","Gunjala_Gondi"],["Gonm","Masaram_Gondi"],["Goth","Gothic"],["Gran","Grantha"],["Grek","Greek"],["Gujr","Gujarati"],["Guru","Gurmukhi"],["Hang","Hangul"],["Hani","Han"],["Hano","Hanunoo"],["Hatr","Hatran"],["Hebr","Hebrew"],["Hira","Hiragana"],["Hluw","Anatolian_Hieroglyphs"],["Hmng","Pahawh_Hmong"],["Hmnp","Nyiakeng_Puachue_Hmong"],["Hrkt","Katakana_Or_Hiragana"],["Hung","Old_Hungarian"],["Ital","Old_Italic"],["Java","Javanese"],["Kali","Kayah_Li"],["Kana","Katakana"],["Khar","Kharoshthi"],["Khmr","Khmer"],["Khoj","Khojki"],["Knda","Kannada"],["Kthi","Kaithi"],["Lana","Tai_Tham"],["Laoo","Lao"],["Latn","Latin"],["Lepc","Lepcha"],["Limb","Limbu"],["Lina","Linear_A"],["Linb","Linear_B"],["Lisu","Lisu"],["Lyci","Lycian"],["Lydi","Lydian"],["Mahj","Mahajani"],["Maka","Makasar"],["Mand","Mandaic"],["Mani","Manichaean"],["Marc","Marchen"],["Medf","Medefaidrin"],["Mend","Mende_Kikakui"],["Merc","Meroitic_Cursive"],["Mero","Meroitic_Hieroglyphs"],["Mlym","Malayalam"],["Modi","Modi"],["Mong","Mongolian"],["Mroo","Mro"],["Mtei","Meetei_Mayek"],["Mult","Multani"],["Mymr","Myanmar"],["Nand","Nandinagari"],["Narb","Old_North_Arabian"],["Nbat","Nabataean"],["Newa","Newa"],["Nkoo","Nko"],["Nshu","Nushu"],["Ogam","Ogham"],["Olck","Ol_Chiki"],["Orkh","Old_Turkic"],["Orya","Oriya"],["Osge","Osage"],["Osma","Osmanya"],["Palm","Palmyrene"],["Pauc","Pau_Cin_Hau"],["Perm","Old_Permic"],["Phag","Phags_Pa"],["Phli","Inscriptional_Pahlavi"],["Phlp","Psalter_Pahlavi"],["Phnx","Phoenician"],["Plrd","Miao"],["Prti","Inscriptional_Parthian"],["Rjng","Rejang"],["Rohg","Hanifi_Rohingya"],["Runr","Runic"],["Samr","Samaritan"],["Sarb","Old_South_Arabian"],["Saur","Saurashtra"],["Sgnw","SignWriting"],["Shaw","Shavian"],["Shrd","Sharada"],["Sidd","Siddham"],["Sind","Khudawadi"],["Sinh","Sinhala"],["Sogd","Sogdian"],["Sogo","Old_Sogdian"],["Sora","Sora_Sompeng"],["Soyo","Soyombo"],["Sund","Sundanese"],["Sylo","Syloti_Nagri"],["Syrc","Syriac"],["Tagb","Tagbanwa"],["Takr","Takri"],["Tale","Tai_Le"],["Talu","New_Tai_Lue"],["Taml","Tamil"],["Tang","Tangut"],["Tavt","Tai_Viet"],["Telu","Telugu"],["Tfng","Tifinagh"],["Tglg","Tagalog"],["Thaa","Thaana"],["Thai","Thai"],["Tibt","Tibetan"],["Tirh","Tirhuta"],["Ugar","Ugaritic"],["Vaii","Vai"],["Wara","Warang_Citi"],["Wcho","Wancho"],["Xpeo","Old_Persian"],["Xsux","Cuneiform"],["Yiii","Yi"],["Zanb","Zanabazar_Square"],["Zinh","Inherited"],["Qaai","Inherited"],["Zyyy","Common"],["Zzzz","Unknown"],["Adlam","Adlam"],["Caucasian_Albanian","Caucasian_Albanian"],["Arabic","Arabic"],["Imperial_Aramaic","Imperial_Aramaic"],["Armenian","Armenian"],["Avestan","Avestan"],["Balinese","Balinese"],["Bamum","Bamum"],["Bassa_Vah","Bassa_Vah"],["Batak","Batak"],["Bengali","Bengali"],["Bhaiksuki","Bhaiksuki"],["Bopomofo","Bopomofo"],["Brahmi","Brahmi"],["Braille","Braille"],["Buginese","Buginese"],["Buhid","Buhid"],["Chakma","Chakma"],["Canadian_Aboriginal","Canadian_Aboriginal"],["Carian","Carian"],["Cherokee","Cherokee"],["Coptic","Coptic"],["Cypriot","Cypriot"],["Cyrillic","Cyrillic"],["Devanagari","Devanagari"],["Dogra","Dogra"],["Deseret","Deseret"],["Duployan","Duployan"],["Egyptian_Hieroglyphs","Egyptian_Hieroglyphs"],["Elbasan","Elbasan"],["Elymaic","Elymaic"],["Ethiopic","Ethiopic"],["Georgian","Georgian"],["Glagolitic","Glagolitic"],["Gunjala_Gondi","Gunjala_Gondi"],["Masaram_Gondi","Masaram_Gondi"],["Gothic","Gothic"],["Grantha","Grantha"],["Greek","Greek"],["Gujarati","Gujarati"],["Gurmukhi","Gurmukhi"],["Hangul","Hangul"],["Han","Han"],["Hanunoo","Hanunoo"],["Hatran","Hatran"],["Hebrew","Hebrew"],["Hiragana","Hiragana"],["Anatolian_Hieroglyphs","Anatolian_Hieroglyphs"],["Pahawh_Hmong","Pahawh_Hmong"],["Nyiakeng_Puachue_Hmong","Nyiakeng_Puachue_Hmong"],["Katakana_Or_Hiragana","Katakana_Or_Hiragana"],["Old_Hungarian","Old_Hungarian"],["Old_Italic","Old_Italic"],["Javanese","Javanese"],["Kayah_Li","Kayah_Li"],["Katakana","Katakana"],["Kharoshthi","Kharoshthi"],["Khmer","Khmer"],["Khojki","Khojki"],["Kannada","Kannada"],["Kaithi","Kaithi"],["Tai_Tham","Tai_Tham"],["Lao","Lao"],["Latin","Latin"],["Lepcha","Lepcha"],["Limbu","Limbu"],["Linear_A","Linear_A"],["Linear_B","Linear_B"],["Lycian","Lycian"],["Lydian","Lydian"],["Mahajani","Mahajani"],["Makasar","Makasar"],["Mandaic","Mandaic"],["Manichaean","Manichaean"],["Marchen","Marchen"],["Medefaidrin","Medefaidrin"],["Mende_Kikakui","Mende_Kikakui"],["Meroitic_Cursive","Meroitic_Cursive"],["Meroitic_Hieroglyphs","Meroitic_Hieroglyphs"],["Malayalam","Malayalam"],["Mongolian","Mongolian"],["Mro","Mro"],["Meetei_Mayek","Meetei_Mayek"],["Multani","Multani"],["Myanmar","Myanmar"],["Nandinagari","Nandinagari"],["Old_North_Arabian","Old_North_Arabian"],["Nabataean","Nabataean"],["Nko","Nko"],["Nushu","Nushu"],["Ogham","Ogham"],["Ol_Chiki","Ol_Chiki"],["Old_Turkic","Old_Turkic"],["Oriya","Oriya"],["Osage","Osage"],["Osmanya","Osmanya"],["Palmyrene","Palmyrene"],["Pau_Cin_Hau","Pau_Cin_Hau"],["Old_Permic","Old_Permic"],["Phags_Pa","Phags_Pa"],["Inscriptional_Pahlavi","Inscriptional_Pahlavi"],["Psalter_Pahlavi","Psalter_Pahlavi"],["Phoenician","Phoenician"],["Miao","Miao"],["Inscriptional_Parthian","Inscriptional_Parthian"],["Rejang","Rejang"],["Hanifi_Rohingya","Hanifi_Rohingya"],["Runic","Runic"],["Samaritan","Samaritan"],["Old_South_Arabian","Old_South_Arabian"],["Saurashtra","Saurashtra"],["SignWriting","SignWriting"],["Shavian","Shavian"],["Sharada","Sharada"],["Siddham","Siddham"],["Khudawadi","Khudawadi"],["Sinhala","Sinhala"],["Sogdian","Sogdian"],["Old_Sogdian","Old_Sogdian"],["Sora_Sompeng","Sora_Sompeng"],["Soyombo","Soyombo"],["Sundanese","Sundanese"],["Syloti_Nagri","Syloti_Nagri"],["Syriac","Syriac"],["Tagbanwa","Tagbanwa"],["Takri","Takri"],["Tai_Le","Tai_Le"],["New_Tai_Lue","New_Tai_Lue"],["Tamil","Tamil"],["Tangut","Tangut"],["Tai_Viet","Tai_Viet"],["Telugu","Telugu"],["Tifinagh","Tifinagh"],["Tagalog","Tagalog"],["Thaana","Thaana"],["Tibetan","Tibetan"],["Tirhuta","Tirhuta"],["Ugaritic","Ugaritic"],["Vai","Vai"],["Warang_Citi","Warang_Citi"],["Wancho","Wancho"],["Old_Persian","Old_Persian"],["Cuneiform","Cuneiform"],["Yi","Yi"],["Zanabazar_Square","Zanabazar_Square"],["Inherited","Inherited"],["Common","Common"],["Unknown","Unknown"]])]]),G_=function(e,t){var n=W_.get(e);if(!n)throw new Error("Unknown property `"+e+"`.");var r=n.get(t);if(r)return r;throw new Error("Unknown value `"+t+"` for property `"+e+"`.")},H_=new Map([[75,8490],[83,383],[107,8490],[115,383],[181,924],[197,8491],[223,7838],[229,8491],[383,83],[452,453],[453,452],[455,456],[456,455],[458,459],[459,458],[497,498],[498,497],[618,42926],[642,42949],[669,42930],[837,8126],[914,976],[917,1013],[920,1012],[921,8126],[922,1008],[924,181],[928,982],[929,1009],[931,962],[934,981],[937,8486],[952,1012],[962,931],[969,8486],[976,914],[977,1012],[981,934],[982,928],[1008,922],[1009,929],[1012,[920,977,952]],[1013,917],[1042,7296],[1044,7297],[1054,7298],[1057,7299],[1058,7301],[1066,7302],[1074,7296],[1076,7297],[1086,7298],[1089,7299],[1090,[7300,7301]],[1098,7302],[1122,7303],[1123,7303],[4304,7312],[4305,7313],[4306,7314],[4307,7315],[4308,7316],[4309,7317],[4310,7318],[4311,7319],[4312,7320],[4313,7321],[4314,7322],[4315,7323],[4316,7324],[4317,7325],[4318,7326],[4319,7327],[4320,7328],[4321,7329],[4322,7330],[4323,7331],[4324,7332],[4325,7333],[4326,7334],[4327,7335],[4328,7336],[4329,7337],[4330,7338],[4331,7339],[4332,7340],[4333,7341],[4334,7342],[4335,7343],[4336,7344],[4337,7345],[4338,7346],[4339,7347],[4340,7348],[4341,7349],[4342,7350],[4343,7351],[4344,7352],[4345,7353],[4346,7354],[4349,7357],[4350,7358],[4351,7359],[5024,43888],[5025,43889],[5026,43890],[5027,43891],[5028,43892],[5029,43893],[5030,43894],[5031,43895],[5032,43896],[5033,43897],[5034,43898],[5035,43899],[5036,43900],[5037,43901],[5038,43902],[5039,43903],[5040,43904],[5041,43905],[5042,43906],[5043,43907],[5044,43908],[5045,43909],[5046,43910],[5047,43911],[5048,43912],[5049,43913],[5050,43914],[5051,43915],[5052,43916],[5053,43917],[5054,43918],[5055,43919],[5056,43920],[5057,43921],[5058,43922],[5059,43923],[5060,43924],[5061,43925],[5062,43926],[5063,43927],[5064,43928],[5065,43929],[5066,43930],[5067,43931],[5068,43932],[5069,43933],[5070,43934],[5071,43935],[5072,43936],[5073,43937],[5074,43938],[5075,43939],[5076,43940],[5077,43941],[5078,43942],[5079,43943],[5080,43944],[5081,43945],[5082,43946],[5083,43947],[5084,43948],[5085,43949],[5086,43950],[5087,43951],[5088,43952],[5089,43953],[5090,43954],[5091,43955],[5092,43956],[5093,43957],[5094,43958],[5095,43959],[5096,43960],[5097,43961],[5098,43962],[5099,43963],[5100,43964],[5101,43965],[5102,43966],[5103,43967],[5104,5112],[5105,5113],[5106,5114],[5107,5115],[5108,5116],[5109,5117],[5112,5104],[5113,5105],[5114,5106],[5115,5107],[5116,5108],[5117,5109],[7296,[1042,1074]],[7297,[1044,1076]],[7298,[1054,1086]],[7299,[1057,1089]],[7300,[7301,1090]],[7301,[1058,7300,1090]],[7302,[1066,1098]],[7303,[1122,1123]],[7304,[42570,42571]],[7312,4304],[7313,4305],[7314,4306],[7315,4307],[7316,4308],[7317,4309],[7318,4310],[7319,4311],[7320,4312],[7321,4313],[7322,4314],[7323,4315],[7324,4316],[7325,4317],[7326,4318],[7327,4319],[7328,4320],[7329,4321],[7330,4322],[7331,4323],[7332,4324],[7333,4325],[7334,4326],[7335,4327],[7336,4328],[7337,4329],[7338,4330],[7339,4331],[7340,4332],[7341,4333],[7342,4334],[7343,4335],[7344,4336],[7345,4337],[7346,4338],[7347,4339],[7348,4340],[7349,4341],[7350,4342],[7351,4343],[7352,4344],[7353,4345],[7354,4346],[7357,4349],[7358,4350],[7359,4351],[7566,42950],[7776,7835],[7835,7776],[7838,223],[8064,8072],[8065,8073],[8066,8074],[8067,8075],[8068,8076],[8069,8077],[8070,8078],[8071,8079],[8072,8064],[8073,8065],[8074,8066],[8075,8067],[8076,8068],[8077,8069],[8078,8070],[8079,8071],[8080,8088],[8081,8089],[8082,8090],[8083,8091],[8084,8092],[8085,8093],[8086,8094],[8087,8095],[8088,8080],[8089,8081],[8090,8082],[8091,8083],[8092,8084],[8093,8085],[8094,8086],[8095,8087],[8096,8104],[8097,8105],[8098,8106],[8099,8107],[8100,8108],[8101,8109],[8102,8110],[8103,8111],[8104,8096],[8105,8097],[8106,8098],[8107,8099],[8108,8100],[8109,8101],[8110,8102],[8111,8103],[8115,8124],[8124,8115],[8126,[837,921]],[8131,8140],[8140,8131],[8179,8188],[8188,8179],[8486,[937,969]],[8490,75],[8491,[197,229]],[42570,7304],[42571,7304],[42900,42948],[42926,618],[42930,669],[42931,43859],[42932,42933],[42933,42932],[42934,42935],[42935,42934],[42936,42937],[42937,42936],[42938,42939],[42939,42938],[42940,42941],[42941,42940],[42942,42943],[42943,42942],[42946,42947],[42947,42946],[42948,42900],[42949,642],[42950,7566],[43859,42931],[43888,5024],[43889,5025],[43890,5026],[43891,5027],[43892,5028],[43893,5029],[43894,5030],[43895,5031],[43896,5032],[43897,5033],[43898,5034],[43899,5035],[43900,5036],[43901,5037],[43902,5038],[43903,5039],[43904,5040],[43905,5041],[43906,5042],[43907,5043],[43908,5044],[43909,5045],[43910,5046],[43911,5047],[43912,5048],[43913,5049],[43914,5050],[43915,5051],[43916,5052],[43917,5053],[43918,5054],[43919,5055],[43920,5056],[43921,5057],[43922,5058],[43923,5059],[43924,5060],[43925,5061],[43926,5062],[43927,5063],[43928,5064],[43929,5065],[43930,5066],[43931,5067],[43932,5068],[43933,5069],[43934,5070],[43935,5071],[43936,5072],[43937,5073],[43938,5074],[43939,5075],[43940,5076],[43941,5077],[43942,5078],[43943,5079],[43944,5080],[43945,5081],[43946,5082],[43947,5083],[43948,5084],[43949,5085],[43950,5086],[43951,5087],[43952,5088],[43953,5089],[43954,5090],[43955,5091],[43956,5092],[43957,5093],[43958,5094],[43959,5095],[43960,5096],[43961,5097],[43962,5098],[43963,5099],[43964,5100],[43965,5101],[43966,5102],[43967,5103],[66560,66600],[66561,66601],[66562,66602],[66563,66603],[66564,66604],[66565,66605],[66566,66606],[66567,66607],[66568,66608],[66569,66609],[66570,66610],[66571,66611],[66572,66612],[66573,66613],[66574,66614],[66575,66615],[66576,66616],[66577,66617],[66578,66618],[66579,66619],[66580,66620],[66581,66621],[66582,66622],[66583,66623],[66584,66624],[66585,66625],[66586,66626],[66587,66627],[66588,66628],[66589,66629],[66590,66630],[66591,66631],[66592,66632],[66593,66633],[66594,66634],[66595,66635],[66596,66636],[66597,66637],[66598,66638],[66599,66639],[66600,66560],[66601,66561],[66602,66562],[66603,66563],[66604,66564],[66605,66565],[66606,66566],[66607,66567],[66608,66568],[66609,66569],[66610,66570],[66611,66571],[66612,66572],[66613,66573],[66614,66574],[66615,66575],[66616,66576],[66617,66577],[66618,66578],[66619,66579],[66620,66580],[66621,66581],[66622,66582],[66623,66583],[66624,66584],[66625,66585],[66626,66586],[66627,66587],[66628,66588],[66629,66589],[66630,66590],[66631,66591],[66632,66592],[66633,66593],[66634,66594],[66635,66595],[66636,66596],[66637,66597],[66638,66598],[66639,66599],[66736,66776],[66737,66777],[66738,66778],[66739,66779],[66740,66780],[66741,66781],[66742,66782],[66743,66783],[66744,66784],[66745,66785],[66746,66786],[66747,66787],[66748,66788],[66749,66789],[66750,66790],[66751,66791],[66752,66792],[66753,66793],[66754,66794],[66755,66795],[66756,66796],[66757,66797],[66758,66798],[66759,66799],[66760,66800],[66761,66801],[66762,66802],[66763,66803],[66764,66804],[66765,66805],[66766,66806],[66767,66807],[66768,66808],[66769,66809],[66770,66810],[66771,66811],[66776,66736],[66777,66737],[66778,66738],[66779,66739],[66780,66740],[66781,66741],[66782,66742],[66783,66743],[66784,66744],[66785,66745],[66786,66746],[66787,66747],[66788,66748],[66789,66749],[66790,66750],[66791,66751],[66792,66752],[66793,66753],[66794,66754],[66795,66755],[66796,66756],[66797,66757],[66798,66758],[66799,66759],[66800,66760],[66801,66761],[66802,66762],[66803,66763],[66804,66764],[66805,66765],[66806,66766],[66807,66767],[66808,66768],[66809,66769],[66810,66770],[66811,66771],[68736,68800],[68737,68801],[68738,68802],[68739,68803],[68740,68804],[68741,68805],[68742,68806],[68743,68807],[68744,68808],[68745,68809],[68746,68810],[68747,68811],[68748,68812],[68749,68813],[68750,68814],[68751,68815],[68752,68816],[68753,68817],[68754,68818],[68755,68819],[68756,68820],[68757,68821],[68758,68822],[68759,68823],[68760,68824],[68761,68825],[68762,68826],[68763,68827],[68764,68828],[68765,68829],[68766,68830],[68767,68831],[68768,68832],[68769,68833],[68770,68834],[68771,68835],[68772,68836],[68773,68837],[68774,68838],[68775,68839],[68776,68840],[68777,68841],[68778,68842],[68779,68843],[68780,68844],[68781,68845],[68782,68846],[68783,68847],[68784,68848],[68785,68849],[68786,68850],[68800,68736],[68801,68737],[68802,68738],[68803,68739],[68804,68740],[68805,68741],[68806,68742],[68807,68743],[68808,68744],[68809,68745],[68810,68746],[68811,68747],[68812,68748],[68813,68749],[68814,68750],[68815,68751],[68816,68752],[68817,68753],[68818,68754],[68819,68755],[68820,68756],[68821,68757],[68822,68758],[68823,68759],[68824,68760],[68825,68761],[68826,68762],[68827,68763],[68828,68764],[68829,68765],[68830,68766],[68831,68767],[68832,68768],[68833,68769],[68834,68770],[68835,68771],[68836,68772],[68837,68773],[68838,68774],[68839,68775],[68840,68776],[68841,68777],[68842,68778],[68843,68779],[68844,68780],[68845,68781],[68846,68782],[68847,68783],[68848,68784],[68849,68785],[68850,68786],[71840,71872],[71841,71873],[71842,71874],[71843,71875],[71844,71876],[71845,71877],[71846,71878],[71847,71879],[71848,71880],[71849,71881],[71850,71882],[71851,71883],[71852,71884],[71853,71885],[71854,71886],[71855,71887],[71856,71888],[71857,71889],[71858,71890],[71859,71891],[71860,71892],[71861,71893],[71862,71894],[71863,71895],[71864,71896],[71865,71897],[71866,71898],[71867,71899],[71868,71900],[71869,71901],[71870,71902],[71871,71903],[71872,71840],[71873,71841],[71874,71842],[71875,71843],[71876,71844],[71877,71845],[71878,71846],[71879,71847],[71880,71848],[71881,71849],[71882,71850],[71883,71851],[71884,71852],[71885,71853],[71886,71854],[71887,71855],[71888,71856],[71889,71857],[71890,71858],[71891,71859],[71892,71860],[71893,71861],[71894,71862],[71895,71863],[71896,71864],[71897,71865],[71898,71866],[71899,71867],[71900,71868],[71901,71869],[71902,71870],[71903,71871],[93760,93792],[93761,93793],[93762,93794],[93763,93795],[93764,93796],[93765,93797],[93766,93798],[93767,93799],[93768,93800],[93769,93801],[93770,93802],[93771,93803],[93772,93804],[93773,93805],[93774,93806],[93775,93807],[93776,93808],[93777,93809],[93778,93810],[93779,93811],[93780,93812],[93781,93813],[93782,93814],[93783,93815],[93784,93816],[93785,93817],[93786,93818],[93787,93819],[93788,93820],[93789,93821],[93790,93822],[93791,93823],[93792,93760],[93793,93761],[93794,93762],[93795,93763],[93796,93764],[93797,93765],[93798,93766],[93799,93767],[93800,93768],[93801,93769],[93802,93770],[93803,93771],[93804,93772],[93805,93773],[93806,93774],[93807,93775],[93808,93776],[93809,93777],[93810,93778],[93811,93779],[93812,93780],[93813,93781],[93814,93782],[93815,93783],[93816,93784],[93817,93785],[93818,93786],[93819,93787],[93820,93788],[93821,93789],[93822,93790],[93823,93791],[125184,125218],[125185,125219],[125186,125220],[125187,125221],[125188,125222],[125189,125223],[125190,125224],[125191,125225],[125192,125226],[125193,125227],[125194,125228],[125195,125229],[125196,125230],[125197,125231],[125198,125232],[125199,125233],[125200,125234],[125201,125235],[125202,125236],[125203,125237],[125204,125238],[125205,125239],[125206,125240],[125207,125241],[125208,125242],[125209,125243],[125210,125244],[125211,125245],[125212,125246],[125213,125247],[125214,125248],[125215,125249],[125216,125250],[125217,125251],[125218,125184],[125219,125185],[125220,125186],[125221,125187],[125222,125188],[125223,125189],[125224,125190],[125225,125191],[125226,125192],[125227,125193],[125228,125194],[125229,125195],[125230,125196],[125231,125197],[125232,125198],[125233,125199],[125234,125200],[125235,125201],[125236,125202],[125237,125203],[125238,125204],[125239,125205],[125240,125206],[125241,125207],[125242,125208],[125243,125209],[125244,125210],[125245,125211],[125246,125212],[125247,125213],[125248,125214],[125249,125215],[125250,125216],[125251,125217]]),q_={REGULAR:new Map([["d",L_().addRange(48,57)],["D",L_().addRange(0,47).addRange(58,65535)],["s",L_(32,160,5760,8239,8287,12288,65279).addRange(9,13).addRange(8192,8202).addRange(8232,8233)],["S",L_().addRange(0,8).addRange(14,31).addRange(33,159).addRange(161,5759).addRange(5761,8191).addRange(8203,8231).addRange(8234,8238).addRange(8240,8286).addRange(8288,12287).addRange(12289,65278).addRange(65280,65535)],["w",L_(95).addRange(48,57).addRange(65,90).addRange(97,122)],["W",L_(96).addRange(0,47).addRange(58,64).addRange(91,94).addRange(123,65535)]]),UNICODE:new Map([["d",L_().addRange(48,57)],["D",L_().addRange(0,47).addRange(58,1114111)],["s",L_(32,160,5760,8239,8287,12288,65279).addRange(9,13).addRange(8192,8202).addRange(8232,8233)],["S",L_().addRange(0,8).addRange(14,31).addRange(33,159).addRange(161,5759).addRange(5761,8191).addRange(8203,8231).addRange(8234,8238).addRange(8240,8286).addRange(8288,12287).addRange(12289,65278).addRange(65280,1114111)],["w",L_(95).addRange(48,57).addRange(65,90).addRange(97,122)],["W",L_(96).addRange(0,47).addRange(58,64).addRange(91,94).addRange(123,1114111)]]),UNICODE_IGNORE_CASE:new Map([["d",L_().addRange(48,57)],["D",L_().addRange(0,47).addRange(58,1114111)],["s",L_(32,160,5760,8239,8287,12288,65279).addRange(9,13).addRange(8192,8202).addRange(8232,8233)],["S",L_().addRange(0,8).addRange(14,31).addRange(33,159).addRange(161,5759).addRange(5761,8191).addRange(8203,8231).addRange(8234,8238).addRange(8240,8286).addRange(8288,12287).addRange(12289,65278).addRange(65280,1114111)],["w",L_(95,383,8490).addRange(48,57).addRange(65,90).addRange(97,122)],["W",L_(96).addRange(0,47).addRange(58,64).addRange(91,94).addRange(123,382).addRange(384,8489).addRange(8491,1114111)]])},K_=M_.generate,X_=R_.parse,z_=L_().addRange(0,1114111),J_=L_().addRange(0,65535),Y_=z_.clone().remove(10,13,8232,8233),$_=function(e,t,n){return t?n?q_.UNICODE_IGNORE_CASE.get(e):q_.UNICODE.get(e):q_.REGULAR.get(e)},Q_=function(e,t){try{return function(){throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs")}()}catch(n){throw new Error("Failed to recognize value `"+t+"` for property `"+e+"`.")}},Z_=function(e,t){var n,r=e.split("="),i=r[0];if(1==r.length)n=function(e){try{var t=G_("General_Category",e);return Q_("General_Category",t)}catch(e){}var n=V_(e);return Q_(n)}(i);else{var a=V_(i),o=G_(a,r[1]);n=Q_(a,o)}return t?z_.clone().remove(n):n.clone()};L_.prototype.iuAddRange=function(e,t){do{var n=nI(e);n&&this.add(n)}while(++e<=t);return this};var eI=function(e,t){var n=X_(t,aI.useUnicodeFlag?"u":"");switch(n.type){case"characterClass":case"group":case"value":break;default:n=tI(n,t)}Object.assign(e,n)},tI=function(e,t){return{type:"group",behavior:"ignore",body:[e],raw:"(?:"+t+")"}},nI=function(e){return H_.get(e)||!1},rI=function(e,t){delete e.name,e.matchIndex=t},iI=function e(t,n,r){switch(t.type){case"dot":aI.unicode?eI(t,(p=aI.dotAll,p?z_:Y_).toString(n)):aI.dotAll&&eI(t,"[\\s\\S]");break;case"characterClass":t=function(e,t){var n=L_(),r=e.body,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}var s=o;switch(s.type){case"value":if(n.add(s.codePoint),aI.ignoreCase&&aI.unicode&&!aI.useUnicodeFlag){var u=nI(s.codePoint);u&&n.add(u)}break;case"characterClassRange":var l=s.min.codePoint,c=s.max.codePoint;n.addRange(l,c),aI.ignoreCase&&aI.unicode&&!aI.useUnicodeFlag&&n.iuAddRange(l,c);break;case"characterClassEscape":n.add($_(s.value,aI.unicode,aI.ignoreCase));break;case"unicodePropertyEscape":n.add(Z_(s.value,s.negative));break;default:throw new Error("Unknown term type: "+s.type)}}return e.negative&&(n=(aI.unicode?z_:J_).clone().remove(n)),eI(e,n.toString(t)),e}(t,n);break;case"unicodePropertyEscape":eI(t,Z_(t.value,t.negative).toString(n));break;case"characterClassEscape":eI(t,$_(t.value,aI.unicode,aI.ignoreCase).toString(n));break;case"group":if("normal"==t.behavior&&r.lastIndex++,t.name){var i=t.name.value;if(r.names[i])throw new Error("Multiple groups with the same name ("+i+") are not allowed.");var a=r.lastIndex;delete t.name,r.names[i]=a,r.onNamedGroup&&r.onNamedGroup.call(null,i,a),r.unmatchedReferences[i]&&(r.unmatchedReferences[i].forEach((function(e){rI(e,a)})),delete r.unmatchedReferences[i])}case"alternative":case"disjunction":case"quantifier":t.body=t.body.map((function(t){return e(t,n,r)}));break;case"value":var o=t.codePoint,s=L_(o);if(aI.ignoreCase&&aI.unicode&&!aI.useUnicodeFlag){var u=nI(o);u&&s.add(u)}eI(t,s.toString(n));break;case"reference":if(t.name){var l=t.name.value,c=r.names[l];if(c){rI(t,c);break}r.unmatchedReferences[l]||(r.unmatchedReferences[l]=[]),r.unmatchedReferences[l].push(t)}break;case"anchor":case"empty":case"group":break;default:throw new Error("Unknown term type: "+t.type)}var p;return t},aI={ignoreCase:!1,unicode:!1,dotAll:!1,useUnicodeFlag:!1},oI=function(e,t,n){var r={unicodePropertyEscape:n&&n.unicodePropertyEscape,namedGroups:n&&n.namedGroup,lookbehind:n&&n.lookbehind};aI.ignoreCase=t&&t.includes("i"),aI.unicode=t&&t.includes("u");var i=n&&n.dotAllFlag;aI.dotAll=i&&t&&t.includes("s"),aI.useUnicodeFlag=n&&n.useUnicodeFlag;var a={hasUnicodeFlag:aI.useUnicodeFlag,bmpOnly:!aI.unicode},o={onNamedGroup:n&&n.onNamedGroup,lastIndex:0,names:Object.create(null),unmatchedReferences:Object.create(null)},s=X_(e,t,r);return iI(s,a,o),function(e){var t=Object.keys(e.unmatchedReferences);if(t.length>0)throw new Error("Unknown group names: "+t)}(o),K_(s)},sI=Object.freeze({unicodeFlag:1,dotAllFlag:2,unicodePropertyEscape:4,namedCaptureGroups:8}),uI="@babel/plugin-regexp-features/featuresKey",lI="@babel/plugin-regexp-features/runtimeKey";function cI(e,t){return e|t}function pI(e,t){return!!(e&t)}var hI={name:"@babel/helper-create-regexp-features-plugin",version:"7.7.4",author:"The Babel Team (https://babeljs.io/team)",license:"MIT",description:"Compile ESNext Regular Expressions to ES5",repository:{type:"git",url:"https://github.com/babel/babel",directory:"packages/babel-helper-create-regexp-features-plugin"},main:"lib/index.js",publishConfig:{access:"public"},keywords:["babel","babel-plugin"],dependencies:{"@babel/helper-regex":"^7.4.4","regexpu-core":"^4.6.0"},peerDependencies:{"@babel/core":"^7.0.0"},devDependencies:{"@babel/core":"^7.7.4","@babel/helper-plugin-test-runner":"^7.7.4"}};var fI=function(e,t,n,r){for(var i=n-1,a=e.length;++i<a;)if(r(e[i],t))return i;return-1},dI=Array.prototype.splice;var mI=function(e,t,n,r){var i=r?fI:kp,a=-1,o=t.length,s=e;for(e===t&&(t=Wr(t)),n&&(s=Id(e,Ar(n)));++a<o;)for(var u=0,l=t[a],c=n?n(l):l;(u=i(s,c,u,r))>-1;)s!==e&&dI.call(s,u,1),dI.call(e,u,1);return e};var yI=sm((function(e,t){return e&&e.length&&t&&t.length?mI(e,t):e}));function vI(e,t){var n=e.flags.split("");e.flags.indexOf(t)<0||(yI(n,t),e.flags=n.join(""))}var gI=hI.version.split(".").reduce((function(e,t){return 1e5*e+ +t}),0),bI="@babel/plugin-regexp-features/version";function EI(e){var t=e.name,n=e.feature,r=e.options,i=void 0===r?{}:r;return{name:t,pre:function(){var e,t=this.file,r=null!=(e=t.get(uI))?e:0,a=cI(r,sI[n]),o=i.useUnicodeFlag,s=i.runtime,u=void 0===s||s;!1===o&&(a=cI(a,sI.unicodeFlag)),a!==r&&t.set(uI,a),u||t.set(lI,!1),(!t.has(bI)||t.get(bI)<gI)&&t.set(bI,gI)},visitor:{RegExpLiteral:function(e){var t,n=e.node,r=this.file,i=r.get(uI),a=null==(t=r.get(lI))||t,o=function(e,t){var n=!1,r=!1,i=!1,a=!1,o=e.flags,s=e.pattern,u=o.includes("u");return u&&(pI(t,sI.unicodeFlag)||(n=!0),pI(t,sI.unicodePropertyEscape)&&/\\[pP]{/.test(s)&&(i=!0)),pI(t,sI.dotAllFlag)&&o.indexOf("s")>=0&&(r=!0),pI(t,sI.namedCaptureGroups)&&/\(\?<(?![=!])/.test(s)&&(a=!0),a||i||r||u&&!n?(u&&o.indexOf("s")>=0&&(r=!0),{useUnicodeFlag:n,onNamedGroup:function(){},namedGroup:a,unicodePropertyEscape:i,dotAllFlag:r,lookbehind:!0}):null}(n,i);if(null!==o){var s={};o.namedGroup&&(o.onNamedGroup=function(e,t){s[e]=t}),n.pattern=oI(n.pattern,n.flags,o),o.namedGroup&&Object.keys(s).length>0&&a&&!function(e){return e.parentPath.isMemberExpression({object:e.node,computed:!1})&&e.parentPath.get("property").isIdentifier({name:"test"})}(e)&&e.replaceWith(Xo(this.addHelper("wrapRegExp"),[n,lf(s)])),pI(i,sI.unicodeFlag)&&vI(n,"u"),pI(i,sI.dotAllFlag)&&vI(n,"s")}}}}}var AI=cF((function(e,t){e.assertVersion(7);var n=t.useUnicodeFlag,r=void 0===n||n;if("boolean"!=typeof r)throw new Error(".useUnicodeFlag must be a boolean, or undefined");return EI({name:"proposal-unicode-property-regex",feature:"unicodePropertyEscape",options:{useUnicodeFlag:r}})})),DI="function"==typeof Object.create?function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e};function SI(e,t){var n={seen:[],stylize:TI};return arguments.length>=3&&(n.depth=arguments[2]),arguments.length>=4&&(n.colors=arguments[3]),kI(t)?n.showHidden=t:t&&WI(n,t),BI(n.showHidden)&&(n.showHidden=!1),BI(n.depth)&&(n.depth=2),BI(n.colors)&&(n.colors=!1),BI(n.customInspect)&&(n.customInspect=!0),n.colors&&(n.stylize=xI),CI(n,e,n.depth)}function xI(e,t){var n=SI.styles[t];return n?"["+SI.colors[n][0]+"m"+e+"["+SI.colors[n][1]+"m":e}function TI(e,t){return e}function CI(e,t,n){if(e.customInspect&&t&&jI(t.inspect)&&t.inspect!==SI&&(!t.constructor||t.constructor.prototype!==t)){var r=t.inspect(n,e);return OI(r)||(r=CI(e,r,n)),r}var i=function(e,t){if(BI(t))return e.stylize("undefined","undefined");if(OI(t)){var n="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(n,"string")}if(II(t))return e.stylize(""+t,"number");if(kI(t))return e.stylize(""+t,"boolean");if(_I(t))return e.stylize("null","null")}(e,t);if(i)return i;var a=Object.keys(t),o=function(e){var t={};return e.forEach((function(e,n){t[e]=!0})),t}(a);if(e.showHidden&&(a=Object.getOwnPropertyNames(t)),LI(t)&&(a.indexOf("message")>=0||a.indexOf("description")>=0))return wI(t);if(0===a.length){if(jI(t)){var s=t.name?": "+t.name:"";return e.stylize("[Function"+s+"]","special")}if(NI(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(RI(t))return e.stylize(Date.prototype.toString.call(t),"date");if(LI(t))return wI(t)}var u,l="",c=!1,p=["{","}"];(FI(t)&&(c=!0,p=["[","]"]),jI(t))&&(l=" [Function"+(t.name?": "+t.name:"")+"]");return NI(t)&&(l=" "+RegExp.prototype.toString.call(t)),RI(t)&&(l=" "+Date.prototype.toUTCString.call(t)),LI(t)&&(l=" "+wI(t)),0!==a.length||c&&0!=t.length?n<0?NI(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special"):(e.seen.push(t),u=c?function(e,t,n,r,i){for(var a=[],o=0,s=t.length;o<s;++o)GI(t,String(o))?a.push(PI(e,t,n,r,String(o),!0)):a.push("");return i.forEach((function(i){i.match(/^\d+$/)||a.push(PI(e,t,n,r,i,!0))})),a}(e,t,n,o,a):a.map((function(r){return PI(e,t,n,o,r,c)})),e.seen.pop(),function(e,t,n){if(e.reduce((function(e,t){return t.indexOf("\n"),e+t.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60)return n[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+n[1];return n[0]+t+" "+e.join(", ")+" "+n[1]}(u,l,p)):p[0]+l+p[1]}function wI(e){return"["+Error.prototype.toString.call(e)+"]"}function PI(e,t,n,r,i,a){var o,s,u;if((u=Object.getOwnPropertyDescriptor(t,i)||{value:t[i]}).get?s=u.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):u.set&&(s=e.stylize("[Setter]","special")),GI(r,i)||(o="["+i+"]"),s||(e.seen.indexOf(u.value)<0?(s=_I(n)?CI(e,u.value,null):CI(e,u.value,n-1)).indexOf("\n")>-1&&(s=a?s.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+s.split("\n").map((function(e){return"   "+e})).join("\n")):s=e.stylize("[Circular]","special")),BI(o)){if(a&&i.match(/^\d+$/))return s;(o=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.substr(1,o.length-2),o=e.stylize(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=e.stylize(o,"string"))}return o+": "+s}function FI(e){return Array.isArray(e)}function kI(e){return"boolean"==typeof e}function _I(e){return null===e}function II(e){return"number"==typeof e}function OI(e){return"string"==typeof e}function BI(e){return void 0===e}function NI(e){return MI(e)&&"[object RegExp]"===VI(e)}function MI(e){return"object"==typeof e&&null!==e}function RI(e){return MI(e)&&"[object Date]"===VI(e)}function LI(e){return MI(e)&&("[object Error]"===VI(e)||e instanceof Error)}function jI(e){return"function"==typeof e}function UI(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e}function VI(e){return Object.prototype.toString.call(e)}SI.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},SI.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"};function WI(e,t){if(!t||!MI(t))return e;for(var n=Object.keys(t),r=n.length;r--;)e[n[r]]=t[n[r]];return e}function GI(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var HI=DI;function qI(e,t){if(e===t)return 0;for(var n=e.length,r=t.length,i=0,a=Math.min(n,r);i<a;++i)if(e[i]!==t[i]){n=e[i],r=t[i];break}return n<r?-1:r<n?1:0}var KI,XI=Object.prototype.hasOwnProperty,zI=Object.keys||function(e){var t=[];for(var n in e)XI.call(e,n)&&t.push(n);return t},JI=Array.prototype.slice;function YI(){return void 0!==KI?KI:KI="foo"===function(){}.name}function $I(e){return Object.prototype.toString.call(e)}function QI(e){return!vg(e)&&("function"==typeof Nf.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):!!e&&(e instanceof DataView||!!(e.buffer&&e.buffer instanceof ArrayBuffer))))}function ZI(e,t){e||aO(e,!0,t,"==",oO)}var eO=/\s*function\s+([^\(\s]*)\s*/;function tO(e){if(jI(e)){if(YI())return e.name;var t=e.toString().match(eO);return t&&t[1]}}function nO(e){this.name="AssertionError",this.actual=e.actual,this.expected=e.expected,this.operator=e.operator,e.message?(this.message=e.message,this.generatedMessage=!1):(this.message=function(e){return rO(iO(e.actual),128)+" "+e.operator+" "+rO(iO(e.expected),128)}(this),this.generatedMessage=!0);var t=e.stackStartFunction||aO;if(Error.captureStackTrace)Error.captureStackTrace(this,t);else{var n=new Error;if(n.stack){var r=n.stack,i=tO(t),a=r.indexOf("\n"+i);if(a>=0){var o=r.indexOf("\n",a+1);r=r.substring(o+1)}this.stack=r}}}function rO(e,t){return"string"==typeof e?e.length<t?e:e.slice(0,t):e}function iO(e){if(YI()||!jI(e))return SI(e);var t=tO(e);return"[Function"+(t?": "+t:"")+"]"}function aO(e,t,n,r,i){throw new nO({message:n,actual:e,expected:t,operator:r,stackStartFunction:i})}function oO(e,t){e||aO(e,!0,t,"==",oO)}function sO(e,t,n,r){if(e===t)return!0;if(vg(e)&&vg(t))return 0===qI(e,t);if(RI(e)&&RI(t))return e.getTime()===t.getTime();if(NI(e)&&NI(t))return e.source===t.source&&e.global===t.global&&e.multiline===t.multiline&&e.lastIndex===t.lastIndex&&e.ignoreCase===t.ignoreCase;if(null!==e&&"object"==typeof e||null!==t&&"object"==typeof t){if(QI(e)&&QI(t)&&$I(e)===$I(t)&&!(e instanceof Float32Array||e instanceof Float64Array))return 0===qI(new Uint8Array(e.buffer),new Uint8Array(t.buffer));if(vg(e)!==vg(t))return!1;var i=(r=r||{actual:[],expected:[]}).actual.indexOf(e);return-1!==i&&i===r.expected.indexOf(t)||(r.actual.push(e),r.expected.push(t),function(e,t,n,r){if(null==e||null==t)return!1;if(UI(e)||UI(t))return e===t;if(n&&Object.getPrototypeOf(e)!==Object.getPrototypeOf(t))return!1;var i=uO(e),a=uO(t);if(i&&!a||!i&&a)return!1;if(i)return e=JI.call(e),t=JI.call(t),sO(e,t,n);var o,s,u=zI(e),l=zI(t);if(u.length!==l.length)return!1;for(u.sort(),l.sort(),s=u.length-1;s>=0;s--)if(u[s]!==l[s])return!1;for(s=u.length-1;s>=0;s--)if(o=u[s],!sO(e[o],t[o],n,r))return!1;return!0}(e,t,n,r))}return n?e===t:e==t}function uO(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function lO(e,t){if(!e||!t)return!1;if("[object RegExp]"==Object.prototype.toString.call(t))return t.test(e);try{if(e instanceof t)return!0}catch(e){}return!Error.isPrototypeOf(t)&&!0===t.call({},e)}function cO(e,t,n,r){var i;if("function"!=typeof t)throw new TypeError('"block" argument must be a function');"string"==typeof n&&(r=n,n=null),i=function(e){var t;try{e()}catch(e){t=e}return t}(t),r=(n&&n.name?" ("+n.name+").":".")+(r?" "+r:"."),e&&!i&&aO(i,n,"Missing expected exception"+r);var a="string"==typeof r,o=!e&&i&&!n;if((!e&&LI(i)&&a&&lO(i,n)||o)&&aO(i,n,"Got unwanted exception"+r),e&&i&&n&&!lO(i,n)||!e&&i)throw i}ZI.AssertionError=nO,DI(nO,Error),ZI.fail=aO,ZI.ok=oO,ZI.equal=function e(t,n,r){t!=n&&aO(t,n,r,"==",e)},ZI.notEqual=function e(t,n,r){t==n&&aO(t,n,r,"!=",e)},ZI.deepEqual=function e(t,n,r){sO(t,n,!1)||aO(t,n,r,"deepEqual",e)},ZI.deepStrictEqual=function e(t,n,r){sO(t,n,!0)||aO(t,n,r,"deepStrictEqual",e)},ZI.notDeepEqual=function e(t,n,r){sO(t,n,!1)&&aO(t,n,r,"notDeepEqual",e)},ZI.notDeepStrictEqual=function e(t,n,r){sO(t,n,!0)&&aO(t,n,r,"notDeepStrictEqual",e)},ZI.strictEqual=function e(t,n,r){t!==n&&aO(t,n,r,"===",e)},ZI.notStrictEqual=function e(t,n,r){t===n&&aO(t,n,r,"!==",e)},ZI.throws=function(e,t,n){cO(!0,e,t,n)},ZI.doesNotThrow=function(e,t,n){cO(!1,e,t,n)},ZI.ifError=function(e){if(e)throw e};var pO=function(){function e(e,t,n){this._statements=[],this._resultName=null,this._scope=null,this._hub=null,this._scope=t,this._hub=n,this._importedSource=e}var t=e.prototype;return t.done=function(){return{statements:this._statements,resultName:this._resultName}},t.import=function(){return this._statements.push(Xs([],ls(this._importedSource))),this},t.require=function(){return this._statements.push(es(Xo(os("require"),[ls(this._importedSource)]))),this},t.namespace=function(e){void 0===e&&(e="namespace"),e=this._scope.generateUidIdentifier(e);var t=this._statements[this._statements.length-1];return ZI("ImportDeclaration"===t.type),ZI(0===t.specifiers.length),t.specifiers=[Js(e)],this._resultName=gp(e),this},t.default=function(e){e=this._scope.generateUidIdentifier(e);var t=this._statements[this._statements.length-1];return ZI("ImportDeclaration"===t.type),ZI(0===t.specifiers.length),t.specifiers=[zs(e)],this._resultName=gp(e),this},t.named=function(e,t){if("default"===t)return this.default(e);e=this._scope.generateUidIdentifier(e);var n=this._statements[this._statements.length-1];return ZI("ImportDeclaration"===n.type),ZI(0===n.specifiers.length),n.specifiers=[Ys(e,os(t))],this._resultName=gp(e),this},t.var=function(e){e=this._scope.generateUidIdentifier(e);var t=this._statements[this._statements.length-1];return"ExpressionStatement"!==t.type&&(ZI(this._resultName),t=es(this._resultName),this._statements.push(t)),this._statements[this._statements.length-1]=Is("var",[Os(e,t.expression)]),this._resultName=gp(e),this},t.defaultInterop=function(){return this._interop(this._hub.addHelper("interopRequireDefault"))},t.wildcardInterop=function(){return this._interop(this._hub.addHelper("interopRequireWildcard"))},t._interop=function(e){var t=this._statements[this._statements.length-1];return"ExpressionStatement"===t.type?t.expression=Xo(e,[t.expression]):"VariableDeclaration"===t.type?(ZI(1===t.declarations.length),t.declarations[0].init=Xo(e,[t.declarations[0].init])):ZI.fail("Unexpected type."),this},t.prop=function(e){var t=this._statements[this._statements.length-1];return"ExpressionStatement"===t.type?t.expression=ms(t.expression,os(e)):"VariableDeclaration"===t.type?(ZI(1===t.declarations.length),t.declarations[0].init=ms(t.declarations[0].init,os(e))):ZI.fail("Unexpected type:"+t.type),this},t.read=function(e){this._resultName=ms(this._resultName,os(e))},e}();function hO(e){var t=e.node.sourceType;if("module"!==t&&"script"!==t)throw e.buildCodeFrameError('Unknown sourceType "'+t+'", cannot transform.');return"module"===e.node.sourceType}var fO=function(){function e(e,t,n){this._defaultOpts={importedSource:null,importedType:"commonjs",importedInterop:"babel",importingInterop:"babel",ensureLiveReference:!1,ensureNoContext:!1};var r=e.find((function(e){return e.isProgram()}));this._programPath=r,this._programScope=r.scope,this._hub=r.hub,this._defaultOpts=this._applyDefaults(t,n,!0)}var t=e.prototype;return t.addDefault=function(e,t){return this.addNamed("default",e,t)},t.addNamed=function(e,t,n){return ZI("string"==typeof e),this._generateImport(this._applyDefaults(t,n),e)},t.addNamespace=function(e,t){return this._generateImport(this._applyDefaults(e,t),null)},t.addSideEffect=function(e,t){return this._generateImport(this._applyDefaults(e,t),!1)},t._applyDefaults=function(e,t,n){void 0===n&&(n=!1);var r=[];"string"==typeof e?(r.push({importedSource:e}),r.push(t)):(ZI(!t,"Unexpected secondary arguments."),r.push(e));for(var i=Object.assign({},this._defaultOpts),a=function(){var e=s[o];if(!e)return"continue";Object.keys(i).forEach((function(t){void 0!==e[t]&&(i[t]=e[t])})),n||(void 0!==e.nameHint&&(i.nameHint=e.nameHint),void 0!==e.blockHoist&&(i.blockHoist=e.blockHoist))},o=0,s=r;o<s.length;o++)a();return i},t._generateImport=function(e,t){var n="default"===t,r=!!t&&!n,i=null===t,a=e.importedSource,o=e.importedType,s=e.importedInterop,u=e.importingInterop,l=e.ensureLiveReference,c=e.ensureNoContext,p=e.nameHint,h=e.blockHoist,f=p||t,d=hO(this._programPath),m=d&&"node"===u,y=d&&"babel"===u,v=new pO(a,this._programScope,this._hub);if("es6"===o){if(!m&&!y)throw new Error("Cannot import an ES6 module from CommonJS");v.import(),i?v.namespace(p||a):(n||r)&&v.named(f,t)}else{if("commonjs"!==o)throw new Error('Unexpected interopType "'+o+'"');if("babel"===s)if(m){f="default"!==f?f:a;var g=a+"$es6Default";v.import(),i?v.default(g).var(f||a).wildcardInterop():n?l?v.default(g).var(f||a).defaultInterop().read("default"):v.default(g).var(f).defaultInterop().prop(t):r&&v.default(g).read(t)}else y?(v.import(),i?v.namespace(f||a):(n||r)&&v.named(f,t)):(v.require(),i?v.var(f||a).wildcardInterop():(n||r)&&l?n?(f="default"!==f?f:a,v.var(f).read(t),v.defaultInterop()):v.var(a).read(t):n?v.var(f).defaultInterop().prop(t):r&&v.var(f).prop(t));else if("compiled"===s)m?(v.import(),i?v.default(f||a):(n||r)&&v.default(a).read(f)):y?(v.import(),i?v.namespace(f||a):(n||r)&&v.named(f,t)):(v.require(),i?v.var(f||a):(n||r)&&(l?v.var(a).read(f):v.prop(t).var(f)));else{if("uncompiled"!==s)throw new Error('Unknown importedInterop "'+s+'".');if(n&&l)throw new Error("No live reference for commonjs default");m?(v.import(),i?v.default(f||a):n?v.default(f):r&&v.default(a).read(f)):y?(v.import(),i?v.default(f||a):n?v.default(f):r&&v.named(f,t)):(v.require(),i?v.var(f||a):n?v.var(f):r&&(l?v.var(a).read(f):v.var(f).prop(t)))}}var b=v.done(),E=b.statements,A=b.resultName;return this._insertStatements(E,h),(n||r)&&c&&"Identifier"!==A.type?Ss([cs(0),A]):A},t._insertStatements=function(e,t){void 0===t&&(t=3),e.forEach((function(e){e._blockHoist=t}));var n=this._programPath.get("body").find((function(e){var t=e.node._blockHoist;return Number.isFinite(t)&&t<4}));n?n.insertBefore(e):this._programPath.unshiftContainer("body",e)},e}();var dO=cF((function(e,t){e.assertVersion(7);var n=t.method,r=t.module;return n&&r?{name:"transform-async-to-generator",visitor:{Function:function(e,t){if(e.node.async&&!e.node.generator){var i=t.methodWrapper;jF(e,{wrapAsync:i=i?gp(i):t.methodWrapper=function(e,t,n,r){return new fO(e).addNamed(t,n,r)}(e,n,r)})}}}}:{name:"transform-async-to-generator",visitor:{Function:function(e,t){e.node.async&&!e.node.generator&&jF(e,{wrapAsync:t.addHelper("asyncToGenerator")})}}}})),mO=cF((function(e,t){e.assertVersion(7);var n=t.spec;return{name:"transform-arrow-functions",visitor:{ArrowFunctionExpression:function(e){e.isArrowFunctionExpression()&&e.arrowFunctionToExpression({allowInsertArrow:!1,specCompliant:!!n})}}}})),yO=cF((function(e){function t(e,t){var n=t.get(e),r=Array.isArray(n),i=0;for(n=r?n:n[Symbol.iterator]();;){var a;if(r){if(i>=n.length)break;a=n[i++]}else{if((i=n.next()).done)break;a=i.value}var o=a,s=o.node;if(o.isFunctionDeclaration()){var u=Is("let",[Os(s.id,Vh(s))]);u._blockHoist=2,s.id=null,o.replaceWith(u)}}}return e.assertVersion(7),{name:"transform-block-scoped-functions",visitor:{BlockStatement:function(e){var n=e.node,r=e.parent;lt(r,{body:n})||gt(r)||t("body",e)},SwitchCase:function(e){t("consequent",e)}}}}));function vO(){var e=a(["",'("','")']);return vO=function(){return e},e}function gO(e,t,n){var r=n.letReferences[e.name];return!!r&&t.getBindingIdentifier(e.name)===r}var bO={ReferencedIdentifier:function(e,t){if(t.tdzEnabled){var n=e.node,r=e.parent,i=e.scope;if(!e.parentPath.isFor({left:n})&&gO(n,i,t)){var a=i.getBinding(n.name).path;if(!a.isFunctionDeclaration()){var o=function(e,t){var n=t._guessExecutionStatusRelativeTo(e);return"before"===n?"outside":"after"===n?"inside":"maybe"}(e,a);if("outside"!==o)if("maybe"===o){var s=function(e,t){return Xo(t.addHelper("temporalRef"),[e,ls(e.name)])}(n,t);if(a.parent._tdzThis=!0,e.skip(),e.parentPath.isUpdateExpression()){if(r._ignoreBlockScopingTDZ)return;e.parentPath.replaceWith(Ss([s,r]))}else e.replaceWith(s)}else"inside"===o&&e.replaceWith(nD.ast(vO(),t.addHelper("tdz"),n.name))}}}},AssignmentExpression:{exit:function(e,t){if(t.tdzEnabled){var n=e.node;if(!n._ignoreBlockScopingTDZ){for(var r=[],i=e.getBindingIdentifiers(),a=0,o=Object.keys(i);a<o.length;a++){var s=i[o[a]];gO(s,e.scope,t)&&r.push(s)}r.length&&(n._ignoreBlockScopingTDZ=!0,r.push(n),e.replaceWithMultiple(r.map((function(e){return es(e)}))))}}}}};var EO=function(e){return sm((function(t,n){var r=-1,i=n.length,a=i>1?n[i-1]:void 0,o=i>2?n[2]:void 0;for(a=e.length>3&&"function"==typeof a?(i--,a):void 0,o&&Ud(n[0],n[1],o)&&(a=i<3?void 0:a,i=1),t=Object(t);++r<i;){var s=n[r];s&&e(t,s,r,a)}return t}))}((function(e,t){nr(t,jr(t),e)})),AO=new WeakSet,DO=cF((function(e,t){e.assertVersion(7);var n=t.throwIfClosureRequired,r=void 0!==n&&n,i=t.tdz,a=void 0!==i&&i;if("boolean"!=typeof r)throw new Error(".throwIfClosureRequired must be a boolean, or undefined");if("boolean"!=typeof a)throw new Error(".tdz must be a boolean, or undefined");return{name:"transform-block-scoping",visitor:{VariableDeclaration:function(e){var t=e.node,n=e.parent,r=e.scope;if(xO(t)&&(CO(e,null,n,r,!0),t._tdzThis)){for(var i=[t],a=0;a<t.declarations.length;a++){var o=t.declarations[a],s=Uo("=",o.id,o.init||r.buildUndefinedNode());s._ignoreBlockScopingTDZ=!0,i.push(es(s)),o.init=this.addHelper("temporalUndefined")}t._blockHoist=2,e.isCompletionRecord()&&i.push(es(r.buildUndefinedNode())),e.replaceWithMultiple(i)}},Loop:function(e,t){var n=e.parent,i=e.scope;e.ensureBlock();var o=new BO(e,e.get("body"),n,i,r,a,t).run();o&&e.replaceWith(o)},CatchClause:function(e,t){var n=e.parent,i=e.scope;new BO(null,e.get("body"),n,i,r,a,t).run()},"BlockStatement|SwitchStatement|Program":function(e,t){(function(e){return ot(e.parent)||f(e.parent)})(e)||new BO(null,e,e.parent,e.scope,r,a,t).run()}}}}));var SO=nD('\n  if (typeof RETURN === "object") return RETURN.v;\n');function xO(e){return!!H(e)&&(!!e[Ma]||("let"===e.kind||"const"===e.kind))}function TO(e){var t=e.find((function(e){return e.isLoop()||e.isFunction()}));return t&&t.isLoop()}function CO(e,t,n,r,i){if(void 0===i&&(i=!1),t||(t=e.node),TO(e)&&!st(n))for(var a=0;a<t.declarations.length;a++){var o=t.declarations[a];o.init=o.init||r.buildUndefinedNode()}if(t[Ma]=!0,t.kind="var",i)for(var s=r.getFunctionParent()||r.getProgramParent(),u=0,l=Object.keys(e.getBindingIdentifiers());u<l.length;u++){var c=l[u],p=r.getOwnBinding(c);p&&(p.kind="var"),r.moveBindingTo(c,s)}}function wO(e){return H(e,{kind:"var"})&&!xO(e)}var PO=JD.visitors.merge([{Loop:{enter:function(e,t){t.loopDepth++},exit:function(e,t){t.loopDepth--}},Function:function(e,t){return t.loopDepth>0?e.traverse(FO,t):e.traverse(bO,t),e.skip()}},bO]),FO=JD.visitors.merge([{ReferencedIdentifier:function(e,t){var n=t.letReferences[e.node.name];if(n){var r=e.scope.getBindingIdentifier(e.node.name);r&&r!==n||(t.closurify=!0)}}},bO]),kO={enter:function(e,t){var n=e.node;e.parent;if(e.isForStatement()){if(wO(n.init)){var r=t.pushDeclar(n.init);1===r.length?n.init=r[0]:n.init=Ss(r)}}else if(e.isFor())wO(n.left)&&(t.pushDeclar(n.left),n.left=n.left.declarations[0].id);else if(wO(n))e.replaceWithMultiple(t.pushDeclar(n).map((function(e){return es(e)})));else if(e.isFunction())return e.skip()}},_O={LabeledStatement:function(e,t){var n=e.node;t.innerLabels.push(n.label.name)}},IO={enter:function(e,t){if(e.isAssignmentExpression()||e.isUpdateExpression())for(var n=0,r=Object.keys(e.getBindingIdentifiers());n<r.length;n++){var i=r[n];t.outsideReferences[i]===e.scope.getBindingIdentifier(i)&&(t.reassignments[i]=!0)}else e.isReturnStatement()&&t.returnStatements.push(e)}};var OO={Loop:function(e,t){var n=t.ignoreLabeless;t.ignoreLabeless=!0,e.traverse(OO,t),t.ignoreLabeless=n,e.skip()},Function:function(e){e.skip()},SwitchCase:function(e,t){var n=t.inSwitchCase;t.inSwitchCase=!0,e.traverse(OO,t),t.inSwitchCase=n,e.skip()},"BreakStatement|ContinueStatement|ReturnStatement":function(e,t){var n=e.node,r=e.scope;if(!n[this.LOOP_IGNORE]){var i,a=function(e){return p(e)?"break":m(e)?"continue":void 0}(n);if(a){if(n.label){if(t.innerLabels.indexOf(n.label.name)>=0)return;a=a+"|"+n.label.name}else{if(t.ignoreLabeless)return;if(p(n)&&t.inSwitchCase)return}t.hasBreakContinue=!0,t.map[a]=n,i=ls(a)}e.isReturnStatement()&&(t.hasReturn=!0,i=gs([Es(os("v"),n.argument||r.buildUndefinedNode())])),i&&((i=Ds(i))[this.LOOP_IGNORE]=!0,e.skip(),e.replaceWith(pf(i,n)))}}},BO=function(){function e(e,t,n,r,i,a,o){this.parent=n,this.scope=r,this.state=o,this.throwIfClosureRequired=i,this.tdzEnabled=a,this.blockPath=t,this.block=t.node,this.outsideLetReferences=Object.create(null),this.hasLetReferences=!1,this.letReferences=Object.create(null),this.body=[],e&&(this.loopParent=e.parent,this.loopLabel=T(this.loopParent)&&this.loopParent.label,this.loopPath=e,this.loop=e.node)}var t=e.prototype;return t.run=function(){var e=this.block;if(!AO.has(e)){AO.add(e);var t=this.getLetReferences();if(this.checkConstants(),lt(this.parent)||O(this.block))this.updateScopeInfo();else if(this.hasLetReferences)return t?this.wrapClosure():this.remap(),this.updateScopeInfo(t),this.loopLabel&&!T(this.loopParent)?us(this.loopLabel,this.loop):void 0}},t.checkConstants=function(){for(var e=this.scope,t=this.state,n=0,r=Object.keys(e.bindings);n<r.length;n++){var i=r[n],a=e.bindings[i];if("const"===a.kind)for(var o=0,s=a.constantViolations;o<s.length;o++){var u=s[o],l=Xo(t.addHelper("readOnlyError"),[ls(i)]);u.isAssignmentExpression()?u.get("right").replaceWith(Ss([l,u.get("right").node])):u.isUpdateExpression()?u.replaceWith(Ss([l,u.node])):u.isForXStatement()&&(u.ensureBlock(),u.node.body.body.unshift(es(l)))}}},t.updateScopeInfo=function(e){for(var t=this.blockPath.scope,n=t.getFunctionParent()||t.getProgramParent(),r=this.letReferences,i=0,a=Object.keys(r);i<a.length;i++){var o=r[a[i]],s=t.getBinding(o.name);s&&("let"!==s.kind&&"const"!==s.kind||(s.kind="var",e?t.hasOwnBinding(o.name)&&t.removeBinding(o.name):t.moveBindingTo(o.name,n)))}},t.remap=function(){for(var e=this.letReferences,t=this.outsideLetReferences,n=this.scope,r=this.blockPath.scope,i=0,a=Object.keys(e);i<a.length;i++){var o=a[i],s=e[o];(n.parentHasBinding(o)||n.hasGlobal(o))&&(n.hasOwnBinding(o)&&n.rename(s.name),r.hasOwnBinding(o)&&r.rename(s.name))}for(var u=0,l=Object.keys(t);u<l.length;u++){var c=l[u],p=e[c];TO(this.blockPath)&&r.hasOwnBinding(c)&&r.rename(p.name)}},t.wrapClosure=function(){if(this.throwIfClosureRequired)throw this.blockPath.buildCodeFrameError("Compiling let/const in this block would add a closure (throwIfClosureRequired).");var e=this.block,t=this.outsideLetReferences;if(this.loop)for(var n=0,r=Object.keys(t);n<r.length;n++){var i=t[r[n]];(this.scope.hasGlobal(i.name)||this.scope.parentHasBinding(i.name))&&(delete t[i.name],delete this.letReferences[i.name],this.scope.rename(i.name),this.letReferences[i.name]=i,t[i.name]=i)}this.has=this.checkLoop(),this.hoistVarDeclarations();var a=Bd(t).map((function(e){return gp(e)})),o=a.map((function(e){return gp(e)})),s=this.blockPath.isSwitchStatement(),u=as(null,o,qo(s?[e]:e.body));this.addContinuations(u);var l,c,p,h=Xo(ps(),a),f=".callee";if(JD.hasType(u.body,"YieldExpression",oh)&&(u.generator=!0,h=au(h,!0),f=".argument"+f),JD.hasType(u.body,"AwaitExpression",oh)&&(u.async=!0,h=Ol(h),f=".argument"+f),this.has.hasReturn||this.has.hasBreakContinue){var d=this.scope.generateUid("ret");this.body.push(Is("var",[Os(os(d),h)])),l="declarations.0.init"+f,c=this.body.length-1,this.buildHas(d)}else this.body.push(es(h)),l="expression"+f,c=this.body.length-1;if(s){var m=this.blockPath,y=m.parentPath,v=m.listKey,g=m.key;this.blockPath.replaceWithMultiple(this.body),p=y.get(v)[g+c]}else e.body=this.body,p=this.blockPath.get("body")[c];var b,E=p.get(l);if(this.loop){var A=this.scope.generateUid("loop"),D=this.loopPath.insertBefore(Is("var",[Os(os(A),u)]));E.replaceWith(os(A)),b=D[0].get("declarations.0.init")}else E.replaceWith(u),b=E;b.unwrapFunctionEnvironment()},t.addContinuations=function(e){var t=this,n={reassignments:{},returnStatements:[],outsideReferences:this.outsideLetReferences};this.scope.traverse(e,IO,n);for(var r=function(r){var i=e.params[r];if(!n.reassignments[i.name])return"continue";var a=i.name,o=t.scope.generateUid(i.name);e.params[r]=os(o),t.scope.rename(a,o,e),n.returnStatements.forEach((function(e){e.insertBefore(es(Uo("=",os(a),os(o))))})),e.body.body.push(es(Uo("=",os(a),os(o))))},i=0;i<e.params.length;i++)r(i)},t.getLetReferences=function(){var e=this,t=this.block,n=[];if(this.loop){var r=this.loop.left||this.loop.init;xO(r)&&(n.push(r),EO(this.outsideLetReferences,zh(r)))}var i=function r(i,a){($(a=a||i.node)||A(a)||xO(a))&&(xO(a)&&CO(i,a,t,e.scope),n=n.concat(a.declarations||a)),T(a)&&r(i.get("body"),a.body)};if(t.body)for(var a=this.blockPath.get("body"),o=0;o<t.body.length;o++)i(a[o]);if(t.cases)for(var s=this.blockPath.get("cases"),u=0;u<t.cases.length;u++)for(var l=t.cases[u].consequent,c=0;c<l.length;c++){var p=l[c];i(s[u],p)}for(var h=0;h<n.length;h++){var f=zh(n[h],!1,!0);EO(this.letReferences,f),this.hasLetReferences=!0}if(this.hasLetReferences){var d={letReferences:this.letReferences,closurify:!1,loopDepth:0,tdzEnabled:this.tdzEnabled,addHelper:function(t){return e.state.addHelper(t)}};return TO(this.blockPath)&&d.loopDepth++,this.blockPath.traverse(PO,d),d.closurify}},t.checkLoop=function(){var e={hasBreakContinue:!1,ignoreLabeless:!1,inSwitchCase:!1,innerLabels:[],hasReturn:!1,isLoop:!!this.loop,map:{},LOOP_IGNORE:Symbol()};return this.blockPath.traverse(_O,e),this.blockPath.traverse(OO,e),e},t.hoistVarDeclarations=function(){this.blockPath.traverse(kO,this)},t.pushDeclar=function(e){for(var t=[],n=zh(e),r=0,i=Object.keys(n);r<i.length;r++){var a=i[r];t.push(Os(n[a]))}this.body.push(Is(e.kind,t));for(var o=[],s=0;s<e.declarations.length;s++){var u=e.declarations[s];if(u.init){var l=Uo("=",gp(u.id),gp(u.init));o.push(pf(l,u))}}return o},t.buildHas=function(e){var t,n=this.body,r=this.has,i=[];if(r.hasReturn&&(t=SO({RETURN:os(e)})),r.hasBreakContinue){for(var a=0,o=Object.keys(r.map);a<o.length;a++){var s=o[a];i.push(Ts(ls(s),[r.map[s]]))}if(r.hasReturn&&i.push(Ts(null,[t])),1===i.length){var u=i[0];n.push(ss(Vo("===",os(e),u.test),u.consequent[0]))}else{if(this.loop)for(var l=0;l<i.length;l++){var c=i[l].consequent[0];p(c)&&!c.label&&(this.loopLabel||(this.loopLabel=this.scope.generateUidIdentifier("loop")),c.label=gp(this.loopLabel))}n.push(Cs(os(e),i))}}else r.hasReturn&&n.push(t)},e}(),NO={Array:!1,ArrayBuffer:!1,Atomics:!1,BigInt:!1,BigInt64Array:!1,BigUint64Array:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,globalThis:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,SharedArrayBuffer:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},MO={Array:!1,Boolean:!1,constructor:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,propertyIsEnumerable:!1,RangeError:!1,ReferenceError:!1,RegExp:!1,String:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1},RO={Array:!1,ArrayBuffer:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},LO={Array:!1,ArrayBuffer:!1,Atomics:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,SharedArrayBuffer:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},jO={AbortController:!1,AbortSignal:!1,addEventListener:!1,alert:!1,AnalyserNode:!1,Animation:!1,AnimationEffectReadOnly:!1,AnimationEffectTiming:!1,AnimationEffectTimingReadOnly:!1,AnimationEvent:!1,AnimationPlaybackEvent:!1,AnimationTimeline:!1,applicationCache:!1,ApplicationCache:!1,ApplicationCacheErrorEvent:!1,atob:!1,Attr:!1,Audio:!1,AudioBuffer:!1,AudioBufferSourceNode:!1,AudioContext:!1,AudioDestinationNode:!1,AudioListener:!1,AudioNode:!1,AudioParam:!1,AudioProcessingEvent:!1,AudioScheduledSourceNode:!1,"AudioWorkletGlobalScope ":!1,AudioWorkletNode:!1,AudioWorkletProcessor:!1,BarProp:!1,BaseAudioContext:!1,BatteryManager:!1,BeforeUnloadEvent:!1,BiquadFilterNode:!1,Blob:!1,BlobEvent:!1,blur:!1,BroadcastChannel:!1,btoa:!1,BudgetService:!1,ByteLengthQueuingStrategy:!1,Cache:!1,caches:!1,CacheStorage:!1,cancelAnimationFrame:!1,cancelIdleCallback:!1,CanvasCaptureMediaStreamTrack:!1,CanvasGradient:!1,CanvasPattern:!1,CanvasRenderingContext2D:!1,ChannelMergerNode:!1,ChannelSplitterNode:!1,CharacterData:!1,clearInterval:!1,clearTimeout:!1,clientInformation:!1,ClipboardEvent:!1,close:!1,closed:!1,CloseEvent:!1,Comment:!1,CompositionEvent:!1,confirm:!1,console:!1,ConstantSourceNode:!1,ConvolverNode:!1,CountQueuingStrategy:!1,createImageBitmap:!1,Credential:!1,CredentialsContainer:!1,crypto:!1,Crypto:!1,CryptoKey:!1,CSS:!1,CSSConditionRule:!1,CSSFontFaceRule:!1,CSSGroupingRule:!1,CSSImportRule:!1,CSSKeyframeRule:!1,CSSKeyframesRule:!1,CSSMediaRule:!1,CSSNamespaceRule:!1,CSSPageRule:!1,CSSRule:!1,CSSRuleList:!1,CSSStyleDeclaration:!1,CSSStyleRule:!1,CSSStyleSheet:!1,CSSSupportsRule:!1,CustomElementRegistry:!1,customElements:!1,CustomEvent:!1,DataTransfer:!1,DataTransferItem:!1,DataTransferItemList:!1,defaultstatus:!1,defaultStatus:!1,DelayNode:!1,DeviceMotionEvent:!1,DeviceOrientationEvent:!1,devicePixelRatio:!1,dispatchEvent:!1,document:!1,Document:!1,DocumentFragment:!1,DocumentType:!1,DOMError:!1,DOMException:!1,DOMImplementation:!1,DOMMatrix:!1,DOMMatrixReadOnly:!1,DOMParser:!1,DOMPoint:!1,DOMPointReadOnly:!1,DOMQuad:!1,DOMRect:!1,DOMRectReadOnly:!1,DOMStringList:!1,DOMStringMap:!1,DOMTokenList:!1,DragEvent:!1,DynamicsCompressorNode:!1,Element:!1,ErrorEvent:!1,event:!1,Event:!1,EventSource:!1,EventTarget:!1,external:!1,fetch:!1,File:!1,FileList:!1,FileReader:!1,find:!1,focus:!1,FocusEvent:!1,FontFace:!1,FontFaceSetLoadEvent:!1,FormData:!1,frameElement:!1,frames:!1,GainNode:!1,Gamepad:!1,GamepadButton:!1,GamepadEvent:!1,getComputedStyle:!1,getSelection:!1,HashChangeEvent:!1,Headers:!1,history:!1,History:!1,HTMLAllCollection:!1,HTMLAnchorElement:!1,HTMLAreaElement:!1,HTMLAudioElement:!1,HTMLBaseElement:!1,HTMLBodyElement:!1,HTMLBRElement:!1,HTMLButtonElement:!1,HTMLCanvasElement:!1,HTMLCollection:!1,HTMLContentElement:!1,HTMLDataElement:!1,HTMLDataListElement:!1,HTMLDetailsElement:!1,HTMLDialogElement:!1,HTMLDirectoryElement:!1,HTMLDivElement:!1,HTMLDListElement:!1,HTMLDocument:!1,HTMLElement:!1,HTMLEmbedElement:!1,HTMLFieldSetElement:!1,HTMLFontElement:!1,HTMLFormControlsCollection:!1,HTMLFormElement:!1,HTMLFrameElement:!1,HTMLFrameSetElement:!1,HTMLHeadElement:!1,HTMLHeadingElement:!1,HTMLHRElement:!1,HTMLHtmlElement:!1,HTMLIFrameElement:!1,HTMLImageElement:!1,HTMLInputElement:!1,HTMLLabelElement:!1,HTMLLegendElement:!1,HTMLLIElement:!1,HTMLLinkElement:!1,HTMLMapElement:!1,HTMLMarqueeElement:!1,HTMLMediaElement:!1,HTMLMenuElement:!1,HTMLMetaElement:!1,HTMLMeterElement:!1,HTMLModElement:!1,HTMLObjectElement:!1,HTMLOListElement:!1,HTMLOptGroupElement:!1,HTMLOptionElement:!1,HTMLOptionsCollection:!1,HTMLOutputElement:!1,HTMLParagraphElement:!1,HTMLParamElement:!1,HTMLPictureElement:!1,HTMLPreElement:!1,HTMLProgressElement:!1,HTMLQuoteElement:!1,HTMLScriptElement:!1,HTMLSelectElement:!1,HTMLShadowElement:!1,HTMLSlotElement:!1,HTMLSourceElement:!1,HTMLSpanElement:!1,HTMLStyleElement:!1,HTMLTableCaptionElement:!1,HTMLTableCellElement:!1,HTMLTableColElement:!1,HTMLTableElement:!1,HTMLTableRowElement:!1,HTMLTableSectionElement:!1,HTMLTemplateElement:!1,HTMLTextAreaElement:!1,HTMLTimeElement:!1,HTMLTitleElement:!1,HTMLTrackElement:!1,HTMLUListElement:!1,HTMLUnknownElement:!1,HTMLVideoElement:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,IdleDeadline:!1,IIRFilterNode:!1,Image:!1,ImageBitmap:!1,ImageBitmapRenderingContext:!1,ImageCapture:!1,ImageData:!1,indexedDB:!1,innerHeight:!1,innerWidth:!1,InputEvent:!1,IntersectionObserver:!1,IntersectionObserverEntry:!1,Intl:!1,isSecureContext:!1,KeyboardEvent:!1,KeyframeEffect:!1,KeyframeEffectReadOnly:!1,length:!1,localStorage:!1,location:!0,Location:!1,locationbar:!1,matchMedia:!1,MediaDeviceInfo:!1,MediaDevices:!1,MediaElementAudioSourceNode:!1,MediaEncryptedEvent:!1,MediaError:!1,MediaKeyMessageEvent:!1,MediaKeySession:!1,MediaKeyStatusMap:!1,MediaKeySystemAccess:!1,MediaList:!1,MediaQueryList:!1,MediaQueryListEvent:!1,MediaRecorder:!1,MediaSettingsRange:!1,MediaSource:!1,MediaStream:!1,MediaStreamAudioDestinationNode:!1,MediaStreamAudioSourceNode:!1,MediaStreamEvent:!1,MediaStreamTrack:!1,MediaStreamTrackEvent:!1,menubar:!1,MessageChannel:!1,MessageEvent:!1,MessagePort:!1,MIDIAccess:!1,MIDIConnectionEvent:!1,MIDIInput:!1,MIDIInputMap:!1,MIDIMessageEvent:!1,MIDIOutput:!1,MIDIOutputMap:!1,MIDIPort:!1,MimeType:!1,MimeTypeArray:!1,MouseEvent:!1,moveBy:!1,moveTo:!1,MutationEvent:!1,MutationObserver:!1,MutationRecord:!1,name:!1,NamedNodeMap:!1,NavigationPreloadManager:!1,navigator:!1,Navigator:!1,NetworkInformation:!1,Node:!1,NodeFilter:!1,NodeIterator:!1,NodeList:!1,Notification:!1,OfflineAudioCompletionEvent:!1,OfflineAudioContext:!1,offscreenBuffering:!1,OffscreenCanvas:!0,onabort:!0,onafterprint:!0,onanimationend:!0,onanimationiteration:!0,onanimationstart:!0,onappinstalled:!0,onauxclick:!0,onbeforeinstallprompt:!0,onbeforeprint:!0,onbeforeunload:!0,onblur:!0,oncancel:!0,oncanplay:!0,oncanplaythrough:!0,onchange:!0,onclick:!0,onclose:!0,oncontextmenu:!0,oncuechange:!0,ondblclick:!0,ondevicemotion:!0,ondeviceorientation:!0,ondeviceorientationabsolute:!0,ondrag:!0,ondragend:!0,ondragenter:!0,ondragleave:!0,ondragover:!0,ondragstart:!0,ondrop:!0,ondurationchange:!0,onemptied:!0,onended:!0,onerror:!0,onfocus:!0,ongotpointercapture:!0,onhashchange:!0,oninput:!0,oninvalid:!0,onkeydown:!0,onkeypress:!0,onkeyup:!0,onlanguagechange:!0,onload:!0,onloadeddata:!0,onloadedmetadata:!0,onloadstart:!0,onlostpointercapture:!0,onmessage:!0,onmessageerror:!0,onmousedown:!0,onmouseenter:!0,onmouseleave:!0,onmousemove:!0,onmouseout:!0,onmouseover:!0,onmouseup:!0,onmousewheel:!0,onoffline:!0,ononline:!0,onpagehide:!0,onpageshow:!0,onpause:!0,onplay:!0,onplaying:!0,onpointercancel:!0,onpointerdown:!0,onpointerenter:!0,onpointerleave:!0,onpointermove:!0,onpointerout:!0,onpointerover:!0,onpointerup:!0,onpopstate:!0,onprogress:!0,onratechange:!0,onrejectionhandled:!0,onreset:!0,onresize:!0,onscroll:!0,onsearch:!0,onseeked:!0,onseeking:!0,onselect:!0,onstalled:!0,onstorage:!0,onsubmit:!0,onsuspend:!0,ontimeupdate:!0,ontoggle:!0,ontransitionend:!0,onunhandledrejection:!0,onunload:!0,onvolumechange:!0,onwaiting:!0,onwheel:!0,open:!1,openDatabase:!1,opener:!1,Option:!1,origin:!1,OscillatorNode:!1,outerHeight:!1,outerWidth:!1,PageTransitionEvent:!1,pageXOffset:!1,pageYOffset:!1,PannerNode:!1,parent:!1,Path2D:!1,PaymentAddress:!1,PaymentRequest:!1,PaymentRequestUpdateEvent:!1,PaymentResponse:!1,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceLongTaskTiming:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceNavigationTiming:!1,PerformanceObserver:!1,PerformanceObserverEntryList:!1,PerformancePaintTiming:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,PeriodicWave:!1,Permissions:!1,PermissionStatus:!1,personalbar:!1,PhotoCapabilities:!1,Plugin:!1,PluginArray:!1,PointerEvent:!1,PopStateEvent:!1,postMessage:!1,Presentation:!1,PresentationAvailability:!1,PresentationConnection:!1,PresentationConnectionAvailableEvent:!1,PresentationConnectionCloseEvent:!1,PresentationConnectionList:!1,PresentationReceiver:!1,PresentationRequest:!1,print:!1,ProcessingInstruction:!1,ProgressEvent:!1,PromiseRejectionEvent:!1,prompt:!1,PushManager:!1,PushSubscription:!1,PushSubscriptionOptions:!1,queueMicrotask:!1,RadioNodeList:!1,Range:!1,ReadableStream:!1,registerProcessor:!1,RemotePlayback:!1,removeEventListener:!1,Request:!1,requestAnimationFrame:!1,requestIdleCallback:!1,resizeBy:!1,ResizeObserver:!1,ResizeObserverEntry:!1,resizeTo:!1,Response:!1,RTCCertificate:!1,RTCDataChannel:!1,RTCDataChannelEvent:!1,RTCDtlsTransport:!1,RTCIceCandidate:!1,RTCIceGatherer:!1,RTCIceTransport:!1,RTCPeerConnection:!1,RTCPeerConnectionIceEvent:!1,RTCRtpContributingSource:!1,RTCRtpReceiver:!1,RTCRtpSender:!1,RTCSctpTransport:!1,RTCSessionDescription:!1,RTCStatsReport:!1,RTCTrackEvent:!1,screen:!1,Screen:!1,screenLeft:!1,ScreenOrientation:!1,screenTop:!1,screenX:!1,screenY:!1,ScriptProcessorNode:!1,scroll:!1,scrollbars:!1,scrollBy:!1,scrollTo:!1,scrollX:!1,scrollY:!1,SecurityPolicyViolationEvent:!1,Selection:!1,self:!1,ServiceWorker:!1,ServiceWorkerContainer:!1,ServiceWorkerRegistration:!1,sessionStorage:!1,setInterval:!1,setTimeout:!1,ShadowRoot:!1,SharedWorker:!1,SourceBuffer:!1,SourceBufferList:!1,speechSynthesis:!1,SpeechSynthesisEvent:!1,SpeechSynthesisUtterance:!1,StaticRange:!1,status:!1,statusbar:!1,StereoPannerNode:!1,stop:!1,Storage:!1,StorageEvent:!1,StorageManager:!1,styleMedia:!1,StyleSheet:!1,StyleSheetList:!1,SubtleCrypto:!1,SVGAElement:!1,SVGAngle:!1,SVGAnimatedAngle:!1,SVGAnimatedBoolean:!1,SVGAnimatedEnumeration:!1,SVGAnimatedInteger:!1,SVGAnimatedLength:!1,SVGAnimatedLengthList:!1,SVGAnimatedNumber:!1,SVGAnimatedNumberList:!1,SVGAnimatedPreserveAspectRatio:!1,SVGAnimatedRect:!1,SVGAnimatedString:!1,SVGAnimatedTransformList:!1,SVGAnimateElement:!1,SVGAnimateMotionElement:!1,SVGAnimateTransformElement:!1,SVGAnimationElement:!1,SVGCircleElement:!1,SVGClipPathElement:!1,SVGComponentTransferFunctionElement:!1,SVGDefsElement:!1,SVGDescElement:!1,SVGDiscardElement:!1,SVGElement:!1,SVGEllipseElement:!1,SVGFEBlendElement:!1,SVGFEColorMatrixElement:!1,SVGFEComponentTransferElement:!1,SVGFECompositeElement:!1,SVGFEConvolveMatrixElement:!1,SVGFEDiffuseLightingElement:!1,SVGFEDisplacementMapElement:!1,SVGFEDistantLightElement:!1,SVGFEDropShadowElement:!1,SVGFEFloodElement:!1,SVGFEFuncAElement:!1,SVGFEFuncBElement:!1,SVGFEFuncGElement:!1,SVGFEFuncRElement:!1,SVGFEGaussianBlurElement:!1,SVGFEImageElement:!1,SVGFEMergeElement:!1,SVGFEMergeNodeElement:!1,SVGFEMorphologyElement:!1,SVGFEOffsetElement:!1,SVGFEPointLightElement:!1,SVGFESpecularLightingElement:!1,SVGFESpotLightElement:!1,SVGFETileElement:!1,SVGFETurbulenceElement:!1,SVGFilterElement:!1,SVGForeignObjectElement:!1,SVGGElement:!1,SVGGeometryElement:!1,SVGGradientElement:!1,SVGGraphicsElement:!1,SVGImageElement:!1,SVGLength:!1,SVGLengthList:!1,SVGLinearGradientElement:!1,SVGLineElement:!1,SVGMarkerElement:!1,SVGMaskElement:!1,SVGMatrix:!1,SVGMetadataElement:!1,SVGMPathElement:!1,SVGNumber:!1,SVGNumberList:!1,SVGPathElement:!1,SVGPatternElement:!1,SVGPoint:!1,SVGPointList:!1,SVGPolygonElement:!1,SVGPolylineElement:!1,SVGPreserveAspectRatio:!1,SVGRadialGradientElement:!1,SVGRect:!1,SVGRectElement:!1,SVGScriptElement:!1,SVGSetElement:!1,SVGStopElement:!1,SVGStringList:!1,SVGStyleElement:!1,SVGSVGElement:!1,SVGSwitchElement:!1,SVGSymbolElement:!1,SVGTextContentElement:!1,SVGTextElement:!1,SVGTextPathElement:!1,SVGTextPositioningElement:!1,SVGTitleElement:!1,SVGTransform:!1,SVGTransformList:!1,SVGTSpanElement:!1,SVGUnitTypes:!1,SVGUseElement:!1,SVGViewElement:!1,TaskAttributionTiming:!1,Text:!1,TextDecoder:!1,TextEncoder:!1,TextEvent:!1,TextMetrics:!1,TextTrack:!1,TextTrackCue:!1,TextTrackCueList:!1,TextTrackList:!1,TimeRanges:!1,toolbar:!1,top:!1,Touch:!1,TouchEvent:!1,TouchList:!1,TrackEvent:!1,TransitionEvent:!1,TreeWalker:!1,UIEvent:!1,URL:!1,URLSearchParams:!1,ValidityState:!1,visualViewport:!1,VisualViewport:!1,VTTCue:!1,WaveShaperNode:!1,WebAssembly:!1,WebGL2RenderingContext:!1,WebGLActiveInfo:!1,WebGLBuffer:!1,WebGLContextEvent:!1,WebGLFramebuffer:!1,WebGLProgram:!1,WebGLQuery:!1,WebGLRenderbuffer:!1,WebGLRenderingContext:!1,WebGLSampler:!1,WebGLShader:!1,WebGLShaderPrecisionFormat:!1,WebGLSync:!1,WebGLTexture:!1,WebGLTransformFeedback:!1,WebGLUniformLocation:!1,WebGLVertexArrayObject:!1,WebSocket:!1,WheelEvent:!1,window:!1,Window:!1,Worker:!1,WritableStream:!1,XMLDocument:!1,XMLHttpRequest:!1,XMLHttpRequestEventTarget:!1,XMLHttpRequestUpload:!1,XMLSerializer:!1,XPathEvaluator:!1,XPathExpression:!1,XPathResult:!1,XSLTProcessor:!1},UO={addEventListener:!1,applicationCache:!1,atob:!1,Blob:!1,BroadcastChannel:!1,btoa:!1,Cache:!1,caches:!1,clearInterval:!1,clearTimeout:!1,close:!0,console:!1,fetch:!1,FileReaderSync:!1,FormData:!1,Headers:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,ImageData:!1,importScripts:!0,indexedDB:!1,location:!1,MessageChannel:!1,MessagePort:!1,name:!1,navigator:!1,Notification:!1,onclose:!0,onconnect:!0,onerror:!0,onlanguagechange:!0,onmessage:!0,onoffline:!0,ononline:!0,onrejectionhandled:!0,onunhandledrejection:!0,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,postMessage:!0,Promise:!1,queueMicrotask:!1,removeEventListener:!1,Request:!1,Response:!1,self:!0,ServiceWorkerRegistration:!1,setInterval:!1,setTimeout:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1,WebSocket:!1,Worker:!1,WorkerGlobalScope:!1,XMLHttpRequest:!1},VO={__dirname:!1,__filename:!1,Buffer:!1,clearImmediate:!1,clearInterval:!1,clearTimeout:!1,console:!1,exports:!0,global:!1,Intl:!1,module:!1,process:!1,queueMicrotask:!1,require:!1,setImmediate:!1,setInterval:!1,setTimeout:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1},WO={exports:!0,global:!1,module:!1,require:!1},GO={define:!1,require:!1},HO={after:!1,afterEach:!1,before:!1,beforeEach:!1,context:!1,describe:!1,it:!1,mocha:!1,run:!1,setup:!1,specify:!1,suite:!1,suiteSetup:!1,suiteTeardown:!1,teardown:!1,test:!1,xcontext:!1,xdescribe:!1,xit:!1,xspecify:!1},qO={afterAll:!1,afterEach:!1,beforeAll:!1,beforeEach:!1,describe:!1,expect:!1,fail:!1,fdescribe:!1,fit:!1,it:!1,jasmine:!1,pending:!1,runs:!1,spyOn:!1,spyOnProperty:!1,waits:!1,waitsFor:!1,xdescribe:!1,xit:!1},KO={afterAll:!1,afterEach:!1,beforeAll:!1,beforeEach:!1,describe:!1,expect:!1,fdescribe:!1,fit:!1,it:!1,jest:!1,pit:!1,require:!1,test:!1,xdescribe:!1,xit:!1,xtest:!1},XO={asyncTest:!1,deepEqual:!1,equal:!1,expect:!1,module:!1,notDeepEqual:!1,notEqual:!1,notOk:!1,notPropEqual:!1,notStrictEqual:!1,ok:!1,propEqual:!1,QUnit:!1,raises:!1,start:!1,stop:!1,strictEqual:!1,test:!1,throws:!1},zO={console:!0,exports:!0,phantom:!0,require:!0,WebPage:!0},JO={emit:!1,exports:!1,getRow:!1,log:!1,module:!1,provides:!1,require:!1,respond:!1,send:!1,start:!1,sum:!1},YO={defineClass:!1,deserialize:!1,gc:!1,help:!1,importClass:!1,importPackage:!1,java:!1,load:!1,loadClass:!1,Packages:!1,print:!1,quit:!1,readFile:!1,readUrl:!1,runCommand:!1,seal:!1,serialize:!1,spawn:!1,sync:!1,toint32:!1,version:!1},$O={__DIR__:!1,__FILE__:!1,__LINE__:!1,com:!1,edu:!1,exit:!1,java:!1,Java:!1,javafx:!1,JavaImporter:!1,javax:!1,JSAdapter:!1,load:!1,loadWithNewGlobal:!1,org:!1,Packages:!1,print:!1,quit:!1},QO={ActiveXObject:!0,Enumerator:!0,GetObject:!0,ScriptEngine:!0,ScriptEngineBuildVersion:!0,ScriptEngineMajorVersion:!0,ScriptEngineMinorVersion:!0,VBArray:!0,WScript:!0,WSH:!0,XDomainRequest:!0},ZO={$:!1,jQuery:!1},eB={YAHOO:!1,YAHOO_config:!1,YUI:!1,YUI_config:!1},tB={cat:!1,cd:!1,chmod:!1,config:!1,cp:!1,dirs:!1,echo:!1,env:!1,error:!1,exec:!1,exit:!1,find:!1,grep:!1,ln:!1,ls:!1,mkdir:!1,mv:!1,popd:!1,pushd:!1,pwd:!1,rm:!1,sed:!1,set:!1,target:!1,tempdir:!1,test:!1,touch:!1,which:!1},nB={$:!1,$$:!1,$A:!1,$break:!1,$continue:!1,$F:!1,$H:!1,$R:!1,$w:!1,Abstract:!1,Ajax:!1,Autocompleter:!1,Builder:!1,Class:!1,Control:!1,Draggable:!1,Draggables:!1,Droppables:!1,Effect:!1,Element:!1,Enumerable:!1,Event:!1,Field:!1,Form:!1,Hash:!1,Insertion:!1,ObjectRange:!1,PeriodicalExecuter:!1,Position:!1,Prototype:!1,Scriptaculous:!1,Selector:!1,Sortable:!1,SortableObserver:!1,Sound:!1,Template:!1,Toggle:!1,Try:!1},rB={_:!1,$:!1,Accounts:!1,AccountsClient:!1,AccountsCommon:!1,AccountsServer:!1,App:!1,Assets:!1,Blaze:!1,check:!1,Cordova:!1,DDP:!1,DDPRateLimiter:!1,DDPServer:!1,Deps:!1,EJSON:!1,Email:!1,HTTP:!1,Log:!1,Match:!1,Meteor:!1,Mongo:!1,MongoInternals:!1,Npm:!1,Package:!1,Plugin:!1,process:!1,Random:!1,ReactiveDict:!1,ReactiveVar:!1,Router:!1,ServiceConfiguration:!1,Session:!1,share:!1,Spacebars:!1,Template:!1,Tinytest:!1,Tracker:!1,UI:!1,Utils:!1,WebApp:!1,WebAppInternals:!1},iB={_isWindows:!1,_rand:!1,BulkWriteResult:!1,cat:!1,cd:!1,connect:!1,db:!1,getHostName:!1,getMemInfo:!1,hostname:!1,ISODate:!1,listFiles:!1,load:!1,ls:!1,md5sumFile:!1,mkdir:!1,Mongo:!1,NumberInt:!1,NumberLong:!1,ObjectId:!1,PlanCache:!1,print:!1,printjson:!1,pwd:!1,quit:!1,removeFile:!1,rs:!1,sh:!1,UUID:!1,version:!1,WriteResult:!1},aB={$:!1,Application:!1,Automation:!1,console:!1,delay:!1,Library:!1,ObjC:!1,ObjectSpecifier:!1,Path:!1,Progress:!1,Ref:!1},oB={addEventListener:!1,applicationCache:!1,atob:!1,Blob:!1,BroadcastChannel:!1,btoa:!1,Cache:!1,caches:!1,CacheStorage:!1,clearInterval:!1,clearTimeout:!1,Client:!1,clients:!1,Clients:!1,close:!0,console:!1,ExtendableEvent:!1,ExtendableMessageEvent:!1,fetch:!1,FetchEvent:!1,FileReaderSync:!1,FormData:!1,Headers:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,ImageData:!1,importScripts:!1,indexedDB:!1,location:!1,MessageChannel:!1,MessagePort:!1,name:!1,navigator:!1,Notification:!1,onclose:!0,onconnect:!0,onerror:!0,onfetch:!0,oninstall:!0,onlanguagechange:!0,onmessage:!0,onmessageerror:!0,onnotificationclick:!0,onnotificationclose:!0,onoffline:!0,ononline:!0,onpush:!0,onpushsubscriptionchange:!0,onrejectionhandled:!0,onsync:!0,onunhandledrejection:!0,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,postMessage:!0,Promise:!1,queueMicrotask:!1,registration:!1,removeEventListener:!1,Request:!1,Response:!1,self:!1,ServiceWorker:!1,ServiceWorkerContainer:!1,ServiceWorkerGlobalScope:!1,ServiceWorkerMessageEvent:!1,ServiceWorkerRegistration:!1,setInterval:!1,setTimeout:!1,skipWaiting:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1,WebSocket:!1,WindowClient:!1,Worker:!1,WorkerGlobalScope:!1,XMLHttpRequest:!1},sB={advanceClock:!1,fakeClearInterval:!1,fakeClearTimeout:!1,fakeSetInterval:!1,fakeSetTimeout:!1,resetTimeouts:!1,waitsForPromise:!1},uB={andThen:!1,click:!1,currentPath:!1,currentRouteName:!1,currentURL:!1,fillIn:!1,find:!1,findAll:!1,findWithAssert:!1,keyEvent:!1,pauseTest:!1,resumeTest:!1,triggerEvent:!1,visit:!1,wait:!1},lB={$:!1,$$:!1,browser:!1,by:!1,By:!1,DartObject:!1,element:!1,protractor:!1},cB={browser:!1,chrome:!1,opr:!1},pB={cloneInto:!1,createObjectIn:!1,exportFunction:!1,GM:!1,GM_addStyle:!1,GM_deleteValue:!1,GM_getResourceText:!1,GM_getResourceURL:!1,GM_getValue:!1,GM_info:!1,GM_listValues:!1,GM_log:!1,GM_openInTab:!1,GM_registerMenuCommand:!1,GM_setClipboard:!1,GM_setValue:!1,GM_xmlhttpRequest:!1,unsafeWindow:!1},hB={$:!1,$_:!1,$$:!1,$0:!1,$1:!1,$2:!1,$3:!1,$4:!1,$x:!1,chrome:!1,clear:!1,copy:!1,debug:!1,dir:!1,dirxml:!1,getEventListeners:!1,inspect:!1,keys:!1,monitor:!1,monitorEvents:!1,profile:!1,profileEnd:!1,queryObjects:!1,table:!1,undebug:!1,unmonitor:!1,unmonitorEvents:!1,values:!1},fB={builtin:NO,es5:MO,es2015:RO,es2017:LO,browser:jO,worker:UO,node:VO,commonjs:WO,amd:GO,mocha:HO,jasmine:qO,jest:KO,qunit:XO,phantomjs:zO,couch:JO,rhino:YO,nashorn:$O,wsh:QO,jquery:ZO,yui:eB,shelljs:tB,prototypejs:nB,meteor:rB,mongo:iB,applescript:aB,serviceworker:oB,atomtest:sB,embertest:uB,protractor:lB,"shared-node-browser":{clearInterval:!1,clearTimeout:!1,console:!1,setInterval:!1,setTimeout:!1,URL:!1,URLSearchParams:!1},webextensions:cB,greasemonkey:pB,devtools:hB},dB=Wt(Object.freeze({__proto__:null,builtin:NO,es5:MO,es2015:RO,es2017:LO,browser:jO,worker:UO,node:VO,commonjs:WO,amd:GO,mocha:HO,jasmine:qO,jest:KO,qunit:XO,phantomjs:zO,couch:JO,rhino:YO,nashorn:$O,wsh:QO,jquery:ZO,yui:eB,shelljs:tB,prototypejs:nB,meteor:rB,mongo:iB,applescript:aB,serviceworker:oB,atomtest:sB,embertest:uB,protractor:lB,webextensions:cB,greasemonkey:pB,devtools:hB,default:fB})),mB=Object.prototype.hasOwnProperty;var yB=function(e,t){return null!=e&&mB.call(e,t)};var vB=function(e,t){return null!=e&&sP(e,t,yB)};function gB(e,t,n,r,i){var a,o,s=Xh(t),u={};if(vB(e,s)&&(u=e[s]),e[s]=u,u._inherits=u._inherits||[],u._inherits.push(t),u._key=t.key,t.computed&&(u._computed=!0),t.decorators){var l=u.decorators=u.decorators||jo([]);l.elements=l.elements.concat(t.decorators.map((function(e){return e.expression})).reverse())}if(u.value||u.initializer)throw r.buildCodeFrameError(t,"Key conflict with sibling node");(M(t)||N(t)||se(t))&&(a=Uh(t,t.key)),ft(t)?o=t.value:(N(t)||se(t))&&((o=as(null,t.params,t.body,t.generator,t.async)).returnType=t.returnType);var c=function(e){return!se(e)&&!N(e)||"get"!==e.kind&&"set"!==e.kind?"value":e.kind}(t);return n&&"value"===c||(n=c),i&&C(a)&&("value"===n||"initializer"===n)&&D(o)&&(o=sD({id:a,node:o,scope:i})),o&&(Hp(o,t),u[n]=o),u}function bB(e){for(var t=jo([]),n=0;n<e.properties.length;n++){var r=e.properties[n],i=r.value;i.properties.unshift(Es(os("key"),Uh(r))),t.elements.push(i)}return t}function EB(e){var t=gs([]);return Object.keys(e).forEach((function(n){var r=e[n],i=gs([]),a=Es(r._key,i,r._computed);Object.keys(r).forEach((function(e){var t=r[e];if("_"!==e[0]){var n=Es(os(e),t);Hp(n,t),qp(t),i.properties.push(n)}})),t.properties.push(a)})),t}function AB(e){return Object.keys(e).forEach((function(t){var n=e[t];n.value&&(n.writable=hs(!0)),n.configurable=hs(!0),n.enumerable=hs(!0)})),EB(e)}function DB(){var e=a(["\n        (function () {\n          super(...arguments);\n        })\n      "]);return DB=function(){return e},e}function SB(e,t,n){var r=is(gp(e),[],t);return pf(r,n),r}function xB(e,t,n,r){var i={parent:void 0,scope:void 0,node:void 0,path:void 0,file:void 0,classId:void 0,classRef:void 0,superName:void 0,superReturns:[],isDerived:!1,extendsNative:!1,construct:void 0,constructorBody:void 0,userConstructor:void 0,userConstructorPath:void 0,hasConstructor:!1,instancePropBody:[],instancePropRefs:{},staticPropBody:[],body:[],superThises:[],pushedConstructor:!1,pushedInherits:!1,protoAlias:null,isLoose:!1,hasInstanceDescriptors:!1,hasStaticDescriptors:!1,instanceMutatorMap:{},staticMutatorMap:{}},a=function(e){Object.assign(i,e)},o=JD.visitors.merge([XF,{ThisExpression:function(e){i.superThises.push(e)}}]);function s(){if(function(){var e=!1,t=i.path.get("body.body"),n=Array.isArray(t),r=0;for(t=n?t:t[Symbol.iterator]();;){var a;if(n){if(r>=t.length)break;a=t[r++]}else{if((r=t.next()).done)break;a=r.value}if(e=a.equals("kind","constructor"))break}if(!e){var o,s;if(i.isDerived){var u=nD.expression.ast(DB());o=u.params,s=u.body}else o=[],s=qo([]);i.path.get("body").unshiftContainer("body",Qs("constructor",os("constructor"),o,s))}}(),function(){var e=i.path.get("body.body"),t=Array.isArray(e),n=0;for(e=t?e:e[Symbol.iterator]();;){var r;if(t){if(n>=e.length)break;r=e[n++]}else{if((n=e.next()).done)break;r=n.value}var a=r,o=a.node;if(a.isClassProperty())throw a.buildCodeFrameError("Missing class properties transform.");if(o.decorators)throw a.buildCodeFrameError("Method has decorators, put the decorator plugin before the classes one.");se(o)&&function(){var e="constructor"===o.kind;new $F({methodPath:a,objectRef:i.classRef,superRef:i.superName,isLoose:i.isLoose,file:i.file}).replace();var t=[];a.traverse(JD.visitors.merge([XF,{ReturnStatement:function(e){e.getFunctionParent().isArrowFunctionExpression()||t.push(e)}}])),e?p(t,o,a):c(o,a)}()}}(),function(){if(!i.isDerived)return;var e=i.userConstructorPath,t=e.get("body");e.traverse(o);var n=function(){var t=e.scope.generateDeclaredUidIdentifier("this");return n=function(){return gp(t)},t},r=i.superThises,a=Array.isArray(r),s=0;for(r=a?r:r[Symbol.iterator]();;){var u;if(a){if(s>=r.length)break;u=r[s++]}else{if((s=r.next()).done)break;u=s.value}var c=u,p=c.node;c.parentPath.isMemberExpression({object:p})?c.replaceWith(n()):c.replaceWith(Xo(i.file.addHelper("assertThisInitialized"),[n()]))}var h=new Set;e.traverse(JD.visitors.merge([XF,{Super:function(e){var t=e.node,n=e.parentPath;n.isCallExpression({callee:t})&&h.add(n)}}]));var f,d=!!h.size,m=h,y=Array.isArray(m),v=0;for(m=y?m:m[Symbol.iterator]();;){var g;if(y){if(v>=m.length)break;g=m[v++]}else{if((v=m.next()).done)break;g=v.value}var b=g;l(b,i.superName,n,t),d&&b.find((function(t){return t===e||(t.isLoop()||t.isConditional()||t.isArrowFunctionExpression()?(d=!1,!0):void 0)}))}f=i.isLoose?function(e){var t=Xo(i.file.addHelper("assertThisInitialized"),[n()]);return e?ds("||",e,t):t}:function(e){return Xo(i.file.addHelper("possibleConstructorReturn"),[n()].concat(e||[]))};var E=t.get("body");E.length&&E.pop().isReturnStatement()||t.pushContainer("body",Ds(d?n():f()));var A=i.superReturns,D=Array.isArray(A),S=0;for(A=D?A:A[Symbol.iterator]();;){var x;if(D){if(S>=A.length)break;x=A[S++]}else{if((S=A.next()).done)break;x=S.value}var T=x;T.get("argument").replaceWith(f(T.node.argument))}}(),i.userConstructor){var e=i.constructorBody,t=i.userConstructor,n=i.construct;e.body=e.body.concat(t.body.body),pf(n,t),pf(e,t.body)}u()}function u(){h();var e,t,n=i.body;if(i.hasInstanceDescriptors&&(e=EB(i.instanceMutatorMap)),i.hasStaticDescriptors&&(t=EB(i.staticMutatorMap)),e||t){e&&(e=bB(e)),t&&(t=bB(t));var r=[gp(i.classRef),ps(),ps()];e&&(r[1]=e),t&&(r[2]=t);for(var o=0,s=0;s<r.length;s++)P(r[s])||(o=s);r=r.slice(0,o+1),n.push(es(Xo(i.file.addHelper("createClass"),r)))}a({hasInstanceDescriptors:!1,hasStaticDescriptors:!1,instanceMutatorMap:{},staticMutatorMap:{}})}function l(e,t,n,r){var a,o=e.node;i.isLoose?(o.arguments.unshift(ws()),2===o.arguments.length&&le(o.arguments[1])&&S(o.arguments[1].argument,{name:"arguments"})?(o.arguments[1]=o.arguments[1].argument,o.callee=ms(gp(t),os("apply"))):o.callee=ms(gp(t),os("call")),a=ds("||",o,ws())):(o=qF(Xo(i.file.addHelper("getPrototypeOf"),[gp(i.classRef)]),ws(),o.arguments),a=Xo(i.file.addHelper("possibleConstructorReturn"),[ws(),o])),e.parentPath.isExpressionStatement()&&e.parentPath.container===r.node.body&&r.node.body.length-1===e.parentPath.key?(i.superThises.length&&(a=Uo("=",n(),a)),e.parentPath.replaceWith(Ds(a))):e.replaceWith(Uo("=",n(),a))}function c(e,t){var n=t?t.scope:i.scope;"method"===e.kind&&function(e,t){if(i.isLoose&&!e.decorators){var n=i.classRef;e.static||(!function(){if(null===i.protoAlias){a({protoAlias:i.scope.generateUidIdentifier("proto")});var e=ms(i.classRef,os("prototype")),t=Is("var",[Os(i.protoAlias,e)]);i.body.push(t)}}(),n=i.protoAlias);var r=ms(gp(n),e.key,e.computed||ht(e.key)),o=as(null,e.params,e.body,e.generator,e.async);pf(o,e);var s=Uh(e,e.key);C(s)&&(o=sD({node:o,id:s,scope:t}));var u=es(Uo("=",r,o));return Hp(u,e),i.body.push(u),!0}return!1}(e,n)||function(e,t,n,r){var o;void 0===n&&(n="value"),e.static?(a({hasStaticDescriptors:!0}),o=i.staticMutatorMap):(a({hasInstanceDescriptors:!0}),o=i.instanceMutatorMap);var s=gB(o,e,n,i.file,r);t&&(s.enumerable=hs(!0))}(e,!1,null,n)}function p(e,t,n){n.scope.hasOwnBinding(i.classRef.name)&&n.scope.rename(i.classRef.name),a({userConstructorPath:n,userConstructor:t,hasConstructor:!0,superReturns:e});var r=i.construct;Hp(r,t),r.params=t.params,pf(r.body,t.body),r.body.directives=t.body.directives,function(){if(i.pushedConstructor)return;i.pushedConstructor=!0,(i.hasInstanceDescriptors||i.hasStaticDescriptors)&&u();i.body.push(i.construct),h()}()}function h(){i.isDerived&&!i.pushedInherits&&(a({pushedInherits:!0}),i.body.unshift(es(Xo(i.file.addHelper(i.isLoose?"inheritsLoose":"inherits"),[gp(i.classRef),gp(i.superName)]))))}return function(e,t,n,r){a({parent:e.parent,scope:e.scope,node:e.node,path:e,file:t,isLoose:r}),a({classId:i.node.id,classRef:i.node.id?os(i.node.id.name):i.scope.generateUidIdentifier("class"),superName:i.node.superClass,isDerived:!!i.node.superClass,constructorBody:qo([])}),a({extendsNative:i.isDerived&&n.has(i.superName.name)&&!i.scope.hasBinding(i.superName.name,!0)});var o=i.classRef,u=i.node,l=i.constructorBody;a({construct:SB(o,l,u)});var c=i.body,p=function(){var e=i.superName,t=[],n=[];if(i.isDerived){var r=i.extendsNative?Xo(i.file.addHelper("wrapNativeSuper"),[gp(e)]):gp(e),o=i.scope.generateUidIdentifierBasedOnNode(e);t.push(o),n.push(r),a({superName:gp(o)})}return{closureParams:t,closureArgs:n}}(),h=p.closureParams,f=p.closureArgs;s(),i.isLoose||l.body.unshift(es(Xo(i.file.addHelper("classCallCheck"),[ws(),gp(i.classRef)]))),c=c.concat(i.staticPropBody.map((function(e){return e(gp(i.classRef))})));var d=e.isInStrictMode(),m=i.classId&&1===c.length;if(m&&!d){var y=i.construct.params,v=Array.isArray(y),g=0;for(y=v?y:y[Symbol.iterator]();;){var b;if(v){if(g>=y.length)break;b=y[g++]}else{if((g=y.next()).done)break;b=g.value}if(!S(b)){m=!1;break}}}var E=m?c[0].body.directives:[];return d||E.push(Go(Ho("use strict"))),m?Vh(c[0]):(c.push(Ds(gp(i.classRef))),Xo(Ls(h,qo(c,E)),f))}(e,t,n,r)}var TB=function(e){return Object.keys(dB[e]).filter((function(e){return/^[A-Z]/.test(e)}))},CB=new Set([].concat(TB("builtin"),TB("browser"))),wB=cF((function(e,t){e.assertVersion(7);var n=t.loose,r=Symbol();return{name:"transform-classes",visitor:{ExportDefaultDeclaration:function(e){e.get("declaration").isClassDeclaration()&&zd(e)},ClassDeclaration:function(e){var t=e.node,n=t.id||e.scope.generateUidIdentifier("class");e.replaceWith(Is("let",[Os(n,Vh(t))]))},ClassExpression:function(e,t){var i=e.node;if(!i[r]){var a=sD(e);a&&a!==i?e.replaceWith(a):(i[r]=!0,e.replaceWith(xB(e,t.file,CB,n)),e.isCallExpression()&&(RF(e),e.get("callee").isArrowFunctionExpression()&&e.get("callee").arrowFunctionToExpression()))}}}}})),PB=cF((function(e,t){e.assertVersion(7);var n=t.loose?function(e){var t=e.computedProps,n=Array.isArray(t),r=0;for(t=n?t:t[Symbol.iterator]();;){var i;if(n){if(r>=t.length)break;i=t[r++]}else{if((r=t.next()).done)break;i=r.value}var s=i;"get"===s.kind||"set"===s.kind?o(e,s):a(gp(e.objId),s,e.body)}}:function(e){var t=e.objId,n=e.body,r=e.computedProps,s=e.state,u=r,l=Array.isArray(u),c=0;for(u=l?u:u[Symbol.iterator]();;){var p;if(l){if(c>=u.length)break;p=u[c++]}else{if((c=u.next()).done)break;p=c.value}var h=p,f=Uh(h);if("get"===h.kind||"set"===h.kind)o(e,h);else if(C(f,{value:"__proto__"}))a(t,h,n);else{if(1===r.length)return Xo(s.addHelper("defineProperty"),[e.initPropExpression,f,i(h)]);n.push(es(Xo(s.addHelper("defineProperty"),[gp(t),f,i(h)])))}}},r=nD("\n    MUTATOR_MAP_REF[KEY] = MUTATOR_MAP_REF[KEY] || {};\n    MUTATOR_MAP_REF[KEY].KIND = VALUE;\n  ");function i(e){return M(e)?e.value:N(e)?as(null,e.params,e.body,e.generator,e.async):void 0}function a(e,t,n){"get"===t.kind&&"set"===t.kind?o(e,t):n.push(es(Uo("=",ms(gp(e),t.key,t.computed||ht(t.key)),i(t))))}function o(e,t){var n=e.body,a=e.getMutatorId,o=e.scope,s=!t.computed&&S(t.key)?ls(t.key.name):t.key,u=o.maybeGenerateMemoised(s);u&&(n.push(es(Uo("=",u,s))),s=u),n.push.apply(n,r({MUTATOR_MAP_REF:a(),KEY:gp(s),VALUE:i(t),KIND:os(t.kind)}))}return{name:"transform-computed-properties",visitor:{ObjectExpression:{exit:function(e,t){for(var r=e.node,i=e.parent,a=e.scope,o=!1,s=0,u=r.properties;s<u.length;s++){if(o=!0===u[s].computed)break}if(o){var l=[],c=[],p=!1,h=r.properties,f=Array.isArray(h),d=0;for(h=f?h:h[Symbol.iterator]();;){var m;if(f){if(d>=h.length)break;m=h[d++]}else{if((d=h.next()).done)break;m=d.value}var y=m;y.computed&&(p=!0),p?c.push(y):l.push(y)}var v,g=a.generateUidIdentifierBasedOnNode(i),b=gs(l),E=[];E.push(Is("var",[Os(g,b)]));var A=n({scope:a,objId:g,body:E,computedProps:c,initPropExpression:b,getMutatorId:function(){return v||(v=a.generateUidIdentifier("mutatorMap"),E.push(Is("var",[Os(v,gs([]))]))),gp(v)},state:t});v&&E.push(es(Xo(t.addHelper("defineEnumerableProperties"),[gp(g),gp(v)]))),A?e.replaceWith(A):(E.push(es(gp(g))),e.replaceWithMultiple(E))}}}}}})),FB=cF((function(e,t){e.assertVersion(7);var n=t.loose,r=void 0!==n&&n,i=t.useBuiltIns,a=void 0!==i&&i;if("boolean"!=typeof r)throw new Error(".loose must be a boolean or undefined");var o=r;function u(e){for(var t=0,n=e.declarations;t<n.length;t++){if(mt(n[t].id))return!0}return!1}function l(e){for(var t=0,n=e.elements;t<n.length;t++){if(R(n[t]))return!0}return!1}var c={},p=function(e,t,n){if(t.length&&S(e)&&vf(e,t[t.length-1])&&n.bindings[e.name])throw n.deopt=!0,c},f=function(){function e(e){this.blockHoist=e.blockHoist,this.operator=e.operator,this.arrays={},this.nodes=e.nodes||[],this.scope=e.scope,this.kind=e.kind,this.arrayOnlySpread=e.arrayOnlySpread,this.addHelper=e.addHelper}var t=e.prototype;return t.buildVariableAssignment=function(e,t){var n,r=this.operator;return _(e)&&(r="="),(n=r?es(Uo(r,e,gp(t)||this.scope.buildUndefinedNode())):Is(this.kind,[Os(e,gp(t))]))._blockHoist=this.blockHoist,n},t.buildVariableDeclaration=function(e,t){var n=Is("var",[Os(gp(e),gp(t))]);return n._blockHoist=this.blockHoist,n},t.push=function(e,t){var n=gp(t);ue(e)?this.pushObjectPattern(e,n):z(e)?this.pushArrayPattern(e,n):X(e)?this.pushAssignmentPattern(e,n):this.nodes.push(this.buildVariableAssignment(e,n))},t.toArray=function(e,t){return this.arrayOnlySpread||S(e)&&this.arrays[e.name]?e:this.scope.toArray(e,t)},t.pushAssignmentPattern=function(e,t){var n=e.left,r=e.right,i=this.scope.generateUidIdentifierBasedOnNode(t);this.nodes.push(this.buildVariableDeclaration(i,t));var a,o,s=Jo(Vo("===",gp(i),this.scope.buildUndefinedNode()),r,gp(i));mt(n)?("const"===this.kind?(a=this.scope.generateUidIdentifier(i.name),o=this.buildVariableDeclaration(a,s)):(a=i,o=es(Uo("=",gp(i),s))),this.nodes.push(o),this.push(n,a)):this.nodes.push(this.buildVariableAssignment(n,s))},t.pushObjectRest=function(e,t,n,i){for(var o,s,u=[],l=!0,c=0;c<e.properties.length;c++){var p=e.properties[c];if(c>=i)break;if(!R(p)){var h=p.key;S(h)&&!p.computed?u.push(ls(h.name)):he(p.key)?u.push(gp(p.key)):ht(h)?u.push(ls(String(h.value))):(u.push(gp(h)),l=!1)}}if(0===u.length)o=Xo((s=this,a?ms(os("Object"),os("assign")):s.addHelper("extends")),[gs([]),gp(t)]);else{var f=jo(u);l||(f=Xo(ms(f,os("map")),[this.addHelper("toPropertyKey")])),o=Xo(this.addHelper("objectWithoutProperties"+(r?"Loose":"")),[gp(t),f])}this.nodes.push(this.buildVariableAssignment(n.argument,o))},t.pushObjectProperty=function(e,t){ht(e.key)&&(e.computed=!0);var n=e.value,r=ms(gp(t),e.key,e.computed);mt(n)?this.push(n,r):this.nodes.push(this.buildVariableAssignment(n,r))},t.pushObjectPattern=function(e,t){if(e.properties.length||this.nodes.push(es(Xo(this.addHelper("objectDestructuringEmpty"),[t]))),e.properties.length>1&&!this.scope.isStatic(t)){var n=this.scope.generateUidIdentifierBasedOnNode(t);this.nodes.push(this.buildVariableDeclaration(n,t)),t=n}if(function(e){for(var t=0,n=e.properties;t<n.length;t++){if(R(n[t]))return!0}return!1}(e))for(var r,i=0;i<e.properties.length;i++){var a=e.properties[i];if(R(a))break;var o=a.key;if(a.computed&&!this.scope.isPure(o)){var s=this.scope.generateUidIdentifierBasedOnNode(o);this.nodes.push(this.buildVariableDeclaration(s,o)),r||(r=e=Object.assign({},e,{properties:e.properties.slice()})),r.properties[i]=Object.assign({},r.properties[i],{key:s})}}for(var u=0;u<e.properties.length;u++){var l=e.properties[u];R(l)?this.pushObjectRest(e,t,l,u):this.pushObjectProperty(l,t)}},t.canUnpackArrayPattern=function(e,t){if(!s(t))return!1;if(!(e.elements.length>t.elements.length)){if(e.elements.length<t.elements.length&&!l(e))return!1;for(var n=0,r=e.elements;n<r.length;n++){var i=r[n];if(!i)return!1;if(_(i))return!1}for(var a=0,o=t.elements;a<o.length;a++){var u=o[a];if(le(u))return!1;if(h(u))return!1;if(_(u))return!1}var f={deopt:!1,bindings:zh(e)};try{ff(t,p,f)}catch(e){if(e!==c)throw e}return!f.deopt}},t.pushUnpackedArrayPattern=function(e,t){for(var n=0;n<e.elements.length;n++){var r=e.elements[n];R(r)?this.push(r.argument,jo(t.elements.slice(n))):this.push(r,t.elements[n])}},t.pushArrayPattern=function(e,t){if(e.elements){if(this.canUnpackArrayPattern(e,t))return this.pushUnpackedArrayPattern(e,t);var n=!l(e)&&e.elements.length,r=this.toArray(t,n);S(r)?t=r:(t=this.scope.generateUidIdentifierBasedOnNode(t),this.arrays[t.name]=!0,this.nodes.push(this.buildVariableDeclaration(t,r)));for(var i=0;i<e.elements.length;i++){var a=e.elements[i];if(a){var o=void 0;R(a)?(o=Xo(ms(o=this.toArray(t),os("slice")),[cs(i)]),a=a.argument):o=ms(t,cs(i),!0),this.push(a,o)}}}},t.init=function(e,t){if(!s(t)&&!_(t)){var n=this.scope.maybeGenerateMemoised(t,!0);n&&(this.nodes.push(this.buildVariableDeclaration(n,gp(t))),t=n)}return this.push(e,t),this.nodes},e}();return{name:"transform-destructuring",visitor:{ExportNamedDeclaration:function(e){var t=e.get("declaration");if(t.isVariableDeclaration()&&u(t.node)){for(var n=[],r=0,i=Object.keys(e.getOuterBindingIdentifiers(e));r<i.length;r++){var a=i[r];n.push(qs(os(a),os(a)))}e.replaceWith(t.node),e.insertAfter(Hs(null,n))}},ForXStatement:function(e){var t=this,n=e.node,r=e.scope,i=n.left;if(mt(i)){var a=r.generateUidIdentifier("ref");return n.left=Is("var",[Os(a)]),e.ensureBlock(),0===n.body.body.length&&e.isCompletionRecord()&&n.body.body.unshift(es(r.buildUndefinedNode())),void n.body.body.unshift(es(Uo("=",i,a)))}if(H(i)){var s=i.declarations[0].id;if(mt(s)){var u=r.generateUidIdentifier("ref");n.left=Is(i.kind,[Os(u,null)]);var l=[];new f({kind:i.kind,scope:r,nodes:l,arrayOnlySpread:o,addHelper:function(e){return t.addHelper(e)}}).init(s,u),e.ensureBlock();var c=n.body;c.body=l.concat(c.body)}}},CatchClause:function(e){var t=this,n=e.node,r=e.scope,i=n.param;if(mt(i)){var a=r.generateUidIdentifier("ref");n.param=a;var s=[];new f({kind:"let",scope:r,nodes:s,arrayOnlySpread:o,addHelper:function(e){return t.addHelper(e)}}).init(i,a),n.body.body=s.concat(n.body.body)}},AssignmentExpression:function(e){var t=this,n=e.node,r=e.scope;if(mt(n.left)){var i,a=[],u=new f({operator:n.operator,scope:r,nodes:a,arrayOnlySpread:o,addHelper:function(e){return t.addHelper(e)}});!e.isCompletionRecord()&&e.parentPath.isExpressionStatement()||(i=r.generateUidIdentifierBasedOnNode(n.right,"ref"),a.push(Is("var",[Os(i,n.right)])),s(n.right)&&(u.arrays[i.name]=!0)),u.init(n.left,i||n.right),i&&(e.parentPath.isArrowFunctionExpression()?(e.replaceWith(qo([])),a.push(Ds(gp(i)))):a.push(es(gp(i)))),e.replaceWithMultiple(a)}},VariableDeclaration:function(e){var t=this,n=e.node,r=e.scope,i=e.parent;if(!ut(i)&&i&&e.container&&u(n)){for(var a,s=n.kind,l=[],c=0;c<n.declarations.length;c++){var p=(a=n.declarations[c]).init,h=a.id,d=new f({blockHoist:n._blockHoist,nodes:l,scope:r,kind:n.kind,arrayOnlySpread:o,addHelper:function(e){return t.addHelper(e)}});mt(h)?(d.init(h,p),+c!=n.declarations.length-1&&pf(l[l.length-1],a)):l.push(pf(d.buildVariableAssignment(a.id,gp(a.init)),a))}for(var m=null,y=[],v=0,g=l;v<g.length;v++){var b,E=g[v];if(null!==m&&H(E))(b=m.declarations).push.apply(b,E.declarations);else E.kind=s,y.push(E),m=H(E)?E:null}for(var A=0,D=y;A<D.length;A++){var S=D[A];if(S.declarations){var x=S.declarations,T=Array.isArray(x),C=0;for(x=T?x:x[Symbol.iterator]();;){var w;if(T){if(C>=x.length)break;w=x[C++]}else{if((C=x.next()).done)break;w=C.value}var P=w.id.name;r.bindings[P]&&(r.bindings[P].kind=S.kind)}}}1===y.length?e.replaceWith(y[0]):e.replaceWithMultiple(y)}}}}})),kB=cF((function(e){return e.assertVersion(7),EI({name:"transform-dotall-regex",feature:"dotAllFlag"})}));var _B=cF((function(e){return e.assertVersion(7),{name:"transform-duplicate-keys",visitor:{ObjectExpression:function(e){var t,n=e.node.properties.filter((function(e){return!le(e)&&!e.computed})),r=Object.create(null),i=Object.create(null),a=Object.create(null),o=n,s=Array.isArray(o),u=0;for(o=s?o:o[Symbol.iterator]();;){var l;if(s){if(u>=o.length)break;l=o[u++]}else{if((u=o.next()).done)break;l=u.value}var c=l,p=S(t=c.key)?t.name:t.value.toString(),h=!1;switch(c.kind){case"get":(r[p]||i[p])&&(h=!0),i[p]=!0;break;case"set":(r[p]||a[p])&&(h=!0),a[p]=!0;break;default:(r[p]||i[p]||a[p])&&(h=!0),r[p]=!0}h&&(c.computed=!0,c.key=ls(p))}}}}}));function IB(e,t,n,r,i){var a,o,s;if(a=S(e)&&i?e:function(e,t,n,r){var i;if(ce(e))return e;if(S(e)){if(r.hasBinding(e.name))return e;i=e}else{if(!_(e))throw new Error("We can't explode this node type "+e.type);if(ce(i=e.object)||S(i)&&r.hasBinding(i.name))return i}var a=r.generateUidIdentifierBasedOnNode(i);return r.push({id:a}),t.push(Uo("=",gp(a),gp(i))),a}(e,t,0,r),S(e))o=gp(e),s=a;else{var u=function(e,t,n,r){var i=e.property,a=Uh(e,i);if(ht(a)&&ct(a))return a;var o=r.generateUidIdentifierBasedOnNode(i);return r.push({id:o}),t.push(Uo("=",gp(o),gp(i))),o}(e,t,0,r),l=e.computed||ht(u);s=ms(gp(a),gp(u),l),o=ms(gp(a),gp(u),l)}return{uid:s,ref:o}}function OB(e){var t=e.build,n=e.operator;return{AssignmentExpression:function(e){var r=e.node,i=e.scope;if(r.operator===n+"="){var a=[],o=IB(r.left,a,0,i);a.push(Uo("=",o.ref,t(o.uid,r.right))),e.replaceWith(Ss(a))}},BinaryExpression:function(e){var r=e.node;r.operator===n&&e.replaceWith(t(r.left,r.right))}}}var BB=cF((function(e){return e.assertVersion(7),{name:"transform-exponentiation-operator",visitor:OB({operator:"**",build:function(e,t){return Xo(ms(os("Math"),os("pow")),[e,t])}})}})),NB=cF((function(e){function t(e){return"string"==typeof e?{type:"CommentBlock",value:e}:e}function n(e){var n=e.ofPath,r=e.toPath,a=e.where,o=void 0===a?"trailing":a,s=e.optional,u=void 0!==s&&s,l=e.comments,c=void 0===l?i(n,u):l,p=e.keepType,h=void 0!==p&&p;if(r&&r.node||(r=n.getPrevSibling(),o="trailing"),r.node||(r=n.getNextSibling(),o="leading"),r.node||(r=n.parentPath,o="inner"),Array.isArray(c)||(c=[c]),c=c.map(t),!h&&n&&n.node){var f=n.node,d=n.parentPath,m=n.getPrevSibling(),y=n.getNextSibling(),v=!(m.node||y.node),g=f.leadingComments,b=f.trailingComments;v&&g&&d.addComments("inner",g),r.addComments(o,c),n.remove(),v&&b&&d.addComments("inner",b)}else r.addComments(o,c)}function r(e){n({ofPath:e,comments:i(e,e.parent.optional)})}function i(e,t){var n=e.getSource().replace(/\*-\//g,"*-ESCAPED/").replace(/\*\//g,"*-/");return t&&(n="?"+n),":"!==n[0]&&(n=":: "+n),n}function a(e){return"type"===e||"typeof"===e}return e.assertVersion(7),{name:"transform-flow-comments",inherits:EF,visitor:{TypeCastExpression:function(e){var t=e.node;n({ofPath:e.get("typeAnnotation"),toPath:e.get("expression"),keepType:!0}),e.replaceWith(xs(t.expression))},Identifier:function(e){if(!e.parentPath.isFlow()){var t=e.node;t.typeAnnotation?(n({ofPath:e.get("typeAnnotation"),toPath:e,optional:t.optional||t.typeAnnotation.optional}),t.optional&&(t.optional=!1)):t.optional&&(n({toPath:e,comments:":: ?"}),t.optional=!1)}},AssignmentPattern:{exit:function(e){var t=e.node.left;t.optional&&(t.optional=!1)}},Function:function(e){if(!e.isDeclareFunction()){var t=e.node;t.typeParameters&&n({ofPath:e.get("typeParameters"),toPath:e.get("id"),optional:t.typeParameters.optional}),t.returnType&&n({ofPath:e.get("returnType"),toPath:e.get("body"),where:"leading",optional:t.returnType.typeAnnotation.optional})}},ClassProperty:function(e){var t=e.node;t.value?t.typeAnnotation&&n({ofPath:e.get("typeAnnotation"),toPath:e.get("key"),optional:t.typeAnnotation.optional}):r(e)},ExportNamedDeclaration:function(e){var t=e.node;("type"===t.exportKind||Et(t.declaration))&&r(e)},ImportDeclaration:function(e){var t=e.node;if(a(t.importKind))r(e);else{var i=t.specifiers.filter((function(e){return a(e.importKind)})),o=t.specifiers.filter((function(e){return!a(e.importKind)}));if(t.specifiers=o,i.length>0){var s=gp(t);s.specifiers=i;var u=":: "+rb(s).code;o.length>0?n({toPath:e,comments:u}):n({ofPath:e,comments:u})}}},ObjectPattern:function(e){var t=e.node;t.typeAnnotation&&n({ofPath:e.get("typeAnnotation"),toPath:e,optional:t.optional||t.typeAnnotation.optional})},Flow:function(e){r(e)},Class:function(e){var t=e.node,r=[];if(t.typeParameters){var a=e.get("typeParameters");r.push(i(a,t.typeParameters.optional));var o,s=t.typeParameters.trailingComments;if(s)(o=r).push.apply(o,s);a.remove()}if(t.superClass&&(r.length>0&&(n({toPath:e.get("id"),comments:r}),r=[]),t.superTypeParameters)){var u=e.get("superTypeParameters");r.push(i(u,u.node.optional)),u.remove()}if(t.implements){var l="implements "+e.get("implements").map((function(e){return i(e).replace(/^:: /,"")})).join(", ");delete t.implements,1===r.length?r[0]+=" "+l:r.push(":: "+l)}r.length>0&&n({toPath:e.get("body"),where:"leading",comments:r})}}}})),MB=cF((function(e){e.assertVersion(7);var t=/(@flow(\s+(strict(-local)?|weak))?|@noflow)/,n=!1;return{name:"transform-flow-strip-types",inherits:EF,visitor:{Program:function(e,r){var i=r.file.ast.comments,a=r.opts;n=!1;var o=!1;if(i)for(var s=0,u=i;s<u.length;s++){var l=u[s];t.test(l.value)&&(o=!0,l.value=l.value.replace(t,""),l.value.replace(/\*/g,"").trim()||(l.ignore=!0))}!o&&a.requireDirective&&(n=!0)},ImportDeclaration:function(e){if(!n&&e.node.specifiers.length){var t=0;e.node.specifiers.forEach((function(e){var n=e.importKind;"type"!==n&&"typeof"!==n||t++})),t===e.node.specifiers.length&&e.remove()}},Flow:function(e){if(n)throw e.buildCodeFrameError("A @flow directive is required when using Flow annotations with the `requireDirective` option.");e.remove()},ClassProperty:function(e){n||(e.node.variance=null,e.node.typeAnnotation=null,e.node.value||e.remove())},ClassPrivateProperty:function(e){n||(e.node.typeAnnotation=null)},Class:function(e){n||(e.node.implements=null,e.get("body.body").forEach((function(e){e.isClassProperty()&&(e.node.typeAnnotation=null,e.node.value||e.remove())})))},AssignmentPattern:function(e){var t=e.node;n||(t.left.optional=!1)},Function:function(e){var t=e.node;if(!n){for(var r=0;r<t.params.length;r++){var i=t.params[r];i.optional=!1,"AssignmentPattern"===i.type&&(i.left.optional=!1)}t.predicate=null}},TypeCastExpression:function(e){if(!n){var t=e.node;do{t=t.expression}while(Ce(t));e.replaceWith(t)}},CallExpression:function(e){var t=e.node;n||(t.typeArguments=null)},OptionalCallExpression:function(e){var t=e.node;n||(t.typeArguments=null)},NewExpression:function(e){var t=e.node;n||(t.typeArguments=null)}}}})),RB=cF((function(e,t){e.assertVersion(7);var n=t.loose,r=t.assumeArray;if(!0===n&&!0===r)throw new Error("The loose and assumeArray options cannot be used together in @babel/plugin-transform-for-of");if(r)return{name:"transform-for-of",visitor:{ForOfStatement:function(e){var t=e.scope,n=e.node,r=n.left,i=n.right,a=n.body,o=t.generateUidIdentifier("i"),s=t.maybeGenerateMemoised(i,!0),u=[Os(o,cs(0))];s?u.push(Os(s,i)):s=i;var l,c=ms(gp(s),gp(o),!0);H(r)?(l=r).declarations[0].init=c:l=es(Uo("=",r,c));var p=Mh(a);p.body.unshift(l),e.replaceWith(rs(Is("let",u),Vo("<",gp(o),ms(gp(s),os("length"))),_s("++",gp(o)),p))}}};var i=n?function(e,t){var n,r,i,a=e.node,s=e.scope,u=e.parent,l=a.left;if(S(l)||mt(l)||_(l))r=l,i=null;else{if(!H(l))throw t.buildCodeFrameError(l,"Unknown node type "+l.type+" in ForStatement");r=s.generateUidIdentifier("ref"),n=Is(l.kind,[Os(l.declarations[0].id,os(r.name))]),i=Is("var",[Os(os(r.name))])}var c,p=s.generateUidIdentifier("iterator"),h=s.generateUidIdentifier("isArray"),f=o({LOOP_OBJECT:p,IS_ARRAY:h,OBJECT:a.right,INDEX:s.generateUidIdentifier("i"),ID:r,INTERMEDIATE:i}),d=T(u);d&&(c=us(u.label,f));return{replaceParent:d,declar:n,node:c||f,loop:f}}:function(e,t){var n,r=e.node,i=e.scope,a=e.parent,o=r.left,u=i.generateUid("step"),l=ms(os(u),os("value"));if(S(o)||mt(o)||_(o))n=es(Uo("=",o,l));else{if(!H(o))throw t.buildCodeFrameError(o,"Unknown node type "+o.type+" in ForStatement");n=Is(o.kind,[Os(o.declarations[0].id,l)])}var c=s({ITERATOR_HAD_ERROR_KEY:i.generateUidIdentifier("didIteratorError"),ITERATOR_COMPLETION:i.generateUidIdentifier("iteratorNormalCompletion"),ITERATOR_ERROR_KEY:i.generateUidIdentifier("iteratorError"),ITERATOR_KEY:i.generateUidIdentifier("iterator"),STEP_KEY:os(u),OBJECT:r.right}),p=T(a),h=c[3].block.body,f=h[0];p&&(h[0]=us(a.label,f));return{replaceParent:p,declar:n,loop:f,node:c}},a=nD("\n    for (var KEY = 0, NAME = ARR; KEY < NAME.length; KEY++) BODY;\n  "),o=nD("\n    for (var LOOP_OBJECT = OBJECT,\n             IS_ARRAY = Array.isArray(LOOP_OBJECT),\n             INDEX = 0,\n             LOOP_OBJECT = IS_ARRAY ? LOOP_OBJECT : LOOP_OBJECT[Symbol.iterator]();;) {\n      INTERMEDIATE;\n      if (IS_ARRAY) {\n        if (INDEX >= LOOP_OBJECT.length) break;\n        ID = LOOP_OBJECT[INDEX++];\n      } else {\n        INDEX = LOOP_OBJECT.next();\n        if (INDEX.done) break;\n        ID = INDEX.value;\n      }\n    }\n  "),s=nD("\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY = undefined;\n    try {\n      for (\n        var ITERATOR_KEY = OBJECT[Symbol.iterator](), STEP_KEY;\n        !(ITERATOR_COMPLETION = (STEP_KEY = ITERATOR_KEY.next()).done);\n        ITERATOR_COMPLETION = true\n      ) {}\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return != null) {\n          ITERATOR_KEY.return();\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  ");function u(e){var t=e.node,n=e.scope,r=n.generateUidIdentifierBasedOnNode(t.right,"arr"),i=n.generateUidIdentifier("i"),o=a({BODY:t.body,KEY:i,NAME:r,ARR:t.right});pf(o,t),Rh(o);var s=ms(gp(r),gp(i),!0),u=t.left;return H(u)?(u.declarations[0].init=s,o.body.body.unshift(u)):o.body.body.unshift(es(Uo("=",u,s))),e.parentPath.isLabeledStatement()&&(o=us(e.parentPath.node.label,o)),[o]}return{name:"transform-for-of",visitor:{ForOfStatement:function(e,t){var n=e.get("right");if(n.isArrayExpression()||n.isGenericType("Array")||me(n.getTypeAnnotation()))!function(e){e.parentPath.isLabeledStatement()?e.parentPath.replaceWithMultiple(u(e)):e.replaceWithMultiple(u(e))}(e);else{var r=e.node,a=i(e,t),o=a.declar,s=a.loop,l=s.body;e.ensureBlock(),o&&l.body.push(o),l.body=l.body.concat(r.body.body),pf(s,r),pf(s.body,r.body),a.replaceParent?(e.parentPath.replaceWithMultiple(a.node),e.remove()):e.replaceWithMultiple(a.node)}}}}})),LB=cF((function(e){return e.assertVersion(7),{name:"transform-function-name",visitor:{FunctionExpression:{exit:function(e){if("value"!==e.key&&!e.parentPath.isObjectProperty()){var t=sD(e);t&&e.replaceWith(t)}}},ObjectProperty:function(e){var t=e.get("value");if(t.isFunction()){var n=sD(t);n&&t.replaceWith(n)}}}}})),jB=cF((function(e){return e.assertVersion(7),{name:"transform-instanceof",visitor:{BinaryExpression:function(e){var t=e.node;if("instanceof"===t.operator){var n=this.addHelper("instanceof");if(e.findParent((function(e){return e.isVariableDeclarator()&&e.node.id===n||e.isFunctionDeclaration()&&e.node.id&&e.node.id.name===n.name})))return;e.replaceWith(Xo(n,[t.left,t.right]))}}}}})),UB=cF((function(e){return e.assertVersion(7),{name:"transform-jscript",visitor:{FunctionExpression:{exit:function(e){var t=e.node;t.id&&e.replaceWith(Xo(as(null,[],qo([Yh(t),Ds(gp(t.id))])),[]))}}}}})),VB=cF((function(e){return e.assertVersion(7),{name:"transform-literals",visitor:{NumericLiteral:function(e){var t=e.node;t.extra&&/^0[ob]/i.test(t.extra.raw)&&(t.extra=void 0)},StringLiteral:function(e){var t=e.node;t.extra&&/\\[u]/gi.test(t.extra.raw)&&(t.extra=void 0)}}}})),WB=cF((function(e){return e.assertVersion(7),{name:"transform-member-expression-literals",visitor:{MemberExpression:{exit:function(e){var t=e.node,n=t.property;t.computed||!S(n)||Ef(n.name)||(t.property=ls(n.name),t.computed=!0)}}}}}));var GB=function(e,t,n){var r=-1,i=e.length;t<0&&(t=-t>i?0:i+t),(n=n>i?i:n)<0&&(n+=i),i=t>n?0:n-t>>>0,t>>>=0;for(var a=Array(i);++r<i;)a[r]=e[r+t];return a},HB=Math.ceil,qB=Math.max;var KB=function(e,t,n){t=(n?Ud(e,t,n):void 0===t)?1:qB(_d(t),0);var r=null==e?0:e.length;if(!r||t<1)return[];for(var i=0,a=0,o=Array(HB(r/t));i<r;)o[a++]=GB(e,i,i+=t);return o};var XB={ThisExpression:function(e){e.replaceWith(e.scope.buildUndefinedNode())},Function:function(e){e.isArrowFunctionExpression()||e.skip()},ClassProperty:function(e){e.skip()},ClassPrivateProperty:function(e){e.skip()}};function zB(e,t){e.traverse(JB,{scope:e.scope,bindingNames:t,seen:new WeakSet})}var JB={UpdateExpression:{exit:function(e){var t=this.scope,n=this.bindingNames,r=e.get("argument");if(r.isIdentifier()){var i=r.node.name;if(n.has(i)&&t.getBinding(i)===e.scope.getBinding(i))if(e.parentPath.isExpressionStatement()&&!e.isCompletionRecord()){var a="++"==e.node.operator?"+=":"-=";e.replaceWith(Uo(a,r.node,cs(1)))}else if(e.node.prefix)e.replaceWith(Uo("=",os(i),Vo(e.node.operator[0],ks("+",r.node),cs(1))));else{var o=e.scope.generateUidIdentifierBasedOnNode(r.node,"old"),s=o.name;e.scope.push({id:o});var u=Vo(e.node.operator[0],os(s),cs(1));e.replaceWith(Ss([Uo("=",os(s),ks("+",r.node)),Uo("=",gp(r.node),u),os(s)]))}}}},AssignmentExpression:{exit:function(e){var t=this.scope,n=this.seen,r=this.bindingNames;if("="!==e.node.operator&&!n.has(e.node)){n.add(e.node);var i=e.get("left");if(i.isIdentifier()){var a=i.node.name;r.has(a)&&t.getBinding(a)===e.scope.getBinding(a)&&(e.node.right=Vo(e.node.operator.slice(0,-1),gp(e.node.left),e.node.right),e.node.operator="=")}}}}};function YB(){var e=a(["\n    (function() {\n      throw new Error('\"' + '","' + '\" is read-only.');\n    })()\n  "]);return YB=function(){return e},e}var $B={Scope:function(e){e.skip()},ClassDeclaration:function(e){var t=this.requeueInParent,n=this.exported,r=this.metadata,i=e.node.id;if(!i)throw new Error("Expected class to have a name");var a=i.name,o=n.get(a)||[];if(o.length>0){var s=es(QB(r,o,os(a)));s._blockHoist=e.node._blockHoist,t(e.insertAfter(s)[0])}},VariableDeclaration:function(e){var t=this.requeueInParent,n=this.exported,r=this.metadata;Object.keys(e.getOuterBindingIdentifiers()).forEach((function(i){var a=n.get(i)||[];if(a.length>0){var o=es(QB(r,a,os(i)));o._blockHoist=e.node._blockHoist,t(e.insertAfter(o)[0])}}))}},QB=function(e,t,n){return(t||[]).reduce((function(t,n){return Uo("=",ms(os(e.exportName),os(n)),t)}),n)},ZB=function(e){return nD.expression.ast(YB(),e)},eN={ReferencedIdentifier:function(e){var t=this.seen,n=this.buildImportReference,r=this.scope,i=this.imported,a=this.requeueInParent;if(!t.has(e.node)){t.add(e.node);var o=e.node.name,s=e.scope.getBinding(o);if(r.getBinding(o)===s){var u=i.get(o);if(u){var l=n(u,e.node);if(l.loc=e.node.loc,e.parentPath.isCallExpression({callee:e.node})&&_(l))e.replaceWith(Ss([cs(0),l]));else if(e.isJSXIdentifier()&&_(l)){var c=l.object,p=l.property;e.replaceWith(Al(El(c.name),El(p.name)))}else e.replaceWith(l);a(e),e.skip()}}}},AssignmentExpression:{exit:function(e){var t=this,n=this.scope,r=this.seen,i=this.imported,a=this.exported,o=this.requeueInParent,s=this.buildImportReference;if(!r.has(e.node)){r.add(e.node);var u=e.get("left");if(!u.isMemberExpression())if(u.isIdentifier()){var l=u.node.name;if(n.getBinding(l)!==e.scope.getBinding(l))return;var c=a.get(l),p=i.get(l);if((null==c?void 0:c.length)>0||p){ZI("="===e.node.operator,"Path was not simplified");var h=e.node;p&&(h.left=s(p,h.left),h.right=Ss([h.right,ZB(l)])),e.replaceWith(QB(this.metadata,c,h)),o(e)}}else{var f=u.getOuterBindingIdentifiers(),d=Object.keys(f).filter((function(t){return n.getBinding(t)===e.scope.getBinding(t)})),m=d.find((function(e){return i.has(e)}));m&&(e.node.right=Ss([e.node.right,ZB(m)]));var y=[];if(d.forEach((function(e){var n=a.get(e)||[];n.length>0&&y.push(QB(t.metadata,n,os(e)))})),y.length>0){var v=Ss(y);e.parentPath.isExpressionStatement()&&((v=es(v))._blockHoist=e.parentPath.node._blockHoist),o(e.insertAfter(v)[0])}}}}}};function tN(e){return e.hasExports}function nN(e){return 0===e.imports.size&&0===e.importsNamespace.size&&0===e.reexports.size&&0===e.reexportNamespace.size&&!e.reexportAll}function rN(e,t,n){var r=void 0===n?{}:n,i=r.noInterop,a=void 0!==i&&i,o=r.loose,s=void 0!==o&&o,u=r.lazy,l=void 0!==u&&u,c=r.esNamespaceOnly,p=void 0!==c&&c;t||(t=e.scope.generateUidIdentifier("exports").name),function(e){e.get("body").forEach((function(e){e.isExportDefaultDeclaration()&&zd(e)}))}(e);var h=function(e,t){var n=t.loose,r=t.lazy,i=function(e,t){var n=new Map;e.get("body").forEach((function(e){var r;if(e.isImportDeclaration())r="import";else{if(e.isExportDefaultDeclaration()&&(e=e.get("declaration")),e.isExportNamedDeclaration())if(e.node.declaration)e=e.get("declaration");else if(t&&e.node.source&&e.get("source").isStringLiteral())return void e.node.specifiers.forEach((function(e){n.set(e.local.name,"block")}));if(e.isFunctionDeclaration())r="hoisted";else if(e.isClassDeclaration())r="block";else if(e.isVariableDeclaration({kind:"var"}))r="var";else{if(!e.isVariableDeclaration())return;r="block"}}Object.keys(e.getOuterBindingIdentifiers()).forEach((function(e){n.set(e,r)}))}));var r=new Map,i=function(e){var t=e.node.name,i=r.get(t);if(!i){var a=n.get(t);if(void 0===a)throw e.buildCodeFrameError('Exporting local "'+t+'", which is not declared.');i={names:[],kind:a},r.set(t,i)}return i};return e.get("body").forEach((function(e){if(!e.isExportNamedDeclaration()||!t&&e.node.source){if(e.isExportDefaultDeclaration()){var n=e.get("declaration");if(!n.isFunctionDeclaration()&&!n.isClassDeclaration())throw n.buildCodeFrameError("Unexpected default expression export.");i(n.get("id")).names.push("default")}}else if(e.node.declaration){var r=e.get("declaration"),a=r.getOuterBindingIdentifierPaths();Object.keys(a).forEach((function(e){if("__esModule"===e)throw r.buildCodeFrameError('Illegal export "__esModule".');i(a[e]).names.push(e)}))}else e.get("specifiers").forEach((function(e){var t=e.get("local"),n=e.get("exported");if("__esModule"===n.node.name)throw n.buildCodeFrameError('Illegal export "__esModule".');i(t).names.push(n.node.name)}))})),r}(e,n),a=new Map,o=function(t){var n=t.value,r=a.get(n);return r||(r={name:e.scope.generateUidIdentifier(zx(n,Jx(n))).name,interop:"none",loc:null,imports:new Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,lazy:!1},a.set(n,r)),r},s=!1;e.get("body").forEach((function(e){if(e.isImportDeclaration()){var t=o(e.node.source);t.loc||(t.loc=e.node.loc),e.get("specifiers").forEach((function(e){if(e.isImportDefaultSpecifier()){var n=e.get("local").node.name;t.imports.set(n,"default");var r=i.get(n);r&&(i.delete(n),r.names.forEach((function(e){t.reexports.set(e,"default")})))}else if(e.isImportNamespaceSpecifier()){var a=e.get("local").node.name;t.importsNamespace.add(a);var o=i.get(a);o&&(i.delete(a),o.names.forEach((function(e){t.reexportNamespace.add(e)})))}else if(e.isImportSpecifier()){var s=e.get("imported").node.name,u=e.get("local").node.name;t.imports.set(u,s);var l=i.get(u);l&&(i.delete(u),l.names.forEach((function(e){t.reexports.set(e,s)})))}}))}else if(e.isExportAllDeclaration()){s=!0;var n=o(e.node.source);n.loc||(n.loc=e.node.loc),n.reexportAll={loc:e.node.loc}}else if(e.isExportNamedDeclaration()&&e.node.source){s=!0;var r=o(e.node.source);r.loc||(r.loc=e.node.loc),e.get("specifiers").forEach((function(e){if(!e.isExportSpecifier())throw e.buildCodeFrameError("Unexpected export specifier type");var t=e.get("local").node.name,n=e.get("exported").node.name;if(r.reexports.set(n,t),"__esModule"===n)throw n.buildCodeFrameError('Illegal export "__esModule".')}))}else(e.isExportNamedDeclaration()||e.isExportDefaultDeclaration())&&(s=!0)}));var u=a.values(),l=Array.isArray(u),c=0;for(u=l?u:u[Symbol.iterator]();;){var p;if(l){if(c>=u.length)break;p=u[c++]}else{if((c=u.next()).done)break;p=c.value}var h=p,f=!1,d=!1;h.importsNamespace.size>0&&(f=!0,d=!0),h.reexportAll&&(d=!0);var m=h.imports.values(),y=Array.isArray(m),v=0;for(m=y?m:m[Symbol.iterator]();;){var g;if(y){if(v>=m.length)break;g=m[v++]}else{if((v=m.next()).done)break;g=v.value}"default"===g?f=!0:d=!0}var b=h.reexports.values(),E=Array.isArray(b),A=0;for(b=E?b:b[Symbol.iterator]();;){var D;if(E){if(A>=b.length)break;D=b[A++]}else{if((A=b.next()).done)break;D=A.value}"default"===D?f=!0:d=!0}f&&d?h.interop="namespace":f&&(h.interop="default")}var S=a,x=Array.isArray(S),T=0;for(S=x?S:S[Symbol.iterator]();;){var C;if(x){if(T>=S.length)break;C=S[T++]}else{if((T=S.next()).done)break;C=T.value}var w=C,P=w[0],F=w[1];if(!1!==r&&!nN(F)&&!F.reexportAll)if(!0===r)F.lazy=!/\./.test(P);else if(Array.isArray(r))F.lazy=-1!==r.indexOf(P);else{if("function"!=typeof r)throw new Error(".lazy must be a boolean, string array, or function");F.lazy=r(P)}}return{hasExports:s,local:i,source:a}}(e,{loose:s,lazy:l}),f=h.local,d=h.source,m=h.hasExports;!function(e){e.get("body").forEach((function(e){if(e.isImportDeclaration())e.remove();else if(e.isExportNamedDeclaration())e.node.declaration?(e.node.declaration._blockHoist=e.node._blockHoist,e.replaceWith(e.node.declaration)):e.remove();else if(e.isExportDefaultDeclaration()){var t=e.get("declaration");if(!t.isFunctionDeclaration()&&!t.isClassDeclaration())throw t.buildCodeFrameError("Unexpected default expression export.");t._blockHoist=e.node._blockHoist,e.replaceWith(t)}else e.isExportAllDeclaration()&&e.remove()}))}(e);var y=d,v=Array.isArray(y),g=0;for(y=v?y:y[Symbol.iterator]();;){var b;if(v){if(g>=y.length)break;b=y[g++]}else{if((g=y.next()).done)break;b=g.value}var E=b[1];E.importsNamespace.size>0&&(E.name=E.importsNamespace.values().next().value),a?E.interop="none":p&&"namespace"===E.interop&&(E.interop="default")}return{exportName:t,exportNameListName:null,hasExports:m,local:f,source:d}}function iN(){var e=a(["EXPORTS.NAME = VALUE"]);return iN=function(){return e},e}function aN(){var e=a(["\n            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;\n          "]);return aN=function(){return e},e}function oN(){var e=a(['\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === "default" || key === "__esModule") return;\n          VERIFY_NAME_LIST;\n\n          Object.defineProperty(EXPORTS, key, {\n            enumerable: true,\n            get: function() {\n              return NAMESPACE[key];\n            },\n          });\n        });\n    ']);return oN=function(){return e},e}function sN(){var e=a(['\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === "default" || key === "__esModule") return;\n          VERIFY_NAME_LIST;\n\n          EXPORTS[key] = NAMESPACE[key];\n        });\n      ']);return sN=function(){return e},e}function uN(){var e=a(['\n        Object.defineProperty(EXPORTS, "__esModule", {\n          value: true,\n        });\n      ']);return uN=function(){return e},e}function lN(){var e=a(["\n        EXPORTS.__esModule = true;\n      "]);return lN=function(){return e},e}function cN(){var e=a(['\n      Object.defineProperty(EXPORTS, "EXPORT_NAME", {\n        enumerable: true,\n        get: function() {\n          return NAMESPACE.IMPORT_NAME;\n        },\n      });\n    ']);return cN=function(){return e},e}function pN(){var e=a(["EXPORTS.EXPORT_NAME = NAMESPACE.IMPORT_NAME;"]);return pN=function(){return e},e}function hN(){var e=a(["EXPORTS.NAME = NAMESPACE;"]);return hN=function(){return e},e}function fN(){var e=a(['\n            Object.defineProperty(EXPORTS, "NAME", {\n              enumerable: true,\n              get: function() {\n                return NAMESPACE;\n              }\n            });\n          ']);return fN=function(){return e},e}function dN(){var e=a(["var NAME = SOURCE;"]);return dN=function(){return e},e}function mN(e,t){var n=t.exportName,r=t.strict,i=t.allowTopLevelThis,a=t.strictMode,o=t.loose,s=t.noInterop,u=t.lazy,l=t.esNamespaceOnly;ZI(hO(e),"Cannot process module statements in a script"),e.node.sourceType="script";var c=rN(e,n,{noInterop:s,loose:o,lazy:u,esNamespaceOnly:l});(i||e.traverse(XB),function(e,t){var n=new Map,r=new Map,i=function(t){e.requeue(t)},a=t.source,o=Array.isArray(a),s=0;for(a=o?a:a[Symbol.iterator]();;){var u;if(o){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}var l=u,c=l[0],p=l[1],h=p.imports,f=Array.isArray(h),d=0;for(h=f?h:h[Symbol.iterator]();;){var m;if(f){if(d>=h.length)break;m=h[d++]}else{if((d=h.next()).done)break;m=d.value}var y=m,v=y[0],g=y[1];n.set(v,[c,g,null])}var b=p.importsNamespace,E=Array.isArray(b),A=0;for(b=E?b:b[Symbol.iterator]();;){var D;if(E){if(A>=b.length)break;D=b[A++]}else{if((A=b.next()).done)break;D=A.value}var S=D;n.set(S,[c,null,S])}}var x=t.local,T=Array.isArray(x),C=0;for(x=T?x:x[Symbol.iterator]();;){var w,P;if(T){if(C>=x.length)break;P=x[C++]}else{if((C=x.next()).done)break;P=C.value}var F=P,k=F[0],_=F[1],I=r.get(k);I||(I=[],r.set(k,I)),(w=I).push.apply(w,_.names)}e.traverse($B,{metadata:t,requeueInParent:i,scope:e.scope,exported:r}),zB(e,new Set([].concat(Array.from(n.keys()),Array.from(r.keys())))),e.traverse(eN,{seen:new WeakSet,metadata:t,requeueInParent:i,scope:e.scope,imported:n,exported:r,buildImportReference:function(e,n){var r=e[0],i=e[1],a=e[2],o=t.source.get(r);if(a)return o.lazy&&(n=Xo(n,[])),n;var s=os(o.name);return o.lazy&&(s=Xo(s,[])),ms(s,os(i))}})}(e,c),!1!==a)&&(e.node.directives.some((function(e){return"use strict"===e.value.value}))||e.unshiftContainer("directives",Go(Ho("use strict"))));var p=[];tN(c)&&!r&&p.push(function(e,t){void 0===t&&(t=!1);return(t?nD.statement(lN()):nD.statement(uN()))({EXPORTS:e.exportName})}(c,o));var h=function(e,t){var n=Object.create(null),r=t.local.values(),i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}var s=o.names,u=Array.isArray(s),l=0;for(s=u?s:s[Symbol.iterator]();;){var c;if(u){if(l>=s.length)break;c=s[l++]}else{if((l=s.next()).done)break;c=l.value}n[c]=!0}}var p=!1,h=t.source.values(),f=Array.isArray(h),d=0;for(h=f?h:h[Symbol.iterator]();;){var m;if(f){if(d>=h.length)break;m=h[d++]}else{if((d=h.next()).done)break;m=d.value}var y=m,v=y.reexports.keys(),g=Array.isArray(v),b=0;for(v=g?v:v[Symbol.iterator]();;){var E;if(g){if(b>=v.length)break;E=v[b++]}else{if((b=v.next()).done)break;E=b.value}n[E]=!0}var A=y.reexportNamespace,D=Array.isArray(A),S=0;for(A=D?A:A[Symbol.iterator]();;){var x;if(D){if(S>=A.length)break;x=A[S++]}else{if((S=A.next()).done)break;x=S.value}n[x]=!0}p=p||y.reexportAll}if(!p||0===Object.keys(n).length)return null;var T=e.scope.generateUidIdentifier("exportNames");return delete n.default,{name:T.name,statement:Is("var",[Os(T,lf(n))])}}(e,c);return h&&(c.exportNameListName=h.name,p.push(h.statement)),p.push.apply(p,function(e,t,n){void 0===n&&(n=!1);var r=[],i=[],a=t.local,o=Array.isArray(a),s=0;for(a=o?a:a[Symbol.iterator]();;){var u;if(o){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}var l=u,c=l[0],p=l[1];"import"===p.kind||("hoisted"===p.kind?r.push(EN(t,p.names,os(c))):i.push.apply(i,p.names))}var h=t.source.values(),f=Array.isArray(h),d=0;for(h=f?h:h[Symbol.iterator]();;){var m;if(f){if(d>=h.length)break;m=h[d++]}else{if((d=h.next()).done)break;m=d.value}var y=m;n||r.push.apply(r,bN(t,y,n));var v=y.reexportNamespace,g=Array.isArray(v),b=0;for(v=g?v:v[Symbol.iterator]();;){var E;if(g){if(b>=v.length)break;E=v[b++]}else{if((b=v.next()).done)break;E=b.value}var A=E;i.push(A)}}return r.push.apply(r,KB(i,100).map((function(n){return EN(t,n,e.scope.buildUndefinedNode())}))),r}(e,c,o)),{meta:c,headers:p}}function yN(e){e.forEach((function(e){e._blockHoist=3}))}function vN(e,t,n){if("none"===n)return null;var r;if("default"===n)r="interopRequireDefault";else{if("namespace"!==n)throw new Error("Unknown interop: "+n);r="interopRequireWildcard"}return Xo(e.hub.addHelper(r),[t])}function gN(e,t,n){void 0===n&&(n=!1);var r=[],i=os(t.name);t.lazy&&(i=Xo(i,[]));var a=t.importsNamespace,o=Array.isArray(a),s=0;for(a=o?a:a[Symbol.iterator]();;){var u;if(o){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}var l=u;l!==t.name&&r.push(nD.statement(dN())({NAME:l,SOURCE:gp(i)}))}n&&r.push.apply(r,bN(e,t,n));var c=t.reexportNamespace,p=Array.isArray(c),h=0;for(c=p?c:c[Symbol.iterator]();;){var f;if(p){if(h>=c.length)break;f=c[h++]}else{if((h=c.next()).done)break;f=h.value}var d=f;r.push((t.lazy?nD.statement(fN()):nD.statement(hN()))({EXPORTS:e.exportName,NAME:d,NAMESPACE:gp(i)}))}if(t.reexportAll){var m=function(e,t,n){return(n?nD.statement(sN()):nD.statement(oN()))({NAMESPACE:t,EXPORTS:e.exportName,VERIFY_NAME_LIST:e.exportNameListName?nD(aN())({EXPORTS_LIST:e.exportNameListName}):null})}(e,gp(i),n);m.loc=t.reexportAll.loc,r.push(m)}return r}var bN=function(e,t,n){var r=t.lazy?Xo(os(t.name),[]):os(t.name),i=function(e){return e?nD.statement(pN()):nD(cN())}(n);return Array.from(t.reexports,(function(t){var n=t[0],a=t[1];return i({EXPORTS:e.exportName,EXPORT_NAME:n,NAMESPACE:gp(r),IMPORT_NAME:a})}))};function EN(e,t,n){return es(t.reduce((function(t,n){return nD.expression(iN())({EXPORTS:e.exportName,NAME:n,VALUE:t})}),n))}var AN=Vt((function(e,t){function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],r=!0,i=!1,a=void 0;try{for(var o,s=e[Symbol.iterator]();!(r=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){i=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw a}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function r(e,t){var r=t.arguments,i=n(r,1)[0];return e.isStringLiteral(i)||e.isTemplateLiteral(i)?(e.removeComments(i),i):e.templateLiteral([e.templateElement({raw:"",cooked:""}),e.templateElement({raw:"",cooked:""},!0)],r)}Object.defineProperty(t,"__esModule",{value:!0}),t.getImportSource=r,t.createDynamicImportTransform=function(e){var t=e.template,n=e.types,i=t("Promise.resolve().then(() => MODULE)");return function(e,t){var a=n.callExpression(n.identifier("require"),[r(n,t.parent)]),o=e.opts.noInterop,s=!0===(void 0!==o&&o)?a:n.callExpression(e.addHelper("interopRequireWildcard"),[a]),u=i({MODULE:s});t.parentPath.replaceWith(u)}}}));Ut(AN);AN.getImportSource,AN.createDynamicImportTransform;var DN=AN,SN=DN.createDynamicImportTransform,xN=DN.getImportSource;function TN(){var e=a(["\n            new Promise((",", ",") =>\n              ","(\n                [","],\n                imported => ","(","),\n                ","\n              )\n            )"]);return TN=function(){return e},e}var CN=nD("\n  define(MODULE_NAME, AMD_ARGUMENTS, function(IMPORT_NAMES) {\n  })\n"),wN=nD('\n  define(["require"], function(REQUIRE) {\n  })\n');function PN(e,t){var n=e.node,r=n.body,i=n.directives;e.node.directives=[],e.node.body=[];var a=e.pushContainer("body",t)[0].get("expression.arguments").filter((function(e){return e.isFunctionExpression()}))[0].get("body");a.pushContainer("directives",i),a.pushContainer("body",r)}var FN=cF((function(e,t){e.assertVersion(7);var n=t.loose,r=t.allowTopLevelThis,i=t.strict,a=t.strictMode,o=t.noInterop;return{name:"transform-modules-amd",pre:function(){this.file.set("@babel/plugin-transform-modules-*","amd")},visitor:{CallExpression:function(e,t){if(this.file.has("@babel/plugin-proposal-dynamic-import")&&e.get("callee").isImport()){var n=t.requireId,r=t.resolveId,i=t.rejectId;n||(n=e.scope.generateUidIdentifier("require"),t.requireId=n),r&&i||(r=e.scope.generateUidIdentifier("resolve"),i=e.scope.generateUidIdentifier("reject"),t.resolveId=r,t.rejectId=i);var a=os("imported");o||(a=vN(e,a,"namespace")),e.replaceWith(nD.expression.ast(TN(),r,i,n,xN(Sf,e.node),r,a,i))}},Program:{exit:function(e,t){var s=t.requireId;if(hO(e)){var u=[],l=[];s&&(u.push(ls("require")),l.push(s));var c=this.getModuleName();c&&(c=ls(c));var p=mN(e,{loose:n,strict:i,strictMode:a,allowTopLevelThis:r,noInterop:o}),h=p.meta,f=p.headers;tN(h)&&(u.push(ls("exports")),l.push(os(h.exportName)));var d=h.source,m=Array.isArray(d),y=0;for(d=m?d:d[Symbol.iterator]();;){var v;if(m){if(y>=d.length)break;v=d[y++]}else{if((y=d.next()).done)break;v=y.value}var g=v,b=g[0],E=g[1];if(u.push(ls(b)),l.push(os(E.name)),!nN(E)){var A=vN(e,os(E.name),E.interop);if(A){var D=es(Uo("=",os(E.name),A));D.loc=E.loc,f.push(D)}}f.push.apply(f,gN(h,E,n))}yN(f),e.unshiftContainer("body",f),PN(e,CN({MODULE_NAME:c,AMD_ARGUMENTS:jo(u),IMPORT_NAMES:l}))}else s&&PN(e,wN({REQUIRE:s}))}}}}}));function kN(){var e=a(["\n                  var "," = ",";\n                "]);return kN=function(){return e},e}function _N(){var e=a(["\n                  function ","() {\n                    const data = ",";\n                    "," = function(){ return data; };\n                    return data;\n                  }\n                "]);return _N=function(){return e},e}function IN(){var e=a(['\n    (function(){\n      throw new Error(\n        "The CommonJS \'" + "','" + "\' variable is not available in ES6 modules." +\n        "Consider setting setting sourceType:script or sourceType:unambiguous in your " +\n        "Babel config for this file.");\n    })()\n  ']);return IN=function(){return e},e}var ON=cF((function(e,t){e.assertVersion(7);var n=SN(e),r=t.loose,i=t.strictNamespace,a=void 0!==i&&i,o=t.mjsStrictNamespace,s=void 0===o||o,u=t.allowTopLevelThis,l=t.strict,c=t.strictMode,p=t.noInterop,h=t.lazy,f=void 0!==h&&h,d=t.allowCommonJSExports,m=void 0===d||d;if(!("boolean"==typeof f||"function"==typeof f||Array.isArray(f)&&f.every((function(e){return"string"==typeof e}))))throw new Error(".lazy must be a boolean, array of strings, or a function");if("boolean"!=typeof a)throw new Error(".strictNamespace must be a boolean, or undefined");if("boolean"!=typeof s)throw new Error(".mjsStrictNamespace must be a boolean, or undefined");var y=function(e){return nD.expression.ast(IN(),e)},v={ReferencedIdentifier:function(e){var t=e.node.name;if("module"===t||"exports"===t){var n=e.scope.getBinding(t);this.scope.getBinding(t)!==n||e.parentPath.isObjectProperty({value:e.node})&&e.parentPath.parentPath.isObjectPattern()||e.parentPath.isAssignmentExpression({left:e.node})||e.isAssignmentExpression({left:e.node})||e.replaceWith(y(t))}},AssignmentExpression:function(e){var t=this,n=e.get("left");if(n.isIdentifier()){var r=e.node.name;if("module"!==r&&"exports"!==r)return;var i=e.scope.getBinding(r);if(this.scope.getBinding(r)!==i)return;var a=e.get("right");a.replaceWith(Ss([a.node,y(r)]))}else if(n.isPattern()){var o=n.getOuterBindingIdentifiers(),s=Object.keys(o).filter((function(n){return("module"===n||"exports"===n)&&t.scope.getBinding(n)===e.scope.getBinding(n)}))[0];if(s){var u=e.get("right");u.replaceWith(Ss([u.node,y(s)]))}}}};return{name:"transform-modules-commonjs",pre:function(){this.file.set("@babel/plugin-transform-modules-*","commonjs")},visitor:{CallExpression:function(e){if(this.file.has("@babel/plugin-proposal-dynamic-import")&&e.get("callee").isImport()){var t=e.scope;do{t.rename("require")}while(t=t.parent);n(this,e.get("callee"))}},Program:{exit:function(e,t){if(hO(e)){e.scope.rename("exports"),e.scope.rename("module"),e.scope.rename("require"),e.scope.rename("__filename"),e.scope.rename("__dirname"),m||(zB(e,new Set(["module","exports"])),e.traverse(v,{scope:e.scope}));var n=this.getModuleName();n&&(n=ls(n));var i=mN(e,{exportName:"exports",loose:r,strict:l,strictMode:c,allowTopLevelThis:u,noInterop:p,lazy:f,esNamespaceOnly:"string"==typeof t.filename&&/\.mjs$/.test(t.filename)?s:a}),o=i.meta,h=i.headers,d=o.source,y=Array.isArray(d),g=0;for(d=y?d:d[Symbol.iterator]();;){var b;if(y){if(g>=d.length)break;b=d[g++]}else{if((g=d.next()).done)break;b=g.value}var E=b,A=E[0],D=E[1],S=Xo(os("require"),[ls(A)]),x=void 0;if(nN(D)){if(D.lazy)throw new Error("Assertion failure");x=es(S)}else{var T=vN(e,S,D.interop)||S;x=D.lazy?nD.ast(_N(),D.name,T,D.name):nD.ast(kN(),D.name,T)}x.loc=D.loc,h.push(x),h.push.apply(h,gN(o,D,r))}yN(h),e.unshiftContainer("body",h)}}}}}})),BN={Scope:function(e,t){"let"===t.kind&&e.skip()},Function:function(e){e.skip()},VariableDeclaration:function(e,t){if(!t.kind||e.node.kind===t.kind){var n,r=[],i=e.get("declarations"),a=Array.isArray(i),o=0;for(i=a?i:i[Symbol.iterator]();;){var s;if(a){if(o>=i.length)break;s=i[o++]}else{if((o=i.next()).done)break;s=o.value}var u=s;n=u.node.id,u.node.init&&r.push(es(Uo("=",u.node.id,u.node.init)));for(var l=0,c=Object.keys(u.getBindingIdentifiers());l<c.length;l++){var p=c[l];t.emit(os(p),p,null!==u.node.init)}}e.parentPath.isFor({left:e.node})?e.replaceWith(n):e.replaceWithMultiple(r)}}};function NN(e,t,n){void 0===n&&(n="var"),e.traverse(BN,{kind:n,emit:t})}var MN=nD('\n  SYSTEM_REGISTER(MODULE_NAME, SOURCES, function (EXPORT_IDENTIFIER, CONTEXT_IDENTIFIER) {\n    "use strict";\n    BEFORE_BODY;\n    return {\n      setters: SETTERS,\n      execute: function () {\n        BODY;\n      }\n    };\n  });\n'),RN=nD('\n  for (var KEY in TARGET) {\n    if (KEY !== "default" && KEY !== "__esModule") EXPORT_OBJ[KEY] = TARGET[KEY];\n  }\n');function LN(e,t,n,r,i){var a=[];if(1===n.length)a.push(es(Xo(t,[ls(n[0]),r[0]])));else if(i){var o=e.scope.generateUid("exportObj");a.push(Is("var",[Os(os(o),gs([]))])),a.push(RN({KEY:e.scope.generateUidIdentifier("key"),EXPORT_OBJ:os(o),TARGET:i}));for(var s=0;s<n.length;s++){var u=n[s],l=r[s];a.push(es(Uo("=",ms(os(o),os(u)),l)))}a.push(es(Xo(t,[os(o)])))}else{for(var c=[],p=0;p<n.length;p++){var h=n[p],f=r[p];c.push(Es(os(h),f))}a.push(es(Xo(t,[gs(c)])))}return a}var jN=cF((function(e,t){e.assertVersion(7);var n=t.systemGlobal,r=void 0===n?"System":n,i=Symbol(),a={"AssignmentExpression|UpdateExpression":function(e){if(!e.node[i]){e.node[i]=!0;var t=e.get(e.isAssignmentExpression()?"left":"argument");if(t.isObjectPattern()||t.isArrayPattern()){for(var n=[e.node],r=0,a=Object.keys(t.getBindingIdentifiers());r<a.length;r++){var o=a[r];if(this.scope.getBinding(o)!==e.scope.getBinding(o))return;var s=this.exports[o];if(!s)return;var u=s,l=Array.isArray(u),c=0;for(u=l?u:u[Symbol.iterator]();;){var p;if(l){if(c>=u.length)break;p=u[c++]}else{if((c=u.next()).done)break;p=c.value}var h=p;n.push(this.buildCall(h,os(o)).expression)}}e.replaceWith(Ss(n))}else if(t.isIdentifier()){var f=t.node.name;if(this.scope.getBinding(f)===e.scope.getBinding(f)){var d=this.exports[f];if(d){var m=e.node,y=e.isUpdateExpression({prefix:!1});y&&(m=Vo(m.operator[0],ks("+",gp(m.argument)),cs(1)));var v=d,g=Array.isArray(v),b=0;for(v=g?v:v[Symbol.iterator]();;){var E;if(g){if(b>=v.length)break;E=v[b++]}else{if((b=v.next()).done)break;E=b.value}var A=E;m=this.buildCall(A,m).expression}y&&(m=Ss([m,e.node])),e.replaceWith(m)}}}}}};return{name:"transform-modules-systemjs",pre:function(){this.file.set("@babel/plugin-transform-modules-*","systemjs")},visitor:{CallExpression:function(e,t){He(e.node.callee)&&(this.file.has("@babel/plugin-proposal-dynamic-import")||console.warn("WARNING: Dynamic import() transformation must be enabled using the\n         @babel/plugin-proposal-dynamic-import plugin. Babel 8 will\n         no longer transform import() without using that plugin.\n"),e.replaceWith(Xo(ms(os(t.contextIdent),os("import")),[xN(Sf,e.node)])))},MetaProperty:function(e,t){"import"===e.node.meta.name&&"meta"===e.node.property.name&&e.replaceWith(ms(os(t.contextIdent),os("meta")))},ReferencedIdentifier:function(e,t){"__moduleName"!==e.node.name||e.scope.hasBinding("__moduleName")||e.replaceWith(ms(os(t.contextIdent),os("id")))},Program:{enter:function(e,t){t.contextIdent=e.scope.generateUid("context")},exit:function(e,t){var n=e.scope.buildUndefinedNode(),i=e.scope.generateUid("export"),o=t.contextIdent,s=Object.create(null),u=[],l=[],c=[],p=[],h=[],f=[];function d(e,t){s[e]=s[e]||[],s[e].push(t)}function m(e,t,n){var r;u.forEach((function(t){t.key===e&&(r=t)})),r||u.push(r={key:e,imports:[],exports:[]}),r[t]=r[t].concat(n)}function y(e,t){return es(Xo(os(i),[ls(e),t]))}var v=[],g=[],b=e.get("body"),E=Array.isArray(b),D=0;for(b=E?b:b[Symbol.iterator]();;){var S;if(E){if(D>=b.length)break;S=b[D++]}else{if((D=b.next()).done)break;S=D.value}var x=S;if(x.isFunctionDeclaration())l.push(x.node),f.push(x);else if(x.isClassDeclaration())h.push(x.node.id),x.replaceWith(es(Uo("=",gp(x.node.id),Vh(x.node))));else if(x.isImportDeclaration()){m(x.node.source.value,"imports",x.node.specifiers);for(var T=0,C=Object.keys(x.getBindingIdentifiers());T<C.length;T++){var w=C[T];x.scope.removeBinding(w),h.push(os(w))}x.remove()}else if(x.isExportAllDeclaration())m(x.node.source.value,"exports",x.node),x.remove();else if(x.isExportDefaultDeclaration()){var P=x.get("declaration"),F=P.node.id;P.isClassDeclaration()?F?(v.push("default"),g.push(n),h.push(F),d(F.name,"default"),x.replaceWith(es(Uo("=",gp(F),Vh(P.node))))):(v.push("default"),g.push(Vh(P.node)),f.push(x)):P.isFunctionDeclaration()?(F?(l.push(P.node),v.push("default"),g.push(gp(F)),d(F.name,"default")):(v.push("default"),g.push(Vh(P.node))),f.push(x)):x.replaceWith(y("default",P.node))}else if(x.isExportNamedDeclaration()){var k=x.get("declaration");if(k.node)if(x.replaceWith(k),x.isFunction()){var _=k.node,I=_.id.name;d(I,I),l.push(_),v.push(I),g.push(gp(_.id)),f.push(x)}else if(x.isClass()){var O=k.node.id.name;v.push(O),g.push(n),h.push(k.node.id),x.replaceWith(es(Uo("=",gp(k.node.id),Vh(k.node)))),d(O,O)}else for(var B=0,N=Object.keys(k.getBindingIdentifiers());B<N.length;B++){var M=N[B];d(M,M)}else{var R=x.node.specifiers;if(R&&R.length)if(x.node.source)m(x.node.source.value,"exports",R),x.remove();else{var L=[],j=R,U=Array.isArray(j),V=0;for(j=U?j:j[Symbol.iterator]();;){var W;if(U){if(V>=j.length)break;W=j[V++]}else{if((V=j.next()).done)break;W=V.value}var G=W,H=x.scope.getBinding(G.local.name);H&&A(H.path.node)?(v.push(G.exported.name),g.push(gp(G.local))):H||L.push(y(G.exported.name,G.local)),d(G.local.name,G.exported.name)}x.replaceWithMultiple(L)}else x.remove()}}}u.forEach((function(t){var n=[],r=e.scope.generateUid(t.key),a=t.imports,o=Array.isArray(a),s=0;for(a=o?a:a[Symbol.iterator]();;){var u;if(o){if(s>=a.length)break;u=a[s++]}else{if((s=a.next()).done)break;u=s.value}var l=u;ae(l)?n.push(es(Uo("=",l.local,os(r)))):ie(l)&&(l=Ys(l.local,os("default"))),oe(l)&&n.push(es(Uo("=",l.local,ms(os(r),l.imported))))}if(t.exports.length){var h=[],f=[],d=!1,m=t.exports,y=Array.isArray(m),v=0;for(m=y?m:m[Symbol.iterator]();;){var g;if(y){if(v>=m.length)break;g=m[v++]}else{if((v=m.next()).done)break;g=v.value}var b=g;Z(b)?d=!0:ne(b)&&(h.push(b.exported.name),f.push(ms(os(r),b.local)))}n=n.concat(LN(e,os(i),h,f,d?os(r):null))}p.push(ls(t.key)),c.push(as(null,[os(r)],qo(n)))}));var q=this.getModuleName();q&&(q=ls(q)),NN(e,(function(e,t,r){h.push(e),r||(v.push(t),g.push(n))}),null),h.length&&l.unshift(Is("var",h.map((function(e){return Os(e)})))),v.length&&(l=l.concat(LN(e,os(i),v,g,null))),e.traverse(a,{exports:s,buildCall:y,scope:e.scope});for(var K=0,X=f;K<X.length;K++){X[K].remove()}e.node.body=[MN({SYSTEM_REGISTER:ms(os(r),os("register")),BEFORE_BODY:l,MODULE_NAME:q,SETTERS:jo(c),SOURCES:jo(p),BODY:e.node.body,EXPORT_IDENTIFIER:os(i),CONTEXT_IDENTIFIER:os(o)})]}}}}})),UN=nD("\n  GLOBAL_REFERENCE = GLOBAL_REFERENCE || {}\n"),VN=nD('\n  (function (global, factory) {\n    if (typeof define === "function" && define.amd) {\n      define(MODULE_NAME, AMD_ARGUMENTS, factory);\n    } else if (typeof exports !== "undefined") {\n      factory(COMMONJS_ARGUMENTS);\n    } else {\n      var mod = { exports: {} };\n      factory(BROWSER_ARGUMENTS);\n\n      GLOBAL_TO_ASSIGN;\n    }\n  })(\n    typeof globalThis !== "undefined" ? globalThis\n      : typeof self !== "undefined" ? self\n      : this,\n    function(IMPORT_NAMES) {\n  })\n'),WN=cF((function(e,t){e.assertVersion(7);var n=t.globals,r=t.exactGlobals,i=t.loose,a=t.allowTopLevelThis,o=t.strict,s=t.strictMode,u=t.noInterop;function l(e,t,n,r){var i=r?r.value:zx(n,Jx(n)),a=ms(os("global"),os(Lh(i))),o=[];if(t){var s=e[i];if(s){o=[];var u=s.split(".");a=u.slice(1).reduce((function(e,t){return o.push(UN({GLOBAL_REFERENCE:gp(e)})),ms(e,os(t))}),ms(os("global"),os(u[0])))}}return o.push(es(Uo("=",a,ms(os("mod"),os("exports"))))),o}function c(e,t,n){var r;if(t){var i=e[n];r=i?i.split(".").reduce((function(e,t){return ms(e,os(t))}),os("global")):ms(os("global"),os(Lh(n)))}else{var a=zx(n,Jx(n)),o=e[a]||a;r=ms(os("global"),os(Lh(o)))}return r}return{name:"transform-modules-umd",visitor:{Program:{exit:function(e){if(hO(e)){var t=n||{},p=this.getModuleName();p&&(p=ls(p));var h=mN(e,{loose:i,strict:o,strictMode:s,allowTopLevelThis:a,noInterop:u}),f=h.meta,d=h.headers,m=[],y=[],v=[],g=[];tN(f)&&(m.push(ls("exports")),y.push(os("exports")),v.push(ms(os("mod"),os("exports"))),g.push(os(f.exportName)));var b=f.source,E=Array.isArray(b),A=0;for(b=E?b:b[Symbol.iterator]();;){var D;if(E){if(A>=b.length)break;D=b[A++]}else{if((A=b.next()).done)break;D=A.value}var S=D,x=S[0],T=S[1];if(m.push(ls(x)),y.push(Xo(os("require"),[ls(x)])),v.push(c(t,r,x)),g.push(os(T.name)),!nN(T)){var C=vN(e,os(T.name),T.interop);if(C){var w=es(Uo("=",os(T.name),C));w.loc=f.loc,d.push(w)}}d.push.apply(d,gN(f,T,i))}yN(d),e.unshiftContainer("body",d);var P=e.node,F=P.body,k=P.directives;e.node.directives=[],e.node.body=[];var _=e.pushContainer("body",[VN({MODULE_NAME:p,AMD_ARGUMENTS:jo(m),COMMONJS_ARGUMENTS:y,BROWSER_ARGUMENTS:v,IMPORT_NAMES:g,GLOBAL_TO_ASSIGN:l(t,r,this.filename||"unknown",p)})])[0].get("expression.arguments")[1].get("body");_.pushContainer("directives",k),_.pushContainer("body",F)}}}}}})),GN=cF((function(e){return e.assertVersion(7),{name:"transform-new-target",visitor:{MetaProperty:function(e){var t=e.get("meta"),n=e.get("property"),r=e.scope;if(t.isIdentifier({name:"new"})&&n.isIdentifier({name:"target"})){var i=e.findParent((function(e){return!!e.isClass()||!(!e.isFunction()||e.isArrowFunctionExpression())&&!e.isClassMethod({kind:"constructor"})}));if(!i)throw e.buildCodeFrameError("new.target must be under a (non-arrow) function or a class.");var a=i.node;if(!a.id){if(i.isMethod())return void e.replaceWith(r.buildUndefinedNode());a.id=r.generateUidIdentifier("target")}var o=ms(ws(),os("constructor"));if(i.isClass())return void e.replaceWith(o);e.replaceWith(Jo(Vo("instanceof",ws(),gp(a.id)),o,r.buildUndefinedNode()))}}}}})),HN=cF((function(e){return e.assertVersion(7),{name:"transform-object-assign",visitor:{CallExpression:function(e,t){e.get("callee").matchesPattern("Object.assign")&&(e.node.callee=t.addHelper("extends"))}}}}));var qN=cF((function(e){return e.assertVersion(7),{name:"transform-object-super",visitor:{ObjectExpression:function(e,t){var n,r=function(){return n=n||e.scope.generateUidIdentifier("obj")};e.get("properties").forEach((function(e){e.isMethod()&&function(e,t,n){new $F({getObjectRef:t,methodPath:e,file:n}).replace()}(e,r,t)})),n&&(e.scope.push({id:gp(n)}),e.replaceWith(Uo("=",gp(n),e.node)))}}}})),KN=cF((function(e){return e.assertVersion(7),{name:"transform-object-set-prototype-of-to-assign",visitor:{CallExpression:function(e,t){e.get("callee").matchesPattern("Object.setPrototypeOf")&&(e.node.callee=t.addHelper("defaults"))}}}})),XN={enter:function(e,t){e.isThisExpression()&&(t.foundThis=!0),e.isReferencedIdentifier({name:"arguments"})&&(t.foundArguments=!0)},Function:function(e){e.skip()}};var zN=nD("\n  let VARIABLE_NAME =\n    arguments.length > ARGUMENT_KEY && arguments[ARGUMENT_KEY] !== undefined ?\n      arguments[ARGUMENT_KEY]\n    :\n      DEFAULT_VALUE;\n"),JN=nD("\n  if (ASSIGNMENT_IDENTIFIER === UNDEFINED) {\n    ASSIGNMENT_IDENTIFIER = DEFAULT_VALUE;\n  }\n"),YN=nD("\n  let ASSIGNMENT_IDENTIFIER = PARAMETER_NAME === UNDEFINED ? DEFAULT_VALUE : PARAMETER_NAME ;\n"),$N=nD("\n  let $0 = arguments.length > $1 ? arguments[$1] : undefined;\n");function QN(e,t){if(!e.hasOwnBinding(t.name))return!0;var n=e.getOwnBinding(t.name).kind;return"param"===n||"local"===n}var ZN={ReferencedIdentifier:function(e,t){var n=e.scope,r=e.node;"eval"!==r.name&&QN(n,r)||(t.iife=!0,e.stop())},Scope:function(e){e.skip()}};function eM(e,t){for(var n=e.node,r=e.scope,i={iife:!1,scope:r},a=[],o=e.get("params"),s=null,u=0;u<o.length;u++){var l=o[u],c=l.isAssignmentPattern();if(c&&(t||"set"===n.kind)){var p=l.get("left"),h=l.get("right"),f=r.buildUndefinedNode();if(p.isIdentifier())a.push(JN({ASSIGNMENT_IDENTIFIER:gp(p.node),DEFAULT_VALUE:h.node,UNDEFINED:f})),l.replaceWith(p.node);else if(p.isObjectPattern()||p.isArrayPattern()){var d=r.generateUidIdentifier();a.push(YN({ASSIGNMENT_IDENTIFIER:p.node,DEFAULT_VALUE:h.node,PARAMETER_NAME:gp(d),UNDEFINED:f})),l.replaceWith(d)}}else if(c){null===s&&(s=u);var m=l.get("left"),y=l.get("right");i.iife||(y.isIdentifier()&&!QN(r,y.node)?i.iife=!0:y.traverse(ZN,i));var v=zN({VARIABLE_NAME:m.node,DEFAULT_VALUE:y.node,ARGUMENT_KEY:cs(u)});a.push(v)}else if(null!==s){var g=$N([l.node,cs(u)]);a.push(g)}else if(l.isObjectPattern()||l.isArrayPattern()){var b=e.scope.generateUidIdentifier("ref"),E=Is("let",[Os(l.node,b)]);a.push(E),l.replaceWith(gp(b))}i.iife||l.isIdentifier()||l.traverse(ZN,i)}return 0!==a.length&&(null!==s&&(n.params=n.params.slice(0,s)),e.ensureBlock(),i.iife?(a.push(function(e,t){void 0===t&&(t=e.scope);var n=e.node,r=as(null,[],n.body,n.generator,n.async),i=r,a=[];NN(e,(function(e){return t.push({id:e})}));var o={foundThis:!1,foundArguments:!1};e.traverse(XN,o),(o.foundArguments||o.foundThis)&&(i=ms(r,os("apply")),a=[],o.foundThis&&a.push(ws()),o.foundArguments&&(o.foundThis||a.push(ps()),a.push(os("arguments"))));var s=Xo(i,a);return n.generator&&(s=au(s,!0)),Ds(s)}(e,r)),e.set("body",qo(a))):e.get("body").unshiftContainer("body",a),!0)}var tM=nD("\n  for (var LEN = ARGUMENTS.length,\n           ARRAY = new Array(ARRAY_LEN),\n           KEY = START;\n       KEY < LEN;\n       KEY++) {\n    ARRAY[ARRAY_KEY] = ARGUMENTS[KEY];\n  }\n"),nM=nD("\n  (INDEX < OFFSET || ARGUMENTS.length <= INDEX) ? undefined : ARGUMENTS[INDEX]\n"),rM=nD("\n  REF = INDEX, (REF < OFFSET || ARGUMENTS.length <= REF) ? undefined : ARGUMENTS[REF]\n"),iM=nD("\n  ARGUMENTS.length <= OFFSET ? 0 : ARGUMENTS.length - OFFSET\n");function aM(e,t){return e.node.name===t.name&&e.scope.bindingIdentifierEquals(t.name,t.outerBinding)}var oM={Scope:function(e,t){e.scope.bindingIdentifierEquals(t.name,t.outerBinding)||e.skip()},Flow:function(e){e.isTypeCastExpression()||e.skip()},Function:function(e,t){var n=t.noOptimise;t.noOptimise=!0,e.traverse(oM,t),t.noOptimise=n,e.skip()},ReferencedIdentifier:function(e,t){var n=e.node;if("arguments"===n.name&&(t.deopted=!0),aM(e,t))if(t.noOptimise)t.deopted=!0;else{var r=e.parentPath;if("params"===r.listKey&&r.key<t.offset)return;if(r.isMemberExpression({object:n})){var i=r.parentPath;if(!t.deopted&&!(i.isAssignmentExpression()&&r.node===i.node.left||i.isLVal()||i.isForXStatement()||i.isUpdateExpression()||i.isUnaryExpression({operator:"delete"})||(i.isCallExpression()||i.isNewExpression())&&r.node===i.node.callee))if(r.node.computed){if(r.get("property").isBaseType("number"))return void t.candidates.push({cause:"indexGetter",path:e})}else if("length"===r.node.property.name)return void t.candidates.push({cause:"lengthGetter",path:e})}if(0===t.offset&&r.isSpreadElement()){var a=r.parentPath;if(a.isCallExpression()&&1===a.node.arguments.length)return void t.candidates.push({cause:"argSpread",path:e})}t.references.push(e)}},BindingIdentifier:function(e,t){aM(e,t)&&(t.deopted=!0)}};function sM(e,t,n){var r,i=cs(n);r=w(e.parent.property)?cs(e.parent.property.value+n):0===n?e.parent.property:Vo("+",e.parent.property,gp(i));var a=e.scope;if(a.isPure(r)){var o=e.parentPath;o.replaceWith(nM({ARGUMENTS:t,OFFSET:i,INDEX:r}));var s=o.get("test").get("left").evaluate();s.confident&&(!0===s.value?o.replaceWith(o.scope.buildUndefinedNode()):o.get("test").replaceWith(o.get("test").get("right")))}else{var u=a.generateUidIdentifierBasedOnNode(r);a.push({id:u,kind:"var"}),e.parentPath.replaceWith(rM({ARGUMENTS:t,OFFSET:i,INDEX:r,REF:gp(u)}))}}function uM(e,t,n){n?e.parentPath.replaceWith(iM({ARGUMENTS:t,OFFSET:cs(n)})):e.replaceWith(t)}function lM(e){var t=e.node,n=e.scope;if(!function(e){var t=e.params.length;return t>0&&R(e.params[t-1])}(t))return!1;var r=t.params.pop().argument,i=os("arguments");if(mt(r)){var a=Is("let",[Os(r,r=n.generateUidIdentifier("ref"))]);t.body.body.unshift(a)}var o={references:[],offset:t.params.length,argumentsNode:i,outerBinding:n.getBindingIdentifier(r.name),candidates:[],name:r.name,deopted:!1};if(e.traverse(oM,o),!o.deopted&&!o.references.length){for(var s=0,u=o.candidates;s<u.length;s++){var l=u[s],c=l.path,p=l.cause,h=gp(i);switch(p){case"indexGetter":sM(c,h,o.offset);break;case"lengthGetter":uM(c,h,o.offset);break;default:c.replaceWith(h)}}return!0}o.references=o.references.concat(o.candidates.map((function(e){return e.path})));var f,d,m=cs(t.params.length),y=n.generateUidIdentifier("key"),v=n.generateUidIdentifier("len");t.params.length?(f=Vo("-",gp(y),gp(m)),d=Jo(Vo(">",gp(v),gp(m)),Vo("-",gp(v),gp(m)),cs(0))):(f=os(y.name),d=os(v.name));var g=tM({ARGUMENTS:i,ARRAY_KEY:f,ARRAY_LEN:d,START:m,ARRAY:r,KEY:y,LEN:v});if(o.deopted)t.body.body.unshift(g);else{var b=e.getEarliestCommonAncestorFrom(o.references).getStatementParent();b.findParent((function(e){if(!e.isLoop())return e.isFunction();b=e})),b.insertBefore(g)}return!0}var cM=cF((function(e,t){e.assertVersion(7);var n=t.loose;return{name:"transform-parameters",visitor:{Function:function(e){e.isArrowFunctionExpression()&&e.get("params").some((function(e){return e.isRestElement()||e.isAssignmentPattern()}))&&e.arrowFunctionToExpression();var t=lM(e),r=eM(e,n);(t||r)&&e.scope.crawl()}}}})),pM=cF((function(e){return e.assertVersion(7),{name:"transform-property-literals",visitor:{ObjectProperty:{exit:function(e){var t=e.node,n=t.key;t.computed||!S(n)||Ef(n.name)||(t.key=ls(n.name))}}}}})),hM=cF((function(e){return e.assertVersion(7),{name:"transform-property-mutators",visitor:{ObjectExpression:function(e,t){for(var n=e.node,r=!1,i=0,a=n.properties;i<a.length;i++){var o=a[i];if("get"===o.kind||"set"===o.kind){r=!0;break}}if(r){var s={};n.properties=n.properties.filter((function(e){return!!(e.computed||"get"!==e.kind&&"set"!==e.kind)||(gB(s,e,null,t),!1)})),e.replaceWith(Xo(ms(os("Object"),os("defineProperties")),[n,AB(s)]))}}}}})),fM=cF((function(e){function t(e){return ht(Uh(e,e.key),{value:"__proto__"})}function n(e){var t=e.left;return _(t)&&ht(Uh(t,t.property),{value:"__proto__"})}function r(e,t,n){return es(Xo(n.addHelper("defaults"),[t,e.right]))}return e.assertVersion(7),{name:"transform-proto-to-assign",visitor:{AssignmentExpression:function(e,t){if(n(e.node)){var i=[],a=e.node.left.object,o=e.scope.maybeGenerateMemoised(a);o&&i.push(es(Uo("=",o,a))),i.push(r(e.node,gp(o||a),t)),o&&i.push(gp(o)),e.replaceWithMultiple(i)}},ExpressionStatement:function(e,t){var i=e.node.expression;u(i,{operator:"="})&&n(i)&&e.replaceWith(r(i,i.left.object,t))},ObjectExpression:function(e,n){for(var r,i=e.node,a=0,o=i.properties;a<o.length;a++){var s=o[a];t(s)&&(r=s.value,yI(i.properties,s))}if(r){var u=[gs([]),r];i.properties.length&&u.push(i),e.replaceWith(Xo(n.addHelper("extends"),u))}}}}})),dM=cF((function(e,t){e.assertVersion(7);var n=t.allowMutablePropsOnTags;if(null!=n&&!Array.isArray(n))throw new Error(".allowMutablePropsOnTags must be an array, null, or undefined.");var r=new WeakSet,i={enter:function(e,t){var n=function(){t.isImmutable=!1,e.stop()};if(e.isJSXClosingElement())e.skip();else{if(e.isJSXIdentifier({name:"ref"})&&e.parentPath.isJSXAttribute({name:e.node}))return n();if(!(e.isJSXIdentifier()||e.isIdentifier()||e.isJSXMemberExpression()||e.isImmutable())){if(e.isPure()){var r=e.evaluate();if(r.confident){var i=r.value;if(!(!t.mutablePropsAllowed&&i&&"object"==typeof i||"function"==typeof i))return void e.skip()}else if(S(r.deopt))return}n()}}}};return{name:"transform-react-constant-elements",visitor:{JSXElement:function(e){if(!r.has(e.node)){r.add(e.node);var t={isImmutable:!0};if(null!=n){for(var a=e.get("openingElement.name");a.isJSXMemberExpression();)a=a.get("property");var o=a.node.name;t.mutablePropsAllowed=n.indexOf(o)>-1}if(e.traverse(i,t),t.isImmutable){var s=e.hoist();s&&RF(s)}}}}}})),mM=cF((function(e){function t(e,t){for(var n=t.arguments[0].properties,r=!0,i=0;i<n.length;i++){if(ht(Uh(n[i]),{value:"displayName"})){r=!1;break}}r&&n.unshift(Es(os("displayName"),ls(e)))}e.assertVersion(7);var n=St("React.createClass"),r=function(e){return"createReactClass"===e.name};function i(e){if(!e||!h(e))return!1;if(!n(e.callee)&&!r(e.callee))return!1;var t=e.arguments;return 1===t.length&&!!B(t[0])}return{name:"transform-react-display-name",visitor:{ExportDefaultDeclaration:function(e,n){var r=e.node;if(i(r.declaration)){var a=n.filename||"unknown",o=Yx.basename(a,Yx.extname(a));"index"===o&&(o=Yx.basename(Yx.dirname(a))),t(o,r.declaration)}},CallExpression:function(e){var n,r=e.node;i(r)&&(e.find((function(e){if(e.isAssignmentExpression())n=e.node.left;else if(e.isObjectProperty())n=e.node.key;else if(e.isVariableDeclarator())n=e.node.id;else if(e.isStatement())return!0;if(n)return!0})),n&&(_(n)&&(n=n.property),S(n)&&t(n.name,r)))}}}}));function yM(e){var t={JSXNamespacedName:function(t){if(e.throwIfNamespace)throw t.buildCodeFrameError("Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can turn on the 'throwIfNamespace' flag to bypass this warning.")},JSXSpreadChild:function(e){throw e.buildCodeFrameError("Spread children are not supported in React.")}};return t.JSXElement={exit:function(t,i){var a=function(t,i){if(e.filter&&!e.filter(t.node,i))return;var a=t.get("openingElement");a.parent.children=Df.buildChildren(a.parent);var o,s=function e(t,n){if(Oe(t)){if("this"===t.name&&vf(t,n))return ws();if(!ga.keyword.isIdentifierNameES6(t.name))return ls(t.name);t.type="Identifier"}else{if(Be(t))return ms(e(t.object,t),e(t.property,t));if(Ne(t))return ls(t.namespace.name+":"+t.name.name)}return t}(a.node.name,a.node),u=[];S(s)?o=s.name:ht(s)&&(o=s.value);var l={tagExpr:s,tagName:o,args:u};e.pre&&e.pre(l,i);var c=a.node.attributes;c=c.length?function(e,t){var i=[],a=[],o=t.opts.useSpread,s=void 0!==o&&o;if("boolean"!=typeof s)throw new Error("transform-react-jsx currently only accepts a boolean option for useSpread (defaults to false)");var u=t.opts.useBuiltIns||!1;if("boolean"!=typeof u)throw new Error("transform-react-jsx currently only accepts a boolean option for useBuiltIns (defaults to false)");if(s&&u)throw new Error("transform-react-jsx currently only accepts useBuiltIns or useSpread but not both");if(s){return gs(e.map(n))}for(;e.length;){var l=e.shift();Me(l)?(i=r(i,a),a.push(l.argument)):i.push(n(l))}if(r(i,a),1===a.length)e=a[0];else{B(a[0])||a.unshift(gs([]));var c=u?ms(os("Object"),os("assign")):t.addHelper("extends");e=Xo(c,a)}return e}(c,i):ps();u.push.apply(u,[c].concat(t.node.children)),e.post&&e.post(l,i);return l.call||Xo(l.callee,u)}(t,i);a&&t.replaceWith(pf(a,t.node))}},t.JSXFragment={exit:function(t,n){if(e.compat)throw t.buildCodeFrameError("Fragment tags are only supported in React 16 and up.");var r=function(t,n){if(e.filter&&!e.filter(t.node,n))return;var r=t.get("openingElement");r.parent.children=Df.buildChildren(r.parent);var i=[],a={tagExpr:n.get("jsxFragIdentifier")(),tagName:null,args:i};e.pre&&e.pre(a,n);i.push.apply(i,[ps()].concat(t.node.children)),e.post&&e.post(a,n);return n.set("usedFragment",!0),a.call||Xo(a.callee,i)}(t,n);r&&t.replaceWith(pf(r,t.node))}},t;function n(e){var t,n=function(e){return Ie(e)?e.expression:e}(e.value||hs(!0));if(Me(e))return eu(e.argument);C(n)&&!Ie(e.value)&&(n.value=n.value.replace(/\n\s+/g," "),null==(t=n.extra)||delete t.raw);return Ne(e.name)?e.name=ls(e.name.namespace.name+":"+e.name.name.name):ga.keyword.isIdentifierNameES6(e.name.name)?e.name.type="Identifier":e.name=ls(e.name.name),pf(Es(e.name,n),e)}function r(e,t){return e.length?(t.push(gs(e)),[]):e}}var vM=cF((function(e){function t(e,t){return Fe(e)&&Oe(e.name,{name:t})}return e.assertVersion(7),{name:"transform-react-inline-elements",visitor:yM({filter:function(e){return e.openingElement&&!function(e){for(var n=0;n<e.length;n++){var r=e[n];if(Me(r))return!0;if(t(r,"ref"))return!0}return!1}(e.openingElement.attributes)},pre:function(e){var t=e.tagName,n=e.args;Df.isCompatTag(t)?n.push(ls(t)):n.push(e.tagExpr)},post:function(e,t){e.callee=t.addHelper("jsx");var n=e.args[1],r=!1;if(B(n)){var i=n.properties.findIndex((function(e){return S(e.key,{name:"key"})}));i>-1&&(e.args.splice(2,0,n.properties[i].value),n.properties.splice(i,1),r=!0)}else P(n)&&e.args.splice(1,1,gs([]));!r&&e.args.length>2&&e.args.splice(2,0,ks("void",cs(0)))}})}})),gM=cF((function(e,t){e.assertVersion(7);var n=void 0===t.throwIfNamespace||!!t.throwIfNamespace,r=t.pragma||"React.createElement",i=t.pragmaFrag||"React.Fragment",a=/\*?\s*@jsx\s+([^\s]+)/,o=/\*?\s*@jsxFrag\s+([^\s]+)/,s=function(e){return function(){return e.split(".").map((function(e){return os(e)})).reduce((function(e,t){return ms(e,t)}))}},u=yM({pre:function(e){var t=e.tagName,n=e.args;Df.isCompatTag(t)?n.push(ls(t)):n.push(e.tagExpr)},post:function(e,t){e.callee=t.get("jsxIdentifier")()},throwIfNamespace:n});return u.Program={enter:function(e,n){var u=n.file,l=r,c=i,p=!!t.pragma,h=!!t.pragmaFrag;if(u.ast.comments)for(var f=0,d=u.ast.comments;f<d.length;f++){var m=d[f],y=a.exec(m.value);y&&(l=y[1],p=!0);var v=o.exec(m.value);v&&(c=v[1],h=!0)}n.set("jsxIdentifier",s(l)),n.set("jsxFragIdentifier",s(c)),n.set("usedFragment",!1),n.set("pragmaSet",p),n.set("pragmaFragSet",h)},exit:function(e,t){if(t.get("pragmaSet")&&t.get("usedFragment")&&!t.get("pragmaFragSet"))throw new Error("transform-react-jsx: pragma has been set but pragmafrag has not been set")}},u.JSXAttribute=function(e){ke(e.node.value)&&(e.node.value=gl(e.node.value))},{name:"transform-react-jsx",inherits:xF,visitor:u}})),bM=cF((function(e){return e.assertVersion(7),{name:"transform-react-jsx-compat",manipulateOptions:function(e,t){t.plugins.push("jsx")},visitor:yM({pre:function(e){e.callee=e.tagExpr},post:function(e){Df.isCompatTag(e.tagName)&&(e.call=Xo(ms(ms(os("React"),os("DOM")),e.tagExpr,ht(e.tagExpr)),e.args))},compat:!0})}})),EM=cF((function(e){return e.assertVersion(7),{name:"transform-react-jsx-self",visitor:{JSXOpeningElement:function(e){var t=e.node,n=El("__self"),r=ws();t.attributes.push(dl(n,gl(r)))}}}})),AM=cF((function(e){return e.assertVersion(7),{name:"transform-react-jsx-source",visitor:{JSXOpeningElement:function(e,t){var n=El("__source"),r=e.container.openingElement.loc;if(r){for(var i=e.container.openingElement.attributes,a=0;a<i.length;a++){var o=i[a].name;if(o&&"__source"===o.name)return}if(!t.fileNameIdentifier){var s=t.filename||"",u=e.scope.generateUidIdentifier("_jsxFileName"),l=e.hub.getScope();l&&l.push({id:u,init:ls(s)}),t.fileNameIdentifier=u}var c=function(e,t){var n=null!=t?cs(t):ps();return gs([Es(os("fileName"),e),Es(os("lineNumber"),n)])}(t.fileNameIdentifier,r.start.line);i.push(dl(n,gl(c)))}}}}})),DM=Vt((function(e,t){t.__esModule=!0,t.wrapWithTypes=function(e,t){return function(){var r=n;n=e;try{for(var i=arguments.length,a=new Array(i),o=0;o<i;o++)a[o]=arguments[o];return t.apply(this,a)}finally{n=r}}},t.getTypes=r,t.runtimeProperty=function(e){var t=r();return t.memberExpression(t.identifier("regeneratorRuntime"),t.identifier(e),!1)},t.isReference=function(e){return e.isReferenced()||e.parentPath.isAssignmentExpression({left:e.node})},t.replaceWithOrRemove=function(e,t){t?e.replaceWith(t):e.remove()};var n=null;function r(){return n}}));Ut(DM);DM.wrapWithTypes,DM.getTypes,DM.runtimeProperty,DM.isReference,DM.replaceWithOrRemove;var SM=Vt((function(e,t){var n=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(DM);var r=Object.prototype.hasOwnProperty;t.hoist=function(e){var t=n.getTypes();t.assertFunction(e.node);var i={};function a(e,n){var r=e.node,a=e.scope;t.assertVariableDeclaration(r);var o=[];return r.declarations.forEach((function(e){i[e.id.name]=t.identifier(e.id.name),a.removeBinding(e.id.name),e.init?o.push(t.assignmentExpression("=",e.id,e.init)):n&&o.push(e.id)})),0===o.length?null:1===o.length?o[0]:t.sequenceExpression(o)}e.get("body").traverse({VariableDeclaration:{exit:function(e){var r=a(e,!1);null===r?e.remove():n.replaceWithOrRemove(e,t.expressionStatement(r)),e.skip()}},ForStatement:function(e){var t=e.get("init");t.isVariableDeclaration()&&n.replaceWithOrRemove(t,a(t,!1))},ForXStatement:function(e){var t=e.get("left");t.isVariableDeclaration()&&n.replaceWithOrRemove(t,a(t,!0))},FunctionDeclaration:function(e){var r=e.node;i[r.id.name]=r.id;var a=t.expressionStatement(t.assignmentExpression("=",t.clone(r.id),t.functionExpression(e.scope.generateUidIdentifierBasedOnNode(r),r.params,r.body,r.generator,r.expression)));e.parentPath.isBlockStatement()?(e.parentPath.unshiftContainer("body",a),e.remove()):n.replaceWithOrRemove(e,a),e.scope.removeBinding(r.id.name),e.skip()},FunctionExpression:function(e){e.skip()},ArrowFunctionExpression:function(e){e.skip()}});var o={};e.get("params").forEach((function(e){var n=e.node;t.isIdentifier(n)&&(o[n.name]=n)}));var s=[];return Object.keys(i).forEach((function(e){r.call(o,e)||s.push(t.variableDeclarator(i[e],null))})),0===s.length?null:t.variableDeclaration("var",s)}}));Ut(SM);SM.hoist;var xM=Vt((function(e,t){var n,r=(n=ZI)&&n.__esModule?n:{default:n};function i(){r.default.ok(this instanceof i)}function a(e){i.call(this),(0,DM.getTypes)().assertLiteral(e),this.returnLoc=e}function o(e,t,n){i.call(this);var r=(0,DM.getTypes)();r.assertLiteral(e),r.assertLiteral(t),n?r.assertIdentifier(n):n=null,this.breakLoc=e,this.continueLoc=t,this.label=n}function s(e){i.call(this),(0,DM.getTypes)().assertLiteral(e),this.breakLoc=e}function u(e,t,n){i.call(this),(0,DM.getTypes)().assertLiteral(e),t?r.default.ok(t instanceof l):t=null,n?r.default.ok(n instanceof c):n=null,r.default.ok(t||n),this.firstLoc=e,this.catchEntry=t,this.finallyEntry=n}function l(e,t){i.call(this);var n=(0,DM.getTypes)();n.assertLiteral(e),n.assertIdentifier(t),this.firstLoc=e,this.paramId=t}function c(e,t){i.call(this);var n=(0,DM.getTypes)();n.assertLiteral(e),n.assertLiteral(t),this.firstLoc=e,this.afterLoc=t}function p(e,t){i.call(this);var n=(0,DM.getTypes)();n.assertLiteral(e),n.assertIdentifier(t),this.breakLoc=e,this.label=t}function h(e){r.default.ok(this instanceof h),r.default.ok(e instanceof GM.Emitter),this.emitter=e,this.entryStack=[new a(e.finalLoc)]}HI(a,i),t.FunctionEntry=a,HI(o,i),t.LoopEntry=o,HI(s,i),t.SwitchEntry=s,HI(u,i),t.TryEntry=u,HI(l,i),t.CatchEntry=l,HI(c,i),t.FinallyEntry=c,HI(p,i),t.LabeledEntry=p;var f=h.prototype;t.LeapManager=h,f.withEntry=function(e,t){r.default.ok(e instanceof i),this.entryStack.push(e);try{t.call(this.emitter)}finally{var n=this.entryStack.pop();r.default.strictEqual(n,e)}},f._findLeapLocation=function(e,t){for(var n=this.entryStack.length-1;n>=0;--n){var r=this.entryStack[n],i=r[e];if(i)if(t){if(r.label&&r.label.name===t.name)return i}else if(!(r instanceof p))return i}return null},f.getBreakLoc=function(e){return this._findLeapLocation("breakLoc",e)},f.getContinueLoc=function(e){return this._findLeapLocation("continueLoc",e)}}));Ut(xM);xM.FunctionEntry,xM.LoopEntry,xM.SwitchEntry,xM.TryEntry,xM.CatchEntry,xM.FinallyEntry,xM.LabeledEntry,xM.LeapManager;var TM=Object,CM=Object.defineProperty,wM=Object.create;function PM(e,t,n){if(CM)try{CM.call(TM,e,t,{value:n})}catch(r){e[t]=n}else e[t]=n}function FM(e){return e&&(PM(e,"call",e.call),PM(e,"apply",e.apply)),e}FM(CM),FM(wM);var kM=FM(Object.prototype.hasOwnProperty),_M=FM(Number.prototype.toString),IM=FM(String.prototype.slice),OM=function(){};function BM(e){return wM?wM.call(TM,e):(OM.prototype=e||null,new OM)}var NM=Math.random,MM=BM(null);function RM(){do{var e=LM(IM.call(_M.call(NM(),36),2))}while(kM.call(MM,e));return MM[e]=e}function LM(e){var t={};return t[e]=!0,Object.keys(t)[0]}var jM=Object.getOwnPropertyNames;function UM(e){return BM(null)}Object.getOwnPropertyNames=function(e){for(var t=jM(e),n=0,r=0,i=t.length;n<i;++n)kM.call(MM,t[n])||(n>r&&(t[r]=t[n]),++r);return t.length=r,t};var VM=function(e){var t=RM(),n=BM(null);function r(r){return kM.call(r,t)||function(r){var i;PM(r,t,(function(t,a){if(t===n)return a?i=null:i||(i=e(r))}))}(r),r[t](n)}return e=e||UM,r.forget=function(e){kM.call(e,t)&&e[t](n,!0)},r},WM=Vt((function(e,t){var n,r=(n=ZI)&&n.__esModule?n:{default:n};var i=VM(),a=Object.prototype.hasOwnProperty;function o(e,t){function n(e){var t=(0,DM.getTypes)();t.assertNode(e);var n=!1;function i(e){return n||(Array.isArray(e)?e.some(i):t.isNode(e)&&(r.default.strictEqual(n,!1),n=o(e))),n}var a=t.VISITOR_KEYS[e.type];if(a)for(var s=0;s<a.length;s++){i(e[a[s]])}return n}function o(r){(0,DM.getTypes)().assertNode(r);var o=i(r);return a.call(o,e)?o[e]:a.call(s,r.type)?o[e]=!1:a.call(t,r.type)?o[e]=!0:o[e]=n(r)}return o.onlyChildren=n,o}var s={FunctionExpression:!0,ArrowFunctionExpression:!0},u={CallExpression:!0,ForInStatement:!0,UnaryExpression:!0,BinaryExpression:!0,AssignmentExpression:!0,UpdateExpression:!0,NewExpression:!0},l={YieldExpression:!0,BreakStatement:!0,ContinueStatement:!0,ReturnStatement:!0,ThrowStatement:!0};for(var c in l)a.call(l,c)&&(u[c]=l[c]);t.hasSideEffects=o("hasSideEffects",u),t.containsLeap=o("containsLeap",l)}));Ut(WM);WM.hasSideEffects,WM.containsLeap;var GM=Vt((function(e,t){var n,r=(n=ZI)&&n.__esModule?n:{default:n},i=s(xM),a=s(WM),o=s(DM);function s(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}var u=Object.prototype.hasOwnProperty;function l(e){r.default.ok(this instanceof l),o.getTypes().assertIdentifier(e),this.nextTempId=0,this.contextId=e,this.listing=[],this.marked=[!0],this.insertedLocs=new Set,this.finalLoc=this.loc(),this.tryEntries=[],this.leapManager=new i.LeapManager(this)}var c=l.prototype;function p(e){return new Error("all declarations should have been transformed into assignments before the Exploder began its work: "+JSON.stringify(e))}t.Emitter=l,c.loc=function(){var e=o.getTypes().numericLiteral(-1);return this.insertedLocs.add(e),e},c.getInsertedLocs=function(){return this.insertedLocs},c.getContextId=function(){return o.getTypes().clone(this.contextId)},c.mark=function(e){o.getTypes().assertLiteral(e);var t=this.listing.length;return-1===e.value?e.value=t:r.default.strictEqual(e.value,t),this.marked[t]=!0,e},c.emit=function(e){var t=o.getTypes();t.isExpression(e)&&(e=t.expressionStatement(e)),t.assertStatement(e),this.listing.push(e)},c.emitAssign=function(e,t){return this.emit(this.assign(e,t)),e},c.assign=function(e,t){var n=o.getTypes();return n.expressionStatement(n.assignmentExpression("=",n.cloneDeep(e),t))},c.contextProperty=function(e,t){var n=o.getTypes();return n.memberExpression(this.getContextId(),t?n.stringLiteral(e):n.identifier(e),!!t)},c.stop=function(e){e&&this.setReturnValue(e),this.jump(this.finalLoc)},c.setReturnValue=function(e){o.getTypes().assertExpression(e.value),this.emitAssign(this.contextProperty("rval"),this.explodeExpression(e))},c.clearPendingException=function(e,t){var n=o.getTypes();n.assertLiteral(e);var r=n.callExpression(this.contextProperty("catch",!0),[n.clone(e)]);t?this.emitAssign(t,r):this.emit(r)},c.jump=function(e){this.emitAssign(this.contextProperty("next"),e),this.emit(o.getTypes().breakStatement())},c.jumpIf=function(e,t){var n=o.getTypes();n.assertExpression(e),n.assertLiteral(t),this.emit(n.ifStatement(e,n.blockStatement([this.assign(this.contextProperty("next"),t),n.breakStatement()])))},c.jumpIfNot=function(e,t){var n,r=o.getTypes();r.assertExpression(e),r.assertLiteral(t),n=r.isUnaryExpression(e)&&"!"===e.operator?e.argument:r.unaryExpression("!",e),this.emit(r.ifStatement(n,r.blockStatement([this.assign(this.contextProperty("next"),t),r.breakStatement()])))},c.makeTempVar=function(){return this.contextProperty("t"+this.nextTempId++)},c.getContextFunction=function(e){var t=o.getTypes();return t.functionExpression(e||null,[this.getContextId()],t.blockStatement([this.getDispatchLoop()]),!1,!1)},c.getDispatchLoop=function(){var e,t=this,n=o.getTypes(),r=[],i=!1;return t.listing.forEach((function(a,o){t.marked.hasOwnProperty(o)&&(r.push(n.switchCase(n.numericLiteral(o),e=[])),i=!1),i||(e.push(a),n.isCompletionStatement(a)&&(i=!0))})),this.finalLoc.value=this.listing.length,r.push(n.switchCase(this.finalLoc,[]),n.switchCase(n.stringLiteral("end"),[n.returnStatement(n.callExpression(this.contextProperty("stop"),[]))])),n.whileStatement(n.numericLiteral(1),n.switchStatement(n.assignmentExpression("=",this.contextProperty("prev"),this.contextProperty("next")),r))},c.getTryLocsList=function(){if(0===this.tryEntries.length)return null;var e=o.getTypes(),t=0;return e.arrayExpression(this.tryEntries.map((function(n){var i=n.firstLoc.value;r.default.ok(i>=t,"try entries out of order"),t=i;var a=n.catchEntry,o=n.finallyEntry,s=[n.firstLoc,a?a.firstLoc:null];return o&&(s[2]=o.firstLoc,s[3]=o.afterLoc),e.arrayExpression(s.map((function(t){return t&&e.clone(t)})))})))},c.explode=function(e,t){var n=o.getTypes(),r=e.node;if(n.assertNode(r),n.isDeclaration(r))throw p(r);if(n.isStatement(r))return this.explodeStatement(e);if(n.isExpression(r))return this.explodeExpression(e,t);switch(r.type){case"Program":return e.get("body").map(this.explodeStatement,this);case"VariableDeclarator":throw p(r);case"Property":case"SwitchCase":case"CatchClause":throw new Error(r.type+" nodes should be handled by their parents");default:throw new Error("unknown Node of type "+JSON.stringify(r.type))}},c.explodeStatement=function(e,t){var n,s,u,l=o.getTypes(),c=e.node,p=this;if(l.assertStatement(c),t?l.assertIdentifier(t):t=null,l.isBlockStatement(c))e.get("body").forEach((function(e){p.explodeStatement(e)}));else if(a.containsLeap(c))switch(c.type){case"ExpressionStatement":p.explodeExpression(e.get("expression"),!0);break;case"LabeledStatement":s=this.loc(),p.leapManager.withEntry(new i.LabeledEntry(s,c.label),(function(){p.explodeStatement(e.get("body"),c.label)})),p.mark(s);break;case"WhileStatement":n=this.loc(),s=this.loc(),p.mark(n),p.jumpIfNot(p.explodeExpression(e.get("test")),s),p.leapManager.withEntry(new i.LoopEntry(s,n,t),(function(){p.explodeStatement(e.get("body"))})),p.jump(n),p.mark(s);break;case"DoWhileStatement":var f=this.loc(),d=this.loc();s=this.loc(),p.mark(f),p.leapManager.withEntry(new i.LoopEntry(s,d,t),(function(){p.explode(e.get("body"))})),p.mark(d),p.jumpIf(p.explodeExpression(e.get("test")),f),p.mark(s);break;case"ForStatement":u=this.loc();var m=this.loc();s=this.loc(),c.init&&p.explode(e.get("init"),!0),p.mark(u),c.test&&p.jumpIfNot(p.explodeExpression(e.get("test")),s),p.leapManager.withEntry(new i.LoopEntry(s,m,t),(function(){p.explodeStatement(e.get("body"))})),p.mark(m),c.update&&p.explode(e.get("update"),!0),p.jump(u),p.mark(s);break;case"TypeCastExpression":return p.explodeExpression(e.get("expression"));case"ForInStatement":u=this.loc(),s=this.loc();var y=p.makeTempVar();p.emitAssign(y,l.callExpression(o.runtimeProperty("keys"),[p.explodeExpression(e.get("right"))])),p.mark(u);var v=p.makeTempVar();p.jumpIf(l.memberExpression(l.assignmentExpression("=",v,l.callExpression(l.cloneDeep(y),[])),l.identifier("done"),!1),s),p.emitAssign(c.left,l.memberExpression(l.cloneDeep(v),l.identifier("value"),!1)),p.leapManager.withEntry(new i.LoopEntry(s,u,t),(function(){p.explodeStatement(e.get("body"))})),p.jump(u),p.mark(s);break;case"BreakStatement":p.emitAbruptCompletion({type:"break",target:p.leapManager.getBreakLoc(c.label)});break;case"ContinueStatement":p.emitAbruptCompletion({type:"continue",target:p.leapManager.getContinueLoc(c.label)});break;case"SwitchStatement":var g=p.emitAssign(p.makeTempVar(),p.explodeExpression(e.get("discriminant")));s=this.loc();for(var b=this.loc(),E=b,A=[],D=c.cases||[],S=D.length-1;S>=0;--S){var x=D[S];l.assertSwitchCase(x),x.test?E=l.conditionalExpression(l.binaryExpression("===",l.cloneDeep(g),x.test),A[S]=this.loc(),E):A[S]=b}var T=e.get("discriminant");o.replaceWithOrRemove(T,E),p.jump(p.explodeExpression(T)),p.leapManager.withEntry(new i.SwitchEntry(s),(function(){e.get("cases").forEach((function(e){var t=e.key;p.mark(A[t]),e.get("consequent").forEach((function(e){p.explodeStatement(e)}))}))})),p.mark(s),-1===b.value&&(p.mark(b),r.default.strictEqual(s.value,b.value));break;case"IfStatement":var C=c.alternate&&this.loc();s=this.loc(),p.jumpIfNot(p.explodeExpression(e.get("test")),C||s),p.explodeStatement(e.get("consequent")),C&&(p.jump(s),p.mark(C),p.explodeStatement(e.get("alternate"))),p.mark(s);break;case"ReturnStatement":p.emitAbruptCompletion({type:"return",value:p.explodeExpression(e.get("argument"))});break;case"WithStatement":throw new Error("WithStatement not supported in generator functions.");case"TryStatement":s=this.loc();var w=c.handler,P=w&&this.loc(),F=P&&new i.CatchEntry(P,w.param),k=c.finalizer&&this.loc(),_=k&&new i.FinallyEntry(k,s),I=new i.TryEntry(p.getUnmarkedCurrentLoc(),F,_);p.tryEntries.push(I),p.updateContextPrevLoc(I.firstLoc),p.leapManager.withEntry(I,(function(){if(p.explodeStatement(e.get("block")),P){k?p.jump(k):p.jump(s),p.updateContextPrevLoc(p.mark(P));var t=e.get("handler.body"),n=p.makeTempVar();p.clearPendingException(I.firstLoc,n),t.traverse(h,{getSafeParam:function(){return l.cloneDeep(n)},catchParamName:w.param.name}),p.leapManager.withEntry(F,(function(){p.explodeStatement(t)}))}k&&(p.updateContextPrevLoc(p.mark(k)),p.leapManager.withEntry(_,(function(){p.explodeStatement(e.get("finalizer"))})),p.emit(l.returnStatement(l.callExpression(p.contextProperty("finish"),[_.firstLoc]))))})),p.mark(s);break;case"ThrowStatement":p.emit(l.throwStatement(p.explodeExpression(e.get("argument"))));break;default:throw new Error("unknown Statement of type "+JSON.stringify(c.type))}else p.emit(c)};var h={Identifier:function(e,t){e.node.name===t.catchParamName&&o.isReference(e)&&o.replaceWithOrRemove(e,t.getSafeParam())},Scope:function(e,t){e.scope.hasOwnBinding(t.catchParamName)&&e.skip()}};c.emitAbruptCompletion=function(e){(function(e){var t=e.type;if("normal"===t)return!u.call(e,"target");if("break"===t||"continue"===t)return!u.call(e,"value")&&o.getTypes().isLiteral(e.target);if("return"===t||"throw"===t)return u.call(e,"value")&&!u.call(e,"target");return!1})(e)||r.default.ok(!1,"invalid completion record: "+JSON.stringify(e)),r.default.notStrictEqual(e.type,"normal","normal completions are not abrupt");var t=o.getTypes(),n=[t.stringLiteral(e.type)];"break"===e.type||"continue"===e.type?(t.assertLiteral(e.target),n[1]=this.insertedLocs.has(e.target)?e.target:t.cloneDeep(e.target)):"return"!==e.type&&"throw"!==e.type||e.value&&(t.assertExpression(e.value),n[1]=this.insertedLocs.has(e.value)?e.value:t.cloneDeep(e.value)),this.emit(t.returnStatement(t.callExpression(this.contextProperty("abrupt"),n)))},c.getUnmarkedCurrentLoc=function(){return o.getTypes().numericLiteral(this.listing.length)},c.updateContextPrevLoc=function(e){var t=o.getTypes();e?(t.assertLiteral(e),-1===e.value?e.value=this.listing.length:r.default.strictEqual(e.value,this.listing.length)):e=this.getUnmarkedCurrentLoc(),this.emitAssign(this.contextProperty("prev"),e)},c.explodeExpression=function(e,t){var n=o.getTypes(),i=e.node;if(!i)return i;n.assertExpression(i);var s,u,l=this;function c(e){if(n.assertExpression(e),!t)return e;l.emit(e)}if(!a.containsLeap(i))return c(i);var p=a.containsLeap.onlyChildren(i);function h(e,t,i){r.default.ok(!i||!e,"Ignoring the result of a child expression but forcing it to be assigned to a temporary variable?");var a=l.explodeExpression(t,i);return i||(e||p&&!n.isLiteral(a))&&(a=l.emitAssign(e||l.makeTempVar(),a)),a}switch(i.type){case"MemberExpression":return c(n.memberExpression(l.explodeExpression(e.get("object")),i.computed?h(null,e.get("property")):i.property,i.computed));case"CallExpression":var f,d=e.get("callee"),m=e.get("arguments"),y=[],v=!1;if(m.forEach((function(e){v=v||a.containsLeap(e.node)})),n.isMemberExpression(d.node))if(v){var g=h(l.makeTempVar(),d.get("object")),b=d.node.computed?h(null,d.get("property")):d.node.property;y.unshift(g),f=n.memberExpression(n.memberExpression(n.cloneDeep(g),b,d.node.computed),n.identifier("call"),!1)}else f=l.explodeExpression(d);else f=h(null,d),n.isMemberExpression(f)&&(f=n.sequenceExpression([n.numericLiteral(0),n.cloneDeep(f)]));return m.forEach((function(e){y.push(h(null,e))})),c(n.callExpression(f,y.map((function(e){return n.cloneDeep(e)}))));case"NewExpression":return c(n.newExpression(h(null,e.get("callee")),e.get("arguments").map((function(e){return h(null,e)}))));case"ObjectExpression":return c(n.objectExpression(e.get("properties").map((function(e){return e.isObjectProperty()?n.objectProperty(e.node.key,h(null,e.get("value")),e.node.computed):e.node}))));case"ArrayExpression":return c(n.arrayExpression(e.get("elements").map((function(e){return h(null,e)}))));case"SequenceExpression":var E=i.expressions.length-1;return e.get("expressions").forEach((function(e){e.key===E?s=l.explodeExpression(e,t):l.explodeExpression(e,!0)})),s;case"LogicalExpression":u=this.loc(),t||(s=l.makeTempVar());var A=h(s,e.get("left"));return"&&"===i.operator?l.jumpIfNot(A,u):(r.default.strictEqual(i.operator,"||"),l.jumpIf(A,u)),h(s,e.get("right"),t),l.mark(u),s;case"ConditionalExpression":var D=this.loc();u=this.loc();var S=l.explodeExpression(e.get("test"));return l.jumpIfNot(S,D),t||(s=l.makeTempVar()),h(s,e.get("consequent"),t),l.jump(u),l.mark(D),h(s,e.get("alternate"),t),l.mark(u),s;case"UnaryExpression":return c(n.unaryExpression(i.operator,l.explodeExpression(e.get("argument")),!!i.prefix));case"BinaryExpression":return c(n.binaryExpression(i.operator,h(null,e.get("left")),h(null,e.get("right"))));case"AssignmentExpression":if("="===i.operator)return c(n.assignmentExpression(i.operator,l.explodeExpression(e.get("left")),l.explodeExpression(e.get("right"))));var x=l.explodeExpression(e.get("left")),T=l.emitAssign(l.makeTempVar(),x);return c(n.assignmentExpression("=",n.cloneDeep(x),n.assignmentExpression(i.operator,n.cloneDeep(T),l.explodeExpression(e.get("right")))));case"UpdateExpression":return c(n.updateExpression(i.operator,l.explodeExpression(e.get("argument")),i.prefix));case"YieldExpression":u=this.loc();var C=i.argument&&l.explodeExpression(e.get("argument"));if(C&&i.delegate){var w=l.makeTempVar(),P=n.returnStatement(n.callExpression(l.contextProperty("delegateYield"),[C,n.stringLiteral(w.property.name),u]));return P.loc=i.loc,l.emit(P),l.mark(u),w}l.emitAssign(l.contextProperty("next"),u);var F=n.returnStatement(n.cloneDeep(C)||null);return F.loc=i.loc,l.emit(F),l.mark(u),l.contextProperty("sent");default:throw new Error("unknown Expression of type "+JSON.stringify(i.type))}}}));Ut(GM);GM.Emitter;var HM=Vt((function(e,t){t.__esModule=!0,t.default=function(e){var t=n.getTypes();if(!e.node||!t.isFunction(e.node))throw new Error("replaceShorthandObjectMethod can only be called on Function AST node paths.");if(!t.isObjectMethod(e.node))return e;if(!e.node.generator)return e;var r=e.node.params.map((function(e){return t.cloneDeep(e)})),i=t.functionExpression(null,r,t.cloneDeep(e.node.body),e.node.generator,e.node.async);return n.replaceWithOrRemove(e,t.objectProperty(t.cloneDeep(e.node.key),i,e.node.computed,!1)),e.get("value")};var n=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(DM)}));Ut(HM);var qM=Vt((function(e,t){var n=a(ZI),r=a(HM),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(DM);function a(e){return e&&e.__esModule?e:{default:e}}function o(e,t){return e.generator?e.async?!1!==t.opts.asyncGenerators:!1!==t.opts.generators:!!e.async&&!1!==t.opts.async}t.getVisitor=function(e){var t=e.types;return{Method:function(e,n){var r=e.node;if(o(r,n)){var i=t.functionExpression(null,[],t.cloneNode(r.body,!1),r.generator,r.async);e.get("body").set("body",[t.returnStatement(t.callExpression(i,[]))]),r.async=!1,r.generator=!1,e.get("body.body.0.argument.callee").unwrapFunctionEnvironment()}},Function:{exit:i.wrapWithTypes(t,(function(e,a){var p=e.node;if(o(p,a)){p=(e=(0,r.default)(e)).node;var h=e.scope.generateUidIdentifier("context"),f=e.scope.generateUidIdentifier("args");e.ensureBlock();var d=e.get("body");p.async&&d.traverse(c),d.traverse(l,{context:h});var m=[],y=[];d.get("body").forEach((function(e){var n=e.node;t.isExpressionStatement(n)&&t.isStringLiteral(n.expression)?m.push(n):n&&null!=n._blockHoist?m.push(n):y.push(n)})),m.length>0&&(d.node.body=y);var v=function(e){var t=i.getTypes(),r=e.node;t.assertFunction(r),r.id||(r.id=e.scope.parent.generateUidIdentifier("callee"));if(r.generator&&t.isFunctionDeclaration(r))return function(e){var t=i.getTypes(),r=e.node;t.assertIdentifier(r.id);var a=e.findParent((function(e){return e.isProgram()||e.isBlockStatement()}));if(!a)return r.id;var o=a.node;n.default.ok(Array.isArray(o.body));var u=s(o);u.decl||(u.decl=t.variableDeclaration("var",[]),a.unshiftContainer("body",u.decl),u.declPath=a.get("body.0"));n.default.strictEqual(u.declPath.node,u.decl);var l=a.scope.generateUidIdentifier("marked"),c=t.callExpression(i.runtimeProperty("mark"),[t.clone(r.id)]),p=u.decl.declarations.push(t.variableDeclarator(l,c))-1,h=u.declPath.get("declarations."+p+".init");return n.default.strictEqual(h.node,c),h.addComment("leading","#__PURE__"),t.clone(l)}(e);return t.clone(r.id)}(e);t.assertIdentifier(p.id);var g=t.identifier(p.id.name+"$"),b=(0,SM.hoist)(e),E={usesThis:!1,usesArguments:!1,getArgsId:function(){return t.clone(f)}};if(e.traverse(u,E),E.usesArguments){b=b||t.variableDeclaration("var",[]);var A=t.identifier("arguments");A._shadowedFunctionLiteral=e,b.declarations.push(t.variableDeclarator(t.clone(f),A))}var D=new GM.Emitter(h);D.explode(e.get("body")),b&&b.declarations.length>0&&m.push(b);var S=[D.getContextFunction(g)],x=D.getTryLocsList();p.generator?S.push(v):(E.usesThis||x)&&S.push(t.nullLiteral()),E.usesThis?S.push(t.thisExpression()):x&&S.push(t.nullLiteral()),x&&S.push(x);var T=t.callExpression(i.runtimeProperty(p.async?"async":"wrap"),S);m.push(t.returnStatement(T)),p.body=t.blockStatement(m),e.get("body.body").forEach((function(e){return e.scope.registerDeclaration(e)}));var C=d.node.directives;C&&(p.body.directives=C);var w=p.generator;w&&(p.generator=!1),p.async&&(p.async=!1),w&&t.isExpression(p)&&(i.replaceWithOrRemove(e,t.callExpression(i.runtimeProperty("mark"),[p])),e.addComment("leading","#__PURE__"));var P=D.getInsertedLocs();e.traverse({NumericLiteral:function(e){P.has(e.node)&&e.replaceWith(t.numericLiteral(e.node.value))}}),e.requeue()}}))}}};var s=VM();var u={"FunctionExpression|FunctionDeclaration|Method":function(e){e.skip()},Identifier:function(e,t){"arguments"===e.node.name&&i.isReference(e)&&(i.replaceWithOrRemove(e,t.getArgsId()),t.usesArguments=!0)},ThisExpression:function(e,t){t.usesThis=!0}},l={MetaProperty:function(e){var t=e.node;if("function"===t.meta.name&&"sent"===t.property.name){var n=i.getTypes();i.replaceWithOrRemove(e,n.memberExpression(n.clone(this.context),n.identifier("_sent")))}}},c={Function:function(e){e.skip()},AwaitExpression:function(e){var t=i.getTypes(),n=e.node.argument;i.replaceWithOrRemove(e,t.yieldExpression(t.callExpression(i.runtimeProperty("awrap"),[n]),!1))}}}));Ut(qM);qM.getVisitor;var KM=Ut(Vt((function(e,t){t.__esModule=!0,t.default=function(e){var t={visitor:(0,qM.getVisitor)(e)},n=e&&e.version;n&&parseInt(n,10)>=7&&(t.name="regenerator-transform");return t}}))),XM=cF((function(e){return e.assertVersion(7),{name:"transform-reserved-words",visitor:{"BindingIdentifier|ReferencedIdentifier":function(e){Ef(e.node.name)||e.scope.rename(e.node.name)}}}})),zM={},JM=function(){var e=Error.prepareStackTrace;Error.prepareStackTrace=function(e,t){return t};var t=(new Error).stack;return Error.prepareStackTrace=e,t[2].getFileName()},YM=Vt((function(e){var t=/^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/,n=/^([\s\S]*?)((?:\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))(?:[\\\/]*)$/,r={};r.parse=function(e){if("string"!=typeof e)throw new TypeError("Parameter 'pathString' must be a string, not "+typeof e);var r,i,a,o,s,u=(r=e,i=t.exec(r),a=(i[1]||"")+(i[2]||""),o=i[3]||"",s=n.exec(o),[a,s[1],s[2],s[3]]);if(!u||4!==u.length)throw new TypeError("Invalid path '"+e+"'");return{root:u[0],dir:u[0]+u[1].slice(0,-1),base:u[2],ext:u[3],name:u[2].slice(0,u[2].length-u[3].length)}};var i=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,a={};a.parse=function(e){if("string"!=typeof e)throw new TypeError("Parameter 'pathString' must be a string, not "+typeof e);var t,n=(t=e,i.exec(t).slice(1));if(!n||4!==n.length)throw new TypeError("Invalid path '"+e+"'");return n[1]=n[1]||"",n[2]=n[2]||"",n[3]=n[3]||"",{root:n[0],dir:n[0]+n[1].slice(0,-1),base:n[2],ext:n[3],name:n[2].slice(0,n[2].length-n[3].length)}},e.exports=a.parse,e.exports.posix=a.parse,e.exports.win32=r.parse})),$M=(YM.posix,YM.win32,YM),QM=function(e,t){var n="/";/^([A-Za-z]:)/.test(e)?n="":/^\\\\/.test(e)&&(n="\\\\");for(var r=[e],i=$M(e);i.dir!==r[r.length-1];)r.push(i.dir),i=$M(i.dir);return r.reduce((function(e,r){return e.concat(t.map((function(e){return Yx.resolve(n,r,e)})))}),[])},ZM=function(e,t,n){var r=t&&t.moduleDirectory?[].concat(t.moduleDirectory):["node_modules"];if(t&&"function"==typeof t.paths)return t.paths(n,e,(function(){return QM(e,r)}),t);var i=QM(e,r);return t&&t.paths?i.concat(t.paths):i},eR=function(e,t){return t||{}},tR={assert:!0,async_hooks:">= 8",buffer_ieee754:"< 0.9.7",buffer:!0,child_process:!0,cluster:!0,console:!0,constants:!0,crypto:!0,_debug_agent:">= 1 && < 8",_debugger:"< 8",dgram:!0,dns:!0,domain:!0,events:!0,freelist:"< 6",fs:!0,"fs/promises":">= 10 && < 10.1",_http_agent:">= 0.11.1",_http_client:">= 0.11.1",_http_common:">= 0.11.1",_http_incoming:">= 0.11.1",_http_outgoing:">= 0.11.1",_http_server:">= 0.11.1",http:!0,http2:">= 8.8",https:!0,inspector:">= 8.0.0",_linklist:"< 8",module:!0,net:!0,"node-inspect/lib/_inspect":">= 7.6.0 && < 12","node-inspect/lib/internal/inspect_client":">= 7.6.0 && < 12","node-inspect/lib/internal/inspect_repl":">= 7.6.0 && < 12",os:!0,path:!0,perf_hooks:">= 8.5",process:">= 1",punycode:!0,querystring:!0,readline:!0,repl:!0,smalloc:">= 0.11.5 && < 3",_stream_duplex:">= 0.9.4",_stream_transform:">= 0.9.4",_stream_wrap:">= 1.4.1",_stream_passthrough:">= 0.9.4",_stream_readable:">= 0.9.4",_stream_writable:">= 0.9.4",stream:!0,string_decoder:!0,sys:!0,timers:!0,_tls_common:">= 0.11.13",_tls_legacy:">= 0.11.3 && < 10",_tls_wrap:">= 0.11.3",tls:!0,trace_events:">= 10",tty:!0,url:!0,util:!0,"v8/tools/arguments":">= 10 && < 12","v8/tools/codemap":[">= 4.4.0 && < 5",">= 5.2.0 && < 12"],"v8/tools/consarray":[">= 4.4.0 && < 5",">= 5.2.0 && < 12"],"v8/tools/csvparser":[">= 4.4.0 && < 5",">= 5.2.0 && < 12"],"v8/tools/logreader":[">= 4.4.0 && < 5",">= 5.2.0 && < 12"],"v8/tools/profile_view":[">= 4.4.0 && < 5",">= 5.2.0 && < 12"],"v8/tools/splaytree":[">= 4.4.0 && < 5",">= 5.2.0 && < 12"],v8:">= 1",vm:!0,worker_threads:">= 11.7",zlib:!0},nR=Wt(Object.freeze({__proto__:null,assert:!0,async_hooks:">= 8",buffer_ieee754:"< 0.9.7",buffer:!0,child_process:!0,cluster:!0,console:!0,constants:!0,crypto:!0,_debug_agent:">= 1 && < 8",_debugger:"< 8",dgram:!0,dns:!0,domain:!0,events:!0,freelist:"< 6",fs:!0,_http_agent:">= 0.11.1",_http_client:">= 0.11.1",_http_common:">= 0.11.1",_http_incoming:">= 0.11.1",_http_outgoing:">= 0.11.1",_http_server:">= 0.11.1",http:!0,http2:">= 8.8",https:!0,inspector:">= 8.0.0",_linklist:"< 8",module:!0,net:!0,os:!0,path:!0,perf_hooks:">= 8.5",process:">= 1",punycode:!0,querystring:!0,readline:!0,repl:!0,smalloc:">= 0.11.5 && < 3",_stream_duplex:">= 0.9.4",_stream_transform:">= 0.9.4",_stream_wrap:">= 1.4.1",_stream_passthrough:">= 0.9.4",_stream_readable:">= 0.9.4",_stream_writable:">= 0.9.4",stream:!0,string_decoder:!0,sys:!0,timers:!0,_tls_common:">= 0.11.13",_tls_legacy:">= 0.11.3 && < 10",_tls_wrap:">= 0.11.3",tls:!0,trace_events:">= 10",tty:!0,url:!0,util:!0,v8:">= 1",vm:!0,worker_threads:">= 11.7",zlib:!0,default:tR})),rR=od.versions&&od.versions.node&&od.versions.node.split(".")||[];function iR(e){for(var t=e.split(" "),n=t.length>1?t[0]:"=",r=(t.length>1?t[1]:t[0]).split("."),i=0;i<3;++i){var a=Number(rR[i]||0),o=Number(r[i]||0);if(a!==o)return"<"===n?a<o:">="===n&&a>=o}return">="===n}function aR(e){var t=e.split(/ ?&& ?/);if(0===t.length)return!1;for(var n=0;n<t.length;++n)if(!iR(t[n]))return!1;return!0}function oR(e){if("boolean"==typeof e)return e;if(e&&"object"==typeof e){for(var t=0;t<e.length;++t)if(aR(e[t]))return!0;return!1}return aR(e)}var sR={};for(var uR in nR)Object.prototype.hasOwnProperty.call(nR,uR)&&(sR[uR]=oR(nR[uR]));var lR=sR,cR=function(e){return Object.prototype.hasOwnProperty.call(lR,e)},pR=function(e,t){zM.stat(e,(function(e,n){return e?"ENOENT"===e.code||"ENOTDIR"===e.code?t(null,!1):t(e):t(null,n.isFile()||n.isFIFO())}))},hR=function(e,t){zM.stat(e,(function(e,n){return e?"ENOENT"===e.code||"ENOTDIR"===e.code?t(null,!1):t(e):t(null,n.isDirectory())}))},fR=function(e,t,n){t&&!1===t.preserveSymlinks?zM.realpath(e,(function(t,r){t&&"ENOENT"!==t.code?n(t):n(null,t?e:r)})):n(null,e)},dR=function(e,t,n){var r=n,i=t;if("function"==typeof t&&(r=i,i={}),"string"!=typeof e){var a=new TypeError("Path must be a string.");return Xf((function(){r(a)}))}var o=(i=eR(0,i)).isFile||pR,s=i.isDirectory||hR,u=i.readFile||zM.readFile,l=i.extensions||[".js"],c=i.basedir||Yx.dirname(JM()),p=i.filename||c;i.paths=i.paths||[];var h,f=Yx.resolve(c);function d(t,n,a){t?r(t):n?r(null,n,a):y(h,(function(t,n,a){if(t)r(t);else if(n)fR(n,i,(function(e,t){e?r(e):r(null,t,a)}));else{var o=new Error("Cannot find module '"+e+"' from '"+p+"'");o.code="MODULE_NOT_FOUND",r(o)}}))}function m(e,t,n){var r=t,a=n;"function"==typeof r&&(a=r,r=void 0),function e(t,n,r){if(0===t.length)return a(null,void 0,r);var s=n+t[0],c=r;c?p(null,c):function e(t,n){if(""===t||"/"===t)return n(null);if(/[/\\]node_modules[/\\]*$/.test(t))return n(null);fR(t,i,(function(r,a){if(r)return e(Yx.dirname(t),n);var s=Yx.join(a,"package.json");o(s,(function(r,a){if(!a)return e(Yx.dirname(t),n);u(s,(function(e,r){e&&n(e);try{var a=JSON.parse(r)}catch(e){}a&&i.packageFilter&&(a=i.packageFilter(a,s)),n(null,a,t)}))}))}))}(Yx.dirname(s),p);function p(r,u,p){if(c=u,r)return a(r);if(p&&c&&i.pathFilter){var f=Yx.relative(p,s),d=f.slice(0,f.length-t[0].length),m=i.pathFilter(c,n,d);if(m)return e([""].concat(l.slice()),Yx.resolve(p,m),c)}o(s,h)}function h(r,i){return r?a(r):i?a(null,s,c):void e(t.slice(1),n,c)}}([""].concat(l),e,r)}function y(e,t,n){var r=n,a=t;"function"==typeof a&&(r=a,a=i.package),fR(e,i,(function(t,n){if(t)return r(t);var s=Yx.join(n,"package.json");o(s,(function(t,n){return t?r(t):n?void u(s,(function(t,n){if(t)return r(t);try{var a=JSON.parse(n)}catch(e){}if(a&&i.packageFilter&&(a=i.packageFilter(a,s)),a&&a.main){if("string"!=typeof a.main){var o=new TypeError("package “"+a.name+"” `main` must be a string");return o.code="INVALID_PACKAGE_MAIN",r(o)}return"."!==a.main&&"./"!==a.main||(a.main="index"),void m(Yx.resolve(e,a.main),a,(function(t,n,i){return t?r(t):n?r(null,n,i):i?void y(Yx.resolve(e,i.main),i,(function(t,n,i){return t?r(t):n?r(null,n,i):void m(Yx.join(e,"index"),i,r)})):m(Yx.join(e,"index"),i,r)}))}m(Yx.join(e,"/index"),a,r)})):m(Yx.join(e,"index"),a,r)}))}))}function v(t,n){if(0===n.length)return t(null,void 0);var r=n[0];function a(n,a,s){return n?t(n):a?t(null,a,s):void y(Yx.join(r,e),i.package,o)}function o(e,r,i){return e?t(e):r?t(null,r,i):void v(t,n.slice(1))}s(r,(function(o,s){if(o)return t(o);if(!s)return v(t,n.slice(1));m(Yx.join(r,e),i.package,a)}))}fR(f,i,(function(t,n){t?r(t):function(t){/^(?:\.\.?(?:\/|$)|\/|([A-Za-z]:)?[/\\])/.test(e)?(h=Yx.resolve(t,e),".."!==e&&"/"!==e.slice(-1)||(h+="/"),/\/$/.test(e)&&h===t?y(h,i.package,d):m(h,i.package,d)):function(e,t,n){v(n,ZM(t,i,e))}(e,t,(function(t,n,a){if(t)r(t);else{if(cR(e))return r(null,e);if(n)return fR(n,i,(function(e,t){e?r(e):r(null,t,a)}));var o=new Error("Cannot find module '"+e+"' from '"+p+"'");o.code="MODULE_NOT_FOUND",r(o)}}))}(n)}))},mR=function(e){try{var t=zM.statSync(e)}catch(e){if(e&&("ENOENT"===e.code||"ENOTDIR"===e.code))return!1;throw e}return t.isFile()||t.isFIFO()},yR=function(e){try{var t=zM.statSync(e)}catch(e){if(e&&("ENOENT"===e.code||"ENOTDIR"===e.code))return!1;throw e}return t.isDirectory()},vR=function(e,t){if(t&&!1===t.preserveSymlinks)try{return zM.realpathSync(e)}catch(e){if("ENOENT"!==e.code)throw e}return e},gR=function(e,t){if("string"!=typeof e)throw new TypeError("Path must be a string.");var n=eR(0,t),r=n.isFile||mR,i=n.readFileSync||zM.readFileSync,a=n.isDirectory||yR,o=n.extensions||[".js"],s=n.basedir||Yx.dirname(JM()),u=n.filename||s;n.paths=n.paths||[];var l=vR(Yx.resolve(s),n);if(/^(?:\.\.?(?:\/|$)|\/|([A-Za-z]:)?[/\\])/.test(e)){var c=Yx.resolve(l,e);".."!==e&&"/"!==e.slice(-1)||(c+="/");var p=d(c)||m(c);if(p)return vR(p,n)}else{if(cR(e))return e;var h=function(e,t){for(var r=ZM(t,n,e),i=0;i<r.length;i++){var o=r[i];if(a(o)){var s=d(Yx.join(o,"/",e));if(s)return s;var u=m(Yx.join(o,"/",e));if(u)return u}}}(e,l);if(h)return vR(h,n)}if(cR(e))return e;var f=new Error("Cannot find module '"+e+"' from '"+u+"'");throw f.code="MODULE_NOT_FOUND",f;function d(e){var t=function e(t){if(""===t||"/"===t)return;if(/[/\\]node_modules[/\\]*$/.test(t))return;var a=Yx.join(vR(t,n),"package.json");if(!r(a))return e(Yx.dirname(t));var o=i(a);try{var s=JSON.parse(o)}catch(e){}s&&n.packageFilter&&(s=n.packageFilter(s,t));return{pkg:s,dir:t}}(Yx.dirname(e));if(t&&t.dir&&t.pkg&&n.pathFilter){var a=Yx.relative(t.dir,e),s=n.pathFilter(t.pkg,e,a);s&&(e=Yx.resolve(t.dir,s))}if(r(e))return e;for(var u=0;u<o.length;u++){var l=e+o[u];if(r(l))return l}}function m(e){var t=Yx.join(vR(e,n),"/package.json");if(r(t)){try{var a=i(t,"UTF8"),o=JSON.parse(a)}catch(e){}if(o&&n.packageFilter&&(o=n.packageFilter(o,e)),o&&o.main){if("string"!=typeof o.main){var s=new TypeError("package “"+o.name+"” `main` must be a string");throw s.code="INVALID_PACKAGE_MAIN",s}"."!==o.main&&"./"!==o.main||(o.main="index");try{var u=d(Yx.resolve(e,o.main));if(u)return u;var l=m(Yx.resolve(e,o.main));if(l)return l}catch(e){}}}return d(Yx.join(e,"/index"))}},bR=Vt((function(e,t){dR.core=lR,dR.isCore=cR,dR.sync=gR,e.exports=dR}));var ER=function(e){var t=function(e,t){return!t||(Sx.valid(t)&&(t="^"+t),!Sx.intersects("<"+e,t)&&!Sx.intersects(">=8.0.0",t))}("7.0.1",e);return{BuiltIns:{Symbol:{stable:!0,path:"symbol"},Promise:{stable:!0,path:"promise"},Map:{stable:!0,path:"map"},WeakMap:{stable:!0,path:"weak-map"},Set:{stable:!0,path:"set"},WeakSet:{stable:!0,path:"weak-set"},setImmediate:{stable:!0,path:"set-immediate"},clearImmediate:{stable:!0,path:"clear-immediate"},parseFloat:{stable:!0,path:"parse-float"},parseInt:{stable:!0,path:"parse-int"}},StaticProperties:Object.assign({Array:{from:{stable:!0,path:"array/from"},isArray:{stable:!0,path:"array/is-array"},of:{stable:!0,path:"array/of"}},JSON:{stringify:{stable:!0,path:"json/stringify"}},Object:{assign:{stable:!0,path:"object/assign"},create:{stable:!0,path:"object/create"},defineProperties:{stable:!0,path:"object/define-properties"},defineProperty:{stable:!0,path:"object/define-property"},entries:{stable:!0,path:"object/entries"},freeze:{stable:!0,path:"object/freeze"},getOwnPropertyDescriptor:{stable:!0,path:"object/get-own-property-descriptor"},getOwnPropertyDescriptors:{stable:!0,path:"object/get-own-property-descriptors"},getOwnPropertyNames:{stable:!0,path:"object/get-own-property-names"},getOwnPropertySymbols:{stable:!0,path:"object/get-own-property-symbols"},getPrototypeOf:{stable:!0,path:"object/get-prototype-of"},isExtensible:{stable:!0,path:"object/is-extensible"},isFrozen:{stable:!0,path:"object/is-frozen"},isSealed:{stable:!0,path:"object/is-sealed"},is:{stable:!0,path:"object/is"},keys:{stable:!0,path:"object/keys"},preventExtensions:{stable:!0,path:"object/prevent-extensions"},seal:{stable:!0,path:"object/seal"},setPrototypeOf:{stable:!0,path:"object/set-prototype-of"},values:{stable:!0,path:"object/values"}}},t?{Math:{acosh:{stable:!0,path:"math/acosh"},asinh:{stable:!0,path:"math/asinh"},atanh:{stable:!0,path:"math/atanh"},cbrt:{stable:!0,path:"math/cbrt"},clz32:{stable:!0,path:"math/clz32"},cosh:{stable:!0,path:"math/cosh"},expm1:{stable:!0,path:"math/expm1"},fround:{stable:!0,path:"math/fround"},hypot:{stable:!0,path:"math/hypot"},imul:{stable:!0,path:"math/imul"},log10:{stable:!0,path:"math/log10"},log1p:{stable:!0,path:"math/log1p"},log2:{stable:!0,path:"math/log2"},sign:{stable:!0,path:"math/sign"},sinh:{stable:!0,path:"math/sinh"},tanh:{stable:!0,path:"math/tanh"},trunc:{stable:!0,path:"math/trunc"}}}:{},{Symbol:{for:{stable:!0,path:"symbol/for"},hasInstance:{stable:!0,path:"symbol/has-instance"},isConcatSpreadable:{stable:!0,path:"symbol/is-concat-spreadable"},iterator:{stable:!0,path:"symbol/iterator"},keyFor:{stable:!0,path:"symbol/key-for"},match:{stable:!0,path:"symbol/match"},replace:{stable:!0,path:"symbol/replace"},search:{stable:!0,path:"symbol/search"},species:{stable:!0,path:"symbol/species"},split:{stable:!0,path:"symbol/split"},toPrimitive:{stable:!0,path:"symbol/to-primitive"},toStringTag:{stable:!0,path:"symbol/to-string-tag"},unscopables:{stable:!0,path:"symbol/unscopables"}},String:{at:{stable:!0,path:"string/at"},fromCodePoint:{stable:!0,path:"string/from-code-point"},raw:{stable:!0,path:"string/raw"}},Number:{EPSILON:{stable:!0,path:"number/epsilon"},isFinite:{stable:!0,path:"number/is-finite"},isInteger:{stable:!0,path:"number/is-integer"},isNaN:{stable:!0,path:"number/is-nan"},isSafeInteger:{stable:!0,path:"number/is-safe-integer"},MAX_SAFE_INTEGER:{stable:!0,path:"number/max-safe-integer"},MIN_SAFE_INTEGER:{stable:!0,path:"number/min-safe-integer"},parseFloat:{stable:!0,path:"number/parse-float"},parseInt:{stable:!0,path:"number/parse-int"}},Reflect:{apply:{stable:!0,path:"reflect/apply"},construct:{stable:!0,path:"reflect/construct"},defineProperty:{stable:!0,path:"reflect/define-property"},deleteProperty:{stable:!0,path:"reflect/delete-property"},getOwnPropertyDescriptor:{stable:!0,path:"reflect/get-own-property-descriptor"},getPrototypeOf:{stable:!0,path:"reflect/get-prototype-of"},get:{stable:!0,path:"reflect/get"},has:{stable:!0,path:"reflect/has"},isExtensible:{stable:!0,path:"reflect/is-extensible"},ownKeys:{stable:!0,path:"reflect/own-keys"},preventExtensions:{stable:!0,path:"reflect/prevent-extensions"},setPrototypeOf:{stable:!0,path:"reflect/set-prototype-of"},set:{stable:!0,path:"reflect/set"}},Date:{now:{stable:!0,path:"date/now"}}})}},AR=function(){return{BuiltIns:{AggregateError:{stable:!1,path:"aggregate-error"},Map:{stable:!0,path:"map"},Observable:{stable:!1,path:"observable"},Promise:{stable:!0,path:"promise"},Set:{stable:!0,path:"set"},Symbol:{stable:!0,path:"symbol"},URL:{stable:!0,path:"url"},URLSearchParams:{stable:!0,path:"url-search-params"},WeakMap:{stable:!0,path:"weak-map"},WeakSet:{stable:!0,path:"weak-set"},clearImmediate:{stable:!0,path:"clear-immediate"},compositeKey:{stable:!1,path:"composite-key"},compositeSymbol:{stable:!1,path:"composite-symbol"},globalThis:{stable:!1,path:"global-this"},parseFloat:{stable:!0,path:"parse-float"},parseInt:{stable:!0,path:"parse-int"},queueMicrotask:{stable:!0,path:"queue-microtask"},setImmediate:{stable:!0,path:"set-immediate"},setInterval:{stable:!0,path:"set-interval"},setTimeout:{stable:!0,path:"set-timeout"}},StaticProperties:{Array:{from:{stable:!0,path:"array/from"},isArray:{stable:!0,path:"array/is-array"},of:{stable:!0,path:"array/of"}},Date:{now:{stable:!0,path:"date/now"}},JSON:{stringify:{stable:!0,path:"json/stringify"}},Math:{DEG_PER_RAD:{stable:!1,path:"math/deg-per-rad"},RAD_PER_DEG:{stable:!1,path:"math/rad-per-deg"},acosh:{stable:!0,path:"math/acosh"},asinh:{stable:!0,path:"math/asinh"},atanh:{stable:!0,path:"math/atanh"},cbrt:{stable:!0,path:"math/cbrt"},clamp:{stable:!1,path:"math/clamp"},clz32:{stable:!0,path:"math/clz32"},cosh:{stable:!0,path:"math/cosh"},degrees:{stable:!1,path:"math/degrees"},expm1:{stable:!0,path:"math/expm1"},fround:{stable:!0,path:"math/fround"},fscale:{stable:!1,path:"math/fscale"},hypot:{stable:!0,path:"math/hypot"},iaddh:{stable:!1,path:"math/iaddh"},imul:{stable:!0,path:"math/imul"},imulh:{stable:!1,path:"math/imulh"},isubh:{stable:!1,path:"math/isubh"},log10:{stable:!0,path:"math/log10"},log1p:{stable:!0,path:"math/log1p"},log2:{stable:!0,path:"math/log2"},radians:{stable:!1,path:"math/radians"},scale:{stable:!1,path:"math/scale"},seededPRNG:{stable:!1,path:"math/seeded-prng"},sign:{stable:!0,path:"math/sign"},signbit:{stable:!1,path:"math/signbit"},sinh:{stable:!0,path:"math/sinh"},tanh:{stable:!0,path:"math/tanh"},trunc:{stable:!0,path:"math/trunc"},umulh:{stable:!1,path:"math/umulh"}},Number:{EPSILON:{stable:!0,path:"number/epsilon"},MAX_SAFE_INTEGER:{stable:!0,path:"number/max-safe-integer"},MIN_SAFE_INTEGER:{stable:!0,path:"number/min-safe-integer"},fromString:{stable:!1,path:"number/from-string"},isFinite:{stable:!0,path:"number/is-finite"},isInteger:{stable:!0,path:"number/is-integer"},isNaN:{stable:!0,path:"number/is-nan"},isSafeInteger:{stable:!0,path:"number/is-safe-integer"},parseFloat:{stable:!0,path:"number/parse-float"},parseInt:{stable:!0,path:"number/parse-int"}},Object:{assign:{stable:!0,path:"object/assign"},create:{stable:!0,path:"object/create"},defineProperties:{stable:!0,path:"object/define-properties"},defineProperty:{stable:!0,path:"object/define-property"},entries:{stable:!0,path:"object/entries"},freeze:{stable:!0,path:"object/freeze"},fromEntries:{stable:!0,path:"object/from-entries"},getOwnPropertyDescriptor:{stable:!0,path:"object/get-own-property-descriptor"},getOwnPropertyDescriptors:{stable:!0,path:"object/get-own-property-descriptors"},getOwnPropertyNames:{stable:!0,path:"object/get-own-property-names"},getOwnPropertySymbols:{stable:!0,path:"object/get-own-property-symbols"},getPrototypeOf:{stable:!0,path:"object/get-prototype-of"},isExtensible:{stable:!0,path:"object/is-extensible"},isFrozen:{stable:!0,path:"object/is-frozen"},isSealed:{stable:!0,path:"object/is-sealed"},is:{stable:!0,path:"object/is"},keys:{stable:!0,path:"object/keys"},preventExtensions:{stable:!0,path:"object/prevent-extensions"},seal:{stable:!0,path:"object/seal"},setPrototypeOf:{stable:!0,path:"object/set-prototype-of"},values:{stable:!0,path:"object/values"}},Reflect:{apply:{stable:!0,path:"reflect/apply"},construct:{stable:!0,path:"reflect/construct"},defineMetadata:{stable:!1,path:"reflect/define-metadata"},defineProperty:{stable:!0,path:"reflect/define-property"},deleteMetadata:{stable:!1,path:"reflect/delete-metadata"},deleteProperty:{stable:!0,path:"reflect/delete-property"},getMetadata:{stable:!1,path:"reflect/get-metadata"},getMetadataKeys:{stable:!1,path:"reflect/get-metadata-keys"},getOwnMetadata:{stable:!1,path:"reflect/get-own-metadata"},getOwnMetadataKeys:{stable:!1,path:"reflect/get-own-metadata-keys"},getOwnPropertyDescriptor:{stable:!0,path:"reflect/get-own-property-descriptor"},getPrototypeOf:{stable:!0,path:"reflect/get-prototype-of"},get:{stable:!0,path:"reflect/get"},has:{stable:!0,path:"reflect/has"},hasMetadata:{stable:!1,path:"reflect/has-metadata"},hasOwnMetadata:{stable:!1,path:"reflect/has-own-metadata"},isExtensible:{stable:!0,path:"reflect/is-extensible"},metadata:{stable:!1,path:"reflect/metadata"},ownKeys:{stable:!0,path:"reflect/own-keys"},preventExtensions:{stable:!0,path:"reflect/prevent-extensions"},set:{stable:!0,path:"reflect/set"},setPrototypeOf:{stable:!0,path:"reflect/set-prototype-of"}},String:{fromCodePoint:{stable:!0,path:"string/from-code-point"},raw:{stable:!0,path:"string/raw"}},Symbol:{asyncIterator:{stable:!0,path:"symbol/async-iterator"},dispose:{stable:!1,path:"symbol/dispose"},for:{stable:!0,path:"symbol/for"},hasInstance:{stable:!0,path:"symbol/has-instance"},isConcatSpreadable:{stable:!0,path:"symbol/is-concat-spreadable"},iterator:{stable:!0,path:"symbol/iterator"},keyFor:{stable:!0,path:"symbol/key-for"},match:{stable:!0,path:"symbol/match"},observable:{stable:!1,path:"symbol/observable"},patternMatch:{stable:!1,path:"symbol/pattern-match"},replace:{stable:!0,path:"symbol/replace"},search:{stable:!0,path:"symbol/search"},species:{stable:!0,path:"symbol/species"},split:{stable:!0,path:"symbol/split"},toPrimitive:{stable:!0,path:"symbol/to-primitive"},toStringTag:{stable:!0,path:"symbol/to-string-tag"},unscopables:{stable:!0,path:"symbol/unscopables"}}},InstanceProperties:{at:{stable:!1,path:"at"},bind:{stable:!0,path:"bind"},codePointAt:{stable:!0,path:"code-point-at"},codePoints:{stable:!1,path:"code-points"},concat:{stable:!0,path:"concat",types:["array"]},copyWithin:{stable:!0,path:"copy-within"},endsWith:{stable:!0,path:"ends-with"},entries:{stable:!0,path:"entries"},every:{stable:!0,path:"every"},fill:{stable:!0,path:"fill"},filter:{stable:!0,path:"filter"},find:{stable:!0,path:"find"},findIndex:{stable:!0,path:"find-index"},flags:{stable:!0,path:"flags"},flatMap:{stable:!0,path:"flat-map"},flat:{stable:!0,path:"flat"},forEach:{stable:!0,path:"for-each"},includes:{stable:!0,path:"includes"},indexOf:{stable:!0,path:"index-of"},keys:{stable:!0,path:"keys"},lastIndexOf:{stable:!0,path:"last-index-of"},map:{stable:!0,path:"map"},matchAll:{stable:!1,path:"match-all"},padEnd:{stable:!0,path:"pad-end"},padStart:{stable:!0,path:"pad-start"},reduce:{stable:!0,path:"reduce"},reduceRight:{stable:!0,path:"reduce-right"},repeat:{stable:!0,path:"repeat"},replaceAll:{stable:!1,path:"replace-all"},reverse:{stable:!0,path:"reverse"},slice:{stable:!0,path:"slice"},some:{stable:!0,path:"some"},sort:{stable:!0,path:"sort"},splice:{stable:!0,path:"splice"},startsWith:{stable:!0,path:"starts-with"},trim:{stable:!0,path:"trim"},trimEnd:{stable:!0,path:"trim-end"},trimLeft:{stable:!0,path:"trim-left"},trimRight:{stable:!0,path:"trim-right"},trimStart:{stable:!0,path:"trim-start"},values:{stable:!0,path:"values"}}}};function DR(e){return!(!e||!e.supportsStaticESM)}var SR=cF((function(e,t,n){e.assertVersion(7);var r,i=t.corejs,a=t.helpers,o=void 0===a||a,s=t.regenerator,u=void 0===s||s,l=t.useESModules,c=void 0!==l&&l,p=t.version,h=void 0===p?"7.0.0-beta.0":p,f=t.absoluteRuntime,d=void 0!==f&&f,m=!1;"object"==typeof i&&null!==i?(r=i.version,m=Boolean(i.proposals)):r=i;var y=!!r&&Number(r);if(![!1,2,3].includes(y))throw new Error("The `core-js` version must be false, 2 or 3, but got "+JSON.stringify(r)+".");if(m&&(!y||y<3))throw new Error("The 'proposals' option is only supported when using 'corejs: 3'");if("boolean"!=typeof u)throw new Error("The 'regenerator' option must be undefined, or a boolean.");if("boolean"!=typeof o)throw new Error("The 'helpers' option must be undefined, or a boolean.");if("boolean"!=typeof c&&"auto"!==c)throw new Error("The 'useESModules' option must be undefined, or a boolean, or 'auto'.");if("boolean"!=typeof d&&"string"!=typeof d)throw new Error("The 'absoluteRuntime' option must be undefined, a boolean, or a string.");if("string"!=typeof h)throw new Error("The 'version' option must be a version string.");function v(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function g(e,t){return v(e,t)&&(m||e[t].stable)}function b(e,t){return v(I,e)&&g(I[e],t)}function E(e,t,n){if(function(e){var t=e.scope.getBinding(e.node.name);return!!t&&t.path.isImportNamespaceSpecifier()}(e.get("object")))return!1;if(!t[n].types)return!0;var r=function(e){switch(e.type){case"GenericTypeAnnotation":if(S(e.id,{name:"Array"}))return"array";break;case"StringTypeAnnotation":return"string"}}(e.get("object").getTypeAnnotation());return!r||t[n].types.some((function(e){return e===r}))}function A(e,t){var n=e.node;return t?e.isStringLiteral()?n.value:e.evaluate().value:n.name}if(v(t,"useBuiltIns"))throw t.useBuiltIns?new Error("The 'useBuiltIns' option has been removed. The @babel/runtime module now uses builtins by default."):new Error("The 'useBuiltIns' option has been removed. Use the 'corejs'option to polyfill with `core-js` via @babel/runtime.");if(v(t,"polyfill"))throw!1===t.polyfill?new Error("The 'polyfill' option has been removed. The @babel/runtime module now skips polyfilling by default."):new Error("The 'polyfill' option has been removed. Use the 'corejs'option to polyfill with `core-js` via @babel/runtime.");if(v(t,"moduleName"))throw new Error("The 'moduleName' option has been removed. @babel/transform-runtime no longer supports arbitrary runtimes. If you were using this to set an absolute path for Babel's standard runtimes, please use the 'absoluteRuntime' option.");var D="auto"===c?e.caller(DR):c,x=2===y,T=3===y,C=!1!==y,w=T?"@babel/runtime-corejs3":x?"@babel/runtime-corejs2":"@babel/runtime",P=T&&!m?"core-js-stable":"core-js",F=(x?ER:AR)(h),k=F.BuiltIns,I=F.StaticProperties,O=F.InstanceProperties,B=["interopRequireWildcard","interopRequireDefault"],N=w;return!1!==d&&(N=function(e,t){try{return Yx.dirname(bR.sync(e+"/package.json",{basedir:t}))}catch(n){if("MODULE_NOT_FOUND"!==n.code)throw n;throw Object.assign(new Error('Failed to resolve "'+e+'" relative to "'+t+'"'),{code:"BABEL_RUNTIME_NOT_FOUND",runtime:e,dirname:t})}}(w,Yx.resolve(n,!0===d?".":d))),{name:"transform-runtime",pre:function(e){var t=this;o&&e.set("helperGenerator",(function(n){if(!e.availableHelper||e.availableHelper(n,h)){var r=-1!==B.indexOf(n)&&!hO(e.path)?4:void 0,i=D&&"module"===e.path.node.sourceType?"helpers/esm":"helpers";return t.addDefaultImport(N+"/"+i+"/"+n+".js",n,r)}}));var n=new Map;this.addDefaultImport=function(t,r,i){var a=t+":"+r+":"+(hO(e.path)||""),o=n.get(a);return o?o=gp(o):(o=function(e,t,n){return new fO(e).addDefault(t,n)}(e.path,t,{importedInterop:"uncompiled",nameHint:r,blockHoist:i}),n.set(a,o)),o}},visitor:{ReferencedIdentifier:function(e){var t=e.node,n=e.parent,r=e.scope,i=t.name;"regeneratorRuntime"===i&&u?e.replaceWith(this.addDefaultImport(N+"/regenerator/index.js","regeneratorRuntime")):C&&(_(n)||g(k,i)&&(r.getBindingIdentifier(i)||e.replaceWith(this.addDefaultImport(N+"/"+P+"/"+k[i].path+".js",i))))},CallExpression:function(e){if(C){var t=e.node,n=t.callee;if(_(n)){var r,i,a=n.object,o=A(e.get("callee.property"),n.computed);if(T&&!b(a.name,o))if(g(O,o)&&E(e.get("callee"),O,o))return S(a)?(r=a,i=gp(a)):i=Uo("=",r=e.scope.generateDeclaredUidIdentifier("context"),a),t.callee=ms(Xo(this.addDefaultImport(w+"/"+P+"/instance/"+O[o].path+".js",o+"InstanceProperty"),[i]),os("call")),void t.arguments.unshift(r);t.arguments.length||n.computed&&e.get("callee.property").matchesPattern("Symbol.iterator")&&e.replaceWith(Xo(this.addDefaultImport(N+"/core-js/get-iterator.js","getIterator"),[a]))}}},BinaryExpression:function(e){C&&"in"===e.node.operator&&e.get("left").matchesPattern("Symbol.iterator")&&e.replaceWith(Xo(this.addDefaultImport(N+"/core-js/is-iterable.js","isIterable"),[e.node.right]))},MemberExpression:{enter:function(e){if(C&&e.isReferenced()){var t=e.node,n=t.object;if(vf(n,t))if(!x&&t.computed&&e.get("property").matchesPattern("Symbol.iterator"))e.replaceWith(Xo(this.addDefaultImport(w+"/core-js/get-iterator-method.js","getIteratorMethod"),[n]));else{var r=n.name,i=A(e.get("property"),t.computed);!e.scope.getBindingIdentifier(r)&&b(r,i)?e.replaceWith(this.addDefaultImport(N+"/"+P+"/"+I[r][i].path+".js",r+"$"+i)):T&&g(O,i)&&E(e,O,i)&&e.replaceWith(Xo(this.addDefaultImport(w+"/"+P+"/instance/"+O[i].path+".js",i+"InstanceProperty"),[n]))}}},exit:function(e){if(C&&e.isReferenced()&&!e.node.computed){var t=e.node,n=t.object.name;g(k,n)&&(e.scope.getBindingIdentifier(n)||e.replaceWith(ms(this.addDefaultImport(N+"/"+P+"/"+k[n].path+".js",n),t.property)))}}}}}})),xR=cF((function(e){return e.assertVersion(7),{name:"transform-shorthand-properties",visitor:{ObjectMethod:function(e){var t=e.node;if("method"===t.kind){var n=as(null,t.params,t.body,t.generator,t.async);n.returnType=t.returnType,e.replaceWith(Es(t.key,n,t.computed))}},ObjectProperty:function(e){var t=e.node;t.shorthand&&(t.shorthand=!1)}}}})),TR=cF((function(e,t){e.assertVersion(7);var n=t.loose;function r(e,t){return n&&!S(e.argument,{name:"arguments"})?e.argument:t.toArray(e.argument,!0)}function i(e){for(var t=0;t<e.length;t++)if(le(e[t]))return!0;return!1}function a(e,t){return e.length?(t.push(jo(e)),[]):e}function o(e,t){var n=[],i=[],o=e,s=Array.isArray(o),u=0;for(o=s?o:o[Symbol.iterator]();;){var l;if(s){if(u>=o.length)break;l=o[u++]}else{if((u=o.next()).done)break;l=u.value}var c=l;le(c)?(i=a(i,n),n.push(r(c,t))):i.push(c)}return a(i,n),n}return{name:"transform-spread",visitor:{ArrayExpression:function(e){var t=e.node,n=e.scope,r=t.elements;if(i(r)){var a=o(r,n),u=a[0];1!==a.length||u===r[0].argument?(s(u)?a.shift():u=jo([]),e.replaceWith(Xo(ms(u,os("concat")),a))):e.replaceWith(u)}},CallExpression:function(e){var t=e.node,n=e.scope,r=t.arguments;if(i(r)){var a=e.get("callee");if(!a.isSuper()){var s,u=n.buildUndefinedNode();t.arguments=[];var l=(s=1===r.length&&"arguments"===r[0].argument.name?[r[0].argument]:o(r,n)).shift();s.length?t.arguments.push(Xo(ms(l,os("concat")),s)):t.arguments.push(l);var c=t.callee;if(a.isMemberExpression()){var p=n.maybeGenerateMemoised(c.object);p?(c.object=Uo("=",p,c.object),u=p):u=gp(c.object),cf(c,os("apply"))}else t.callee=ms(t.callee,os("apply"));ce(u)&&(u=ws()),t.arguments.unshift(gp(u))}}},NewExpression:function(e){var t=e.node,n=e.scope,r=t.arguments;if(i(r)){var a=o(r,n),s=a.shift();r=a.length?Xo(ms(s,os("concat")),a):s,e.replaceWith(Xo(e.hub.addHelper("construct"),[t.callee,r]))}}}}})),CR=cF((function(e){return e.assertVersion(7),{name:"transform-sticky-regex",visitor:{RegExpLiteral:function(e){var t=e.node;(function(e,t){return"RegExpLiteral"===e.type&&e.flags.indexOf(t)>=0})(t,"y")&&e.replaceWith(ys(os("RegExp"),[ls(t.pattern),ls(t.flags)]))}}}})),wR=cF((function(e){return e.assertVersion(7),{name:"transform-strict-mode",visitor:{Program:function(e){for(var t=0,n=e.node.directives;t<n.length;t++){if("use strict"===n[t].value.value)return}e.unshiftContainer("directives",Go(Ho("use strict")))}}}}));function PR(){var e=a(["\n          function ","() {\n            const data = ",";\n            "," = function() { return data };\n            return data;\n          } \n        "]);return PR=function(){return e},e}var FR=cF((function(e,t){e.assertVersion(7);var n=t.loose,r="taggedTemplateLiteral";return n&&(r+="Loose"),{name:"transform-template-literals",visitor:{TaggedTemplateExpression:function(e){for(var t=e.node,n=t.quasi,i=[],a=[],o=!0,s=0,u=n.quasis;s<u.length;s++){var l=u[s].value,c=l.raw,p=l.cooked,h=null==p?e.scope.buildUndefinedNode():ls(p);i.push(h),a.push(ls(c)),c!==p&&(o=!1)}var f=e.scope.getProgramParent(),d=f.generateUidIdentifier("templateObject"),m=this.addHelper(r),y=[jo(i)];o||y.push(jo(a));var v=nD.ast(PR(),d,Xo(m,y),d);f.path.unshiftContainer("body",v),e.replaceWith(Xo(t.tag,[Xo(gp(d),[])].concat(n.expressions)))},TemplateLiteral:function(e){for(var t=[],r=e.get("expressions"),i=0,a=0,o=e.node.quasis;a<o.length;a++){var s=o[a];if(s.value.cooked&&t.push(ls(s.value.cooked)),i<r.length){var u=r[i++].node;C(u,{value:""})||t.push(u)}}var l=!n||!C(t[1]);!C(t[0])&&l&&t.unshift(ls(""));var c,p=t[0];if(n)for(var f=1;f<t.length;f++)p=Vo("+",p,t[f]);else t.length>1&&(c=!0,p=t.reduce((function(e,t){var n=ht(t);return!n&&c&&(n=!0,c=!1),n&&h(e)?(e.arguments.push(t),e):Xo(ms(e,os("concat")),[t])})));e.replaceWith(p)}}}})),kR=cF((function(e){return e.assertVersion(7),{name:"transform-typeof-symbol",visitor:{Scope:function(e){var t=e.scope;t.getBinding("Symbol")&&t.rename("Symbol")},UnaryExpression:function(e){var t=e.node,n=e.parent;if("typeof"===t.operator){if(e.parentPath.isBinaryExpression()&&Ca.indexOf(n.operator)>=0){var r=e.getOpposite();if(r.isLiteral()&&"symbol"!==r.node.value&&"object"!==r.node.value)return}var i=this.addHelper("typeof");if(!e.findParent((function(e){return e.isVariableDeclarator()&&e.node.id===i||e.isFunctionDeclaration()&&e.node.id&&e.node.id.name===i.name}))){var a=Xo(i,[t.argument]),o=e.get("argument");if(o.isIdentifier()&&!e.scope.hasBinding(o.node.name,!0)){var s=ks("typeof",gp(t.argument));e.replaceWith(Jo(Vo("===",s,ls("undefined")),ls("undefined"),a))}else e.replaceWith(a)}}}}}}));function _R(e,t){var n=e.node;if(n.declare)e.remove();else{if(n.const)throw e.buildCodeFrameError("'const' enums are not supported.");var r=n.id.name,i=function(e,t,n){var r=function(e,t){var n=Object.create(null),r=-1;return e.node.members.map((function(i){var a,o=t.isIdentifier(i.id)?i.id.name:i.id.value,s=i.initializer;if(s){var u=function(e,t){return n(e);function n(e){switch(e.type){case"StringLiteral":return e.value;case"UnaryExpression":return function(e){var t=e.argument,r=e.operator,i=n(t);if(void 0===i)return;switch(r){case"+":return i;case"-":return-i;case"~":return~i;default:return}}(e);case"BinaryExpression":return function(e){var t=n(e.left);if(void 0===t)return;var r=n(e.right);if(void 0===r)return;switch(e.operator){case"|":return t|r;case"&":return t&r;case">>":return t>>r;case">>>":return t>>>r;case"<<":return t<<r;case"^":return t^r;case"*":return t*r;case"/":return t/r;case"+":return t+r;case"-":return t-r;case"%":return t%r;default:return}}(e);case"NumericLiteral":return e.value;case"ParenthesizedExpression":return n(e.expression);case"Identifier":return t[e.name];case"TemplateLiteral":if(1===e.quasis.length)return e.quasis[0].value.cooked;default:return}}}(s,n);void 0!==u?(n[o]=u,"number"==typeof u?(a=t.numericLiteral(u),r=u):(ZI("string"==typeof u),a=t.stringLiteral(u),r=void 0)):(a=s,r=void 0)}else{if(void 0===r)throw e.buildCodeFrameError("Enum member must have initializer.");r++,a=t.numericLiteral(r),n[o]=r}return[o,a]}))}(e,t).map((function(e){var r=e[0],i=e[1];return NR(t.isStringLiteral(i),{ENUM:t.cloneNode(n),NAME:r,VALUE:i})}));return IR({ID:t.cloneNode(n),ASSIGNMENTS:r})}(e,t,n.id);switch(e.parent.type){case"BlockStatement":case"ExportNamedDeclaration":case"Program":if(e.insertAfter(i),function e(t){if(t.isExportDeclaration())return e(t.parentPath);return!!t.getData(r)||(t.setData(r,!0),!1)}(e.parentPath))e.remove();else{var a=t.isProgram(e.parent);e.scope.registerDeclaration(e.replaceWith(function(e,t,n){return t.variableDeclaration(n,[t.variableDeclarator(e)])}(n.id,t,a?"var":"let"))[0])}break;default:throw new Error("Unexpected enum parent '"+e.parent.type)}}}var IR=nD("\n  (function (ID) {\n    ASSIGNMENTS;\n  })(ID || (ID = {}));\n"),OR=nD('\n  ENUM["NAME"] = VALUE;\n'),BR=nD('\n  ENUM[ENUM["NAME"] = VALUE] = "NAME";\n'),NR=function(e,t){return(e?OR:BR)(t)};function MR(){var e=a(["\n    (function (",") {\n      ","\n    })("," || ("," = ","));\n  "]);return MR=function(){return e},e}function RR(){var e=a(["\n      ","."," || (\n        ","."," = ","\n      )\n    "]);return RR=function(){return e},e}function LR(e,t,n){if(e.node.declare||"StringLiteral"===e.node.id.type)e.remove();else{if(!n)throw e.hub.file.buildCodeFrameError(e.node.id,"Namespace not marked type-only declare. Non-declarative namespaces are only supported experimentally in Babel. To enable and review caveats see: https://babeljs.io/docs/en/babel-plugin-transform-typescript");var r=e.node.id.name,i=function e(t,n,r,i){for(var a=new Set,o=r.id,s=t.scope.generateUid(o.name),u=r.body.body,l=0;l<u.length;l++){var c=u[l];switch(c.type){case"TSModuleDeclaration":var p=e(t,n,c),h=c.id.name;a.has(h)?u[l]=p:(a.add(h),u.splice(l++,1,jR(n,h),p));continue;case"TSEnumDeclaration":case"FunctionDeclaration":case"ClassDeclaration":a.add(c.id.name);continue;case"VariableDeclaration":var f=c.declarations,d=Array.isArray(f),m=0;for(f=d?f:f[Symbol.iterator]();;){var y;if(d){if(m>=f.length)break;y=f[m++]}else{if((m=f.next()).done)break;y=m.value}var v=y;a.add(v.id.name)}continue;default:continue;case"ExportNamedDeclaration":}switch(c.declaration.type){case"TSEnumDeclaration":case"FunctionDeclaration":case"ClassDeclaration":var g=c.declaration.id.name;a.add(g),u.splice(l++,1,c.declaration,n.expressionStatement(n.assignmentExpression("=",UR(n,s,g),n.identifier(g))));break;case"VariableDeclaration":if("const"!==c.declaration.kind)throw t.hub.file.buildCodeFrameError(c.declaration,"Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript");var b=c.declaration.declarations,E=Array.isArray(b),A=0;for(b=E?b:b[Symbol.iterator]();;){var D;if(E){if(A>=b.length)break;D=b[A++]}else{if((A=b.next()).done)break;D=A.value}var S=D;S.init=n.assignmentExpression("=",UR(n,s,S.id.name),S.init)}u[l]=c.declaration;break;case"TSModuleDeclaration":var x=e(t,n,c.declaration,n.identifier(s)),T=c.declaration.id.name;a.has(T)?u[l]=x:(a.add(T),u.splice(l++,1,jR(n,T),x))}}var C=n.objectExpression([]);i&&(C=nD.expression.ast(RR(),i,o,i,o,C));return nD.statement.ast(MR(),n.identifier(s),u,o,o,C)}(e,t,t.cloneDeep(e.node)),a=e.scope.hasOwnBinding(r);"ExportNamedDeclaration"===e.parent.type?a?e.parentPath.replaceWith(i):(e.parentPath.insertAfter(i),e.replaceWith(jR(t,r)),e.scope.registerDeclaration(e.parentPath)):a?e.replaceWith(i):e.scope.registerDeclaration(e.replaceWithMultiple([jR(t,r),i])[0])}}function jR(e,t){return e.variableDeclaration("let",[e.variableDeclarator(e.identifier(t))])}function UR(e,t,n){return e.memberExpression(e.identifier(t),e.identifier(n))}function VR(){var e=a(["this."," = ",""]);return VR=function(){return e},e}function WR(e){switch(e.parent.type){case"TSTypeReference":case"TSQualifiedName":case"TSExpressionWithTypeArguments":case"TSTypeQuery":return!0;default:return!1}}var GR=new WeakSet,HR=new WeakMap;function qR(e,t){var n=e.find((function(e){return e.isProgram()})).node;return!e.scope.hasOwnBinding(t)&&(!!HR.get(n).has(t)||(console.warn('The exported identifier "'+t+'" is not declared in Babel\'s scope tracker\nas a JavaScript value binding, and "@babel/plugin-transform-typescript"\nnever encountered it as a TypeScript type declaration.\nIt will be treated as a JavaScript value.\n\nThis problem is likely caused by another plugin injecting\n"'+t+'" without registering it in the scope tracker. If you are the author\n of that plugin, please use "scope.registerDeclaration(declarationPath)".'),!1))}function KR(e,t){HR.get(e.path.node).add(t)}var XR,zR=cF((function(e,t){var n=t.jsxPragma,r=void 0===n?"React":n,i=t.allowNamespaces,a=void 0!==i&&i,o=t.allowDeclareFields,s=void 0!==o&&o;e.assertVersion(7);var u=/\*?\s*@jsx\s+([^\s]+)/,l=function(e){var t=e.node;if(!s&&t.declare)throw e.buildCodeFrameError("The 'declare' modifier is only allowed when the 'allowDeclareFields' option of @babel/plugin-transform-typescript or @babel/preset-typescript is enabled.");if(t.definite||t.declare){if(t.value)throw e.buildCodeFrameError("Definietly assigned fields and fields with the 'declare' modifier cannot be initialized here, but only in the constructor");e.remove()}else s||t.value||t.decorators||e.remove();t.accessibility&&(t.accessibility=null),t.abstract&&(t.abstract=null),t.readonly&&(t.readonly=null),t.optional&&(t.optional=null),t.typeAnnotation&&(t.typeAnnotation=null)},c=function(e){var t=e.node;t.accessibility&&(t.accessibility=null),t.abstract&&(t.abstract=null),t.optional&&(t.optional=null)},p=function(e,t){e.node.accessibility&&(e.node.accessibility=null);var n=[],r=e.node.params,i=Array.isArray(r),a=0;for(r=i?r:r[Symbol.iterator]();;){var o;if(i){if(a>=r.length)break;o=r[a++]}else{if((a=r.next()).done)break;o=a.value}var s=o;"TSParameterProperty"!==s.type||GR.has(s.parameter)||(GR.add(s.parameter),n.push(s.parameter))}if(n.length){var u=n.map((function(t){var n;if(S(t))n=t;else{if(!X(t)||!S(t.left))throw e.buildCodeFrameError("Parameter properties can not be destructuring patterns.");n=t.left}return nD.statement.ast(VR(),n,n)}));Wk(t,e,u)}};return{name:"transform-typescript",inherits:kF,visitor:{Pattern:h,Identifier:h,RestElement:h,Program:function(e,t){var n=t.file,i=null;if(HR.has(e.node)||HR.set(e.node,new Set),n.ast.comments)for(var a=0,o=n.ast.comments;a<o.length;a++){var s=o[a],l=u.exec(s.value);l&&(i=l[1])}var c=e.get("body"),p=Array.isArray(c),h=0;for(c=p?c:c[Symbol.iterator]();;){var d;if(p){if(h>=c.length)break;d=c[h++]}else{if((h=c.next()).done)break;d=h.value}var m=d;if(re(m)){if(0===m.node.specifiers.length)continue;var y=!0,v=[],g=m.node.specifiers,b=Array.isArray(g),E=0;for(g=b?g:g[Symbol.iterator]();;){var A;if(b){if(E>=g.length)break;A=g[E++]}else{if((E=g.next()).done)break;A=E.value}var D=A,S=m.scope.getBinding(D.local.name);S&&f({binding:S,programPath:e,jsxPragma:i||r})?v.push(S.path):y=!1}if(y)m.remove();else{var x=v,T=Array.isArray(x),C=0;for(x=T?x:x[Symbol.iterator]();;){var w;if(T){if(C>=x.length)break;w=x[C++]}else{if((C=x.next()).done)break;w=C.value}w.remove()}}}else if(m.isExportDeclaration()&&(m=m.get("declaration")),m.isVariableDeclaration({declare:!0}))for(var P=0,F=Object.keys(m.getBindingIdentifiers());P<F.length;P++){var k=F[P];KR(e.scope,k)}else(m.isTSTypeAliasDeclaration()||m.isTSDeclareFunction()||m.isTSInterfaceDeclaration()||m.isClassDeclaration({declare:!0})||m.isTSEnumDeclaration({declare:!0})||m.isTSModuleDeclaration({declare:!0})&&m.get("id").isIdentifier())&&KR(e.scope,m.node.id.name)}},ExportNamedDeclaration:function(e){!e.node.source&&e.node.specifiers.length>0&&e.node.specifiers.every((function(t){var n=t.local;return qR(e,n.name)}))&&e.remove()},ExportSpecifier:function(e){!e.parent.source&&qR(e,e.node.local.name)&&e.remove()},ExportDefaultDeclaration:function(e){S(e.node.declaration)&&qR(e,e.node.declaration.name)&&e.remove()},TSDeclareFunction:function(e){e.remove()},TSDeclareMethod:function(e){e.remove()},VariableDeclaration:function(e){e.node.declare&&e.remove()},VariableDeclarator:function(e){var t=e.node;t.definite&&(t.definite=null)},TSIndexSignature:function(e){e.remove()},ClassDeclaration:function(e){e.node.declare&&e.remove()},Class:function(e){var t=e.node;t.typeParameters&&(t.typeParameters=null),t.superTypeParameters&&(t.superTypeParameters=null),t.implements&&(t.implements=null),t.abstract&&(t.abstract=null),e.get("body.body").forEach((function(t){t.isClassMethod()?"constructor"===t.node.kind?p(t,e):c(t,e):t.isClassProperty()&&l(t,e)}))},Function:function(e){var t=e.node;t.typeParameters&&(t.typeParameters=null),t.returnType&&(t.returnType=null);var n=t.params[0];n&&S(n)&&"this"===n.name&&t.params.shift(),t.params=t.params.map((function(e){return"TSParameterProperty"===e.type?e.parameter:e}))},TSModuleDeclaration:function(e){LR(e,Sf,a)},TSInterfaceDeclaration:function(e){e.remove()},TSTypeAliasDeclaration:function(e){e.remove()},TSEnumDeclaration:function(e){_R(e,Sf)},TSImportEqualsDeclaration:function(e){throw e.buildCodeFrameError("`import =` is not supported by @babel/plugin-transform-typescript\nPlease consider using `import <moduleName> from '<moduleName>';` alongside Typescript's --allowSyntheticDefaultImports option.")},TSExportAssignment:function(e){throw e.buildCodeFrameError("`export =` is not supported by @babel/plugin-transform-typescript\nPlease consider using `export <value>;`.")},TSTypeAssertion:function(e){e.replaceWith(e.node.expression)},TSAsExpression:function(e){var t=e.node;do{t=t.expression}while(Ze(t));e.replaceWith(t)},TSNonNullExpression:function(e){e.replaceWith(e.node.expression)},CallExpression:function(e){e.node.typeParameters=null},NewExpression:function(e){e.node.typeParameters=null},JSXOpeningElement:function(e){e.node.typeParameters=null},TaggedTemplateExpression:function(e){e.node.typeParameters=null}}};function h(e){var t=e.node;t.typeAnnotation&&(t.typeAnnotation=null),S(t)&&t.optional&&(t.optional=null)}function f(e){var t=e.binding,n=e.programPath,r=e.jsxPragma,i=t.referencePaths,a=Array.isArray(i),o=0;for(i=a?i:i[Symbol.iterator]();;){var s;if(a){if(o>=i.length)break;s=i[o++]}else{if((o=i.next()).done)break;s=o.value}if(!WR(s))return!1}if(t.identifier.name!==r)return!0;var u=!1;return n.traverse({JSXElement:function(){u=!0},JSXFragment:function(){u=!0}}),!u}})),JR=cF((function(e){return e.assertVersion(7),EI({name:"transform-unicode-regex",feature:"unicodeFlag"})})),YR={"external-helpers":hF,"syntax-async-generators":fF,"syntax-class-properties":dF,"syntax-decorators":mF,"syntax-do-expressions":yF,"syntax-dynamic-import":vF,"syntax-export-default-from":gF,"syntax-export-namespace-from":bF,"syntax-flow":EF,"syntax-function-bind":AF,"syntax-function-sent":DF,"syntax-import-meta":SF,"syntax-jsx":xF,"syntax-object-rest-spread":TF,"syntax-optional-catch-binding":CF,"syntax-pipeline-operator":PF,"syntax-typescript":kF,"proposal-async-generator-functions":VF,"proposal-class-properties":Qk,"proposal-decorators":c_,"proposal-do-expressions":p_,"proposal-export-default-from":h_,"proposal-export-namespace-from":f_,"proposal-function-bind":d_,"proposal-function-sent":m_,"proposal-json-strings":v_,"proposal-logical-assignment-operators":b_,"proposal-nullish-coalescing-operator":A_,"proposal-numeric-separator":S_,"proposal-object-rest-spread":T_,"proposal-optional-catch-binding":C_,"proposal-optional-chaining":P_,"proposal-pipeline-operator":I_,"proposal-private-methods":O_,"proposal-throw-expressions":N_,"proposal-unicode-property-regex":AI,"transform-async-to-generator":dO,"transform-arrow-functions":mO,"transform-block-scoped-functions":yO,"transform-block-scoping":DO,"transform-classes":wB,"transform-computed-properties":PB,"transform-destructuring":FB,"transform-dotall-regex":kB,"transform-duplicate-keys":_B,"transform-exponentiation-operator":BB,"transform-flow-comments":NB,"transform-flow-strip-types":MB,"transform-for-of":RB,"transform-function-name":LB,"transform-instanceof":jB,"transform-jscript":UB,"transform-literals":VB,"transform-member-expression-literals":WB,"transform-modules-amd":FN,"transform-modules-commonjs":ON,"transform-modules-systemjs":jN,"transform-modules-umd":WN,"transform-new-target":GN,"transform-object-assign":HN,"transform-object-super":qN,"transform-object-set-prototype-of-to-assign":KN,"transform-parameters":cM,"transform-property-literals":pM,"transform-property-mutators":hM,"transform-proto-to-assign":fM,"transform-react-constant-elements":dM,"transform-react-display-name":mM,"transform-react-inline-elements":vM,"transform-react-jsx":gM,"transform-react-jsx-compat":bM,"transform-react-jsx-self":EM,"transform-react-jsx-source":AM,"transform-regenerator":KM,"transform-reserved-words":XM,"transform-runtime":SR,"transform-shorthand-properties":xR,"transform-spread":TR,"transform-sticky-regex":CR,"transform-strict-mode":wR,"transform-template-literals":FR,"transform-typeof-symbol":kR,"transform-typescript":zR,"transform-unicode-regex":JR},$R=function(e,t){var n=!1,r="commonjs",i=!1;void 0!==t&&(void 0!==t.loose&&(n=t.loose),void 0!==t.modules&&(r=t.modules),void 0!==t.spec&&(i=t.spec));var a={loose:n};return{plugins:[[FR,{loose:n,spec:i}],VB,LB,[mO,{spec:i}],yO,[wB,a],qN,xR,_B,[PB,a],[RB,a],CR,JR,[TR,a],[cM,a],[FB,a],DO,kR,jB,("commonjs"===r||"cjs"===r)&&[ON,a],"systemjs"===r&&[jN,a],"amd"===r&&[FN,a],"umd"===r&&[WN,a],[KM,{async:!1,asyncGenerators:!1}]].filter(Boolean)}},QR=function(e,t){var n=!1;return void 0!==t&&void 0!==t.loose&&(n=t.loose),{plugins:[vF,SF,[P_,{loose:n}],[A_,{loose:n}],[Qk,{loose:n}],v_,[O_,{loose:n}]]}},ZR=function(e,t){void 0===t&&(t={});var n=t,r=n.loose,i=void 0!==r&&r,a=n.useBuiltIns,o=void 0!==a&&a,s=n.decoratorsLegacy,u=void 0!==s&&s,l=n.decoratorsBeforeExport;return{presets:[[QR,{loose:i,useBuiltIns:o}]],plugins:[[c_,{legacy:u,decoratorsBeforeExport:l}],m_,f_,S_,N_]}},eL=function(e,t){void 0===t&&(t={});var n=t,r=n.loose,i=void 0!==r&&r,a=n.useBuiltIns,o=void 0!==a&&a,s=n.decoratorsLegacy,u=void 0!==s&&s,l=n.decoratorsBeforeExport,c=n.pipelineProposal;return{presets:[[ZR,{loose:i,useBuiltIns:o,decoratorsLegacy:u,decoratorsBeforeExport:l}]],plugins:[h_,b_,[I_,{proposal:void 0===c?"minimal":c}],p_]}},tL=cF((function(e,t){e.assertVersion(7);var n=t.pragma||"React.createElement",r=t.pragmaFrag||"React.Fragment",i=void 0===t.throwIfNamespace||!!t.throwIfNamespace,a=!!t.development,o=!!t.useBuiltIns,s=t.useSpread;if("boolean"!=typeof a)throw new Error("@babel/preset-react 'development' option must be a boolean.");return{plugins:[[gM,{pragma:n,pragmaFrag:r,throwIfNamespace:i,useBuiltIns:o,useSpread:s}],mM,a&&AM,a&&EM].filter(Boolean)}})),nL=cF((function(e,t){var n=t.all;return e.assertVersion(7),{plugins:[[MB,{all:n}]]}})),rL=cF((function(e,t){var n=t.jsxPragma,r=t.allExtensions,i=void 0!==r&&r,a=t.isTSX,o=void 0!==a&&a,s=t.allowNamespaces,u=t.allowDeclareFields;if(e.assertVersion(7),"boolean"!=typeof i)throw new Error(".allExtensions must be a boolean, or undefined");if("boolean"!=typeof o)throw new Error(".isTSX must be a boolean, or undefined");if(o&&!i)throw new Error("isTSX:true requires allExtensions:true");var l=function(e){return{jsxPragma:n,isTSX:e,allowNamespaces:s,allowDeclareFields:u}};return{overrides:i?[{plugins:[[zR,l(o)]]}]:[{test:/\.ts$/,plugins:[[zR,l(!1)]]},{test:/\.tsx$/,plugins:[[zR,l(!0)]]}]}})),iL=["text/jsx","text/babel"],aL=0;function oL(e,t){var n=document.createElement("script");n.text=function(e,t){var n;return null!=t.url?n=t.url:(n="Inline Babel script",++aL>1&&(n+=" ("+aL+")")),e(t.content,Object.assign({filename:n},function(e){return{presets:e.presets||["react","es2015"],plugins:e.plugins||["proposal-class-properties","proposal-object-rest-spread","transform-flow-strip-types"],sourceMaps:"inline"}}(t))).code}(e,t),XR.appendChild(n)}function sL(e,t){var n=e.getAttribute(t);return""===n?[]:n?n.split(",").map((function(e){return e.trim()})):null}function uL(e,t){var n=[],r=t.length;function i(){var t,i;for(i=0;i<r;i++)if((t=n[i]).loaded&&!t.executed)t.executed=!0,oL(e,t);else if(!t.loaded&&!t.error&&!t.async)break}t.forEach((function(e,t){var r={async:e.hasAttribute("async"),error:!1,executed:!1,plugins:sL(e,"data-plugins"),presets:sL(e,"data-presets")};e.src?(n[t]=Object.assign({},r,{content:null,loaded:!1,url:e.src}),function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),"overrideMimeType"in r&&r.overrideMimeType("text/plain"),r.onreadystatechange=function(){if(4===r.readyState){if(0!==r.status&&200!==r.status)throw n(),new Error("Could not load "+e);t(r.responseText)}},r.send(null)}(e.src,(function(e){n[t].loaded=!0,n[t].content=e,i()}),(function(){n[t].error=!0,i()}))):n[t]=Object.assign({},r,{content:e.innerHTML,loaded:!0,url:e.getAttribute("data-module")||null})})),i()}var lL=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)};function cL(e,t){return lL(t)&&"string"==typeof t[0]?Object.prototype.hasOwnProperty.call(e,t[0])?[e[t[0]]].concat(t.slice(1)):void 0:"string"==typeof t?e[t]:t}function pL(e){var t=(e.presets||[]).map((function(e){var t=cL(dL,e);if(!t)throw new Error('Invalid preset specified in Babel options: "'+e+'"');return lL(t)&&"object"==typeof t[0]&&Object.prototype.hasOwnProperty.call(t[0],"buildPreset")&&(t[0]=Object.assign({},t[0],{buildPreset:t[0].buildPreset})),t})),n=(e.plugins||[]).map((function(e){var t=cL(fL,e);if(!t)throw new Error('Invalid plugin specified in Babel options: "'+e+'"');return t}));return Object.assign({babelrc:!1},e,{presets:t,plugins:n})}function hL(e,t){return JP(e,pL(t))}var fL={},dL={},mL=Ox;function yL(e,t){Object.prototype.hasOwnProperty.call(fL,e)&&console.warn('A plugin named "'+e+'" is already registered, it will be overridden'),fL[e]=t}function vL(e){Object.keys(e).forEach((function(t){return yL(t,e[t])}))}function gL(e,t){Object.prototype.hasOwnProperty.call(dL,e)&&console.warn('A preset named "'+e+'" is already registered, it will be overridden'),dL[e]=t}function bL(e){Object.keys(e).forEach((function(t){return gL(t,e[t])}))}vL(YR),bL({es2015:$R,es2016:function(){return{plugins:[fL["transform-exponentiation-operator"]]}},es2017:function(){return{plugins:[fL["transform-async-to-generator"]]}},react:tL,"stage-0":function(e,t){void 0===t&&(t={});var n=t,r=n.loose,i=void 0!==r&&r,a=n.useBuiltIns,o=void 0!==a&&a,s=n.decoratorsLegacy,u=void 0!==s&&s,l=n.decoratorsBeforeExport,c=n.pipelineProposal;return{presets:[[eL,{loose:i,useBuiltIns:o,decoratorsLegacy:u,decoratorsBeforeExport:l,pipelineProposal:void 0===c?"minimal":c}]],plugins:[d_]}},"stage-1":eL,"stage-2":ZR,"stage-3":QR,"es2015-loose":{presets:[[$R,{loose:!0}]]},"es2015-no-commonjs":{presets:[[$R,{modules:!1}]]},typescript:rL,flow:nL});function EL(){AL()}function AL(e){!function(e,t){XR=document.getElementsByTagName("head")[0],t||(t=document.getElementsByTagName("script"));for(var n=[],r=0;r<t.length;r++){var i=t.item(r),a=i.type.split(";")[0];-1!==iL.indexOf(a)&&n.push(i)}0!==n.length&&(console.warn("You are using the in-browser Babel transformer. Be sure to precompile your scripts for production - https://babeljs.io/docs/setup/"),uL(e,n))}(hL,e)}"undefined"!=typeof window&&window&&window.addEventListener&&window.addEventListener("DOMContentLoaded",EL,!1),e.availablePlugins=fL,e.availablePresets=dL,e.buildExternalHelpers=mL,e.disableScriptTags=function(){window.removeEventListener("DOMContentLoaded",EL)},e.registerPlugin=yL,e.registerPlugins=vL,e.registerPreset=gL,e.registerPresets=bL,e.transform=hL,e.transformFromAst=function(e,t,n){return tF(e,t,pL(n))},e.transformScriptTags=AL,e.version="7.7.5",Object.defineProperty(e,"__esModule",{value:!0})}));